@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rule: <http://eyereasoner.github.io/rule#>.
@prefix : <http://example.org/ns#>.

# \forall x : BURNS(x) /\ WOMAN(x) => WITCH(x)
[] a rule:ForwardRule;
    rule:vars (
        _:X
    );
    rule:premise (
        (_:X rdf:type :BURNS)
        (_:X rdf:type :WOMAN)
    );
    rule:conclusion (
        (_:X rdf:type :WITCH)
    ).

# WOMAN(GIRL)
:GIRL a :WOMAN.

# \forall x : ISMADEOFWOOD(x) => BURNS(x)
[] a rule:ForwardRule;
    rule:vars (
        _:X
    );
    rule:premise (
        (_:X rdf:type :ISMADEOFWOOD)
    );
    rule:conclusion (
        (_:X rdf:type :BURNS)
    ).

# \forall x : FLOATS(x) => ISMADEOFWOOD(x)
[] a rule:ForwardRule;
    rule:vars (
        _:X
    );
    rule:premise (
        (_:X rdf:type :FLOATS)
    );
    rule:conclusion (
        (_:X rdf:type :ISMADEOFWOOD)
    ).

# FLOATS(DUCK)
:DUCK a :FLOATS.

# \forall x,y : FLOATS(x) /\ SAMEWEIGHT(x,y) => FLOATS(y)
[] a rule:ForwardRule;
    rule:vars (
        _:X
        _:Y
    );
    rule:premise (
        (_:X rdf:type :FLOATS)
        (_:X :SAMEWEIGHT _:Y)
    );
    rule:conclusion (
        (_:Y rdf:type :FLOATS)
    ).

# and, by experiment
# SAMEWEIGHT(DUCK,GIRL)
:DUCK :SAMEWEIGHT :GIRL.

# who's a witch?
[] a rule:QueryRule;
    rule:vars (
        _:S
    );
    rule:premise (
        (_:S rdf:type :WITCH)
    );
    rule:conclusion (
        (_:S rdf:type :WITCH)
    ).
