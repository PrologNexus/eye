@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix : <urn:example:>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:component skolem:lemma4;
    r:component skolem:lemma5;
    r:component skolem:lemma6;
    r:component skolem:lemma7;
    r:component skolem:lemma8;
    r:component skolem:lemma9;
    r:component skolem:lemma10;
    r:component skolem:lemma11;
    r:gives {
        :p :isPossibilityIn :w1.
        :q :isPossibilityIn :w1.
        :p :isPossibilityIn :w2.
        :q :isPossibilityIn :w2.
        :p :isPossibilityIn :w3.
        :p :isNecessityIn :w1.
        :p :isNecessityIn :w2.
        :p :isNecessityIn :w3.
        {
            :p :isPossibilityIn :w1.
        } :isNecessityIn :w3.
        {
            :p :isPossibilityIn :w2.
        } :isNecessityIn :w3.
        {
            :p :isPossibilityIn :w3.
        } :isNecessityIn :w3.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        :p :isPossibilityIn :w1.
    };
    r:evidence (
        skolem:lemma12
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule skolem:lemma13.

skolem:lemma2 a r:Inference;
    r:gives {
        :q :isPossibilityIn :w1.
    };
    r:evidence (
        skolem:lemma14
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:q"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule skolem:lemma13.

skolem:lemma3 a r:Inference;
    r:gives {
        :p :isPossibilityIn :w2.
    };
    r:evidence (
        skolem:lemma15
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule skolem:lemma13.

skolem:lemma4 a r:Inference;
    r:gives {
        :q :isPossibilityIn :w2.
    };
    r:evidence (
        skolem:lemma16
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:q"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule skolem:lemma13.

skolem:lemma5 a r:Inference;
    r:gives {
        :p :isPossibilityIn :w3.
    };
    r:evidence (
        skolem:lemma17
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule skolem:lemma13.

skolem:lemma6 a r:Inference;
    r:gives {
        :p :isNecessityIn :w1.
    };
    r:evidence (
        skolem:lemma18
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule skolem:lemma19.

skolem:lemma7 a r:Inference;
    r:gives {
        :p :isNecessityIn :w2.
    };
    r:evidence (
        skolem:lemma20
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule skolem:lemma19.

skolem:lemma8 a r:Inference;
    r:gives {
        :p :isNecessityIn :w3.
    };
    r:evidence (
        skolem:lemma21
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule skolem:lemma19.

skolem:lemma9 a r:Inference;
    r:gives {
        {
            :p :isPossibilityIn :w1.
        } :isNecessityIn :w3.
    };
    r:evidence (
        skolem:lemma22
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :p :isPossibilityIn :w1.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule skolem:lemma19.

skolem:lemma10 a r:Inference;
    r:gives {
        {
            :p :isPossibilityIn :w2.
        } :isNecessityIn :w3.
    };
    r:evidence (
        skolem:lemma23
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :p :isPossibilityIn :w2.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule skolem:lemma19.

skolem:lemma11 a r:Inference;
    r:gives {
        {
            :p :isPossibilityIn :w3.
        } :isNecessityIn :w3.
    };
    r:evidence (
        skolem:lemma24
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :p :isPossibilityIn :w3.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule skolem:lemma19.

skolem:lemma12 a r:Inference;
    r:gives {
        :p :isPossibilityIn :w1.
    };
    r:evidence (
        skolem:lemma25
        skolem:lemma26
        skolem:lemma27
        skolem:lemma28
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule skolem:lemma29.

skolem:lemma13 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1. {
            var:x_0 :isPossibilityIn var:x_1.
        } => {
            var:x_0 :isPossibilityIn var:x_1.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma14 a r:Inference;
    r:gives {
        :q :isPossibilityIn :w1.
    };
    r:evidence (
        skolem:lemma25
        skolem:lemma30
        skolem:lemma27
        skolem:lemma31
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:q"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule skolem:lemma29.

skolem:lemma15 a r:Inference;
    r:gives {
        :p :isPossibilityIn :w2.
    };
    r:evidence (
        skolem:lemma32
        skolem:lemma26
        skolem:lemma33
        skolem:lemma34
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule skolem:lemma29.

skolem:lemma16 a r:Inference;
    r:gives {
        :q :isPossibilityIn :w2.
    };
    r:evidence (
        skolem:lemma32
        skolem:lemma30
        skolem:lemma35
        skolem:lemma31
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:q"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule skolem:lemma29.

skolem:lemma17 a r:Inference;
    r:gives {
        :p :isPossibilityIn :w3.
    };
    r:evidence (
        skolem:lemma36
        skolem:lemma26
        skolem:lemma37
        skolem:lemma34
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule skolem:lemma29.

skolem:lemma18 a r:Inference;
    r:gives {
        :p :isNecessityIn :w1.
    };
    r:evidence (
        skolem:lemma25
        skolem:lemma26
        [ a r:Fact; r:gives {(1 {
            :w1 :hasAccessTo _:sk_0.
            :p :isTrueIn _:sk_0.
        } (1 1 1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
        [ a r:Fact; r:gives {(1 {
            :w1 :hasAccessTo _:sk_0.
        } (1 1 1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 1 1)];
    r:rule skolem:lemma38.

skolem:lemma19 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1. {
            var:x_0 :isNecessityIn var:x_1.
        } => {
            var:x_0 :isNecessityIn var:x_1.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma20 a r:Inference;
    r:gives {
        :p :isNecessityIn :w2.
    };
    r:evidence (
        skolem:lemma32
        skolem:lemma26
        [ a r:Fact; r:gives {(1 {
            :w2 :hasAccessTo _:sk_0.
            :p :isTrueIn _:sk_0.
        } (1 1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
        [ a r:Fact; r:gives {(1 {
            :w2 :hasAccessTo _:sk_0.
        } (1 1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 1)];
    r:rule skolem:lemma38.

skolem:lemma21 a r:Inference;
    r:gives {
        :p :isNecessityIn :w3.
    };
    r:evidence (
        skolem:lemma36
        skolem:lemma26
        [ a r:Fact; r:gives {(1 {
            :w3 :hasAccessTo _:sk_0.
            :p :isTrueIn _:sk_0.
        } (1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
        [ a r:Fact; r:gives {(1 {
            :w3 :hasAccessTo _:sk_0.
        } (1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1)];
    r:rule skolem:lemma38.

skolem:lemma22 a r:Inference;
    r:gives {
        {
            :p :isPossibilityIn :w1.
        } :isNecessityIn :w3.
    };
    r:evidence (
        skolem:lemma25
        skolem:lemma36
        skolem:lemma26
        [ a r:Fact; r:gives {(1 {
            :w3 :hasAccessTo _:sk_0.
            :p :isPossibilityIn _:sk_0.
        } (1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
        [ a r:Fact; r:gives {(1 {
            :w3 :hasAccessTo _:sk_0.
        } (1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo (1)];
    r:rule skolem:lemma39.

skolem:lemma23 a r:Inference;
    r:gives {
        {
            :p :isPossibilityIn :w2.
        } :isNecessityIn :w3.
    };
    r:evidence (
        skolem:lemma32
        skolem:lemma36
        skolem:lemma26
        [ a r:Fact; r:gives {(1 {
            :w3 :hasAccessTo _:sk_0.
            :p :isPossibilityIn _:sk_0.
        } (1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
        [ a r:Fact; r:gives {(1 {
            :w3 :hasAccessTo _:sk_0.
        } (1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo (1)];
    r:rule skolem:lemma39.

skolem:lemma24 a r:Inference;
    r:gives {
        {
            :p :isPossibilityIn :w3.
        } :isNecessityIn :w3.
    };
    r:evidence (
        skolem:lemma36
        skolem:lemma36
        skolem:lemma26
        [ a r:Fact; r:gives {(1 {
            :w3 :hasAccessTo _:sk_0.
            :p :isPossibilityIn _:sk_0.
        } (1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
        [ a r:Fact; r:gives {(1 {
            :w3 :hasAccessTo _:sk_0.
        } (1)) log:collectAllIn ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo (1)];
    r:rule skolem:lemma39.

skolem:lemma25 a r:Extraction;
    r:gives {
        :w1 a :PossibleWorld.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma26 a r:Extraction;
    r:gives {
        :p a :Proposition.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma27 a r:Extraction;
    r:gives {
        :w1 :hasAccessTo :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma28 a r:Extraction;
    r:gives {
        :p :isTrueIn :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma29 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2. {
            var:x_1 :isPossibilityIn var:x_0.
        } <= {
            var:x_0 a :PossibleWorld.
            var:x_1 a :Proposition.
            var:x_0 :hasAccessTo var:x_2.
            var:x_1 :isTrueIn var:x_2.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma30 a r:Extraction;
    r:gives {
        :q a :Proposition.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma31 a r:Extraction;
    r:gives {
        :q :isTrueIn :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma32 a r:Extraction;
    r:gives {
        :w2 a :PossibleWorld.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma33 a r:Extraction;
    r:gives {
        :w2 :hasAccessTo :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma34 a r:Extraction;
    r:gives {
        :p :isTrueIn :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma35 a r:Inference;
    r:gives {
        :w2 :hasAccessTo :w2.
    };
    r:evidence (
        skolem:lemma32
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule skolem:lemma40.

skolem:lemma36 a r:Extraction;
    r:gives {
        :w3 a :PossibleWorld.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma37 a r:Inference;
    r:gives {
        :w3 :hasAccessTo :w3.
    };
    r:evidence (
        skolem:lemma36
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule skolem:lemma40.

skolem:lemma38 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4. {
            var:x_1 :isNecessityIn var:x_0.
        } <= {
            var:x_0 a :PossibleWorld.
            var:x_1 a :Proposition.
            (1 {
                var:x_0 :hasAccessTo var:x_2.
                var:x_1 :isTrueIn var:x_2.
            } var:x_3) log:collectAllIn var:x_4.
            (1 {
                var:x_0 :hasAccessTo var:x_2.
            } var:x_3) log:collectAllIn var:x_4.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma39 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5. {
            {
                var:x_2 :isPossibilityIn var:x_0.
            } :isNecessityIn var:x_1.
        } <= {
            var:x_0 a :PossibleWorld.
            var:x_1 a :PossibleWorld.
            var:x_2 a :Proposition.
            (1 {
                var:x_1 :hasAccessTo var:x_3.
                var:x_2 :isPossibilityIn var:x_3.
            } var:x_4) log:collectAllIn var:x_5.
            (1 {
                var:x_1 :hasAccessTo var:x_3.
            } var:x_4) log:collectAllIn var:x_5.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

skolem:lemma40 a r:Extraction;
    r:gives {
        @forAll var:x_0. {
            var:x_0 a :PossibleWorld.
        } => {
            var:x_0 :hasAccessTo var:x_0.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/modal/modal.n3>].

