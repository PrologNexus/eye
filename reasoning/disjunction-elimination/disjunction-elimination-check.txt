
.. list-table:: Proof
   :widths: 2 70 20 20
   :header-rows: 1

   * - Step
     - Formula
     - Justification
     - Bindings
   * - 1
     - ...
     - parsing <disjunction-elimination.n3>
     - 
   * - 2
     - :anon :not_saying :C .
     - erasure from step 1
     - 
   * - 3
     - ...
     - parsing <disjunction-elimination.n3>
     - 
   * - 4
     - @forAll var:x_0 . { var:x_0 :not_saying :C . } => {var:x_0 :not_saying :B . } .
     - erasure from step 3
     - 
   * - 5
     - :anon :not_saying :B .
     - rule from step 4 applied to steps (2,)
     - {'x_0': u'<http://eyereasoner.github.io/eye/reasoning#anon>'}
   * - 6
     - ...
     - parsing <disjunction-elimination.n3>
     - 
   * - 7
     - @forAll var:x_0 . { var:x_0 :not_saying :B . } => {var:x_0 :saying :A . } .
     - erasure from step 6
     - 
   * - 8
     - :anon :saying :A .
     - rule from step 7 applied to steps (5,)
     - {'x_0': u'<http://eyereasoner.github.io/eye/reasoning#anon>'}
   * - 9
     - ...
     - parsing <disjunction-elimination.n3>
     - 
   * - 10
     - @forAll var:x_0 . { var:x_0 :saying :A . } => {var:x_0 :saying :C . } .
     - erasure from step 9
     - 
   * - 11
     - :anon :saying :C .
     - rule from step 10 applied to steps (8,)
     - {'x_0': u'<http://eyereasoner.github.io/eye/reasoning#anon>'}
   * - 12
     - ...
     - parsing <disjunction-elimination-query.n3>
     - 
   * - 13
     - { :anon :saying :C . } => {:anon :saying :C . } .
     - erasure from step 12
     - 
   * - 14
     - :anon :saying :C .
     - rule from step 13 applied to steps (11,)
     - {}
   * - 15
     - :anon :saying :C .
     - conjoining steps (14,)
     - 


Conclusion::

  @prefix : <http://eyereasoner.github.io/eye/reasoning#> .
  
  :anon     :saying :C .
  
  
