@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix : <http://example.org/ns#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix var: <http://eyereasoner.github.io/var#>.
@prefix skolem: <http://eyereasoner.github.io/.well-known/genid/3917894951695475063#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:gives {
        :beetle :is :beautiful.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        :beetle :is :beautiful.
    };
    r:evidence (
        skolem:lemma2
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#beetle"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#beautiful"]];
    r:rule [ a r:Query; r:gives {
        {
            var:x_0 :is var:x_1.
        } => {
            var:x_0 :is var:x_1.
        }.
    }].

skolem:lemma2 a r:Inference;
    r:gives {
        :beetle :is :beautiful.
    };
    r:evidence (
        skolem:lemma3
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#beetle"]];
    r:rule [ a r:Rule; r:gives {
        {
            var:x_0 a :Car.
        } => {
            var:x_0 :is :beautiful.
        }.
    }].

skolem:lemma3 a r:Extraction;
    r:gives {
        :beetle a :Car.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/blogic/beetle.n3>].

# -------------
# derived rules
# -------------

{
    ?U_12 a :Car.
    () log:onNegativeSurface {
        ?U_12 :is :blue.
    }.
} => {
    ?U_12 :is :green.
}.

{
    ?U_13 a :Car.
    () log:onNegativeSurface {
        ?U_13 :is :green.
    }.
} => {
    ?U_13 :is :blue.
}.

{
    ?U_14 :is :green.
} => {
    ?U_14 :is :beautiful.
}.

{
    ?U_15 :is :blue.
} => {
    ?U_15 :is :beautiful.
}.

{
    ?U_16 a :Car.
    () log:onNegativeSurface {
        ?U_16 :is :blue.
    }.
} => {
    ?U_16 :is :beautiful.
}.

{
    () log:onNegativeSurface {
        ?U_17 :is :beautiful.
    }.
    ?U_17 a :Car.
} => {
    ?U_17 :is :blue.
}.

{
    ?U_18 a :Car.
    () log:onNegativeSurface {
        ?U_18 :is :green.
    }.
} => {
    ?U_18 :is :beautiful.
}.

{
    () log:onNegativeSurface {
        ?U_19 :is :beautiful.
    }.
    ?U_19 a :Car.
} => {
    ?U_19 :is :green.
}.

{
    ?U_26 a :Car.
} => {
    ?U_26 :is :beautiful.
}.


