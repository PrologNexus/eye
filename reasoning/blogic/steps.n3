# ----------------------------
# Policy model finding example
# ----------------------------

@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix graph: <http://www.w3.org/2000/10/swap/graph#>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix : <http://example.org/ns#>.

# Pat is an individual
:Pat a vcard:Individual.

# if X is an individual then X can do A or B
(?X) log:onNegativeSurface {
    ?X a vcard:Individual.
    () log:onNegativeSurface {
        ?X :canDo :A.
    }.
    () log:onNegativeSurface {
        ?X :canDo :B.
    }.
}.

# if X is an individual who can do A then X can do E or D
(?X) log:onNegativeSurface {
    #_X a vcard:Individual.
    ?X :canDo :A.
    () log:onNegativeSurface {
        ?X :canDo :E.
    }.
    () log:onNegativeSurface {
        ?X :canDo :D.
    }.
}.

# if X is an individual who can do D then X can do E or F
(?X) log:onNegativeSurface {
    #_X a vcard:Individual.
    ?X :canDo :D.
    () log:onNegativeSurface {
        ?X :canDo :E.
    }.
    () log:onNegativeSurface {
        ?X :canDo :F.
    }.
}.

# find model reaching goal
(?Goal ?Sequents ?Model) log:onNegativeSurface {
    () log:onNegativeSurface <<?Goal :findModel (?Sequents ?Model ?Model)>>.
    ?Goal log:callWithCut true.
}.

(?Goal ?Sequents1 ?Model1 ?Model ?Prem ?Cases ?Case ?Sequents2 ?Model2) log:onNegativeSurface {
    () log:onNegativeSurface <<?Goal :findModel (?Sequents1 ?Model1 ?Model)>>.
    ?Prem => ?Cases.
    ?Cases list:member ?Case.
    ?Prem log:call true.
    ?Sequents1 list:notMember {?Prem => ?Cases}.
    (?Sequents1 ({?Prem => ?Cases})) list:append ?Sequents2.
    (?Model1 (?Case)) list:append ?Model2.
    true log:becomes ?Case.
    {
        ?Goal :findModel (?Sequents2 ?Model2 ?Model).
    } log:callWithCleanup {
        ?Case log:becomes true.
    }.
}.

# find model where X is an individual who can do E
(?X ?Model) log:onQuestionSurface {
    {
        ?X a vcard:Individual.
        ?X :canDo :E.
    } :findModel (() () ?Model).
    () log:onAnswerSurface {
        {
            ?X a vcard:Individual.
            ?X :canDo :E.
        } :perModel ?Model.
    }.
}.
