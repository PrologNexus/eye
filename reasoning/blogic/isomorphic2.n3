@prefix : <urn:example:> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

(_:S1 _:S2) log:onNegativeSurface {

    _:S1 log:equalTo {
        (_:X _:Y) log:onNeutralSurface {
            :s1 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, _:n1.
            :s2 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s3 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s4 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s5 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s6 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s7 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s8 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s9 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s10 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
        } .
    } .

    _:S2 log:equalTo {
        (_:Y _:X) log:onNeutralSurface {
            :s1 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, _:n2.
            :s2 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s3 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s4 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s5 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s6 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s7 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s8 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s9 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
            :s10 :p :o1, :o2, :o3, :o4, :o5, :o6, :o7, :o8, :o9, :o10.
        } .
    } .

    _:S1 log:isomorphic _:S2 .

    () log:onNegativeSurface {
        :test :is true .
    } .
} .

() log:onQuerySurface {
    :test :is true .
} .
