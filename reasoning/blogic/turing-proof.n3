@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix : <http://example.org/ns#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix var: <http://eyereasoner.github.io/var#>.
@prefix skolem: <http://eyereasoner.github.io/.well-known/genid/3917894951695475063#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:component skolem:lemma4;
    r:gives {
        (1 0 1 0 0 1) :compute (1 0 1 0 1 0 "#").
        (1 0 1 1 1 1) :compute (1 1 0 0 0 0 "#").
        (1 1 1 1 1 1) :compute (1 0 0 0 0 0 0 "#").
        () :compute (1 "#").
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        (1 0 1 0 0 1) :compute (1 0 1 0 1 0 "#").
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 0 1 0 0 1) :compute (1 0 1 0 1 0 "#")}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (1 0 1 0 1 0 "#")];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            (1 0 1 0 0 1) :compute var:x_0.
        } => {
            (1 0 1 0 0 1) :compute var:x_0.
        }.
    }].

skolem:lemma2 a r:Inference;
    r:gives {
        (1 0 1 1 1 1) :compute (1 1 0 0 0 0 "#").
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 0 1 1 1 1) :compute (1 1 0 0 0 0 "#")}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (1 1 0 0 0 0 "#")];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            (1 0 1 1 1 1) :compute var:x_0.
        } => {
            (1 0 1 1 1 1) :compute var:x_0.
        }.
    }].

skolem:lemma3 a r:Inference;
    r:gives {
        (1 1 1 1 1 1) :compute (1 0 0 0 0 0 0 "#").
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 1 1 1 1 1) :compute (1 0 0 0 0 0 0 "#")}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (1 0 0 0 0 0 0 "#")];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            (1 1 1 1 1 1) :compute var:x_0.
        } => {
            (1 1 1 1 1 1) :compute var:x_0.
        }.
    }].

skolem:lemma4 a r:Inference;
    r:gives {
        () :compute (1 "#").
    };
    r:evidence (
        [ a r:Fact; r:gives {() :compute (1 "#")}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (1 "#")];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            () :compute var:x_0.
        } => {
            () :compute var:x_0.
        }.
    }].

