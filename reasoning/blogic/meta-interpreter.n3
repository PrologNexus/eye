# ----------------
# Meta-interpreter
# ----------------
#
# Inspired by https://www.metalevel.at/acomip/

@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix : <https://eyereasoner.github.io/eye/ns#> .

() log:onNegativeSurface {
    () log:onNegativeSurface <<() :mi ()>> .
} .

(?A ?G ?Gs ?Goals) log:onNegativeSurface {
    () log:onNegativeSurface <<() :mi ?A>> .
    ?A list:firstRest (?G ?Gs) .
    () :headBody (?G ?Goals ?Gs) .
    () :mi ?Goals .
} .

(?Rs) log:onNegativeSurface {
    () log:onNegativeSurface <<() :headBody ({() :mi ()} ?Rs ?Rs)>> .
} .

(?A ?B ?Rs ?G ?Gs ?Goals ?C) log:onNegativeSurface {
    () log:onNegativeSurface <<() :headBody ({() :mi ?A} ?B ?Rs)>> .
    ?A list:firstRest (?G ?Gs) .
    ?B list:firstRest ({() :headBody (?G ?Goals ?Gs)} ?C) .
    ?C list:firstRest ({() :mi ?Goals} ?Rs) .
} .

(?Head ?Goals0 ?Goals ?Rs) log:onNegativeSurface {
    () log:onNegativeSurface <<() :headBody ({() :headBody (?Head ?Goals0 ?Goals)} ?Rs ?Rs)>> .
    () :headBody (?Head ?Goals0 ?Goals) .
} .

(?Rs) log:onNegativeSurface {
    () log:onNegativeSurface <<() :headBody ({() :natnum (0)} ?Rs ?Rs)>> .
} .

(?X ?A ?Rs) log:onNegativeSurface {
    () log:onNegativeSurface <<() :headBody ({() :natnum (:s ?X)} ?A ?Rs)>> .
    ?A list:firstRest ({() :natnum ?X} ?Rs) .
} .

# question
() log:onQuestionSurface {
    () :mi ({() :mi ({() :mi ({() :natnum (:s (:s (:s (:s (:s (0))))))})})}) .
    () log:onAnswerSurface {
        :test :is true .
    } .
} .
