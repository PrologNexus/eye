@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix graph: <http://www.w3.org/2000/10/swap/graph#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix : <http://example.org/ns#>.

# sample data from RubenD
[] :data {
    [] :package {
        [] :content {
            :a :b _:c.
            [] :package {
                [] :content {
                    :u :v _:c.
                    [] :package {
                        [] :content {
                            :x :y _:c.
                        }; :usable_until :yesterday.
                    }; :tag :invalid.
                }; :usable_until :tomorrow; :p :o.
            }; :tag :valid.
        }; :usable_until :next_week.
    }; :tag :valid.
}.

# unpack the triples that are usable in the future
(_b _g _l _m _h) log:onNegativeSurface {
    _b :data _g.
    _g graph:list _l.
    _l :unpack _m.
    _m graph:union _h.
    () log:onAnswerSurface _h.
}.

# the logic for unpack using backward rules
() log:onNegativeSurface {
    () log:onNegativeSurface <<() :unpack ()>>.
}.

(_g _h _f _r _a _b) log:onNegativeSurface {
    () log:onNegativeSurface <<_g :unpack _h>>.
    _g list:firstRest (_f _r).
    _h list:firstRest (_a _b).
    _f :unpack _a.
    _r :unpack _b.
}.

(_b _p _f _a _c _t _l _m) log:onNegativeSurface {
    () log:onNegativeSurface <<{
        _b :package _p.
    } :unpack _f>>.
    _p log:includes {
        _a :content _c; :usable_until _t.
    }.
    (:tomorrow :next_week) list:member _t.
    _c graph:list _l.
    _l :unpack _m.
    _m graph:union _f.
}.

(_b _p _a _c _t _l _m) log:onNegativeSurface {
    () log:onNegativeSurface <<{
        _b :package _p.
    } :unpack true>>.
    _p log:includes {
        _a :content _c; :usable_until _t.
    }.
    (:yesterday :last_week) list:member _t.
}.

(_b _p) log:onNegativeSurface {
    () log:onNegativeSurface <<{
        _b :tag _p.
    } :unpack true>>.
}.

(_g _r _a _p _b _q) log:onNegativeSurface {
    () log:onNegativeSurface <<_g :unpack _g>>.
    _g log:rawType _r.
    _r log:notEqualTo rdf:List.
    _g log:notIncludes {
        _a :package _p.
    }.
    _g log:notIncludes {
        _b :tag _q.
    }.
}.
