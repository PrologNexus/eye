@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix : <http://example.org/ns#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix var: <http://eyereasoner.github.io/var#>.
@prefix skolem: <http://eyereasoner.github.io/.well-known/genid/3917894951695475063#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:component skolem:lemma4;
    r:component skolem:lemma5;
    r:component skolem:lemma6;
    r:component skolem:lemma7;
    r:gives {
        :Socrates a :Man.
        :Socrates a :Human.
        :Socrates a :Mortal.
        () log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }.
        <<:Socrates a :Human>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<:Socrates a :Human>> log:codex :codex1.
        <<() log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<() log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }>> log:codex :codex1.
        <<:Socrates a :Mortal>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<:Socrates a :Mortal>> log:codex :codex1.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        :Socrates a :Man.
    };
    r:evidence (
        skolem:lemma8
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Man"]];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            var:x_0 a var:x_1.
        } => {
            var:x_0 a var:x_1.
        }.
    }].

skolem:lemma2 a r:Inference;
    r:gives {
        :Socrates a :Human.
    };
    r:evidence (
        skolem:lemma9
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Human"]];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            var:x_0 a var:x_1.
        } => {
            var:x_0 a var:x_1.
        }.
    }].

skolem:lemma3 a r:Inference;
    r:gives {
        :Socrates a :Mortal.
    };
    r:evidence (
        skolem:lemma10
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Mortal"]];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            var:x_0 a var:x_1.
        } => {
            var:x_0 a var:x_1.
        }.
    }].

skolem:lemma4 a r:Inference;
    r:gives {
        () log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }.
    };
    r:evidence (
        skolem:lemma9
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo {
        :Socrates a :BuddhistLikePerson.
        <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
    }];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            var:x_0 log:onNeutralSurface var:x_1.
        } => {
            var:x_0 log:onNeutralSurface var:x_1.
        }.
    }].

skolem:lemma5 a r:Inference;
    r:gives {
        <<:Socrates a :Human>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<:Socrates a :Human>> log:codex :codex1.
    };
    r:evidence (
        skolem:lemma9
        skolem:lemma9
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo <<:Socrates a :Human>>];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo [ n3:uri "http://example.org/ns#codex1"]];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            var:x_0 log:source var:x_1.
            var:x_0 log:codex var:x_2.
        } => {
            var:x_0 log:source var:x_1.
            var:x_0 log:codex var:x_2.
        }.
    }].

skolem:lemma6 a r:Inference;
    r:gives {
        <<() log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<() log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }>> log:codex :codex1.
    };
    r:evidence (
        skolem:lemma9
        skolem:lemma9
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo <<() log:onNeutralSurface {
        :Socrates a :BuddhistLikePerson.
        <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
    }>>];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo [ n3:uri "http://example.org/ns#codex1"]];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            var:x_0 log:source var:x_1.
            var:x_0 log:codex var:x_2.
        } => {
            var:x_0 log:source var:x_1.
            var:x_0 log:codex var:x_2.
        }.
    }].

skolem:lemma7 a r:Inference;
    r:gives {
        <<:Socrates a :Mortal>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<:Socrates a :Mortal>> log:codex :codex1.
    };
    r:evidence (
        skolem:lemma10
        skolem:lemma10
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo <<:Socrates a :Mortal>>];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo [ n3:uri "http://example.org/ns#codex1"]];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            var:x_0 log:source var:x_1.
            var:x_0 log:codex var:x_2.
        } => {
            var:x_0 log:source var:x_1.
            var:x_0 log:codex var:x_2.
        }.
    }].

skolem:lemma8 a r:Extraction;
    r:gives {
        :Socrates a :Man.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>].

skolem:lemma9 a r:Inference;
    r:gives {
        :Socrates a :Human.
        <<:Socrates a :Human>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<:Socrates a :Human>> log:codex :codex1.
        () log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }.
        <<() log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<() log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }>> log:codex :codex1.
    };
    r:evidence (
        skolem:lemma11
        skolem:lemma8
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Man"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Human"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:rule [ a r:DerivedRule; r:gives {
        {
            var:x_0 rdfs:subClassOf var:x_1.
            var:x_2 a var:x_0.
        } => {
            var:x_2 a var:x_1.
            <<var:x_2 a var:x_1>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
            <<var:x_2 a var:x_1>> log:codex :codex1.
            () log:onNeutralSurface {
                var:x_2 a :BuddhistLikePerson.
                <<var:x_2 a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
            }.
            <<() log:onNeutralSurface {
                var:x_2 a :BuddhistLikePerson.
                <<var:x_2 a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
            }>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
            <<() log:onNeutralSurface {
                var:x_2 a :BuddhistLikePerson.
                <<var:x_2 a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
            }>> log:codex :codex1.
        }.
    }].

skolem:lemma10 a r:Inference;
    r:gives {
        :Socrates a :Mortal.
        <<:Socrates a :Mortal>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<:Socrates a :Mortal>> log:codex :codex1.
        () log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }.
        <<() log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
        <<() log:onNeutralSurface {
            :Socrates a :BuddhistLikePerson.
            <<:Socrates a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
        }>> log:codex :codex1.
    };
    r:evidence (
        skolem:lemma12
        skolem:lemma9
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Human"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Mortal"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:rule [ a r:DerivedRule; r:gives {
        {
            var:x_0 rdfs:subClassOf var:x_1.
            var:x_2 a var:x_0.
        } => {
            var:x_2 a var:x_1.
            <<var:x_2 a var:x_1>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
            <<var:x_2 a var:x_1>> log:codex :codex1.
            () log:onNeutralSurface {
                var:x_2 a :BuddhistLikePerson.
                <<var:x_2 a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
            }.
            <<() log:onNeutralSurface {
                var:x_2 a :BuddhistLikePerson.
                <<var:x_2 a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
            }>> log:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>.
            <<() log:onNeutralSurface {
                var:x_2 a :BuddhistLikePerson.
                <<var:x_2 a :BuddhistLikePerson>> :says <https://josd.github.io/card.ttl#me>.
            }>> log:codex :codex1.
        }.
    }].

skolem:lemma11 a r:Extraction;
    r:gives {
        :Man rdfs:subClassOf :Human.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>].

skolem:lemma12 a r:Extraction;
    r:gives {
        :Human rdfs:subClassOf :Mortal.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/blogic/socrates-star.n3>].

