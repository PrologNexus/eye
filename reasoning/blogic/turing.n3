# ------------------------
# Universal Turing machine
# ------------------------
#
# See https://en.wikipedia.org/wiki/Universal_Turing_machine

@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix : <http://example.org/ns#>.
@prefix skolem: <http://eyereasoner.github.io/.well-known/genid/d7882a29-44b8-4cbc-bc70-3bd11fba1fdb#>.

# interpreter for Univeral Turing Machine
(skolem:OutTape skolem:Machine skolem:I) log:onNegativeSurface {
    () log:onNegativeSurface <<() :compute skolem:OutTape>>.
    skolem:Machine :start skolem:I.
    (skolem:I () "#" ()) :find skolem:OutTape.
}.

(skolem:List skolem:OutTape skolem:Head skolem:Tail skolem:Machine skolem:I) log:onNegativeSurface {
    () log:onNegativeSurface <<skolem:List :compute skolem:OutTape>>.
    skolem:List list:firstRest (skolem:Head skolem:Tail).
    skolem:Machine :start skolem:I.
    (skolem:I () skolem:Head skolem:Tail) :find skolem:OutTape.
}.

(skolem:State skolem:Left skolem:Cell skolem:Right skolem:OutTape skolem:Write skolem:Move skolem:Next skolem:A skolem:B skolem:C) log:onNegativeSurface {
    () log:onNegativeSurface <<(skolem:State skolem:Left skolem:Cell skolem:Right) :find skolem:OutTape>>.
    (skolem:State skolem:Cell skolem:Write skolem:Move) :tape skolem:Next.
    (skolem:Move skolem:Left skolem:Write skolem:Right skolem:A skolem:B skolem:C) :move true.
    (skolem:Next skolem:A skolem:B skolem:C) :continue skolem:OutTape.
}.

(skolem:Left skolem:Cell skolem:Right skolem:OutTape skolem:R skolem:List) log:onNegativeSurface {
    () log:onNegativeSurface <<(:halt skolem:Left skolem:Cell skolem:Right) :continue skolem:OutTape>>.
    skolem:Left :reverse skolem:R.
    skolem:List list:firstRest (skolem:Cell skolem:Right).
    (skolem:R skolem:List) list:append skolem:OutTape.
}.

(skolem:State skolem:Left skolem:Cell skolem:Right skolem:OutTape) log:onNegativeSurface {
    () log:onNegativeSurface <<(skolem:State skolem:Left skolem:Cell skolem:Right) :continue skolem:OutTape>>.
    (skolem:State skolem:Left skolem:Cell skolem:Right) :find skolem:OutTape.
}.

(skolem:Cell skolem:Right skolem:L) log:onNegativeSurface {
    () log:onNegativeSurface <<(:left () skolem:Cell skolem:Right () "#" skolem:L) :move true>>.
    skolem:L list:firstRest (skolem:Cell skolem:Right).
}.

(skolem:List skolem:Cell skolem:Right skolem:Tail skolem:Head skolem:L) log:onNegativeSurface {
    () log:onNegativeSurface <<(:left skolem:List skolem:Cell skolem:Right skolem:Tail skolem:Head skolem:L) :move true>>.
    skolem:List list:firstRest (skolem:Head skolem:Tail).
    skolem:L list:firstRest (skolem:Cell skolem:Right).
}.

(skolem:Left skolem:Cell skolem:Right) log:onNegativeSurface {
    () log:onNegativeSurface <<(:stop skolem:Left skolem:Cell skolem:Right skolem:Left skolem:Cell skolem:Right) :move true>>.
}.

(skolem:Left skolem:Cell skolem:L) log:onNegativeSurface {
    () log:onNegativeSurface <<(:right skolem:Left skolem:Cell () skolem:L "#" ()) :move true>>.
    skolem:L list:firstRest (skolem:Cell skolem:Left).
}.

(skolem:Left skolem:Cell skolem:List skolem:L skolem:Head skolem:Tail) log:onNegativeSurface {
    () log:onNegativeSurface <<(:right skolem:Left skolem:Cell skolem:List skolem:L skolem:Head skolem:Tail) :move true>>.
    skolem:List list:firstRest (skolem:Head skolem:Tail).
    skolem:L list:firstRest (skolem:Cell skolem:Left).
}.

() log:onNegativeSurface {
    () log:onNegativeSurface <<() :reverse ()>>.
}.

(skolem:List skolem:Reverse skolem:Head skolem:Tail skolem:R) log:onNegativeSurface {
    () log:onNegativeSurface <<skolem:List :reverse skolem:Reverse>>.
    skolem:List list:firstRest (skolem:Head skolem:Tail).
    skolem:Tail :reverse skolem:R.
    (skolem:R (skolem:Head)) list:append skolem:Reverse.
}.

# a Turing machine to add 1 to a binary number
:add1 :start 0.

(0 0 0 :right) :tape 0.
(0 1 1 :right) :tape 0.
(0 "#" "#" :left) :tape 1.
(1 0 1 :stop) :tape :halt.
(1 1 0 :left) :tape 1.
(1 "#" 1 :stop) :tape :halt.

# query
(skolem:A) log:onQuerySurface {
    (1 0 1 0 0 1) :compute skolem:A.
}.

(skolem:A) log:onQuerySurface {
    (1 0 1 1 1 1) :compute skolem:A.
}.

(skolem:A) log:onQuerySurface {
    (1 1 1 1 1 1) :compute skolem:A.
}.

(skolem:A) log:onQuerySurface {
    () :compute skolem:A.
}.
