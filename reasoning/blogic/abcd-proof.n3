@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix : <http://example.org/ns#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix var: <http://eyereasoner.github.io/var#>.
@prefix skolem: <http://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:gives {
        :i a :A.
        :i a :B.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        :i a :A.
    };
    r:evidence (
        skolem:lemma3
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#i"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#A"]];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            var:x_0 a var:x_1.
        } => {
            var:x_0 a var:x_1.
        }.
    }].

skolem:lemma2 a r:Inference;
    r:gives {
        :i a :B.
    };
    r:evidence (
        skolem:lemma4
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#i"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#B"]];
    r:rule [ a r:DerivedQuery; r:gives {
        {
            var:x_0 a var:x_1.
        } => {
            var:x_0 a var:x_1.
        }.
    }].

skolem:lemma3 a r:Extraction;
    r:gives {
        :i a :A.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/blogic/abcd.n3s>].

skolem:lemma4 a r:Inference;
    r:gives {
        :i a :B.
    };
    r:evidence (
        skolem:lemma3
        [ a r:Fact; r:gives {() log:nand {
            :i a :C.
        }}]
        skolem:lemma5
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#i"]];
    r:rule [ a r:DerivedRule; r:gives {
        {
            var:x_0 a :A.
            () log:nand {
                var:x_0 a :C.
            }.
            () log:nand {
                var:x_0 a :D.
            }.
        } => {
            var:x_0 a :B.
        }.
    }].

skolem:lemma5 a r:Inference;
    r:gives {
        () log:nand {
            :i a :D.
        }.
    };
    r:evidence (
        [ a r:Fact; r:gives {() log:nand {
            () log:nand {
                () log:nand {
                    :i a :D.
                }.
            }.
        }}]
        [ a r:Fact; r:gives {"is_list([])"}]
        [ a r:Fact; r:gives {"conj_list('<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'))),['<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')))])"}]
        [ a r:Fact; r:gives {"list_to_set(['<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')))],['<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')))])"}]
        [ a r:Fact; r:gives {"select('<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'))),['<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')))],[])"}]
        [ a r:Fact; r:gives {"'<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'))\=triple(some0,some1,some2)"}]
        [ a r:Fact; r:gives {"conj_list('<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')),['<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'))])"}]
        [ a r:Fact; r:gives {"list_to_set(['<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'))],['<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'))])"}]
        [ a r:Fact; r:gives {"select('<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')),['<http://www.w3.org/2000/10/swap/log#nand>'([],'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'))],[])"}]
        [ a r:Fact; r:gives {"is_list([])"}]
        [ a r:Fact; r:gives {"conj_list('<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'),['<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')]),append([],['<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')],['<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')]),conj_list('<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'),['<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>')]);length([],some3),some3>1,conj_list(some4,[]),conj_list('<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'('<http://example.org/ns#i>','<http://example.org/ns#D>'),['<http://www.w3.org/2000/10/swap/log#nand>'([],some4)])"}]
        [ a r:Fact; r:gives {"append([[],[],[]],[])"}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo {
        () log:nand {
            () log:nand {
                :i a :D.
            }.
        }.
    }];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo ({
        () log:nand {
            () log:nand {
                :i a :D.
            }.
        }.
    })];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo ({
        () log:nand {
            () log:nand {
                :i a :D.
            }.
        }.
    })];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo {
        () log:nand {
            :i a :D.
        }.
    }];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_7"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_8"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_1"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_9"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_2"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_10"]; r:boundTo ({
        () log:nand {
            :i a :D.
        }.
    })];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_11"]; r:boundTo ({
        () log:nand {
            :i a :D.
        }.
    })];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_14"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_12"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_13"]; r:boundTo {
        :i a :D.
    }];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_15"]; r:boundTo ({
        :i a :D.
    })];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_16"]; r:boundTo ({
        :i a :D.
    })];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_17"]; r:boundTo {
        :i a :D.
    }];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_18"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_3"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_19"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_4"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_20"]; r:boundTo ()];
    r:rule [ a r:DerivedRule; r:gives {
        {
            var:x_0 log:nand var:x_1.
            "is_list(avar0)".
            "conj_list(avar1,avar2)".
            "list_to_set(avar2,avar3)".
            "select('<http://www.w3.org/2000/10/swap/log#nand>'(avar4,avar5),avar3,avar6)".
            "avar5\=triple(avar7,avar8,avar9)".
            "conj_list(avar5,avar10)".
            "list_to_set(avar10,avar11)".
            "select('<http://www.w3.org/2000/10/swap/log#nand>'(avar12,avar13),avar11,avar14)".
            "is_list(avar12)".
            "conj_list(avar13,avar15),append(avar6,avar15,avar16),conj_list(avar17,avar16);length(avar6,avar18),avar18>1,conj_list(avar19,avar14),conj_list(avar17,['<http://www.w3.org/2000/10/swap/log#nand>'([],avar19)|avar6])".
            "append([avar0,avar4,avar12],avar20)".
        } => {
            var:x_20 log:nand var:x_17.
        }.
    }].

