% Proof by cases

:- op(1200, xfx, :+).
:- style_check(-discontiguous).

% context
'<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'(A, B) :- type(A, B).

% water is an inorganic compound
type('<https://eyereasoner.github.io/ns#water>', '<https://eyereasoner.github.io/ns#InorganicCompound>').

% proof by cases
type(A, '<https://eyereasoner.github.io/ns#Observablee>') :-
    '<https://eyereasoner.github.io/ns#allPossibleCases>'(A, B),
    forall(
        member(type(A, C), B),
        (type(A, '<https://eyereasoner.github.io/ns#Observablee>') :+ type(A, C))
    ).

% water is solid or liquid or gas
'<https://eyereasoner.github.io/ns#allPossibleCases>'(A,
        [
            type(A, '<https://eyereasoner.github.io/ns#Solid>'),
            type(A, '<https://eyereasoner.github.io/ns#Liquid>'),
            type(A, '<https://eyereasoner.github.io/ns#Gas>')
        ]
    ) :+ type(A, '<https://eyereasoner.github.io/ns#InorganicCompound>').

% solid, liquid and gas things are Observablee
type(A, '<https://eyereasoner.github.io/ns#Observablee>') :+
    type(A, '<https://eyereasoner.github.io/ns#Solid>').

type(A, '<https://eyereasoner.github.io/ns#Observablee>') :+
    type(A, '<https://eyereasoner.github.io/ns#Liquid>').

type(A, '<https://eyereasoner.github.io/ns#Observablee>') :+
    type(A, '<https://eyereasoner.github.io/ns#Gas>').

% query
true :+ '<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>'(_, _).
