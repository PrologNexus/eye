--------
RDF star
--------

Using RDF star https://www.w3.org/TR/rdf12-turtle/ to describe logic rules and queries.

RDF star supports reasoning with forward rules described in RDF e.g.

    # subclass rule
    <<
        log:conjunction log:isFunctorOf (
            << var:A rdfs:subClassOf var:B >>
            << var:S rdf:type var:A >>
        )
    >> log:implies <<
        log:conjunction log:isFunctorOf (
            << var:S rdf:type var:B >>
        )
    >>.

RDF star supports reasoning with backward rules described in RDF e.g.

    # calculate the age of a person
    <<
        log:conjunction log:isFunctorOf (
            << var:S :ageAbove var:A >>
        )
    >> log:isImpliedBy <<
        log:conjunction log:isFunctorOf (
            << var:S :birthDay var:B >>
            << "" time:localTime var:D >>
            << (var:D var:B) math:difference var:F >>
            << var:F math:greaterThan var:A >>
        )
    >>.

RDF star supports querying with queries described in RDF e.g.

    # is the age of a person above 80 years?
    <<
        log:conjunction log:isFunctorOf (
            << var:S :ageAbove "P80Y"^^xsd:duration >>
        )
    >> log:query <<
        log:conjunction log:isFunctorOf (
            << var:S :ageAbove "P80Y"^^xsd:duration >>
        )
    >>.

RDF star supports reasoning with rdfsurfaces described in RDF as

    # a city is a human community
    (_:x) log:onNegativeSurface <<
        log:conjunction log:isFunctorOf (
            << _:x a :City >>
            << () log:onNegativeSurface <<
                    log:conjunction log:isFunctorOf (
                        << _:x a :HumanCommunity >>
                    )
                >>
            >>
        )
    >>.

The var: prefix is <http://www.w3.org/2000/10/swap/var#> and is used for
variables that are interpreted as universally quantified variables except for
forward rule conclusion-only variables which are interpreted existentially.

Literal subjects are described as

    [] rdf:value "aha"; :p :o.
