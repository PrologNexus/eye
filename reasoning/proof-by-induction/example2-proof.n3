@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix : <urn:example:>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:component skolem:lemma4;
    r:component skolem:lemma5;
    r:component skolem:lemma6;
    r:component skolem:lemma7;
    r:component skolem:lemma8;
    r:component skolem:lemma9;
    r:component skolem:lemma10;
    r:component skolem:lemma11;
    r:component skolem:lemma12;
    r:component skolem:lemma13;
    r:component skolem:lemma14;
    r:component skolem:lemma15;
    r:component skolem:lemma16;
    r:component skolem:lemma17;
    r:component skolem:lemma18;
    r:component skolem:lemma19;
    r:component skolem:lemma20;
    r:component skolem:lemma21;
    r:component skolem:lemma22;
    r:component skolem:lemma23;
    r:component skolem:lemma24;
    r:component skolem:lemma25;
    r:component skolem:lemma26;
    r:component skolem:lemma27;
    r:component skolem:lemma28;
    r:component skolem:lemma29;
    r:component skolem:lemma30;
    r:component skolem:lemma31;
    r:component skolem:lemma32;
    r:component skolem:lemma33;
    r:component skolem:lemma34;
    r:component skolem:lemma35;
    r:component skolem:lemma36;
    r:component skolem:lemma37;
    r:component skolem:lemma38;
    r:component skolem:lemma39;
    r:component skolem:lemma40;
    r:component skolem:lemma41;
    r:component skolem:lemma42;
    r:component skolem:lemma43;
    r:component skolem:lemma44;
    r:component skolem:lemma45;
    r:component skolem:lemma46;
    r:component skolem:lemma47;
    r:component skolem:lemma48;
    r:component skolem:lemma49;
    r:component skolem:lemma50;
    r:component skolem:lemma51;
    r:component skolem:lemma52;
    r:component skolem:lemma53;
    r:component skolem:lemma54;
    r:component skolem:lemma55;
    r:component skolem:lemma56;
    r:component skolem:lemma57;
    r:component skolem:lemma58;
    r:component skolem:lemma59;
    r:component skolem:lemma60;
    r:component skolem:lemma61;
    r:component skolem:lemma62;
    r:component skolem:lemma63;
    r:component skolem:lemma64;
    r:component skolem:lemma65;
    r:component skolem:lemma66;
    r:component skolem:lemma67;
    r:component skolem:lemma68;
    r:component skolem:lemma69;
    r:component skolem:lemma70;
    r:component skolem:lemma71;
    r:component skolem:lemma72;
    r:component skolem:lemma73;
    r:component skolem:lemma74;
    r:component skolem:lemma75;
    r:component skolem:lemma76;
    r:component skolem:lemma77;
    r:component skolem:lemma78;
    r:component skolem:lemma79;
    r:component skolem:lemma80;
    r:component skolem:lemma81;
    r:component skolem:lemma82;
    r:component skolem:lemma83;
    r:component skolem:lemma84;
    r:component skolem:lemma85;
    r:component skolem:lemma86;
    r:component skolem:lemma87;
    r:component skolem:lemma88;
    r:component skolem:lemma89;
    r:component skolem:lemma90;
    r:component skolem:lemma91;
    r:component skolem:lemma92;
    r:component skolem:lemma93;
    r:component skolem:lemma94;
    r:component skolem:lemma95;
    r:component skolem:lemma96;
    r:component skolem:lemma97;
    r:component skolem:lemma98;
    r:component skolem:lemma99;
    r:component skolem:lemma100;
    r:component skolem:lemma101;
    r:component skolem:lemma102;
    r:component skolem:lemma103;
    r:component skolem:lemma104;
    r:component skolem:lemma105;
    r:component skolem:lemma106;
    r:component skolem:lemma107;
    r:component skolem:lemma108;
    r:component skolem:lemma109;
    r:component skolem:lemma110;
    r:component skolem:lemma111;
    r:component skolem:lemma112;
    r:component skolem:lemma113;
    r:component skolem:lemma114;
    r:component skolem:lemma115;
    r:component skolem:lemma116;
    r:component skolem:lemma117;
    r:component skolem:lemma118;
    r:component skolem:lemma119;
    r:component skolem:lemma120;
    r:component skolem:lemma121;
    r:component skolem:lemma122;
    r:component skolem:lemma123;
    r:component skolem:lemma124;
    r:component skolem:lemma125;
    r:component skolem:lemma126;
    r:component skolem:lemma127;
    r:component skolem:lemma128;
    r:component skolem:lemma129;
    r:component skolem:lemma130;
    r:component skolem:lemma131;
    r:component skolem:lemma132;
    r:component skolem:lemma133;
    r:component skolem:lemma134;
    r:component skolem:lemma135;
    r:component skolem:lemma136;
    r:component skolem:lemma137;
    r:component skolem:lemma138;
    r:component skolem:lemma139;
    r:component skolem:lemma140;
    r:component skolem:lemma141;
    r:component skolem:lemma142;
    r:component skolem:lemma143;
    r:component skolem:lemma144;
    r:component skolem:lemma145;
    r:component skolem:lemma146;
    r:component skolem:lemma147;
    r:component skolem:lemma148;
    r:component skolem:lemma149;
    r:component skolem:lemma150;
    r:component skolem:lemma151;
    r:component skolem:lemma152;
    r:component skolem:lemma153;
    r:component skolem:lemma154;
    r:component skolem:lemma155;
    r:component skolem:lemma156;
    r:component skolem:lemma157;
    r:component skolem:lemma158;
    r:component skolem:lemma159;
    r:component skolem:lemma160;
    r:component skolem:lemma161;
    r:component skolem:lemma162;
    r:component skolem:lemma163;
    r:component skolem:lemma164;
    r:component skolem:lemma165;
    r:component skolem:lemma166;
    r:component skolem:lemma167;
    r:component skolem:lemma168;
    r:component skolem:lemma169;
    r:component skolem:lemma170;
    r:component skolem:lemma171;
    r:component skolem:lemma172;
    r:component skolem:lemma173;
    r:component skolem:lemma174;
    r:component skolem:lemma175;
    r:component skolem:lemma176;
    r:component skolem:lemma177;
    r:component skolem:lemma178;
    r:component skolem:lemma179;
    r:component skolem:lemma180;
    r:component skolem:lemma181;
    r:component skolem:lemma182;
    r:component skolem:lemma183;
    r:component skolem:lemma184;
    r:component skolem:lemma185;
    r:component skolem:lemma186;
    r:component skolem:lemma187;
    r:component skolem:lemma188;
    r:component skolem:lemma189;
    r:component skolem:lemma190;
    r:component skolem:lemma191;
    r:component skolem:lemma192;
    r:component skolem:lemma193;
    r:component skolem:lemma194;
    r:component skolem:lemma195;
    r:component skolem:lemma196;
    r:component skolem:lemma197;
    r:component skolem:lemma198;
    r:component skolem:lemma199;
    r:component skolem:lemma200;
    r:component skolem:lemma201;
    r:component skolem:lemma202;
    r:component skolem:lemma203;
    r:component skolem:lemma204;
    r:component skolem:lemma205;
    r:component skolem:lemma206;
    r:component skolem:lemma207;
    r:component skolem:lemma208;
    r:component skolem:lemma209;
    r:component skolem:lemma210;
    r:component skolem:lemma211;
    r:component skolem:lemma212;
    r:component skolem:lemma213;
    r:component skolem:lemma214;
    r:component skolem:lemma215;
    r:component skolem:lemma216;
    r:component skolem:lemma217;
    r:component skolem:lemma218;
    r:component skolem:lemma219;
    r:component skolem:lemma220;
    r:component skolem:lemma221;
    r:component skolem:lemma222;
    r:component skolem:lemma223;
    r:component skolem:lemma224;
    r:component skolem:lemma225;
    r:component skolem:lemma226;
    r:component skolem:lemma227;
    r:component skolem:lemma228;
    r:component skolem:lemma229;
    r:component skolem:lemma230;
    r:component skolem:lemma231;
    r:component skolem:lemma232;
    r:component skolem:lemma233;
    r:component skolem:lemma234;
    r:component skolem:lemma235;
    r:component skolem:lemma236;
    r:component skolem:lemma237;
    r:component skolem:lemma238;
    r:component skolem:lemma239;
    r:component skolem:lemma240;
    r:component skolem:lemma241;
    r:component skolem:lemma242;
    r:component skolem:lemma243;
    r:component skolem:lemma244;
    r:component skolem:lemma245;
    r:component skolem:lemma246;
    r:component skolem:lemma247;
    r:component skolem:lemma248;
    r:component skolem:lemma249;
    r:component skolem:lemma250;
    r:component skolem:lemma251;
    r:component skolem:lemma252;
    r:component skolem:lemma253;
    r:component skolem:lemma254;
    r:component skolem:lemma255;
    r:component skolem:lemma256;
    r:component skolem:lemma257;
    r:component skolem:lemma258;
    r:component skolem:lemma259;
    r:component skolem:lemma260;
    r:component skolem:lemma261;
    r:component skolem:lemma262;
    r:component skolem:lemma263;
    r:component skolem:lemma264;
    r:component skolem:lemma265;
    r:component skolem:lemma266;
    r:component skolem:lemma267;
    r:component skolem:lemma268;
    r:component skolem:lemma269;
    r:component skolem:lemma270;
    r:component skolem:lemma271;
    r:component skolem:lemma272;
    r:component skolem:lemma273;
    r:component skolem:lemma274;
    r:component skolem:lemma275;
    r:component skolem:lemma276;
    r:component skolem:lemma277;
    r:component skolem:lemma278;
    r:component skolem:lemma279;
    r:component skolem:lemma280;
    r:component skolem:lemma281;
    r:component skolem:lemma282;
    r:component skolem:lemma283;
    r:component skolem:lemma284;
    r:component skolem:lemma285;
    r:component skolem:lemma286;
    r:component skolem:lemma287;
    r:component skolem:lemma288;
    r:component skolem:lemma289;
    r:component skolem:lemma290;
    r:component skolem:lemma291;
    r:component skolem:lemma292;
    r:component skolem:lemma293;
    r:component skolem:lemma294;
    r:component skolem:lemma295;
    r:component skolem:lemma296;
    r:component skolem:lemma297;
    r:component skolem:lemma298;
    r:component skolem:lemma299;
    r:component skolem:lemma300;
    r:component skolem:lemma301;
    r:component skolem:lemma302;
    r:component skolem:lemma303;
    r:component skolem:lemma304;
    r:component skolem:lemma305;
    r:component skolem:lemma306;
    r:component skolem:lemma307;
    r:component skolem:lemma308;
    r:component skolem:lemma309;
    r:component skolem:lemma310;
    r:component skolem:lemma311;
    r:component skolem:lemma312;
    r:component skolem:lemma313;
    r:component skolem:lemma314;
    r:component skolem:lemma315;
    r:component skolem:lemma316;
    r:component skolem:lemma317;
    r:component skolem:lemma318;
    r:component skolem:lemma319;
    r:component skolem:lemma320;
    r:component skolem:lemma321;
    r:component skolem:lemma322;
    r:component skolem:lemma323;
    r:component skolem:lemma324;
    r:component skolem:lemma325;
    r:component skolem:lemma326;
    r:component skolem:lemma327;
    r:component skolem:lemma328;
    r:component skolem:lemma329;
    r:component skolem:lemma330;
    r:component skolem:lemma331;
    r:component skolem:lemma332;
    r:component skolem:lemma333;
    r:component skolem:lemma334;
    r:component skolem:lemma335;
    r:component skolem:lemma336;
    r:component skolem:lemma337;
    r:component skolem:lemma338;
    r:component skolem:lemma339;
    r:component skolem:lemma340;
    r:component skolem:lemma341;
    r:component skolem:lemma342;
    r:component skolem:lemma343;
    r:component skolem:lemma344;
    r:component skolem:lemma345;
    r:component skolem:lemma346;
    r:component skolem:lemma347;
    r:component skolem:lemma348;
    r:component skolem:lemma349;
    r:component skolem:lemma350;
    r:component skolem:lemma351;
    r:component skolem:lemma352;
    r:component skolem:lemma353;
    r:component skolem:lemma354;
    r:component skolem:lemma355;
    r:component skolem:lemma356;
    r:component skolem:lemma357;
    r:component skolem:lemma358;
    r:component skolem:lemma359;
    r:component skolem:lemma360;
    r:component skolem:lemma361;
    r:component skolem:lemma362;
    r:component skolem:lemma363;
    r:component skolem:lemma364;
    r:component skolem:lemma365;
    r:component skolem:lemma366;
    r:component skolem:lemma367;
    r:component skolem:lemma368;
    r:component skolem:lemma369;
    r:component skolem:lemma370;
    r:component skolem:lemma371;
    r:component skolem:lemma372;
    r:component skolem:lemma373;
    r:component skolem:lemma374;
    r:component skolem:lemma375;
    r:component skolem:lemma376;
    r:component skolem:lemma377;
    r:component skolem:lemma378;
    r:component skolem:lemma379;
    r:component skolem:lemma380;
    r:component skolem:lemma381;
    r:component skolem:lemma382;
    r:component skolem:lemma383;
    r:component skolem:lemma384;
    r:component skolem:lemma385;
    r:component skolem:lemma386;
    r:component skolem:lemma387;
    r:component skolem:lemma388;
    r:component skolem:lemma389;
    r:component skolem:lemma390;
    r:component skolem:lemma391;
    r:component skolem:lemma392;
    r:component skolem:lemma393;
    r:component skolem:lemma394;
    r:component skolem:lemma395;
    r:component skolem:lemma396;
    r:component skolem:lemma397;
    r:component skolem:lemma398;
    r:component skolem:lemma399;
    r:component skolem:lemma400;
    r:component skolem:lemma401;
    r:component skolem:lemma402;
    r:component skolem:lemma403;
    r:component skolem:lemma404;
    r:component skolem:lemma405;
    r:component skolem:lemma406;
    r:component skolem:lemma407;
    r:component skolem:lemma408;
    r:component skolem:lemma409;
    r:component skolem:lemma410;
    r:component skolem:lemma411;
    r:component skolem:lemma412;
    r:component skolem:lemma413;
    r:component skolem:lemma414;
    r:component skolem:lemma415;
    r:component skolem:lemma416;
    r:component skolem:lemma417;
    r:component skolem:lemma418;
    r:component skolem:lemma419;
    r:component skolem:lemma420;
    r:component skolem:lemma421;
    r:component skolem:lemma422;
    r:component skolem:lemma423;
    r:component skolem:lemma424;
    r:component skolem:lemma425;
    r:component skolem:lemma426;
    r:component skolem:lemma427;
    r:component skolem:lemma428;
    r:component skolem:lemma429;
    r:component skolem:lemma430;
    r:component skolem:lemma431;
    r:component skolem:lemma432;
    r:component skolem:lemma433;
    r:component skolem:lemma434;
    r:component skolem:lemma435;
    r:component skolem:lemma436;
    r:component skolem:lemma437;
    r:component skolem:lemma438;
    r:component skolem:lemma439;
    r:component skolem:lemma440;
    r:component skolem:lemma441;
    r:component skolem:lemma442;
    r:component skolem:lemma443;
    r:component skolem:lemma444;
    r:component skolem:lemma445;
    r:component skolem:lemma446;
    r:component skolem:lemma447;
    r:component skolem:lemma448;
    r:component skolem:lemma449;
    r:component skolem:lemma450;
    r:component skolem:lemma451;
    r:component skolem:lemma452;
    r:component skolem:lemma453;
    r:component skolem:lemma454;
    r:component skolem:lemma455;
    r:component skolem:lemma456;
    r:component skolem:lemma457;
    r:component skolem:lemma458;
    r:component skolem:lemma459;
    r:component skolem:lemma460;
    r:component skolem:lemma461;
    r:component skolem:lemma462;
    r:component skolem:lemma463;
    r:component skolem:lemma464;
    r:component skolem:lemma465;
    r:component skolem:lemma466;
    r:component skolem:lemma467;
    r:component skolem:lemma468;
    r:component skolem:lemma469;
    r:component skolem:lemma470;
    r:component skolem:lemma471;
    r:component skolem:lemma472;
    r:component skolem:lemma473;
    r:component skolem:lemma474;
    r:component skolem:lemma475;
    r:component skolem:lemma476;
    r:component skolem:lemma477;
    r:component skolem:lemma478;
    r:component skolem:lemma479;
    r:component skolem:lemma480;
    r:component skolem:lemma481;
    r:component skolem:lemma482;
    r:component skolem:lemma483;
    r:component skolem:lemma484;
    r:component skolem:lemma485;
    r:component skolem:lemma486;
    r:component skolem:lemma487;
    r:component skolem:lemma488;
    r:component skolem:lemma489;
    r:component skolem:lemma490;
    r:component skolem:lemma491;
    r:component skolem:lemma492;
    r:component skolem:lemma493;
    r:component skolem:lemma494;
    r:component skolem:lemma495;
    r:component skolem:lemma496;
    r:component skolem:lemma497;
    r:component skolem:lemma498;
    r:component skolem:lemma499;
    r:component skolem:lemma500;
    r:component skolem:lemma501;
    r:component skolem:lemma502;
    r:component skolem:lemma503;
    r:component skolem:lemma504;
    r:component skolem:lemma505;
    r:component skolem:lemma506;
    r:component skolem:lemma507;
    r:component skolem:lemma508;
    r:component skolem:lemma509;
    r:component skolem:lemma510;
    r:component skolem:lemma511;
    r:component skolem:lemma512;
    r:component skolem:lemma513;
    r:component skolem:lemma514;
    r:component skolem:lemma515;
    r:component skolem:lemma516;
    r:component skolem:lemma517;
    r:component skolem:lemma518;
    r:component skolem:lemma519;
    r:component skolem:lemma520;
    r:component skolem:lemma521;
    r:component skolem:lemma522;
    r:component skolem:lemma523;
    r:component skolem:lemma524;
    r:component skolem:lemma525;
    r:component skolem:lemma526;
    r:component skolem:lemma527;
    r:component skolem:lemma528;
    r:component skolem:lemma529;
    r:component skolem:lemma530;
    r:component skolem:lemma531;
    r:component skolem:lemma532;
    r:component skolem:lemma533;
    r:component skolem:lemma534;
    r:component skolem:lemma535;
    r:component skolem:lemma536;
    r:component skolem:lemma537;
    r:component skolem:lemma538;
    r:component skolem:lemma539;
    r:component skolem:lemma540;
    r:component skolem:lemma541;
    r:component skolem:lemma542;
    r:component skolem:lemma543;
    r:component skolem:lemma544;
    r:component skolem:lemma545;
    r:component skolem:lemma546;
    r:component skolem:lemma547;
    r:component skolem:lemma548;
    r:component skolem:lemma549;
    r:component skolem:lemma550;
    r:component skolem:lemma551;
    r:component skolem:lemma552;
    r:component skolem:lemma553;
    r:component skolem:lemma554;
    r:component skolem:lemma555;
    r:component skolem:lemma556;
    r:component skolem:lemma557;
    r:component skolem:lemma558;
    r:component skolem:lemma559;
    r:component skolem:lemma560;
    r:component skolem:lemma561;
    r:component skolem:lemma562;
    r:component skolem:lemma563;
    r:component skolem:lemma564;
    r:component skolem:lemma565;
    r:component skolem:lemma566;
    r:component skolem:lemma567;
    r:component skolem:lemma568;
    r:component skolem:lemma569;
    r:component skolem:lemma570;
    r:component skolem:lemma571;
    r:component skolem:lemma572;
    r:component skolem:lemma573;
    r:component skolem:lemma574;
    r:component skolem:lemma575;
    r:component skolem:lemma576;
    r:component skolem:lemma577;
    r:component skolem:lemma578;
    r:component skolem:lemma579;
    r:component skolem:lemma580;
    r:component skolem:lemma581;
    r:component skolem:lemma582;
    r:component skolem:lemma583;
    r:component skolem:lemma584;
    r:component skolem:lemma585;
    r:component skolem:lemma586;
    r:component skolem:lemma587;
    r:component skolem:lemma588;
    r:component skolem:lemma589;
    r:component skolem:lemma590;
    r:component skolem:lemma591;
    r:component skolem:lemma592;
    r:component skolem:lemma593;
    r:component skolem:lemma594;
    r:component skolem:lemma595;
    r:component skolem:lemma596;
    r:component skolem:lemma597;
    r:component skolem:lemma598;
    r:component skolem:lemma599;
    r:component skolem:lemma600;
    r:component skolem:lemma601;
    r:component skolem:lemma602;
    r:component skolem:lemma603;
    r:component skolem:lemma604;
    r:component skolem:lemma605;
    r:component skolem:lemma606;
    r:component skolem:lemma607;
    r:component skolem:lemma608;
    r:component skolem:lemma609;
    r:component skolem:lemma610;
    r:component skolem:lemma611;
    r:component skolem:lemma612;
    r:component skolem:lemma613;
    r:component skolem:lemma614;
    r:component skolem:lemma615;
    r:component skolem:lemma616;
    r:component skolem:lemma617;
    r:component skolem:lemma618;
    r:component skolem:lemma619;
    r:component skolem:lemma620;
    r:component skolem:lemma621;
    r:component skolem:lemma622;
    r:component skolem:lemma623;
    r:component skolem:lemma624;
    r:component skolem:lemma625;
    r:component skolem:lemma626;
    r:component skolem:lemma627;
    r:component skolem:lemma628;
    r:component skolem:lemma629;
    r:component skolem:lemma630;
    r:component skolem:lemma631;
    r:component skolem:lemma632;
    r:component skolem:lemma633;
    r:component skolem:lemma634;
    r:component skolem:lemma635;
    r:component skolem:lemma636;
    r:component skolem:lemma637;
    r:component skolem:lemma638;
    r:component skolem:lemma639;
    r:component skolem:lemma640;
    r:component skolem:lemma641;
    r:component skolem:lemma642;
    r:component skolem:lemma643;
    r:component skolem:lemma644;
    r:component skolem:lemma645;
    r:component skolem:lemma646;
    r:component skolem:lemma647;
    r:component skolem:lemma648;
    r:component skolem:lemma649;
    r:component skolem:lemma650;
    r:component skolem:lemma651;
    r:component skolem:lemma652;
    r:component skolem:lemma653;
    r:component skolem:lemma654;
    r:component skolem:lemma655;
    r:component skolem:lemma656;
    r:component skolem:lemma657;
    r:component skolem:lemma658;
    r:component skolem:lemma659;
    r:component skolem:lemma660;
    r:component skolem:lemma661;
    r:component skolem:lemma662;
    r:component skolem:lemma663;
    r:component skolem:lemma664;
    r:component skolem:lemma665;
    r:component skolem:lemma666;
    r:component skolem:lemma667;
    r:component skolem:lemma668;
    r:component skolem:lemma669;
    r:component skolem:lemma670;
    r:component skolem:lemma671;
    r:component skolem:lemma672;
    r:component skolem:lemma673;
    r:component skolem:lemma674;
    r:component skolem:lemma675;
    r:component skolem:lemma676;
    r:component skolem:lemma677;
    r:component skolem:lemma678;
    r:component skolem:lemma679;
    r:component skolem:lemma680;
    r:component skolem:lemma681;
    r:component skolem:lemma682;
    r:component skolem:lemma683;
    r:component skolem:lemma684;
    r:component skolem:lemma685;
    r:component skolem:lemma686;
    r:component skolem:lemma687;
    r:component skolem:lemma688;
    r:component skolem:lemma689;
    r:component skolem:lemma690;
    r:component skolem:lemma691;
    r:component skolem:lemma692;
    r:component skolem:lemma693;
    r:component skolem:lemma694;
    r:component skolem:lemma695;
    r:component skolem:lemma696;
    r:component skolem:lemma697;
    r:component skolem:lemma698;
    r:component skolem:lemma699;
    r:component skolem:lemma700;
    r:component skolem:lemma701;
    r:component skolem:lemma702;
    r:component skolem:lemma703;
    r:component skolem:lemma704;
    r:component skolem:lemma705;
    r:component skolem:lemma706;
    r:component skolem:lemma707;
    r:component skolem:lemma708;
    r:component skolem:lemma709;
    r:component skolem:lemma710;
    r:component skolem:lemma711;
    r:component skolem:lemma712;
    r:component skolem:lemma713;
    r:component skolem:lemma714;
    r:component skolem:lemma715;
    r:component skolem:lemma716;
    r:component skolem:lemma717;
    r:component skolem:lemma718;
    r:component skolem:lemma719;
    r:component skolem:lemma720;
    r:component skolem:lemma721;
    r:component skolem:lemma722;
    r:component skolem:lemma723;
    r:component skolem:lemma724;
    r:component skolem:lemma725;
    r:component skolem:lemma726;
    r:component skolem:lemma727;
    r:component skolem:lemma728;
    r:component skolem:lemma729;
    r:component skolem:lemma730;
    r:component skolem:lemma731;
    r:component skolem:lemma732;
    r:component skolem:lemma733;
    r:component skolem:lemma734;
    r:component skolem:lemma735;
    r:component skolem:lemma736;
    r:component skolem:lemma737;
    r:component skolem:lemma738;
    r:component skolem:lemma739;
    r:component skolem:lemma740;
    r:component skolem:lemma741;
    r:component skolem:lemma742;
    r:component skolem:lemma743;
    r:component skolem:lemma744;
    r:component skolem:lemma745;
    r:component skolem:lemma746;
    r:component skolem:lemma747;
    r:component skolem:lemma748;
    r:component skolem:lemma749;
    r:component skolem:lemma750;
    r:component skolem:lemma751;
    r:component skolem:lemma752;
    r:component skolem:lemma753;
    r:component skolem:lemma754;
    r:component skolem:lemma755;
    r:component skolem:lemma756;
    r:component skolem:lemma757;
    r:component skolem:lemma758;
    r:component skolem:lemma759;
    r:component skolem:lemma760;
    r:component skolem:lemma761;
    r:component skolem:lemma762;
    r:component skolem:lemma763;
    r:component skolem:lemma764;
    r:component skolem:lemma765;
    r:component skolem:lemma766;
    r:component skolem:lemma767;
    r:component skolem:lemma768;
    r:component skolem:lemma769;
    r:component skolem:lemma770;
    r:component skolem:lemma771;
    r:component skolem:lemma772;
    r:component skolem:lemma773;
    r:component skolem:lemma774;
    r:component skolem:lemma775;
    r:component skolem:lemma776;
    r:component skolem:lemma777;
    r:component skolem:lemma778;
    r:component skolem:lemma779;
    r:component skolem:lemma780;
    r:component skolem:lemma781;
    r:component skolem:lemma782;
    r:component skolem:lemma783;
    r:component skolem:lemma784;
    r:component skolem:lemma785;
    r:component skolem:lemma786;
    r:component skolem:lemma787;
    r:component skolem:lemma788;
    r:component skolem:lemma789;
    r:component skolem:lemma790;
    r:component skolem:lemma791;
    r:component skolem:lemma792;
    r:component skolem:lemma793;
    r:component skolem:lemma794;
    r:component skolem:lemma795;
    r:component skolem:lemma796;
    r:component skolem:lemma797;
    r:component skolem:lemma798;
    r:component skolem:lemma799;
    r:component skolem:lemma800;
    r:component skolem:lemma801;
    r:component skolem:lemma802;
    r:component skolem:lemma803;
    r:component skolem:lemma804;
    r:component skolem:lemma805;
    r:component skolem:lemma806;
    r:component skolem:lemma807;
    r:component skolem:lemma808;
    r:component skolem:lemma809;
    r:component skolem:lemma810;
    r:component skolem:lemma811;
    r:component skolem:lemma812;
    r:component skolem:lemma813;
    r:component skolem:lemma814;
    r:component skolem:lemma815;
    r:component skolem:lemma816;
    r:component skolem:lemma817;
    r:component skolem:lemma818;
    r:component skolem:lemma819;
    r:component skolem:lemma820;
    r:component skolem:lemma821;
    r:component skolem:lemma822;
    r:component skolem:lemma823;
    r:component skolem:lemma824;
    r:component skolem:lemma825;
    r:component skolem:lemma826;
    r:component skolem:lemma827;
    r:component skolem:lemma828;
    r:component skolem:lemma829;
    r:component skolem:lemma830;
    r:component skolem:lemma831;
    r:component skolem:lemma832;
    r:component skolem:lemma833;
    r:component skolem:lemma834;
    r:component skolem:lemma835;
    r:component skolem:lemma836;
    r:component skolem:lemma837;
    r:component skolem:lemma838;
    r:component skolem:lemma839;
    r:component skolem:lemma840;
    r:component skolem:lemma841;
    r:component skolem:lemma842;
    r:component skolem:lemma843;
    r:component skolem:lemma844;
    r:component skolem:lemma845;
    r:component skolem:lemma846;
    r:component skolem:lemma847;
    r:component skolem:lemma848;
    r:component skolem:lemma849;
    r:component skolem:lemma850;
    r:component skolem:lemma851;
    r:component skolem:lemma852;
    r:component skolem:lemma853;
    r:component skolem:lemma854;
    r:component skolem:lemma855;
    r:component skolem:lemma856;
    r:component skolem:lemma857;
    r:component skolem:lemma858;
    r:component skolem:lemma859;
    r:component skolem:lemma860;
    r:component skolem:lemma861;
    r:component skolem:lemma862;
    r:component skolem:lemma863;
    r:component skolem:lemma864;
    r:component skolem:lemma865;
    r:component skolem:lemma866;
    r:component skolem:lemma867;
    r:component skolem:lemma868;
    r:component skolem:lemma869;
    r:component skolem:lemma870;
    r:component skolem:lemma871;
    r:component skolem:lemma872;
    r:component skolem:lemma873;
    r:component skolem:lemma874;
    r:component skolem:lemma875;
    r:component skolem:lemma876;
    r:component skolem:lemma877;
    r:component skolem:lemma878;
    r:component skolem:lemma879;
    r:component skolem:lemma880;
    r:component skolem:lemma881;
    r:component skolem:lemma882;
    r:component skolem:lemma883;
    r:component skolem:lemma884;
    r:component skolem:lemma885;
    r:component skolem:lemma886;
    r:component skolem:lemma887;
    r:component skolem:lemma888;
    r:component skolem:lemma889;
    r:component skolem:lemma890;
    r:component skolem:lemma891;
    r:component skolem:lemma892;
    r:component skolem:lemma893;
    r:component skolem:lemma894;
    r:component skolem:lemma895;
    r:component skolem:lemma896;
    r:component skolem:lemma897;
    r:component skolem:lemma898;
    r:component skolem:lemma899;
    r:component skolem:lemma900;
    r:component skolem:lemma901;
    r:component skolem:lemma902;
    r:component skolem:lemma903;
    r:component skolem:lemma904;
    r:component skolem:lemma905;
    r:component skolem:lemma906;
    r:component skolem:lemma907;
    r:component skolem:lemma908;
    r:component skolem:lemma909;
    r:component skolem:lemma910;
    r:component skolem:lemma911;
    r:component skolem:lemma912;
    r:component skolem:lemma913;
    r:component skolem:lemma914;
    r:component skolem:lemma915;
    r:component skolem:lemma916;
    r:component skolem:lemma917;
    r:component skolem:lemma918;
    r:component skolem:lemma919;
    r:component skolem:lemma920;
    r:component skolem:lemma921;
    r:component skolem:lemma922;
    r:component skolem:lemma923;
    r:component skolem:lemma924;
    r:component skolem:lemma925;
    r:component skolem:lemma926;
    r:component skolem:lemma927;
    r:component skolem:lemma928;
    r:component skolem:lemma929;
    r:component skolem:lemma930;
    r:component skolem:lemma931;
    r:component skolem:lemma932;
    r:component skolem:lemma933;
    r:component skolem:lemma934;
    r:component skolem:lemma935;
    r:component skolem:lemma936;
    r:component skolem:lemma937;
    r:component skolem:lemma938;
    r:component skolem:lemma939;
    r:component skolem:lemma940;
    r:component skolem:lemma941;
    r:component skolem:lemma942;
    r:component skolem:lemma943;
    r:component skolem:lemma944;
    r:component skolem:lemma945;
    r:component skolem:lemma946;
    r:component skolem:lemma947;
    r:component skolem:lemma948;
    r:component skolem:lemma949;
    r:component skolem:lemma950;
    r:component skolem:lemma951;
    r:component skolem:lemma952;
    r:component skolem:lemma953;
    r:component skolem:lemma954;
    r:component skolem:lemma955;
    r:component skolem:lemma956;
    r:component skolem:lemma957;
    r:component skolem:lemma958;
    r:component skolem:lemma959;
    r:component skolem:lemma960;
    r:component skolem:lemma961;
    r:component skolem:lemma962;
    r:component skolem:lemma963;
    r:component skolem:lemma964;
    r:component skolem:lemma965;
    r:component skolem:lemma966;
    r:component skolem:lemma967;
    r:component skolem:lemma968;
    r:component skolem:lemma969;
    r:component skolem:lemma970;
    r:component skolem:lemma971;
    r:component skolem:lemma972;
    r:component skolem:lemma973;
    r:component skolem:lemma974;
    r:component skolem:lemma975;
    r:component skolem:lemma976;
    r:component skolem:lemma977;
    r:component skolem:lemma978;
    r:component skolem:lemma979;
    r:component skolem:lemma980;
    r:component skolem:lemma981;
    r:component skolem:lemma982;
    r:component skolem:lemma983;
    r:component skolem:lemma984;
    r:component skolem:lemma985;
    r:component skolem:lemma986;
    r:component skolem:lemma987;
    r:component skolem:lemma988;
    r:component skolem:lemma989;
    r:component skolem:lemma990;
    r:component skolem:lemma991;
    r:component skolem:lemma992;
    r:component skolem:lemma993;
    r:component skolem:lemma994;
    r:component skolem:lemma995;
    r:component skolem:lemma996;
    r:component skolem:lemma997;
    r:component skolem:lemma998;
    r:component skolem:lemma999;
    r:gives {
        1 :recursionCount 5 .
        2 :recursionCount 4 .
        3 :recursionCount 6 .
        4 :recursionCount 4 .
        5 :recursionCount 6 .
        6 :recursionCount 6 .
        7 :recursionCount 4 .
        8 :recursionCount 6 .
        9 :recursionCount 4 .
        10 :recursionCount 5 .
        11 :recursionCount 4 .
        12 :recursionCount 3 .
        13 :recursionCount 3 .
        14 :recursionCount 7 .
        15 :recursionCount 7 .
        16 :recursionCount 7 .
        17 :recursionCount 3 .
        18 :recursionCount 3 .
        19 :recursionCount 4 .
        20 :recursionCount 4 .
        21 :recursionCount 3 .
        22 :recursionCount 6 .
        23 :recursionCount 5 .
        24 :recursionCount 2 .
        25 :recursionCount 7 .
        26 :recursionCount 1 .
        27 :recursionCount 5 .
        28 :recursionCount 6 .
        29 :recursionCount 3 .
        30 :recursionCount 6 .
        31 :recursionCount 3 .
        32 :recursionCount 5 .
        33 :recursionCount 6 .
        34 :recursionCount 3 .
        35 :recursionCount 5 .
        36 :recursionCount 3 .
        37 :recursionCount 6 .
        38 :recursionCount 5 .
        39 :recursionCount 3 .
        40 :recursionCount 4 .
        41 :recursionCount 7 .
        42 :recursionCount 2 .
        43 :recursionCount 3 .
        44 :recursionCount 4 .
        45 :recursionCount 5 .
        46 :recursionCount 4 .
        47 :recursionCount 3 .
        48 :recursionCount 2 .
        49 :recursionCount 7 .
        50 :recursionCount 6 .
        51 :recursionCount 7 .
        52 :recursionCount 7 .
        53 :recursionCount 5 .
        54 :recursionCount 5 .
        55 :recursionCount 5 .
        56 :recursionCount 5 .
        57 :recursionCount 5 .
        58 :recursionCount 7 .
        59 :recursionCount 7 .
        60 :recursionCount 6 .
        61 :recursionCount 7 .
        62 :recursionCount 1 .
        63 :recursionCount 3 .
        64 :recursionCount 4 .
        65 :recursionCount 5 .
        66 :recursionCount 4 .
        67 :recursionCount 3 .
        68 :recursionCount 2 .
        69 :recursionCount 7 .
        70 :recursionCount 4 .
        71 :recursionCount 3 .
        72 :recursionCount 5 .
        73 :recursionCount 6 .
        74 :recursionCount 3 .
        75 :recursionCount 5 .
        76 :recursionCount 3 .
        77 :recursionCount 6 .
        78 :recursionCount 5 .
        79 :recursionCount 3 .
        80 :recursionCount 6 .
        81 :recursionCount 3 .
        82 :recursionCount 6 .
        83 :recursionCount 5 .
        84 :recursionCount 2 .
        85 :recursionCount 7 .
        86 :recursionCount 2 .
        87 :recursionCount 5 .
        88 :recursionCount 6 .
        89 :recursionCount 3 .
        90 :recursionCount 4 .
        91 :recursionCount 4 .
        92 :recursionCount 3 .
        93 :recursionCount 3 .
        94 :recursionCount 7 .
        95 :recursionCount 7 .
        96 :recursionCount 7 .
        97 :recursionCount 3 .
        98 :recursionCount 3 .
        99 :recursionCount 4 .
        100 :recursionCount 5 .
        101 :recursionCount 4 .
        102 :recursionCount 3 .
        103 :recursionCount 3 .
        104 :recursionCount 7 .
        105 :recursionCount 7 .
        106 :recursionCount 7 .
        107 :recursionCount 3 .
        108 :recursionCount 3 .
        109 :recursionCount 4 .
        110 :recursionCount 4 .
        111 :recursionCount 5 .
        112 :recursionCount 4 .
        113 :recursionCount 6 .
        114 :recursionCount 4 .
        115 :recursionCount 6 .
        116 :recursionCount 6 .
        117 :recursionCount 4 .
        118 :recursionCount 6 .
        119 :recursionCount 4 .
        120 :recursionCount 3 .
        121 :recursionCount 4 .
        122 :recursionCount 3 .
        123 :recursionCount 3 .
        124 :recursionCount 7 .
        125 :recursionCount 7 .
        126 :recursionCount 7 .
        127 :recursionCount 3 .
        128 :recursionCount 3 .
        129 :recursionCount 4 .
        130 :recursionCount 3 .
        131 :recursionCount 6 .
        132 :recursionCount 3 .
        133 :recursionCount 5 .
        134 :recursionCount 2 .
        135 :recursionCount 7 .
        136 :recursionCount 1 .
        137 :recursionCount 5 .
        138 :recursionCount 6 .
        139 :recursionCount 3 .
        140 :recursionCount 7 .
        141 :recursionCount 4 .
        142 :recursionCount 7 .
        143 :recursionCount 2 .
        144 :recursionCount 3 .
        145 :recursionCount 5 .
        146 :recursionCount 3 .
        147 :recursionCount 6 .
        148 :recursionCount 5 .
        149 :recursionCount 3 .
        150 :recursionCount 7 .
        151 :recursionCount 6 .
        152 :recursionCount 7 .
        153 :recursionCount 7 .
        154 :recursionCount 5 .
        155 :recursionCount 5 .
        156 :recursionCount 4 .
        157 :recursionCount 3 .
        158 :recursionCount 2 .
        159 :recursionCount 7 .
        160 :recursionCount 7 .
        161 :recursionCount 6 .
        162 :recursionCount 7 .
        163 :recursionCount 1 .
        164 :recursionCount 3 .
        165 :recursionCount 4 .
        166 :recursionCount 5 .
        167 :recursionCount 5 .
        168 :recursionCount 7 .
        169 :recursionCount 7 .
        170 :recursionCount 3 .
        171 :recursionCount 4 .
        172 :recursionCount 3 .
        173 :recursionCount 5 .
        174 :recursionCount 6 .
        175 :recursionCount 3 .
        176 :recursionCount 5 .
        177 :recursionCount 3 .
        178 :recursionCount 2 .
        179 :recursionCount 7 .
        180 :recursionCount 3 .
        181 :recursionCount 6 .
        182 :recursionCount 3 .
        183 :recursionCount 6 .
        184 :recursionCount 5 .
        185 :recursionCount 2 .
        186 :recursionCount 7 .
        187 :recursionCount 2 .
        188 :recursionCount 5 .
        189 :recursionCount 3 .
        190 :recursionCount 4 .
        191 :recursionCount 4 .
        192 :recursionCount 4 .
        193 :recursionCount 3 .
        194 :recursionCount 3 .
        195 :recursionCount 7 .
        196 :recursionCount 7 .
        197 :recursionCount 7 .
        198 :recursionCount 3 .
        199 :recursionCount 3 .
        200 :recursionCount 4 .
        201 :recursionCount 3 .
        202 :recursionCount 6 .
        203 :recursionCount 5 .
        204 :recursionCount 2 .
        205 :recursionCount 7 .
        206 :recursionCount 1 .
        207 :recursionCount 5 .
        208 :recursionCount 6 .
        209 :recursionCount 3 .
        210 :recursionCount 3 .
        211 :recursionCount 4 .
        212 :recursionCount 3 .
        213 :recursionCount 3 .
        214 :recursionCount 7 .
        215 :recursionCount 7 .
        216 :recursionCount 7 .
        217 :recursionCount 3 .
        218 :recursionCount 3 .
        219 :recursionCount 4 .
        220 :recursionCount 6 .
        221 :recursionCount 3 .
        222 :recursionCount 4 .
        223 :recursionCount 6 .
        224 :recursionCount 4 .
        225 :recursionCount 6 .
        226 :recursionCount 6 .
        227 :recursionCount 4 .
        228 :recursionCount 6 .
        229 :recursionCount 4 .
        230 :recursionCount 5 .
        231 :recursionCount 3 .
        232 :recursionCount 6 .
        233 :recursionCount 3 .
        234 :recursionCount 7 .
        235 :recursionCount 7 .
        236 :recursionCount 7 .
        237 :recursionCount 3 .
        238 :recursionCount 3 .
        239 :recursionCount 4 .
        240 :recursionCount 2 .
        241 :recursionCount 7 .
        242 :recursionCount 4 .
        243 :recursionCount 7 .
        244 :recursionCount 2 .
        245 :recursionCount 7 .
        246 :recursionCount 1 .
        247 :recursionCount 5 .
        248 :recursionCount 6 .
        249 :recursionCount 3 .
        250 :recursionCount 7 .
        251 :recursionCount 7 .
        252 :recursionCount 6 .
        253 :recursionCount 7 .
        254 :recursionCount 7 .
        255 :recursionCount 5 .
        256 :recursionCount 3 .
        257 :recursionCount 6 .
        258 :recursionCount 5 .
        259 :recursionCount 3 .
        260 :recursionCount 1 .
        261 :recursionCount 7 .
        262 :recursionCount 6 .
        263 :recursionCount 7 .
        264 :recursionCount 1 .
        265 :recursionCount 3 .
        266 :recursionCount 4 .
        267 :recursionCount 3 .
        268 :recursionCount 2 .
        269 :recursionCount 7 .
        270 :recursionCount 5 .
        271 :recursionCount 3 .
        272 :recursionCount 4 .
        273 :recursionCount 3 .
        274 :recursionCount 5 .
        275 :recursionCount 6 .
        276 :recursionCount 3 .
        277 :recursionCount 5 .
        278 :recursionCount 7 .
        279 :recursionCount 7 .
        280 :recursionCount 6 .
        281 :recursionCount 3 .
        282 :recursionCount 6 .
        283 :recursionCount 3 .
        284 :recursionCount 6 .
        285 :recursionCount 5 .
        286 :recursionCount 2 .
        287 :recursionCount 7 .
        288 :recursionCount 2 .
        289 :recursionCount 7 .
        290 :recursionCount 3 .
        291 :recursionCount 4 .
        292 :recursionCount 4 .
        293 :recursionCount 4 .
        294 :recursionCount 3 .
        295 :recursionCount 3 .
        296 :recursionCount 7 .
        297 :recursionCount 7 .
        298 :recursionCount 7 .
        299 :recursionCount 3 .
        300 :recursionCount 6 .
        301 :recursionCount 3 .
        302 :recursionCount 5 .
        303 :recursionCount 6 .
        304 :recursionCount 3 .
        305 :recursionCount 5 .
        306 :recursionCount 3 .
        307 :recursionCount 6 .
        308 :recursionCount 5 .
        309 :recursionCount 3 .
        310 :recursionCount 3 .
        311 :recursionCount 6 .
        312 :recursionCount 3 .
        313 :recursionCount 5 .
        314 :recursionCount 2 .
        315 :recursionCount 7 .
        316 :recursionCount 1 .
        317 :recursionCount 5 .
        318 :recursionCount 6 .
        319 :recursionCount 3 .
        320 :recursionCount 5 .
        321 :recursionCount 3 .
        322 :recursionCount 6 .
        323 :recursionCount 3 .
        324 :recursionCount 7 .
        325 :recursionCount 7 .
        326 :recursionCount 7 .
        327 :recursionCount 3 .
        328 :recursionCount 3 .
        329 :recursionCount 4 .
        330 :recursionCount 6 .
        331 :recursionCount 5 .
        332 :recursionCount 3 .
        333 :recursionCount 6 .
        334 :recursionCount 4 .
        335 :recursionCount 6 .
        336 :recursionCount 6 .
        337 :recursionCount 4 .
        338 :recursionCount 6 .
        339 :recursionCount 4 .
        340 :recursionCount 3 .
        341 :recursionCount 2 .
        342 :recursionCount 7 .
        343 :recursionCount 4 .
        344 :recursionCount 7 .
        345 :recursionCount 7 .
        346 :recursionCount 7 .
        347 :recursionCount 3 .
        348 :recursionCount 3 .
        349 :recursionCount 4 .
        350 :recursionCount 5 .
        351 :recursionCount 7 .
        352 :recursionCount 7 .
        353 :recursionCount 6 .
        354 :recursionCount 7 .
        355 :recursionCount 7 .
        356 :recursionCount 1 .
        357 :recursionCount 5 .
        358 :recursionCount 6 .
        359 :recursionCount 3 .
        360 :recursionCount 3 .
        361 :recursionCount 1 .
        362 :recursionCount 7 .
        363 :recursionCount 6 .
        364 :recursionCount 7 .
        365 :recursionCount 1 .
        366 :recursionCount 3 .
        367 :recursionCount 6 .
        368 :recursionCount 5 .
        369 :recursionCount 3 .
        370 :recursionCount 6 .
        371 :recursionCount 5 .
        372 :recursionCount 3 .
        373 :recursionCount 4 .
        374 :recursionCount 3 .
        375 :recursionCount 5 .
        376 :recursionCount 6 .
        377 :recursionCount 3 .
        378 :recursionCount 2 .
        379 :recursionCount 7 .
        380 :recursionCount 5 .
        381 :recursionCount 6 .
        382 :recursionCount 3 .
        383 :recursionCount 6 .
        384 :recursionCount 3 .
        385 :recursionCount 6 .
        386 :recursionCount 5 .
        387 :recursionCount 2 .
        388 :recursionCount 7 .
        389 :recursionCount 7 .
        390 :recursionCount 3 .
        391 :recursionCount 3 .
        392 :recursionCount 4 .
        393 :recursionCount 4 .
        394 :recursionCount 4 .
        395 :recursionCount 3 .
        396 :recursionCount 3 .
        397 :recursionCount 7 .
        398 :recursionCount 7 .
        399 :recursionCount 7 .
        400 :recursionCount 4 .
        401 :recursionCount 7 .
        402 :recursionCount 2 .
        403 :recursionCount 3 .
        404 :recursionCount 4 .
        405 :recursionCount 5 .
        406 :recursionCount 4 .
        407 :recursionCount 3 .
        408 :recursionCount 2 .
        409 :recursionCount 7 .
        410 :recursionCount 7 .
        411 :recursionCount 4 .
        412 :recursionCount 7 .
        413 :recursionCount 2 .
        414 :recursionCount 3 .
        415 :recursionCount 5 .
        416 :recursionCount 3 .
        417 :recursionCount 6 .
        418 :recursionCount 5 .
        419 :recursionCount 3 .
        420 :recursionCount 2 .
        421 :recursionCount 7 .
        422 :recursionCount 4 .
        423 :recursionCount 7 .
        424 :recursionCount 2 .
        425 :recursionCount 7 .
        426 :recursionCount 1 .
        427 :recursionCount 5 .
        428 :recursionCount 6 .
        429 :recursionCount 3 .
        430 :recursionCount 3 .
        431 :recursionCount 2 .
        432 :recursionCount 7 .
        433 :recursionCount 4 .
        434 :recursionCount 7 .
        435 :recursionCount 7 .
        436 :recursionCount 7 .
        437 :recursionCount 3 .
        438 :recursionCount 3 .
        439 :recursionCount 4 .
        440 :recursionCount 4 .
        441 :recursionCount 3 .
        442 :recursionCount 2 .
        443 :recursionCount 7 .
        444 :recursionCount 4 .
        445 :recursionCount 6 .
        446 :recursionCount 6 .
        447 :recursionCount 4 .
        448 :recursionCount 6 .
        449 :recursionCount 4 .
        450 :recursionCount 5 .
        451 :recursionCount 5 .
        452 :recursionCount 7 .
        453 :recursionCount 7 .
        454 :recursionCount 6 .
        455 :recursionCount 7 .
        456 :recursionCount 7 .
        457 :recursionCount 3 .
        458 :recursionCount 3 .
        459 :recursionCount 4 .
        460 :recursionCount 4 .
        461 :recursionCount 3 .
        462 :recursionCount 1 .
        463 :recursionCount 7 .
        464 :recursionCount 6 .
        465 :recursionCount 7 .
        466 :recursionCount 1 .
        467 :recursionCount 5 .
        468 :recursionCount 6 .
        469 :recursionCount 3 .
        470 :recursionCount 3 .
        471 :recursionCount 6 .
        472 :recursionCount 5 .
        473 :recursionCount 3 .
        474 :recursionCount 4 .
        475 :recursionCount 3 .
        476 :recursionCount 5 .
        477 :recursionCount 6 .
        478 :recursionCount 5 .
        479 :recursionCount 3 .
        480 :recursionCount 2 .
        481 :recursionCount 5 .
        482 :recursionCount 6 .
        483 :recursionCount 3 .
        484 :recursionCount 6 .
        485 :recursionCount 3 .
        486 :recursionCount 6 .
        487 :recursionCount 5 .
        488 :recursionCount 2 .
        489 :recursionCount 7 .
        490 :recursionCount 7 .
        491 :recursionCount 3 .
        492 :recursionCount 3 .
        493 :recursionCount 4 .
        494 :recursionCount 4 .
        495 :recursionCount 4 .
        496 :recursionCount 3 .
        497 :recursionCount 3 .
        498 :recursionCount 7 .
        499 :recursionCount 7 .
        500 :recursionCount 6 .
        501 :recursionCount 7 .
        502 :recursionCount 7 .
        503 :recursionCount 5 .
        504 :recursionCount 5 .
        505 :recursionCount 5 .
        506 :recursionCount 5 .
        507 :recursionCount 5 .
        508 :recursionCount 7 .
        509 :recursionCount 7 .
        510 :recursionCount 7 .
        511 :recursionCount 6 .
        512 :recursionCount 7 .
        513 :recursionCount 7 .
        514 :recursionCount 5 .
        515 :recursionCount 5 .
        516 :recursionCount 4 .
        517 :recursionCount 3 .
        518 :recursionCount 2 .
        519 :recursionCount 7 .
        520 :recursionCount 7 .
        521 :recursionCount 7 .
        522 :recursionCount 6 .
        523 :recursionCount 7 .
        524 :recursionCount 7 .
        525 :recursionCount 5 .
        526 :recursionCount 3 .
        527 :recursionCount 6 .
        528 :recursionCount 5 .
        529 :recursionCount 3 .
        530 :recursionCount 5 .
        531 :recursionCount 7 .
        532 :recursionCount 7 .
        533 :recursionCount 6 .
        534 :recursionCount 7 .
        535 :recursionCount 7 .
        536 :recursionCount 1 .
        537 :recursionCount 5 .
        538 :recursionCount 6 .
        539 :recursionCount 3 .
        540 :recursionCount 5 .
        541 :recursionCount 5 .
        542 :recursionCount 7 .
        543 :recursionCount 7 .
        544 :recursionCount 6 .
        545 :recursionCount 7 .
        546 :recursionCount 7 .
        547 :recursionCount 3 .
        548 :recursionCount 3 .
        549 :recursionCount 4 .
        550 :recursionCount 5 .
        551 :recursionCount 5 .
        552 :recursionCount 5 .
        553 :recursionCount 7 .
        554 :recursionCount 7 .
        555 :recursionCount 6 .
        556 :recursionCount 6 .
        557 :recursionCount 4 .
        558 :recursionCount 6 .
        559 :recursionCount 4 .
        560 :recursionCount 5 .
        561 :recursionCount 4 .
        562 :recursionCount 3 .
        563 :recursionCount 1 .
        564 :recursionCount 7 .
        565 :recursionCount 6 .
        566 :recursionCount 7 .
        567 :recursionCount 3 .
        568 :recursionCount 3 .
        569 :recursionCount 4 .
        570 :recursionCount 5 .
        571 :recursionCount 3 .
        572 :recursionCount 6 .
        573 :recursionCount 5 .
        574 :recursionCount 3 .
        575 :recursionCount 4 .
        576 :recursionCount 3 .
        577 :recursionCount 5 .
        578 :recursionCount 6 .
        579 :recursionCount 3 .
        580 :recursionCount 7 .
        581 :recursionCount 2 .
        582 :recursionCount 5 .
        583 :recursionCount 6 .
        584 :recursionCount 3 .
        585 :recursionCount 6 .
        586 :recursionCount 3 .
        587 :recursionCount 6 .
        588 :recursionCount 5 .
        589 :recursionCount 3 .
        590 :recursionCount 7 .
        591 :recursionCount 7 .
        592 :recursionCount 3 .
        593 :recursionCount 3 .
        594 :recursionCount 4 .
        595 :recursionCount 4 .
        596 :recursionCount 4 .
        597 :recursionCount 3 .
        598 :recursionCount 3 .
        599 :recursionCount 7 .
        600 :recursionCount 6 .
        601 :recursionCount 7 .
        602 :recursionCount 1 .
        603 :recursionCount 3 .
        604 :recursionCount 4 .
        605 :recursionCount 5 .
        606 :recursionCount 4 .
        607 :recursionCount 3 .
        608 :recursionCount 2 .
        609 :recursionCount 7 .
        610 :recursionCount 7 .
        611 :recursionCount 6 .
        612 :recursionCount 7 .
        613 :recursionCount 1 .
        614 :recursionCount 3 .
        615 :recursionCount 4 .
        616 :recursionCount 5 .
        617 :recursionCount 5 .
        618 :recursionCount 7 .
        619 :recursionCount 7 .
        620 :recursionCount 1 .
        621 :recursionCount 7 .
        622 :recursionCount 6 .
        623 :recursionCount 7 .
        624 :recursionCount 1 .
        625 :recursionCount 3 .
        626 :recursionCount 4 .
        627 :recursionCount 3 .
        628 :recursionCount 2 .
        629 :recursionCount 7 .
        630 :recursionCount 3 .
        631 :recursionCount 1 .
        632 :recursionCount 7 .
        633 :recursionCount 6 .
        634 :recursionCount 7 .
        635 :recursionCount 1 .
        636 :recursionCount 3 .
        637 :recursionCount 6 .
        638 :recursionCount 5 .
        639 :recursionCount 3 .
        640 :recursionCount 4 .
        641 :recursionCount 3 .
        642 :recursionCount 1 .
        643 :recursionCount 7 .
        644 :recursionCount 6 .
        645 :recursionCount 7 .
        646 :recursionCount 1 .
        647 :recursionCount 5 .
        648 :recursionCount 6 .
        649 :recursionCount 3 .
        650 :recursionCount 5 .
        651 :recursionCount 4 .
        652 :recursionCount 3 .
        653 :recursionCount 1 .
        654 :recursionCount 7 .
        655 :recursionCount 6 .
        656 :recursionCount 7 .
        657 :recursionCount 3 .
        658 :recursionCount 3 .
        659 :recursionCount 4 .
        660 :recursionCount 4 .
        661 :recursionCount 5 .
        662 :recursionCount 4 .
        663 :recursionCount 3 .
        664 :recursionCount 1 .
        665 :recursionCount 7 .
        666 :recursionCount 6 .
        667 :recursionCount 4 .
        668 :recursionCount 6 .
        669 :recursionCount 4 .
        670 :recursionCount 3 .
        671 :recursionCount 5 .
        672 :recursionCount 3 .
        673 :recursionCount 6 .
        674 :recursionCount 5 .
        675 :recursionCount 3 .
        676 :recursionCount 4 .
        677 :recursionCount 3 .
        678 :recursionCount 3 .
        679 :recursionCount 4 .
        680 :recursionCount 2 .
        681 :recursionCount 7 .
        682 :recursionCount 2 .
        683 :recursionCount 5 .
        684 :recursionCount 6 .
        685 :recursionCount 3 .
        686 :recursionCount 6 .
        687 :recursionCount 3 .
        688 :recursionCount 6 .
        689 :recursionCount 3 .
        690 :recursionCount 7 .
        691 :recursionCount 7 .
        692 :recursionCount 7 .
        693 :recursionCount 3 .
        694 :recursionCount 3 .
        695 :recursionCount 4 .
        696 :recursionCount 4 .
        697 :recursionCount 4 .
        698 :recursionCount 3 .
        699 :recursionCount 3 .
        700 :recursionCount 4 .
        701 :recursionCount 3 .
        702 :recursionCount 5 .
        703 :recursionCount 6 .
        704 :recursionCount 3 .
        705 :recursionCount 5 .
        706 :recursionCount 3 .
        707 :recursionCount 6 .
        708 :recursionCount 5 .
        709 :recursionCount 3 .
        710 :recursionCount 3 .
        711 :recursionCount 4 .
        712 :recursionCount 3 .
        713 :recursionCount 5 .
        714 :recursionCount 6 .
        715 :recursionCount 3 .
        716 :recursionCount 5 .
        717 :recursionCount 3 .
        718 :recursionCount 2 .
        719 :recursionCount 7 .
        720 :recursionCount 5 .
        721 :recursionCount 3 .
        722 :recursionCount 4 .
        723 :recursionCount 3 .
        724 :recursionCount 5 .
        725 :recursionCount 6 .
        726 :recursionCount 3 .
        727 :recursionCount 5 .
        728 :recursionCount 7 .
        729 :recursionCount 7 .
        730 :recursionCount 6 .
        731 :recursionCount 5 .
        732 :recursionCount 3 .
        733 :recursionCount 4 .
        734 :recursionCount 3 .
        735 :recursionCount 5 .
        736 :recursionCount 6 .
        737 :recursionCount 3 .
        738 :recursionCount 2 .
        739 :recursionCount 7 .
        740 :recursionCount 3 .
        741 :recursionCount 6 .
        742 :recursionCount 5 .
        743 :recursionCount 3 .
        744 :recursionCount 4 .
        745 :recursionCount 3 .
        746 :recursionCount 5 .
        747 :recursionCount 6 .
        748 :recursionCount 5 .
        749 :recursionCount 3 .
        750 :recursionCount 5 .
        751 :recursionCount 3 .
        752 :recursionCount 6 .
        753 :recursionCount 5 .
        754 :recursionCount 3 .
        755 :recursionCount 4 .
        756 :recursionCount 3 .
        757 :recursionCount 5 .
        758 :recursionCount 6 .
        759 :recursionCount 3 .
        760 :recursionCount 3 .
        761 :recursionCount 5 .
        762 :recursionCount 3 .
        763 :recursionCount 6 .
        764 :recursionCount 5 .
        765 :recursionCount 3 .
        766 :recursionCount 4 .
        767 :recursionCount 3 .
        768 :recursionCount 3 .
        769 :recursionCount 4 .
        770 :recursionCount 6 .
        771 :recursionCount 3 .
        772 :recursionCount 5 .
        773 :recursionCount 3 .
        774 :recursionCount 6 .
        775 :recursionCount 5 .
        776 :recursionCount 3 .
        777 :recursionCount 4 .
        778 :recursionCount 6 .
        779 :recursionCount 4 .
        780 :recursionCount 5 .
        781 :recursionCount 2 .
        782 :recursionCount 7 .
        783 :recursionCount 2 .
        784 :recursionCount 5 .
        785 :recursionCount 6 .
        786 :recursionCount 3 .
        787 :recursionCount 6 .
        788 :recursionCount 3 .
        789 :recursionCount 4 .
        790 :recursionCount 3 .
        791 :recursionCount 7 .
        792 :recursionCount 7 .
        793 :recursionCount 7 .
        794 :recursionCount 3 .
        795 :recursionCount 3 .
        796 :recursionCount 4 .
        797 :recursionCount 4 .
        798 :recursionCount 4 .
        799 :recursionCount 3 .
        800 :recursionCount 6 .
        801 :recursionCount 3 .
        802 :recursionCount 6 .
        803 :recursionCount 5 .
        804 :recursionCount 2 .
        805 :recursionCount 7 .
        806 :recursionCount 2 .
        807 :recursionCount 5 .
        808 :recursionCount 6 .
        809 :recursionCount 3 .
        810 :recursionCount 3 .
        811 :recursionCount 6 .
        812 :recursionCount 3 .
        813 :recursionCount 6 .
        814 :recursionCount 5 .
        815 :recursionCount 2 .
        816 :recursionCount 7 .
        817 :recursionCount 2 .
        818 :recursionCount 5 .
        819 :recursionCount 3 .
        820 :recursionCount 6 .
        821 :recursionCount 3 .
        822 :recursionCount 6 .
        823 :recursionCount 3 .
        824 :recursionCount 6 .
        825 :recursionCount 5 .
        826 :recursionCount 2 .
        827 :recursionCount 7 .
        828 :recursionCount 2 .
        829 :recursionCount 7 .
        830 :recursionCount 5 .
        831 :recursionCount 6 .
        832 :recursionCount 3 .
        833 :recursionCount 6 .
        834 :recursionCount 3 .
        835 :recursionCount 6 .
        836 :recursionCount 5 .
        837 :recursionCount 2 .
        838 :recursionCount 7 .
        839 :recursionCount 7 .
        840 :recursionCount 2 .
        841 :recursionCount 5 .
        842 :recursionCount 6 .
        843 :recursionCount 3 .
        844 :recursionCount 6 .
        845 :recursionCount 3 .
        846 :recursionCount 6 .
        847 :recursionCount 5 .
        848 :recursionCount 2 .
        849 :recursionCount 7 .
        850 :recursionCount 7 .
        851 :recursionCount 2 .
        852 :recursionCount 5 .
        853 :recursionCount 6 .
        854 :recursionCount 3 .
        855 :recursionCount 6 .
        856 :recursionCount 3 .
        857 :recursionCount 6 .
        858 :recursionCount 5 .
        859 :recursionCount 3 .
        860 :recursionCount 2 .
        861 :recursionCount 7 .
        862 :recursionCount 2 .
        863 :recursionCount 5 .
        864 :recursionCount 6 .
        865 :recursionCount 3 .
        866 :recursionCount 6 .
        867 :recursionCount 3 .
        868 :recursionCount 6 .
        869 :recursionCount 3 .
        870 :recursionCount 5 .
        871 :recursionCount 2 .
        872 :recursionCount 7 .
        873 :recursionCount 2 .
        874 :recursionCount 5 .
        875 :recursionCount 6 .
        876 :recursionCount 3 .
        877 :recursionCount 6 .
        878 :recursionCount 3 .
        879 :recursionCount 4 .
        880 :recursionCount 6 .
        881 :recursionCount 5 .
        882 :recursionCount 2 .
        883 :recursionCount 7 .
        884 :recursionCount 2 .
        885 :recursionCount 5 .
        886 :recursionCount 6 .
        887 :recursionCount 3 .
        888 :recursionCount 6 .
        889 :recursionCount 4 .
        890 :recursionCount 3 .
        891 :recursionCount 3 .
        892 :recursionCount 7 .
        893 :recursionCount 7 .
        894 :recursionCount 7 .
        895 :recursionCount 3 .
        896 :recursionCount 3 .
        897 :recursionCount 4 .
        898 :recursionCount 4 .
        899 :recursionCount 4 .
        900 :recursionCount 4 .
        901 :recursionCount 4 .
        902 :recursionCount 3 .
        903 :recursionCount 3 .
        904 :recursionCount 7 .
        905 :recursionCount 7 .
        906 :recursionCount 7 .
        907 :recursionCount 3 .
        908 :recursionCount 3 .
        909 :recursionCount 4 .
        910 :recursionCount 4 .
        911 :recursionCount 4 .
        912 :recursionCount 4 .
        913 :recursionCount 3 .
        914 :recursionCount 3 .
        915 :recursionCount 7 .
        916 :recursionCount 7 .
        917 :recursionCount 7 .
        918 :recursionCount 3 .
        919 :recursionCount 3 .
        920 :recursionCount 3 .
        921 :recursionCount 4 .
        922 :recursionCount 4 .
        923 :recursionCount 4 .
        924 :recursionCount 3 .
        925 :recursionCount 3 .
        926 :recursionCount 7 .
        927 :recursionCount 7 .
        928 :recursionCount 7 .
        929 :recursionCount 3 .
        930 :recursionCount 3 .
        931 :recursionCount 3 .
        932 :recursionCount 4 .
        933 :recursionCount 4 .
        934 :recursionCount 4 .
        935 :recursionCount 3 .
        936 :recursionCount 3 .
        937 :recursionCount 7 .
        938 :recursionCount 7 .
        939 :recursionCount 7 .
        940 :recursionCount 7 .
        941 :recursionCount 3 .
        942 :recursionCount 3 .
        943 :recursionCount 4 .
        944 :recursionCount 4 .
        945 :recursionCount 4 .
        946 :recursionCount 3 .
        947 :recursionCount 3 .
        948 :recursionCount 7 .
        949 :recursionCount 7 .
        950 :recursionCount 7 .
        951 :recursionCount 7 .
        952 :recursionCount 3 .
        953 :recursionCount 3 .
        954 :recursionCount 4 .
        955 :recursionCount 4 .
        956 :recursionCount 4 .
        957 :recursionCount 3 .
        958 :recursionCount 3 .
        959 :recursionCount 7 .
        960 :recursionCount 7 .
        961 :recursionCount 7 .
        962 :recursionCount 7 .
        963 :recursionCount 3 .
        964 :recursionCount 3 .
        965 :recursionCount 4 .
        966 :recursionCount 4 .
        967 :recursionCount 4 .
        968 :recursionCount 3 .
        969 :recursionCount 3 .
        970 :recursionCount 3 .
        971 :recursionCount 7 .
        972 :recursionCount 7 .
        973 :recursionCount 7 .
        974 :recursionCount 3 .
        975 :recursionCount 3 .
        976 :recursionCount 4 .
        977 :recursionCount 4 .
        978 :recursionCount 4 .
        979 :recursionCount 3 .
        980 :recursionCount 3 .
        981 :recursionCount 3 .
        982 :recursionCount 7 .
        983 :recursionCount 7 .
        984 :recursionCount 7 .
        985 :recursionCount 3 .
        986 :recursionCount 3 .
        987 :recursionCount 4 .
        988 :recursionCount 4 .
        989 :recursionCount 4 .
        990 :recursionCount 4 .
        991 :recursionCount 3 .
        992 :recursionCount 3 .
        993 :recursionCount 7 .
        994 :recursionCount 7 .
        995 :recursionCount 7 .
        996 :recursionCount 3 .
        997 :recursionCount 3 .
        998 :recursionCount 4 .
        999 :recursionCount 4 .
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        1 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 1}]
        skolem:lemma1000
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma2 a r:Inference;
    r:gives {
        2 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 2}]
        skolem:lemma1002
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma3 a r:Inference;
    r:gives {
        3 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 3}]
        skolem:lemma1003
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma4 a r:Inference;
    r:gives {
        4 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 4}]
        skolem:lemma1004
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma5 a r:Inference;
    r:gives {
        5 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 5}]
        skolem:lemma1005
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma6 a r:Inference;
    r:gives {
        6 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 6}]
        skolem:lemma1006
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma7 a r:Inference;
    r:gives {
        7 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 7}]
        skolem:lemma1007
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma8 a r:Inference;
    r:gives {
        8 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 8}]
        skolem:lemma1008
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma9 a r:Inference;
    r:gives {
        9 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 9}]
        skolem:lemma1009
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma10 a r:Inference;
    r:gives {
        10 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 10}]
        skolem:lemma1010
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma11 a r:Inference;
    r:gives {
        11 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 11}]
        skolem:lemma1011
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma12 a r:Inference;
    r:gives {
        12 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 12}]
        skolem:lemma1012
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma13 a r:Inference;
    r:gives {
        13 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 13}]
        skolem:lemma1013
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma14 a r:Inference;
    r:gives {
        14 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 14}]
        skolem:lemma1014
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma15 a r:Inference;
    r:gives {
        15 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 15}]
        skolem:lemma1015
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma16 a r:Inference;
    r:gives {
        16 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 16}]
        skolem:lemma1016
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma17 a r:Inference;
    r:gives {
        17 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 17}]
        skolem:lemma1017
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma18 a r:Inference;
    r:gives {
        18 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 18}]
        skolem:lemma1018
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma19 a r:Inference;
    r:gives {
        19 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 19}]
        skolem:lemma1019
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma20 a r:Inference;
    r:gives {
        20 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 20}]
        skolem:lemma1020
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma21 a r:Inference;
    r:gives {
        21 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 21}]
        skolem:lemma1021
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma22 a r:Inference;
    r:gives {
        22 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 22}]
        skolem:lemma1022
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma23 a r:Inference;
    r:gives {
        23 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 23}]
        skolem:lemma1023
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma24 a r:Inference;
    r:gives {
        24 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 24}]
        skolem:lemma1024
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma25 a r:Inference;
    r:gives {
        25 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 25}]
        skolem:lemma1025
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma26 a r:Inference;
    r:gives {
        26 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 26}]
        skolem:lemma1026
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma27 a r:Inference;
    r:gives {
        27 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 27}]
        skolem:lemma1027
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma28 a r:Inference;
    r:gives {
        28 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 28}]
        skolem:lemma1028
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma29 a r:Inference;
    r:gives {
        29 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 29}]
        skolem:lemma1029
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma30 a r:Inference;
    r:gives {
        30 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 30}]
        skolem:lemma1030
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma31 a r:Inference;
    r:gives {
        31 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 31}]
        skolem:lemma1031
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma32 a r:Inference;
    r:gives {
        32 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 32}]
        skolem:lemma1032
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma33 a r:Inference;
    r:gives {
        33 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 33}]
        skolem:lemma1033
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma34 a r:Inference;
    r:gives {
        34 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 34}]
        skolem:lemma1034
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma35 a r:Inference;
    r:gives {
        35 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 35}]
        skolem:lemma1035
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma36 a r:Inference;
    r:gives {
        36 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 36}]
        skolem:lemma1036
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma37 a r:Inference;
    r:gives {
        37 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 37}]
        skolem:lemma1037
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma38 a r:Inference;
    r:gives {
        38 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 38}]
        skolem:lemma1038
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma39 a r:Inference;
    r:gives {
        39 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 39}]
        skolem:lemma1039
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma40 a r:Inference;
    r:gives {
        40 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 40}]
        skolem:lemma1040
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma41 a r:Inference;
    r:gives {
        41 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 41}]
        skolem:lemma1041
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma42 a r:Inference;
    r:gives {
        42 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 42}]
        skolem:lemma1042
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma43 a r:Inference;
    r:gives {
        43 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 43}]
        skolem:lemma1043
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma44 a r:Inference;
    r:gives {
        44 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 44}]
        skolem:lemma1044
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma45 a r:Inference;
    r:gives {
        45 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 45}]
        skolem:lemma1045
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma46 a r:Inference;
    r:gives {
        46 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 46}]
        skolem:lemma1046
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma47 a r:Inference;
    r:gives {
        47 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 47}]
        skolem:lemma1047
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma48 a r:Inference;
    r:gives {
        48 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 48}]
        skolem:lemma1048
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma49 a r:Inference;
    r:gives {
        49 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 49}]
        skolem:lemma1049
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma50 a r:Inference;
    r:gives {
        50 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 50}]
        skolem:lemma1050
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma51 a r:Inference;
    r:gives {
        51 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 51}]
        skolem:lemma1051
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma52 a r:Inference;
    r:gives {
        52 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 52}]
        skolem:lemma1052
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma53 a r:Inference;
    r:gives {
        53 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 53}]
        skolem:lemma1053
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma54 a r:Inference;
    r:gives {
        54 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 54}]
        skolem:lemma1054
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma55 a r:Inference;
    r:gives {
        55 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 55}]
        skolem:lemma1055
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma56 a r:Inference;
    r:gives {
        56 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 56}]
        skolem:lemma1056
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma57 a r:Inference;
    r:gives {
        57 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 57}]
        skolem:lemma1057
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma58 a r:Inference;
    r:gives {
        58 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 58}]
        skolem:lemma1058
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma59 a r:Inference;
    r:gives {
        59 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 59}]
        skolem:lemma1059
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma60 a r:Inference;
    r:gives {
        60 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 60}]
        skolem:lemma1060
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma61 a r:Inference;
    r:gives {
        61 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 61}]
        skolem:lemma1061
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma62 a r:Inference;
    r:gives {
        62 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 62}]
        skolem:lemma1062
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma63 a r:Inference;
    r:gives {
        63 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 63}]
        skolem:lemma1063
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma64 a r:Inference;
    r:gives {
        64 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 64}]
        skolem:lemma1064
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma65 a r:Inference;
    r:gives {
        65 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 65}]
        skolem:lemma1065
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma66 a r:Inference;
    r:gives {
        66 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 66}]
        skolem:lemma1066
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma67 a r:Inference;
    r:gives {
        67 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 67}]
        skolem:lemma1067
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma68 a r:Inference;
    r:gives {
        68 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 68}]
        skolem:lemma1068
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma69 a r:Inference;
    r:gives {
        69 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 69}]
        skolem:lemma1069
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma70 a r:Inference;
    r:gives {
        70 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 70}]
        skolem:lemma1070
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma71 a r:Inference;
    r:gives {
        71 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 71}]
        skolem:lemma1071
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma72 a r:Inference;
    r:gives {
        72 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 72}]
        skolem:lemma1072
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma73 a r:Inference;
    r:gives {
        73 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 73}]
        skolem:lemma1073
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma74 a r:Inference;
    r:gives {
        74 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 74}]
        skolem:lemma1074
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma75 a r:Inference;
    r:gives {
        75 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 75}]
        skolem:lemma1075
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma76 a r:Inference;
    r:gives {
        76 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 76}]
        skolem:lemma1076
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma77 a r:Inference;
    r:gives {
        77 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 77}]
        skolem:lemma1077
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma78 a r:Inference;
    r:gives {
        78 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 78}]
        skolem:lemma1078
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma79 a r:Inference;
    r:gives {
        79 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 79}]
        skolem:lemma1079
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma80 a r:Inference;
    r:gives {
        80 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 80}]
        skolem:lemma1080
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma81 a r:Inference;
    r:gives {
        81 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 81}]
        skolem:lemma1081
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma82 a r:Inference;
    r:gives {
        82 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 82}]
        skolem:lemma1082
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma83 a r:Inference;
    r:gives {
        83 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 83}]
        skolem:lemma1083
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma84 a r:Inference;
    r:gives {
        84 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 84}]
        skolem:lemma1084
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma85 a r:Inference;
    r:gives {
        85 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 85}]
        skolem:lemma1085
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma86 a r:Inference;
    r:gives {
        86 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 86}]
        skolem:lemma1086
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma87 a r:Inference;
    r:gives {
        87 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 87}]
        skolem:lemma1087
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma88 a r:Inference;
    r:gives {
        88 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 88}]
        skolem:lemma1088
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma89 a r:Inference;
    r:gives {
        89 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 89}]
        skolem:lemma1089
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma90 a r:Inference;
    r:gives {
        90 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 90}]
        skolem:lemma1090
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma91 a r:Inference;
    r:gives {
        91 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 91}]
        skolem:lemma1091
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma92 a r:Inference;
    r:gives {
        92 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 92}]
        skolem:lemma1092
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma93 a r:Inference;
    r:gives {
        93 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 93}]
        skolem:lemma1093
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma94 a r:Inference;
    r:gives {
        94 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 94}]
        skolem:lemma1094
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma95 a r:Inference;
    r:gives {
        95 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 95}]
        skolem:lemma1095
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma96 a r:Inference;
    r:gives {
        96 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 96}]
        skolem:lemma1096
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma97 a r:Inference;
    r:gives {
        97 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 97}]
        skolem:lemma1097
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma98 a r:Inference;
    r:gives {
        98 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 98}]
        skolem:lemma1098
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma99 a r:Inference;
    r:gives {
        99 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 99}]
        skolem:lemma1099
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma100 a r:Inference;
    r:gives {
        100 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 100}]
        skolem:lemma1100
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma101 a r:Inference;
    r:gives {
        101 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 101}]
        skolem:lemma1101
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 101];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma102 a r:Inference;
    r:gives {
        102 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 102}]
        skolem:lemma1102
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 102];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma103 a r:Inference;
    r:gives {
        103 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 103}]
        skolem:lemma1103
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 103];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma104 a r:Inference;
    r:gives {
        104 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 104}]
        skolem:lemma1104
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 104];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma105 a r:Inference;
    r:gives {
        105 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 105}]
        skolem:lemma1105
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma106 a r:Inference;
    r:gives {
        106 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 106}]
        skolem:lemma1106
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 106];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma107 a r:Inference;
    r:gives {
        107 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 107}]
        skolem:lemma1107
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 107];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma108 a r:Inference;
    r:gives {
        108 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 108}]
        skolem:lemma1108
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 108];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma109 a r:Inference;
    r:gives {
        109 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 109}]
        skolem:lemma1109
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma110 a r:Inference;
    r:gives {
        110 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 110}]
        skolem:lemma1110
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma111 a r:Inference;
    r:gives {
        111 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 111}]
        skolem:lemma1111
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma112 a r:Inference;
    r:gives {
        112 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 112}]
        skolem:lemma1112
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 112];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma113 a r:Inference;
    r:gives {
        113 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 113}]
        skolem:lemma1113
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 113];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma114 a r:Inference;
    r:gives {
        114 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 114}]
        skolem:lemma1114
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma115 a r:Inference;
    r:gives {
        115 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 115}]
        skolem:lemma1115
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma116 a r:Inference;
    r:gives {
        116 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 116}]
        skolem:lemma1116
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma117 a r:Inference;
    r:gives {
        117 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 117}]
        skolem:lemma1117
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma118 a r:Inference;
    r:gives {
        118 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 118}]
        skolem:lemma1118
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 118];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma119 a r:Inference;
    r:gives {
        119 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 119}]
        skolem:lemma1119
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 119];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma120 a r:Inference;
    r:gives {
        120 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 120}]
        skolem:lemma1120
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 120];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma121 a r:Inference;
    r:gives {
        121 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 121}]
        skolem:lemma1121
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 121];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma122 a r:Inference;
    r:gives {
        122 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 122}]
        skolem:lemma1122
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 122];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma123 a r:Inference;
    r:gives {
        123 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 123}]
        skolem:lemma1123
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma124 a r:Inference;
    r:gives {
        124 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 124}]
        skolem:lemma1124
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma125 a r:Inference;
    r:gives {
        125 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 125}]
        skolem:lemma1125
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma126 a r:Inference;
    r:gives {
        126 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 126}]
        skolem:lemma1126
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma127 a r:Inference;
    r:gives {
        127 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 127}]
        skolem:lemma1127
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma128 a r:Inference;
    r:gives {
        128 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 128}]
        skolem:lemma1128
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma129 a r:Inference;
    r:gives {
        129 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 129}]
        skolem:lemma1129
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma130 a r:Inference;
    r:gives {
        130 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 130}]
        skolem:lemma1130
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 130];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma131 a r:Inference;
    r:gives {
        131 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 131}]
        skolem:lemma1131
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 131];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma132 a r:Inference;
    r:gives {
        132 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 132}]
        skolem:lemma1132
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 132];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma133 a r:Inference;
    r:gives {
        133 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 133}]
        skolem:lemma1133
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 133];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma134 a r:Inference;
    r:gives {
        134 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 134}]
        skolem:lemma1134
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma135 a r:Inference;
    r:gives {
        135 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 135}]
        skolem:lemma1135
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma136 a r:Inference;
    r:gives {
        136 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 136}]
        skolem:lemma1136
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma137 a r:Inference;
    r:gives {
        137 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 137}]
        skolem:lemma1137
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma138 a r:Inference;
    r:gives {
        138 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 138}]
        skolem:lemma1138
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma139 a r:Inference;
    r:gives {
        139 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 139}]
        skolem:lemma1139
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma140 a r:Inference;
    r:gives {
        140 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 140}]
        skolem:lemma1140
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 140];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma141 a r:Inference;
    r:gives {
        141 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 141}]
        skolem:lemma1141
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 141];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma142 a r:Inference;
    r:gives {
        142 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 142}]
        skolem:lemma1142
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 142];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma143 a r:Inference;
    r:gives {
        143 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 143}]
        skolem:lemma1143
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 143];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma144 a r:Inference;
    r:gives {
        144 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 144}]
        skolem:lemma1144
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 144];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma145 a r:Inference;
    r:gives {
        145 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 145}]
        skolem:lemma1145
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma146 a r:Inference;
    r:gives {
        146 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 146}]
        skolem:lemma1146
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma147 a r:Inference;
    r:gives {
        147 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 147}]
        skolem:lemma1147
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma148 a r:Inference;
    r:gives {
        148 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 148}]
        skolem:lemma1148
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma149 a r:Inference;
    r:gives {
        149 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 149}]
        skolem:lemma1149
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma150 a r:Inference;
    r:gives {
        150 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 150}]
        skolem:lemma1150
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 150];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma151 a r:Inference;
    r:gives {
        151 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 151}]
        skolem:lemma1151
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 151];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma152 a r:Inference;
    r:gives {
        152 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 152}]
        skolem:lemma1152
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 152];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma153 a r:Inference;
    r:gives {
        153 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 153}]
        skolem:lemma1153
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 153];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma154 a r:Inference;
    r:gives {
        154 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 154}]
        skolem:lemma1154
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 154];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma155 a r:Inference;
    r:gives {
        155 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 155}]
        skolem:lemma1155
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 155];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma156 a r:Inference;
    r:gives {
        156 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 156}]
        skolem:lemma1156
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma157 a r:Inference;
    r:gives {
        157 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 157}]
        skolem:lemma1157
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma158 a r:Inference;
    r:gives {
        158 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 158}]
        skolem:lemma1158
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma159 a r:Inference;
    r:gives {
        159 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 159}]
        skolem:lemma1159
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma160 a r:Inference;
    r:gives {
        160 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 160}]
        skolem:lemma1160
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 160];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma161 a r:Inference;
    r:gives {
        161 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 161}]
        skolem:lemma1161
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 161];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma162 a r:Inference;
    r:gives {
        162 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 162}]
        skolem:lemma1162
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 162];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma163 a r:Inference;
    r:gives {
        163 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 163}]
        skolem:lemma1163
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 163];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma164 a r:Inference;
    r:gives {
        164 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 164}]
        skolem:lemma1164
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 164];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma165 a r:Inference;
    r:gives {
        165 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 165}]
        skolem:lemma1165
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 165];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma166 a r:Inference;
    r:gives {
        166 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 166}]
        skolem:lemma1166
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 166];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma167 a r:Inference;
    r:gives {
        167 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 167}]
        skolem:lemma1167
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma168 a r:Inference;
    r:gives {
        168 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 168}]
        skolem:lemma1168
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma169 a r:Inference;
    r:gives {
        169 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 169}]
        skolem:lemma1169
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma170 a r:Inference;
    r:gives {
        170 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 170}]
        skolem:lemma1170
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 170];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma171 a r:Inference;
    r:gives {
        171 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 171}]
        skolem:lemma1171
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma172 a r:Inference;
    r:gives {
        172 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 172}]
        skolem:lemma1172
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma173 a r:Inference;
    r:gives {
        173 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 173}]
        skolem:lemma1173
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma174 a r:Inference;
    r:gives {
        174 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 174}]
        skolem:lemma1174
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma175 a r:Inference;
    r:gives {
        175 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 175}]
        skolem:lemma1175
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma176 a r:Inference;
    r:gives {
        176 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 176}]
        skolem:lemma1176
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma177 a r:Inference;
    r:gives {
        177 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 177}]
        skolem:lemma1177
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma178 a r:Inference;
    r:gives {
        178 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 178}]
        skolem:lemma1178
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma179 a r:Inference;
    r:gives {
        179 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 179}]
        skolem:lemma1179
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma180 a r:Inference;
    r:gives {
        180 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 180}]
        skolem:lemma1180
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 180];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma181 a r:Inference;
    r:gives {
        181 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 181}]
        skolem:lemma1181
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 181];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma182 a r:Inference;
    r:gives {
        182 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 182}]
        skolem:lemma1182
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 182];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma183 a r:Inference;
    r:gives {
        183 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 183}]
        skolem:lemma1183
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 183];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma184 a r:Inference;
    r:gives {
        184 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 184}]
        skolem:lemma1184
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 184];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma185 a r:Inference;
    r:gives {
        185 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 185}]
        skolem:lemma1185
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 185];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma186 a r:Inference;
    r:gives {
        186 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 186}]
        skolem:lemma1186
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 186];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma187 a r:Inference;
    r:gives {
        187 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 187}]
        skolem:lemma1187
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 187];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma188 a r:Inference;
    r:gives {
        188 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 188}]
        skolem:lemma1188
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 188];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma189 a r:Inference;
    r:gives {
        189 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 189}]
        skolem:lemma1189
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma190 a r:Inference;
    r:gives {
        190 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 190}]
        skolem:lemma1190
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 190];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma191 a r:Inference;
    r:gives {
        191 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 191}]
        skolem:lemma1191
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 191];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma192 a r:Inference;
    r:gives {
        192 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 192}]
        skolem:lemma1192
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 192];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma193 a r:Inference;
    r:gives {
        193 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 193}]
        skolem:lemma1193
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 193];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma194 a r:Inference;
    r:gives {
        194 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 194}]
        skolem:lemma1194
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 194];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma195 a r:Inference;
    r:gives {
        195 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 195}]
        skolem:lemma1195
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 195];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma196 a r:Inference;
    r:gives {
        196 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 196}]
        skolem:lemma1196
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 196];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma197 a r:Inference;
    r:gives {
        197 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 197}]
        skolem:lemma1197
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 197];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma198 a r:Inference;
    r:gives {
        198 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 198}]
        skolem:lemma1198
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 198];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma199 a r:Inference;
    r:gives {
        199 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 199}]
        skolem:lemma1199
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 199];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma200 a r:Inference;
    r:gives {
        200 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 200}]
        skolem:lemma1200
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma201 a r:Inference;
    r:gives {
        201 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 201}]
        skolem:lemma1201
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 201];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma202 a r:Inference;
    r:gives {
        202 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 202}]
        skolem:lemma1202
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 202];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma203 a r:Inference;
    r:gives {
        203 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 203}]
        skolem:lemma1203
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 203];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma204 a r:Inference;
    r:gives {
        204 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 204}]
        skolem:lemma1204
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 204];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma205 a r:Inference;
    r:gives {
        205 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 205}]
        skolem:lemma1205
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 205];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma206 a r:Inference;
    r:gives {
        206 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 206}]
        skolem:lemma1206
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 206];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma207 a r:Inference;
    r:gives {
        207 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 207}]
        skolem:lemma1207
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 207];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma208 a r:Inference;
    r:gives {
        208 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 208}]
        skolem:lemma1208
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 208];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma209 a r:Inference;
    r:gives {
        209 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 209}]
        skolem:lemma1209
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 209];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma210 a r:Inference;
    r:gives {
        210 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 210}]
        skolem:lemma1210
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma211 a r:Inference;
    r:gives {
        211 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 211}]
        skolem:lemma1211
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 211];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma212 a r:Inference;
    r:gives {
        212 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 212}]
        skolem:lemma1212
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 212];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma213 a r:Inference;
    r:gives {
        213 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 213}]
        skolem:lemma1213
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 213];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma214 a r:Inference;
    r:gives {
        214 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 214}]
        skolem:lemma1214
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 214];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma215 a r:Inference;
    r:gives {
        215 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 215}]
        skolem:lemma1215
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 215];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma216 a r:Inference;
    r:gives {
        216 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 216}]
        skolem:lemma1216
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 216];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma217 a r:Inference;
    r:gives {
        217 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 217}]
        skolem:lemma1217
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 217];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma218 a r:Inference;
    r:gives {
        218 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 218}]
        skolem:lemma1218
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 218];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma219 a r:Inference;
    r:gives {
        219 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 219}]
        skolem:lemma1219
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 219];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma220 a r:Inference;
    r:gives {
        220 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 220}]
        skolem:lemma1220
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma221 a r:Inference;
    r:gives {
        221 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 221}]
        skolem:lemma1221
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 221];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma222 a r:Inference;
    r:gives {
        222 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 222}]
        skolem:lemma1222
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 222];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma223 a r:Inference;
    r:gives {
        223 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 223}]
        skolem:lemma1223
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 223];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma224 a r:Inference;
    r:gives {
        224 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 224}]
        skolem:lemma1224
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 224];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma225 a r:Inference;
    r:gives {
        225 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 225}]
        skolem:lemma1225
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 225];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma226 a r:Inference;
    r:gives {
        226 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 226}]
        skolem:lemma1226
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 226];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma227 a r:Inference;
    r:gives {
        227 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 227}]
        skolem:lemma1227
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 227];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma228 a r:Inference;
    r:gives {
        228 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 228}]
        skolem:lemma1228
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 228];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma229 a r:Inference;
    r:gives {
        229 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 229}]
        skolem:lemma1229
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 229];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma230 a r:Inference;
    r:gives {
        230 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 230}]
        skolem:lemma1230
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 230];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma231 a r:Inference;
    r:gives {
        231 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 231}]
        skolem:lemma1231
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 231];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma232 a r:Inference;
    r:gives {
        232 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 232}]
        skolem:lemma1232
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 232];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma233 a r:Inference;
    r:gives {
        233 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 233}]
        skolem:lemma1233
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 233];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma234 a r:Inference;
    r:gives {
        234 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 234}]
        skolem:lemma1234
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma235 a r:Inference;
    r:gives {
        235 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 235}]
        skolem:lemma1235
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma236 a r:Inference;
    r:gives {
        236 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 236}]
        skolem:lemma1236
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma237 a r:Inference;
    r:gives {
        237 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 237}]
        skolem:lemma1237
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma238 a r:Inference;
    r:gives {
        238 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 238}]
        skolem:lemma1238
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma239 a r:Inference;
    r:gives {
        239 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 239}]
        skolem:lemma1239
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma240 a r:Inference;
    r:gives {
        240 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 240}]
        skolem:lemma1240
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 240];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma241 a r:Inference;
    r:gives {
        241 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 241}]
        skolem:lemma1241
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 241];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma242 a r:Inference;
    r:gives {
        242 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 242}]
        skolem:lemma1242
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 242];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma243 a r:Inference;
    r:gives {
        243 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 243}]
        skolem:lemma1243
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 243];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma244 a r:Inference;
    r:gives {
        244 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 244}]
        skolem:lemma1244
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 244];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma245 a r:Inference;
    r:gives {
        245 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 245}]
        skolem:lemma1245
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma246 a r:Inference;
    r:gives {
        246 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 246}]
        skolem:lemma1246
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma247 a r:Inference;
    r:gives {
        247 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 247}]
        skolem:lemma1247
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma248 a r:Inference;
    r:gives {
        248 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 248}]
        skolem:lemma1248
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma249 a r:Inference;
    r:gives {
        249 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 249}]
        skolem:lemma1249
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma250 a r:Inference;
    r:gives {
        250 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 250}]
        skolem:lemma1250
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 250];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma251 a r:Inference;
    r:gives {
        251 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 251}]
        skolem:lemma1251
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 251];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma252 a r:Inference;
    r:gives {
        252 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 252}]
        skolem:lemma1252
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 252];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma253 a r:Inference;
    r:gives {
        253 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 253}]
        skolem:lemma1253
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 253];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma254 a r:Inference;
    r:gives {
        254 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 254}]
        skolem:lemma1254
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 254];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma255 a r:Inference;
    r:gives {
        255 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 255}]
        skolem:lemma1255
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 255];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma256 a r:Inference;
    r:gives {
        256 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 256}]
        skolem:lemma1256
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma257 a r:Inference;
    r:gives {
        257 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 257}]
        skolem:lemma1257
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma258 a r:Inference;
    r:gives {
        258 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 258}]
        skolem:lemma1258
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma259 a r:Inference;
    r:gives {
        259 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 259}]
        skolem:lemma1259
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma260 a r:Inference;
    r:gives {
        260 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 260}]
        skolem:lemma1260
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 260];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma261 a r:Inference;
    r:gives {
        261 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 261}]
        skolem:lemma1261
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma262 a r:Inference;
    r:gives {
        262 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 262}]
        skolem:lemma1262
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma263 a r:Inference;
    r:gives {
        263 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 263}]
        skolem:lemma1263
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma264 a r:Inference;
    r:gives {
        264 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 264}]
        skolem:lemma1264
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma265 a r:Inference;
    r:gives {
        265 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 265}]
        skolem:lemma1265
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma266 a r:Inference;
    r:gives {
        266 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 266}]
        skolem:lemma1266
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma267 a r:Inference;
    r:gives {
        267 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 267}]
        skolem:lemma1267
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma268 a r:Inference;
    r:gives {
        268 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 268}]
        skolem:lemma1268
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma269 a r:Inference;
    r:gives {
        269 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 269}]
        skolem:lemma1269
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma270 a r:Inference;
    r:gives {
        270 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 270}]
        skolem:lemma1270
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 270];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma271 a r:Inference;
    r:gives {
        271 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 271}]
        skolem:lemma1271
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 271];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma272 a r:Inference;
    r:gives {
        272 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 272}]
        skolem:lemma1272
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 272];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma273 a r:Inference;
    r:gives {
        273 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 273}]
        skolem:lemma1273
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 273];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma274 a r:Inference;
    r:gives {
        274 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 274}]
        skolem:lemma1274
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 274];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma275 a r:Inference;
    r:gives {
        275 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 275}]
        skolem:lemma1275
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 275];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma276 a r:Inference;
    r:gives {
        276 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 276}]
        skolem:lemma1276
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 276];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma277 a r:Inference;
    r:gives {
        277 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 277}]
        skolem:lemma1277
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 277];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma278 a r:Inference;
    r:gives {
        278 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 278}]
        skolem:lemma1278
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma279 a r:Inference;
    r:gives {
        279 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 279}]
        skolem:lemma1279
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma280 a r:Inference;
    r:gives {
        280 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 280}]
        skolem:lemma1280
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 280];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma281 a r:Inference;
    r:gives {
        281 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 281}]
        skolem:lemma1281
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 281];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma282 a r:Inference;
    r:gives {
        282 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 282}]
        skolem:lemma1282
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 282];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma283 a r:Inference;
    r:gives {
        283 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 283}]
        skolem:lemma1283
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 283];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma284 a r:Inference;
    r:gives {
        284 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 284}]
        skolem:lemma1284
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 284];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma285 a r:Inference;
    r:gives {
        285 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 285}]
        skolem:lemma1285
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 285];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma286 a r:Inference;
    r:gives {
        286 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 286}]
        skolem:lemma1286
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 286];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma287 a r:Inference;
    r:gives {
        287 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 287}]
        skolem:lemma1287
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 287];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma288 a r:Inference;
    r:gives {
        288 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 288}]
        skolem:lemma1288
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 288];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma289 a r:Inference;
    r:gives {
        289 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 289}]
        skolem:lemma1289
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma290 a r:Inference;
    r:gives {
        290 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 290}]
        skolem:lemma1290
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 290];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma291 a r:Inference;
    r:gives {
        291 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 291}]
        skolem:lemma1291
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 291];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma292 a r:Inference;
    r:gives {
        292 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 292}]
        skolem:lemma1292
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 292];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma293 a r:Inference;
    r:gives {
        293 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 293}]
        skolem:lemma1293
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 293];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma294 a r:Inference;
    r:gives {
        294 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 294}]
        skolem:lemma1294
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 294];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma295 a r:Inference;
    r:gives {
        295 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 295}]
        skolem:lemma1295
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 295];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma296 a r:Inference;
    r:gives {
        296 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 296}]
        skolem:lemma1296
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 296];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma297 a r:Inference;
    r:gives {
        297 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 297}]
        skolem:lemma1297
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 297];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma298 a r:Inference;
    r:gives {
        298 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 298}]
        skolem:lemma1298
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 298];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma299 a r:Inference;
    r:gives {
        299 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 299}]
        skolem:lemma1299
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 299];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma300 a r:Inference;
    r:gives {
        300 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 300}]
        skolem:lemma1300
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma301 a r:Inference;
    r:gives {
        301 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 301}]
        skolem:lemma1301
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 301];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma302 a r:Inference;
    r:gives {
        302 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 302}]
        skolem:lemma1302
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 302];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma303 a r:Inference;
    r:gives {
        303 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 303}]
        skolem:lemma1303
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 303];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma304 a r:Inference;
    r:gives {
        304 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 304}]
        skolem:lemma1304
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 304];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma305 a r:Inference;
    r:gives {
        305 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 305}]
        skolem:lemma1305
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 305];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma306 a r:Inference;
    r:gives {
        306 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 306}]
        skolem:lemma1306
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 306];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma307 a r:Inference;
    r:gives {
        307 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 307}]
        skolem:lemma1307
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 307];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma308 a r:Inference;
    r:gives {
        308 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 308}]
        skolem:lemma1308
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 308];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma309 a r:Inference;
    r:gives {
        309 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 309}]
        skolem:lemma1309
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 309];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma310 a r:Inference;
    r:gives {
        310 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 310}]
        skolem:lemma1310
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma311 a r:Inference;
    r:gives {
        311 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 311}]
        skolem:lemma1311
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 311];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma312 a r:Inference;
    r:gives {
        312 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 312}]
        skolem:lemma1312
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 312];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma313 a r:Inference;
    r:gives {
        313 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 313}]
        skolem:lemma1313
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 313];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma314 a r:Inference;
    r:gives {
        314 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 314}]
        skolem:lemma1314
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 314];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma315 a r:Inference;
    r:gives {
        315 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 315}]
        skolem:lemma1315
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 315];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma316 a r:Inference;
    r:gives {
        316 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 316}]
        skolem:lemma1316
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 316];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma317 a r:Inference;
    r:gives {
        317 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 317}]
        skolem:lemma1317
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 317];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma318 a r:Inference;
    r:gives {
        318 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 318}]
        skolem:lemma1318
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 318];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma319 a r:Inference;
    r:gives {
        319 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 319}]
        skolem:lemma1319
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 319];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma320 a r:Inference;
    r:gives {
        320 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 320}]
        skolem:lemma1320
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma321 a r:Inference;
    r:gives {
        321 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 321}]
        skolem:lemma1321
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 321];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma322 a r:Inference;
    r:gives {
        322 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 322}]
        skolem:lemma1322
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 322];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma323 a r:Inference;
    r:gives {
        323 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 323}]
        skolem:lemma1323
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 323];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma324 a r:Inference;
    r:gives {
        324 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 324}]
        skolem:lemma1324
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 324];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma325 a r:Inference;
    r:gives {
        325 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 325}]
        skolem:lemma1325
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 325];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma326 a r:Inference;
    r:gives {
        326 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 326}]
        skolem:lemma1326
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 326];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma327 a r:Inference;
    r:gives {
        327 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 327}]
        skolem:lemma1327
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 327];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma328 a r:Inference;
    r:gives {
        328 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 328}]
        skolem:lemma1328
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 328];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma329 a r:Inference;
    r:gives {
        329 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 329}]
        skolem:lemma1329
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 329];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma330 a r:Inference;
    r:gives {
        330 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 330}]
        skolem:lemma1330
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma331 a r:Inference;
    r:gives {
        331 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 331}]
        skolem:lemma1331
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 331];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma332 a r:Inference;
    r:gives {
        332 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 332}]
        skolem:lemma1332
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 332];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma333 a r:Inference;
    r:gives {
        333 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 333}]
        skolem:lemma1333
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 333];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma334 a r:Inference;
    r:gives {
        334 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 334}]
        skolem:lemma1334
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 334];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma335 a r:Inference;
    r:gives {
        335 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 335}]
        skolem:lemma1335
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 335];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma336 a r:Inference;
    r:gives {
        336 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 336}]
        skolem:lemma1336
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 336];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma337 a r:Inference;
    r:gives {
        337 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 337}]
        skolem:lemma1337
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 337];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma338 a r:Inference;
    r:gives {
        338 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 338}]
        skolem:lemma1338
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 338];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma339 a r:Inference;
    r:gives {
        339 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 339}]
        skolem:lemma1339
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 339];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma340 a r:Inference;
    r:gives {
        340 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 340}]
        skolem:lemma1340
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 340];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma341 a r:Inference;
    r:gives {
        341 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 341}]
        skolem:lemma1341
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 341];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma342 a r:Inference;
    r:gives {
        342 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 342}]
        skolem:lemma1342
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 342];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma343 a r:Inference;
    r:gives {
        343 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 343}]
        skolem:lemma1343
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 343];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma344 a r:Inference;
    r:gives {
        344 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 344}]
        skolem:lemma1344
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 344];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma345 a r:Inference;
    r:gives {
        345 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 345}]
        skolem:lemma1345
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma346 a r:Inference;
    r:gives {
        346 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 346}]
        skolem:lemma1346
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma347 a r:Inference;
    r:gives {
        347 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 347}]
        skolem:lemma1347
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma348 a r:Inference;
    r:gives {
        348 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 348}]
        skolem:lemma1348
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma349 a r:Inference;
    r:gives {
        349 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 349}]
        skolem:lemma1349
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma350 a r:Inference;
    r:gives {
        350 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 350}]
        skolem:lemma1350
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 350];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma351 a r:Inference;
    r:gives {
        351 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 351}]
        skolem:lemma1351
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma352 a r:Inference;
    r:gives {
        352 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 352}]
        skolem:lemma1352
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma353 a r:Inference;
    r:gives {
        353 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 353}]
        skolem:lemma1353
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma354 a r:Inference;
    r:gives {
        354 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 354}]
        skolem:lemma1354
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma355 a r:Inference;
    r:gives {
        355 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 355}]
        skolem:lemma1355
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma356 a r:Inference;
    r:gives {
        356 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 356}]
        skolem:lemma1356
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma357 a r:Inference;
    r:gives {
        357 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 357}]
        skolem:lemma1357
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma358 a r:Inference;
    r:gives {
        358 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 358}]
        skolem:lemma1358
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma359 a r:Inference;
    r:gives {
        359 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 359}]
        skolem:lemma1359
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma360 a r:Inference;
    r:gives {
        360 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 360}]
        skolem:lemma1360
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 360];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma361 a r:Inference;
    r:gives {
        361 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 361}]
        skolem:lemma1361
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 361];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma362 a r:Inference;
    r:gives {
        362 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 362}]
        skolem:lemma1362
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 362];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma363 a r:Inference;
    r:gives {
        363 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 363}]
        skolem:lemma1363
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 363];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma364 a r:Inference;
    r:gives {
        364 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 364}]
        skolem:lemma1364
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 364];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma365 a r:Inference;
    r:gives {
        365 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 365}]
        skolem:lemma1365
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 365];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma366 a r:Inference;
    r:gives {
        366 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 366}]
        skolem:lemma1366
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 366];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma367 a r:Inference;
    r:gives {
        367 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 367}]
        skolem:lemma1367
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma368 a r:Inference;
    r:gives {
        368 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 368}]
        skolem:lemma1368
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma369 a r:Inference;
    r:gives {
        369 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 369}]
        skolem:lemma1369
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma370 a r:Inference;
    r:gives {
        370 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 370}]
        skolem:lemma1370
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 370];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma371 a r:Inference;
    r:gives {
        371 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 371}]
        skolem:lemma1371
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 371];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma372 a r:Inference;
    r:gives {
        372 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 372}]
        skolem:lemma1372
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 372];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma373 a r:Inference;
    r:gives {
        373 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 373}]
        skolem:lemma1373
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 373];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma374 a r:Inference;
    r:gives {
        374 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 374}]
        skolem:lemma1374
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 374];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma375 a r:Inference;
    r:gives {
        375 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 375}]
        skolem:lemma1375
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 375];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma376 a r:Inference;
    r:gives {
        376 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 376}]
        skolem:lemma1376
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 376];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma377 a r:Inference;
    r:gives {
        377 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 377}]
        skolem:lemma1377
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 377];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma378 a r:Inference;
    r:gives {
        378 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 378}]
        skolem:lemma1378
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma379 a r:Inference;
    r:gives {
        379 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 379}]
        skolem:lemma1379
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma380 a r:Inference;
    r:gives {
        380 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 380}]
        skolem:lemma1380
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 380];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma381 a r:Inference;
    r:gives {
        381 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 381}]
        skolem:lemma1381
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 381];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma382 a r:Inference;
    r:gives {
        382 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 382}]
        skolem:lemma1382
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 382];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma383 a r:Inference;
    r:gives {
        383 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 383}]
        skolem:lemma1383
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 383];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma384 a r:Inference;
    r:gives {
        384 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 384}]
        skolem:lemma1384
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 384];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma385 a r:Inference;
    r:gives {
        385 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 385}]
        skolem:lemma1385
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 385];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma386 a r:Inference;
    r:gives {
        386 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 386}]
        skolem:lemma1386
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 386];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma387 a r:Inference;
    r:gives {
        387 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 387}]
        skolem:lemma1387
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 387];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma388 a r:Inference;
    r:gives {
        388 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 388}]
        skolem:lemma1388
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 388];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma389 a r:Inference;
    r:gives {
        389 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 389}]
        skolem:lemma1389
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma390 a r:Inference;
    r:gives {
        390 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 390}]
        skolem:lemma1390
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 390];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma391 a r:Inference;
    r:gives {
        391 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 391}]
        skolem:lemma1391
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 391];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma392 a r:Inference;
    r:gives {
        392 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 392}]
        skolem:lemma1392
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 392];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma393 a r:Inference;
    r:gives {
        393 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 393}]
        skolem:lemma1393
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 393];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma394 a r:Inference;
    r:gives {
        394 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 394}]
        skolem:lemma1394
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 394];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma395 a r:Inference;
    r:gives {
        395 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 395}]
        skolem:lemma1395
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 395];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma396 a r:Inference;
    r:gives {
        396 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 396}]
        skolem:lemma1396
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 396];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma397 a r:Inference;
    r:gives {
        397 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 397}]
        skolem:lemma1397
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 397];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma398 a r:Inference;
    r:gives {
        398 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 398}]
        skolem:lemma1398
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 398];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma399 a r:Inference;
    r:gives {
        399 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 399}]
        skolem:lemma1399
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 399];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma400 a r:Inference;
    r:gives {
        400 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 400}]
        skolem:lemma1400
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma401 a r:Inference;
    r:gives {
        401 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 401}]
        skolem:lemma1401
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 401];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma402 a r:Inference;
    r:gives {
        402 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 402}]
        skolem:lemma1402
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 402];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma403 a r:Inference;
    r:gives {
        403 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 403}]
        skolem:lemma1403
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 403];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma404 a r:Inference;
    r:gives {
        404 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 404}]
        skolem:lemma1404
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 404];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma405 a r:Inference;
    r:gives {
        405 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 405}]
        skolem:lemma1405
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 405];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma406 a r:Inference;
    r:gives {
        406 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 406}]
        skolem:lemma1406
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 406];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma407 a r:Inference;
    r:gives {
        407 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 407}]
        skolem:lemma1407
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 407];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma408 a r:Inference;
    r:gives {
        408 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 408}]
        skolem:lemma1408
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 408];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma409 a r:Inference;
    r:gives {
        409 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 409}]
        skolem:lemma1409
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 409];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma410 a r:Inference;
    r:gives {
        410 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 410}]
        skolem:lemma1410
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma411 a r:Inference;
    r:gives {
        411 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 411}]
        skolem:lemma1411
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 411];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma412 a r:Inference;
    r:gives {
        412 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 412}]
        skolem:lemma1412
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 412];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma413 a r:Inference;
    r:gives {
        413 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 413}]
        skolem:lemma1413
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 413];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma414 a r:Inference;
    r:gives {
        414 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 414}]
        skolem:lemma1414
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 414];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma415 a r:Inference;
    r:gives {
        415 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 415}]
        skolem:lemma1415
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 415];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma416 a r:Inference;
    r:gives {
        416 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 416}]
        skolem:lemma1416
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 416];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma417 a r:Inference;
    r:gives {
        417 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 417}]
        skolem:lemma1417
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 417];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma418 a r:Inference;
    r:gives {
        418 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 418}]
        skolem:lemma1418
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 418];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma419 a r:Inference;
    r:gives {
        419 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 419}]
        skolem:lemma1419
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 419];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma420 a r:Inference;
    r:gives {
        420 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 420}]
        skolem:lemma1420
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma421 a r:Inference;
    r:gives {
        421 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 421}]
        skolem:lemma1421
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 421];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma422 a r:Inference;
    r:gives {
        422 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 422}]
        skolem:lemma1422
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 422];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma423 a r:Inference;
    r:gives {
        423 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 423}]
        skolem:lemma1423
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 423];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma424 a r:Inference;
    r:gives {
        424 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 424}]
        skolem:lemma1424
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 424];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma425 a r:Inference;
    r:gives {
        425 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 425}]
        skolem:lemma1425
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 425];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma426 a r:Inference;
    r:gives {
        426 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 426}]
        skolem:lemma1426
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 426];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma427 a r:Inference;
    r:gives {
        427 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 427}]
        skolem:lemma1427
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 427];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma428 a r:Inference;
    r:gives {
        428 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 428}]
        skolem:lemma1428
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 428];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma429 a r:Inference;
    r:gives {
        429 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 429}]
        skolem:lemma1429
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 429];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma430 a r:Inference;
    r:gives {
        430 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 430}]
        skolem:lemma1430
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma431 a r:Inference;
    r:gives {
        431 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 431}]
        skolem:lemma1431
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 431];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma432 a r:Inference;
    r:gives {
        432 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 432}]
        skolem:lemma1432
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 432];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma433 a r:Inference;
    r:gives {
        433 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 433}]
        skolem:lemma1433
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 433];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma434 a r:Inference;
    r:gives {
        434 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 434}]
        skolem:lemma1434
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 434];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma435 a r:Inference;
    r:gives {
        435 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 435}]
        skolem:lemma1435
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 435];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma436 a r:Inference;
    r:gives {
        436 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 436}]
        skolem:lemma1436
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 436];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma437 a r:Inference;
    r:gives {
        437 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 437}]
        skolem:lemma1437
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 437];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma438 a r:Inference;
    r:gives {
        438 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 438}]
        skolem:lemma1438
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 438];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma439 a r:Inference;
    r:gives {
        439 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 439}]
        skolem:lemma1439
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 439];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma440 a r:Inference;
    r:gives {
        440 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 440}]
        skolem:lemma1440
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma441 a r:Inference;
    r:gives {
        441 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 441}]
        skolem:lemma1441
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma442 a r:Inference;
    r:gives {
        442 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 442}]
        skolem:lemma1442
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma443 a r:Inference;
    r:gives {
        443 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 443}]
        skolem:lemma1443
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma444 a r:Inference;
    r:gives {
        444 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 444}]
        skolem:lemma1444
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma445 a r:Inference;
    r:gives {
        445 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 445}]
        skolem:lemma1445
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma446 a r:Inference;
    r:gives {
        446 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 446}]
        skolem:lemma1446
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 446];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma447 a r:Inference;
    r:gives {
        447 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 447}]
        skolem:lemma1447
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 447];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma448 a r:Inference;
    r:gives {
        448 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 448}]
        skolem:lemma1448
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 448];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma449 a r:Inference;
    r:gives {
        449 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 449}]
        skolem:lemma1449
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 449];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma450 a r:Inference;
    r:gives {
        450 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 450}]
        skolem:lemma1450
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 450];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma451 a r:Inference;
    r:gives {
        451 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 451}]
        skolem:lemma1451
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 451];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma452 a r:Inference;
    r:gives {
        452 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 452}]
        skolem:lemma1452
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 452];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma453 a r:Inference;
    r:gives {
        453 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 453}]
        skolem:lemma1453
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 453];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma454 a r:Inference;
    r:gives {
        454 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 454}]
        skolem:lemma1454
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 454];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma455 a r:Inference;
    r:gives {
        455 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 455}]
        skolem:lemma1455
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 455];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma456 a r:Inference;
    r:gives {
        456 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 456}]
        skolem:lemma1456
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma457 a r:Inference;
    r:gives {
        457 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 457}]
        skolem:lemma1457
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma458 a r:Inference;
    r:gives {
        458 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 458}]
        skolem:lemma1458
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma459 a r:Inference;
    r:gives {
        459 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 459}]
        skolem:lemma1459
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma460 a r:Inference;
    r:gives {
        460 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 460}]
        skolem:lemma1460
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 460];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma461 a r:Inference;
    r:gives {
        461 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 461}]
        skolem:lemma1461
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 461];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma462 a r:Inference;
    r:gives {
        462 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 462}]
        skolem:lemma1462
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 462];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma463 a r:Inference;
    r:gives {
        463 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 463}]
        skolem:lemma1463
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 463];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma464 a r:Inference;
    r:gives {
        464 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 464}]
        skolem:lemma1464
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 464];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma465 a r:Inference;
    r:gives {
        465 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 465}]
        skolem:lemma1465
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 465];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma466 a r:Inference;
    r:gives {
        466 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 466}]
        skolem:lemma1466
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 466];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma467 a r:Inference;
    r:gives {
        467 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 467}]
        skolem:lemma1467
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma468 a r:Inference;
    r:gives {
        468 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 468}]
        skolem:lemma1468
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma469 a r:Inference;
    r:gives {
        469 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 469}]
        skolem:lemma1469
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma470 a r:Inference;
    r:gives {
        470 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 470}]
        skolem:lemma1470
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 470];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma471 a r:Inference;
    r:gives {
        471 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 471}]
        skolem:lemma1471
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 471];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma472 a r:Inference;
    r:gives {
        472 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 472}]
        skolem:lemma1472
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 472];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma473 a r:Inference;
    r:gives {
        473 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 473}]
        skolem:lemma1473
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 473];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma474 a r:Inference;
    r:gives {
        474 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 474}]
        skolem:lemma1474
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 474];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma475 a r:Inference;
    r:gives {
        475 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 475}]
        skolem:lemma1475
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 475];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma476 a r:Inference;
    r:gives {
        476 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 476}]
        skolem:lemma1476
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 476];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma477 a r:Inference;
    r:gives {
        477 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 477}]
        skolem:lemma1477
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 477];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma478 a r:Inference;
    r:gives {
        478 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 478}]
        skolem:lemma1478
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma479 a r:Inference;
    r:gives {
        479 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 479}]
        skolem:lemma1479
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma480 a r:Inference;
    r:gives {
        480 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 480}]
        skolem:lemma1480
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 480];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma481 a r:Inference;
    r:gives {
        481 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 481}]
        skolem:lemma1481
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 481];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma482 a r:Inference;
    r:gives {
        482 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 482}]
        skolem:lemma1482
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 482];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma483 a r:Inference;
    r:gives {
        483 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 483}]
        skolem:lemma1483
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 483];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma484 a r:Inference;
    r:gives {
        484 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 484}]
        skolem:lemma1484
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 484];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma485 a r:Inference;
    r:gives {
        485 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 485}]
        skolem:lemma1485
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 485];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma486 a r:Inference;
    r:gives {
        486 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 486}]
        skolem:lemma1486
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 486];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma487 a r:Inference;
    r:gives {
        487 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 487}]
        skolem:lemma1487
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 487];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma488 a r:Inference;
    r:gives {
        488 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 488}]
        skolem:lemma1488
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 488];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma489 a r:Inference;
    r:gives {
        489 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 489}]
        skolem:lemma1489
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma490 a r:Inference;
    r:gives {
        490 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 490}]
        skolem:lemma1490
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 490];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma491 a r:Inference;
    r:gives {
        491 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 491}]
        skolem:lemma1491
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 491];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma492 a r:Inference;
    r:gives {
        492 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 492}]
        skolem:lemma1492
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 492];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma493 a r:Inference;
    r:gives {
        493 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 493}]
        skolem:lemma1493
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 493];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma494 a r:Inference;
    r:gives {
        494 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 494}]
        skolem:lemma1494
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 494];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma495 a r:Inference;
    r:gives {
        495 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 495}]
        skolem:lemma1495
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 495];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma496 a r:Inference;
    r:gives {
        496 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 496}]
        skolem:lemma1496
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 496];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma497 a r:Inference;
    r:gives {
        497 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 497}]
        skolem:lemma1497
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 497];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma498 a r:Inference;
    r:gives {
        498 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 498}]
        skolem:lemma1498
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 498];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma499 a r:Inference;
    r:gives {
        499 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 499}]
        skolem:lemma1499
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 499];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma500 a r:Inference;
    r:gives {
        500 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 500}]
        skolem:lemma1500
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma501 a r:Inference;
    r:gives {
        501 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 501}]
        skolem:lemma1501
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 501];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma502 a r:Inference;
    r:gives {
        502 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 502}]
        skolem:lemma1502
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 502];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma503 a r:Inference;
    r:gives {
        503 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 503}]
        skolem:lemma1503
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 503];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma504 a r:Inference;
    r:gives {
        504 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 504}]
        skolem:lemma1504
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 504];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma505 a r:Inference;
    r:gives {
        505 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 505}]
        skolem:lemma1505
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 505];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma506 a r:Inference;
    r:gives {
        506 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 506}]
        skolem:lemma1506
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 506];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma507 a r:Inference;
    r:gives {
        507 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 507}]
        skolem:lemma1507
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 507];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma508 a r:Inference;
    r:gives {
        508 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 508}]
        skolem:lemma1508
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 508];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma509 a r:Inference;
    r:gives {
        509 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 509}]
        skolem:lemma1509
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 509];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma510 a r:Inference;
    r:gives {
        510 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 510}]
        skolem:lemma1510
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma511 a r:Inference;
    r:gives {
        511 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 511}]
        skolem:lemma1511
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 511];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma512 a r:Inference;
    r:gives {
        512 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 512}]
        skolem:lemma1512
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 512];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma513 a r:Inference;
    r:gives {
        513 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 513}]
        skolem:lemma1513
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 513];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma514 a r:Inference;
    r:gives {
        514 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 514}]
        skolem:lemma1514
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 514];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma515 a r:Inference;
    r:gives {
        515 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 515}]
        skolem:lemma1515
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 515];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma516 a r:Inference;
    r:gives {
        516 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 516}]
        skolem:lemma1516
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 516];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma517 a r:Inference;
    r:gives {
        517 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 517}]
        skolem:lemma1517
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 517];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma518 a r:Inference;
    r:gives {
        518 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 518}]
        skolem:lemma1518
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 518];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma519 a r:Inference;
    r:gives {
        519 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 519}]
        skolem:lemma1519
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 519];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma520 a r:Inference;
    r:gives {
        520 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 520}]
        skolem:lemma1520
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma521 a r:Inference;
    r:gives {
        521 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 521}]
        skolem:lemma1521
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 521];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma522 a r:Inference;
    r:gives {
        522 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 522}]
        skolem:lemma1522
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 522];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma523 a r:Inference;
    r:gives {
        523 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 523}]
        skolem:lemma1523
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 523];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma524 a r:Inference;
    r:gives {
        524 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 524}]
        skolem:lemma1524
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 524];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma525 a r:Inference;
    r:gives {
        525 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 525}]
        skolem:lemma1525
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 525];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma526 a r:Inference;
    r:gives {
        526 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 526}]
        skolem:lemma1526
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 526];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma527 a r:Inference;
    r:gives {
        527 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 527}]
        skolem:lemma1527
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 527];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma528 a r:Inference;
    r:gives {
        528 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 528}]
        skolem:lemma1528
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 528];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma529 a r:Inference;
    r:gives {
        529 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 529}]
        skolem:lemma1529
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 529];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma530 a r:Inference;
    r:gives {
        530 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 530}]
        skolem:lemma1530
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma531 a r:Inference;
    r:gives {
        531 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 531}]
        skolem:lemma1531
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma532 a r:Inference;
    r:gives {
        532 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 532}]
        skolem:lemma1532
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma533 a r:Inference;
    r:gives {
        533 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 533}]
        skolem:lemma1533
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma534 a r:Inference;
    r:gives {
        534 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 534}]
        skolem:lemma1534
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 534];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma535 a r:Inference;
    r:gives {
        535 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 535}]
        skolem:lemma1535
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 535];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma536 a r:Inference;
    r:gives {
        536 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 536}]
        skolem:lemma1536
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 536];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma537 a r:Inference;
    r:gives {
        537 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 537}]
        skolem:lemma1537
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 537];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma538 a r:Inference;
    r:gives {
        538 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 538}]
        skolem:lemma1538
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 538];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma539 a r:Inference;
    r:gives {
        539 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 539}]
        skolem:lemma1539
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 539];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma540 a r:Inference;
    r:gives {
        540 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 540}]
        skolem:lemma1540
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma541 a r:Inference;
    r:gives {
        541 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 541}]
        skolem:lemma1541
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 541];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma542 a r:Inference;
    r:gives {
        542 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 542}]
        skolem:lemma1542
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 542];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma543 a r:Inference;
    r:gives {
        543 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 543}]
        skolem:lemma1543
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 543];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma544 a r:Inference;
    r:gives {
        544 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 544}]
        skolem:lemma1544
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 544];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma545 a r:Inference;
    r:gives {
        545 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 545}]
        skolem:lemma1545
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 545];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma546 a r:Inference;
    r:gives {
        546 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 546}]
        skolem:lemma1546
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 546];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma547 a r:Inference;
    r:gives {
        547 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 547}]
        skolem:lemma1547
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 547];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma548 a r:Inference;
    r:gives {
        548 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 548}]
        skolem:lemma1548
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 548];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma549 a r:Inference;
    r:gives {
        549 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 549}]
        skolem:lemma1549
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 549];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma550 a r:Inference;
    r:gives {
        550 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 550}]
        skolem:lemma1550
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma551 a r:Inference;
    r:gives {
        551 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 551}]
        skolem:lemma1551
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 551];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma552 a r:Inference;
    r:gives {
        552 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 552}]
        skolem:lemma1552
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 552];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma553 a r:Inference;
    r:gives {
        553 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 553}]
        skolem:lemma1553
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 553];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma554 a r:Inference;
    r:gives {
        554 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 554}]
        skolem:lemma1554
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 554];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma555 a r:Inference;
    r:gives {
        555 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 555}]
        skolem:lemma1555
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 555];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma556 a r:Inference;
    r:gives {
        556 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 556}]
        skolem:lemma1556
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 556];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma557 a r:Inference;
    r:gives {
        557 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 557}]
        skolem:lemma1557
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 557];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma558 a r:Inference;
    r:gives {
        558 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 558}]
        skolem:lemma1558
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 558];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma559 a r:Inference;
    r:gives {
        559 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 559}]
        skolem:lemma1559
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 559];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma560 a r:Inference;
    r:gives {
        560 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 560}]
        skolem:lemma1560
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 560];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma561 a r:Inference;
    r:gives {
        561 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 561}]
        skolem:lemma1561
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 561];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma562 a r:Inference;
    r:gives {
        562 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 562}]
        skolem:lemma1562
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 562];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma563 a r:Inference;
    r:gives {
        563 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 563}]
        skolem:lemma1563
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 563];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma564 a r:Inference;
    r:gives {
        564 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 564}]
        skolem:lemma1564
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 564];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma565 a r:Inference;
    r:gives {
        565 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 565}]
        skolem:lemma1565
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 565];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma566 a r:Inference;
    r:gives {
        566 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 566}]
        skolem:lemma1566
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 566];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma567 a r:Inference;
    r:gives {
        567 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 567}]
        skolem:lemma1567
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma568 a r:Inference;
    r:gives {
        568 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 568}]
        skolem:lemma1568
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma569 a r:Inference;
    r:gives {
        569 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 569}]
        skolem:lemma1569
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma570 a r:Inference;
    r:gives {
        570 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 570}]
        skolem:lemma1570
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 570];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma571 a r:Inference;
    r:gives {
        571 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 571}]
        skolem:lemma1571
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 571];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma572 a r:Inference;
    r:gives {
        572 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 572}]
        skolem:lemma1572
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 572];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma573 a r:Inference;
    r:gives {
        573 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 573}]
        skolem:lemma1573
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 573];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma574 a r:Inference;
    r:gives {
        574 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 574}]
        skolem:lemma1574
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 574];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma575 a r:Inference;
    r:gives {
        575 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 575}]
        skolem:lemma1575
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 575];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma576 a r:Inference;
    r:gives {
        576 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 576}]
        skolem:lemma1576
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 576];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma577 a r:Inference;
    r:gives {
        577 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 577}]
        skolem:lemma1577
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 577];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma578 a r:Inference;
    r:gives {
        578 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 578}]
        skolem:lemma1578
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma579 a r:Inference;
    r:gives {
        579 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 579}]
        skolem:lemma1579
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma580 a r:Inference;
    r:gives {
        580 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 580}]
        skolem:lemma1580
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 580];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma581 a r:Inference;
    r:gives {
        581 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 581}]
        skolem:lemma1581
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 581];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma582 a r:Inference;
    r:gives {
        582 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 582}]
        skolem:lemma1582
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 582];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma583 a r:Inference;
    r:gives {
        583 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 583}]
        skolem:lemma1583
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 583];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma584 a r:Inference;
    r:gives {
        584 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 584}]
        skolem:lemma1584
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 584];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma585 a r:Inference;
    r:gives {
        585 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 585}]
        skolem:lemma1585
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 585];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma586 a r:Inference;
    r:gives {
        586 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 586}]
        skolem:lemma1586
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 586];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma587 a r:Inference;
    r:gives {
        587 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 587}]
        skolem:lemma1587
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 587];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma588 a r:Inference;
    r:gives {
        588 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 588}]
        skolem:lemma1588
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 588];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma589 a r:Inference;
    r:gives {
        589 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 589}]
        skolem:lemma1589
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma590 a r:Inference;
    r:gives {
        590 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 590}]
        skolem:lemma1590
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 590];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma591 a r:Inference;
    r:gives {
        591 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 591}]
        skolem:lemma1591
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 591];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma592 a r:Inference;
    r:gives {
        592 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 592}]
        skolem:lemma1592
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 592];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma593 a r:Inference;
    r:gives {
        593 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 593}]
        skolem:lemma1593
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 593];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma594 a r:Inference;
    r:gives {
        594 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 594}]
        skolem:lemma1594
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 594];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma595 a r:Inference;
    r:gives {
        595 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 595}]
        skolem:lemma1595
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 595];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma596 a r:Inference;
    r:gives {
        596 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 596}]
        skolem:lemma1596
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 596];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma597 a r:Inference;
    r:gives {
        597 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 597}]
        skolem:lemma1597
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 597];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma598 a r:Inference;
    r:gives {
        598 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 598}]
        skolem:lemma1598
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 598];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma599 a r:Inference;
    r:gives {
        599 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 599}]
        skolem:lemma1599
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 599];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma600 a r:Inference;
    r:gives {
        600 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 600}]
        skolem:lemma1600
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma601 a r:Inference;
    r:gives {
        601 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 601}]
        skolem:lemma1601
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 601];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma602 a r:Inference;
    r:gives {
        602 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 602}]
        skolem:lemma1602
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 602];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma603 a r:Inference;
    r:gives {
        603 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 603}]
        skolem:lemma1603
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 603];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma604 a r:Inference;
    r:gives {
        604 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 604}]
        skolem:lemma1604
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 604];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma605 a r:Inference;
    r:gives {
        605 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 605}]
        skolem:lemma1605
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 605];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma606 a r:Inference;
    r:gives {
        606 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 606}]
        skolem:lemma1606
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 606];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma607 a r:Inference;
    r:gives {
        607 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 607}]
        skolem:lemma1607
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 607];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma608 a r:Inference;
    r:gives {
        608 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 608}]
        skolem:lemma1608
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 608];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma609 a r:Inference;
    r:gives {
        609 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 609}]
        skolem:lemma1609
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 609];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma610 a r:Inference;
    r:gives {
        610 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 610}]
        skolem:lemma1610
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma611 a r:Inference;
    r:gives {
        611 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 611}]
        skolem:lemma1611
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 611];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma612 a r:Inference;
    r:gives {
        612 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 612}]
        skolem:lemma1612
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 612];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma613 a r:Inference;
    r:gives {
        613 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 613}]
        skolem:lemma1613
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 613];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma614 a r:Inference;
    r:gives {
        614 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 614}]
        skolem:lemma1614
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 614];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma615 a r:Inference;
    r:gives {
        615 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 615}]
        skolem:lemma1615
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 615];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma616 a r:Inference;
    r:gives {
        616 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 616}]
        skolem:lemma1616
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 616];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma617 a r:Inference;
    r:gives {
        617 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 617}]
        skolem:lemma1617
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 617];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma618 a r:Inference;
    r:gives {
        618 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 618}]
        skolem:lemma1618
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 618];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma619 a r:Inference;
    r:gives {
        619 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 619}]
        skolem:lemma1619
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 619];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma620 a r:Inference;
    r:gives {
        620 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 620}]
        skolem:lemma1620
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma621 a r:Inference;
    r:gives {
        621 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 621}]
        skolem:lemma1621
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma622 a r:Inference;
    r:gives {
        622 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 622}]
        skolem:lemma1622
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma623 a r:Inference;
    r:gives {
        623 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 623}]
        skolem:lemma1623
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 623];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma624 a r:Inference;
    r:gives {
        624 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 624}]
        skolem:lemma1624
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 624];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma625 a r:Inference;
    r:gives {
        625 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 625}]
        skolem:lemma1625
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 625];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma626 a r:Inference;
    r:gives {
        626 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 626}]
        skolem:lemma1626
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 626];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma627 a r:Inference;
    r:gives {
        627 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 627}]
        skolem:lemma1627
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 627];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma628 a r:Inference;
    r:gives {
        628 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 628}]
        skolem:lemma1628
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 628];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma629 a r:Inference;
    r:gives {
        629 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 629}]
        skolem:lemma1629
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 629];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma630 a r:Inference;
    r:gives {
        630 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 630}]
        skolem:lemma1630
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma631 a r:Inference;
    r:gives {
        631 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 631}]
        skolem:lemma1631
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 631];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma632 a r:Inference;
    r:gives {
        632 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 632}]
        skolem:lemma1632
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 632];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma633 a r:Inference;
    r:gives {
        633 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 633}]
        skolem:lemma1633
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 633];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma634 a r:Inference;
    r:gives {
        634 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 634}]
        skolem:lemma1634
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 634];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma635 a r:Inference;
    r:gives {
        635 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 635}]
        skolem:lemma1635
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 635];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma636 a r:Inference;
    r:gives {
        636 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 636}]
        skolem:lemma1636
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 636];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma637 a r:Inference;
    r:gives {
        637 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 637}]
        skolem:lemma1637
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 637];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma638 a r:Inference;
    r:gives {
        638 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 638}]
        skolem:lemma1638
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 638];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma639 a r:Inference;
    r:gives {
        639 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 639}]
        skolem:lemma1639
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 639];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma640 a r:Inference;
    r:gives {
        640 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 640}]
        skolem:lemma1640
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma641 a r:Inference;
    r:gives {
        641 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 641}]
        skolem:lemma1641
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 641];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma642 a r:Inference;
    r:gives {
        642 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 642}]
        skolem:lemma1642
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 642];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma643 a r:Inference;
    r:gives {
        643 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 643}]
        skolem:lemma1643
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 643];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma644 a r:Inference;
    r:gives {
        644 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 644}]
        skolem:lemma1644
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 644];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma645 a r:Inference;
    r:gives {
        645 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 645}]
        skolem:lemma1645
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 645];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma646 a r:Inference;
    r:gives {
        646 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 646}]
        skolem:lemma1646
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 646];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma647 a r:Inference;
    r:gives {
        647 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 647}]
        skolem:lemma1647
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 647];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma648 a r:Inference;
    r:gives {
        648 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 648}]
        skolem:lemma1648
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 648];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma649 a r:Inference;
    r:gives {
        649 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 649}]
        skolem:lemma1649
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 649];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma650 a r:Inference;
    r:gives {
        650 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 650}]
        skolem:lemma1650
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma651 a r:Inference;
    r:gives {
        651 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 651}]
        skolem:lemma1651
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 651];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma652 a r:Inference;
    r:gives {
        652 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 652}]
        skolem:lemma1652
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 652];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma653 a r:Inference;
    r:gives {
        653 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 653}]
        skolem:lemma1653
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 653];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma654 a r:Inference;
    r:gives {
        654 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 654}]
        skolem:lemma1654
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 654];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma655 a r:Inference;
    r:gives {
        655 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 655}]
        skolem:lemma1655
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 655];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma656 a r:Inference;
    r:gives {
        656 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 656}]
        skolem:lemma1656
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 656];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma657 a r:Inference;
    r:gives {
        657 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 657}]
        skolem:lemma1657
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 657];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma658 a r:Inference;
    r:gives {
        658 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 658}]
        skolem:lemma1658
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 658];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma659 a r:Inference;
    r:gives {
        659 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 659}]
        skolem:lemma1659
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 659];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma660 a r:Inference;
    r:gives {
        660 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 660}]
        skolem:lemma1660
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma661 a r:Inference;
    r:gives {
        661 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 661}]
        skolem:lemma1661
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 661];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma662 a r:Inference;
    r:gives {
        662 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 662}]
        skolem:lemma1662
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 662];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma663 a r:Inference;
    r:gives {
        663 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 663}]
        skolem:lemma1663
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 663];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma664 a r:Inference;
    r:gives {
        664 :recursionCount 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 664}]
        skolem:lemma1664
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 664];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:rule skolem:lemma1001.

skolem:lemma665 a r:Inference;
    r:gives {
        665 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 665}]
        skolem:lemma1665
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 665];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma666 a r:Inference;
    r:gives {
        666 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 666}]
        skolem:lemma1666
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 666];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma667 a r:Inference;
    r:gives {
        667 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 667}]
        skolem:lemma1667
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 667];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma668 a r:Inference;
    r:gives {
        668 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 668}]
        skolem:lemma1668
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 668];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma669 a r:Inference;
    r:gives {
        669 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 669}]
        skolem:lemma1669
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 669];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma670 a r:Inference;
    r:gives {
        670 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 670}]
        skolem:lemma1670
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 670];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma671 a r:Inference;
    r:gives {
        671 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 671}]
        skolem:lemma1671
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 671];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma672 a r:Inference;
    r:gives {
        672 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 672}]
        skolem:lemma1672
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 672];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma673 a r:Inference;
    r:gives {
        673 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 673}]
        skolem:lemma1673
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 673];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma674 a r:Inference;
    r:gives {
        674 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 674}]
        skolem:lemma1674
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 674];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma675 a r:Inference;
    r:gives {
        675 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 675}]
        skolem:lemma1675
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 675];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma676 a r:Inference;
    r:gives {
        676 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 676}]
        skolem:lemma1676
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 676];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma677 a r:Inference;
    r:gives {
        677 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 677}]
        skolem:lemma1677
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 677];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma678 a r:Inference;
    r:gives {
        678 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 678}]
        skolem:lemma1678
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma679 a r:Inference;
    r:gives {
        679 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 679}]
        skolem:lemma1679
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma680 a r:Inference;
    r:gives {
        680 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 680}]
        skolem:lemma1680
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 680];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma681 a r:Inference;
    r:gives {
        681 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 681}]
        skolem:lemma1681
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 681];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma682 a r:Inference;
    r:gives {
        682 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 682}]
        skolem:lemma1682
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 682];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma683 a r:Inference;
    r:gives {
        683 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 683}]
        skolem:lemma1683
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 683];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma684 a r:Inference;
    r:gives {
        684 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 684}]
        skolem:lemma1684
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 684];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma685 a r:Inference;
    r:gives {
        685 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 685}]
        skolem:lemma1685
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 685];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma686 a r:Inference;
    r:gives {
        686 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 686}]
        skolem:lemma1686
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 686];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma687 a r:Inference;
    r:gives {
        687 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 687}]
        skolem:lemma1687
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 687];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma688 a r:Inference;
    r:gives {
        688 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 688}]
        skolem:lemma1688
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 688];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma689 a r:Inference;
    r:gives {
        689 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 689}]
        skolem:lemma1689
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma690 a r:Inference;
    r:gives {
        690 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 690}]
        skolem:lemma1690
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 690];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma691 a r:Inference;
    r:gives {
        691 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 691}]
        skolem:lemma1691
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 691];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma692 a r:Inference;
    r:gives {
        692 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 692}]
        skolem:lemma1692
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 692];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma693 a r:Inference;
    r:gives {
        693 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 693}]
        skolem:lemma1693
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 693];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma694 a r:Inference;
    r:gives {
        694 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 694}]
        skolem:lemma1694
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 694];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma695 a r:Inference;
    r:gives {
        695 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 695}]
        skolem:lemma1695
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 695];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma696 a r:Inference;
    r:gives {
        696 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 696}]
        skolem:lemma1696
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 696];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma697 a r:Inference;
    r:gives {
        697 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 697}]
        skolem:lemma1697
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 697];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma698 a r:Inference;
    r:gives {
        698 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 698}]
        skolem:lemma1698
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 698];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma699 a r:Inference;
    r:gives {
        699 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 699}]
        skolem:lemma1699
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 699];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma700 a r:Inference;
    r:gives {
        700 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 700}]
        skolem:lemma1700
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma701 a r:Inference;
    r:gives {
        701 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 701}]
        skolem:lemma1701
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 701];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma702 a r:Inference;
    r:gives {
        702 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 702}]
        skolem:lemma1702
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 702];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma703 a r:Inference;
    r:gives {
        703 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 703}]
        skolem:lemma1703
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 703];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma704 a r:Inference;
    r:gives {
        704 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 704}]
        skolem:lemma1704
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 704];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma705 a r:Inference;
    r:gives {
        705 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 705}]
        skolem:lemma1705
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 705];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma706 a r:Inference;
    r:gives {
        706 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 706}]
        skolem:lemma1706
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 706];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma707 a r:Inference;
    r:gives {
        707 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 707}]
        skolem:lemma1707
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 707];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma708 a r:Inference;
    r:gives {
        708 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 708}]
        skolem:lemma1708
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 708];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma709 a r:Inference;
    r:gives {
        709 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 709}]
        skolem:lemma1709
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 709];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma710 a r:Inference;
    r:gives {
        710 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 710}]
        skolem:lemma1710
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma711 a r:Inference;
    r:gives {
        711 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 711}]
        skolem:lemma1711
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma712 a r:Inference;
    r:gives {
        712 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 712}]
        skolem:lemma1712
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 712];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma713 a r:Inference;
    r:gives {
        713 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 713}]
        skolem:lemma1713
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 713];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma714 a r:Inference;
    r:gives {
        714 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 714}]
        skolem:lemma1714
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 714];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma715 a r:Inference;
    r:gives {
        715 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 715}]
        skolem:lemma1715
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 715];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma716 a r:Inference;
    r:gives {
        716 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 716}]
        skolem:lemma1716
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 716];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma717 a r:Inference;
    r:gives {
        717 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 717}]
        skolem:lemma1717
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 717];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma718 a r:Inference;
    r:gives {
        718 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 718}]
        skolem:lemma1718
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 718];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma719 a r:Inference;
    r:gives {
        719 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 719}]
        skolem:lemma1719
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 719];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma720 a r:Inference;
    r:gives {
        720 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 720}]
        skolem:lemma1720
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma721 a r:Inference;
    r:gives {
        721 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 721}]
        skolem:lemma1721
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 721];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma722 a r:Inference;
    r:gives {
        722 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 722}]
        skolem:lemma1722
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 722];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma723 a r:Inference;
    r:gives {
        723 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 723}]
        skolem:lemma1723
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 723];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma724 a r:Inference;
    r:gives {
        724 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 724}]
        skolem:lemma1724
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 724];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma725 a r:Inference;
    r:gives {
        725 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 725}]
        skolem:lemma1725
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 725];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma726 a r:Inference;
    r:gives {
        726 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 726}]
        skolem:lemma1726
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 726];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma727 a r:Inference;
    r:gives {
        727 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 727}]
        skolem:lemma1727
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 727];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma728 a r:Inference;
    r:gives {
        728 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 728}]
        skolem:lemma1728
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 728];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma729 a r:Inference;
    r:gives {
        729 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 729}]
        skolem:lemma1729
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 729];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma730 a r:Inference;
    r:gives {
        730 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 730}]
        skolem:lemma1730
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma731 a r:Inference;
    r:gives {
        731 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 731}]
        skolem:lemma1731
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 731];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma732 a r:Inference;
    r:gives {
        732 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 732}]
        skolem:lemma1732
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 732];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma733 a r:Inference;
    r:gives {
        733 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 733}]
        skolem:lemma1733
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 733];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma734 a r:Inference;
    r:gives {
        734 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 734}]
        skolem:lemma1734
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 734];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma735 a r:Inference;
    r:gives {
        735 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 735}]
        skolem:lemma1735
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 735];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma736 a r:Inference;
    r:gives {
        736 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 736}]
        skolem:lemma1736
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 736];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma737 a r:Inference;
    r:gives {
        737 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 737}]
        skolem:lemma1737
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 737];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma738 a r:Inference;
    r:gives {
        738 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 738}]
        skolem:lemma1738
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 738];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma739 a r:Inference;
    r:gives {
        739 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 739}]
        skolem:lemma1739
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 739];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma740 a r:Inference;
    r:gives {
        740 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 740}]
        skolem:lemma1740
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma741 a r:Inference;
    r:gives {
        741 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 741}]
        skolem:lemma1741
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 741];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma742 a r:Inference;
    r:gives {
        742 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 742}]
        skolem:lemma1742
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 742];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma743 a r:Inference;
    r:gives {
        743 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 743}]
        skolem:lemma1743
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 743];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma744 a r:Inference;
    r:gives {
        744 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 744}]
        skolem:lemma1744
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 744];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma745 a r:Inference;
    r:gives {
        745 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 745}]
        skolem:lemma1745
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 745];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma746 a r:Inference;
    r:gives {
        746 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 746}]
        skolem:lemma1746
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 746];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma747 a r:Inference;
    r:gives {
        747 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 747}]
        skolem:lemma1747
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 747];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma748 a r:Inference;
    r:gives {
        748 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 748}]
        skolem:lemma1748
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 748];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma749 a r:Inference;
    r:gives {
        749 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 749}]
        skolem:lemma1749
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 749];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma750 a r:Inference;
    r:gives {
        750 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 750}]
        skolem:lemma1750
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma751 a r:Inference;
    r:gives {
        751 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 751}]
        skolem:lemma1751
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 751];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma752 a r:Inference;
    r:gives {
        752 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 752}]
        skolem:lemma1752
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 752];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma753 a r:Inference;
    r:gives {
        753 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 753}]
        skolem:lemma1753
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 753];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma754 a r:Inference;
    r:gives {
        754 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 754}]
        skolem:lemma1754
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 754];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma755 a r:Inference;
    r:gives {
        755 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 755}]
        skolem:lemma1755
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 755];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma756 a r:Inference;
    r:gives {
        756 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 756}]
        skolem:lemma1756
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 756];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma757 a r:Inference;
    r:gives {
        757 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 757}]
        skolem:lemma1757
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 757];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma758 a r:Inference;
    r:gives {
        758 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 758}]
        skolem:lemma1758
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 758];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma759 a r:Inference;
    r:gives {
        759 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 759}]
        skolem:lemma1759
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 759];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma760 a r:Inference;
    r:gives {
        760 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 760}]
        skolem:lemma1760
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma761 a r:Inference;
    r:gives {
        761 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 761}]
        skolem:lemma1761
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 761];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma762 a r:Inference;
    r:gives {
        762 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 762}]
        skolem:lemma1762
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 762];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma763 a r:Inference;
    r:gives {
        763 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 763}]
        skolem:lemma1763
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 763];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma764 a r:Inference;
    r:gives {
        764 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 764}]
        skolem:lemma1764
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 764];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma765 a r:Inference;
    r:gives {
        765 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 765}]
        skolem:lemma1765
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 765];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma766 a r:Inference;
    r:gives {
        766 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 766}]
        skolem:lemma1766
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 766];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma767 a r:Inference;
    r:gives {
        767 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 767}]
        skolem:lemma1767
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 767];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma768 a r:Inference;
    r:gives {
        768 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 768}]
        skolem:lemma1768
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 768];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma769 a r:Inference;
    r:gives {
        769 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 769}]
        skolem:lemma1769
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 769];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma770 a r:Inference;
    r:gives {
        770 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 770}]
        skolem:lemma1770
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma771 a r:Inference;
    r:gives {
        771 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 771}]
        skolem:lemma1771
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 771];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma772 a r:Inference;
    r:gives {
        772 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 772}]
        skolem:lemma1772
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 772];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma773 a r:Inference;
    r:gives {
        773 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 773}]
        skolem:lemma1773
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 773];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma774 a r:Inference;
    r:gives {
        774 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 774}]
        skolem:lemma1774
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 774];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma775 a r:Inference;
    r:gives {
        775 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 775}]
        skolem:lemma1775
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 775];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma776 a r:Inference;
    r:gives {
        776 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 776}]
        skolem:lemma1776
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 776];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma777 a r:Inference;
    r:gives {
        777 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 777}]
        skolem:lemma1777
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 777];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma778 a r:Inference;
    r:gives {
        778 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 778}]
        skolem:lemma1778
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 778];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma779 a r:Inference;
    r:gives {
        779 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 779}]
        skolem:lemma1779
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 779];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma780 a r:Inference;
    r:gives {
        780 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 780}]
        skolem:lemma1780
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 780];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma781 a r:Inference;
    r:gives {
        781 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 781}]
        skolem:lemma1781
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 781];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma782 a r:Inference;
    r:gives {
        782 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 782}]
        skolem:lemma1782
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 782];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma783 a r:Inference;
    r:gives {
        783 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 783}]
        skolem:lemma1783
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 783];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma784 a r:Inference;
    r:gives {
        784 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 784}]
        skolem:lemma1784
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 784];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma785 a r:Inference;
    r:gives {
        785 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 785}]
        skolem:lemma1785
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 785];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma786 a r:Inference;
    r:gives {
        786 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 786}]
        skolem:lemma1786
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 786];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma787 a r:Inference;
    r:gives {
        787 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 787}]
        skolem:lemma1787
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 787];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma788 a r:Inference;
    r:gives {
        788 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 788}]
        skolem:lemma1788
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 788];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma789 a r:Inference;
    r:gives {
        789 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 789}]
        skolem:lemma1789
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma790 a r:Inference;
    r:gives {
        790 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 790}]
        skolem:lemma1790
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 790];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma791 a r:Inference;
    r:gives {
        791 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 791}]
        skolem:lemma1791
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 791];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma792 a r:Inference;
    r:gives {
        792 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 792}]
        skolem:lemma1792
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 792];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma793 a r:Inference;
    r:gives {
        793 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 793}]
        skolem:lemma1793
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 793];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma794 a r:Inference;
    r:gives {
        794 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 794}]
        skolem:lemma1794
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 794];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma795 a r:Inference;
    r:gives {
        795 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 795}]
        skolem:lemma1795
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 795];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma796 a r:Inference;
    r:gives {
        796 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 796}]
        skolem:lemma1796
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 796];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma797 a r:Inference;
    r:gives {
        797 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 797}]
        skolem:lemma1797
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 797];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma798 a r:Inference;
    r:gives {
        798 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 798}]
        skolem:lemma1798
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 798];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma799 a r:Inference;
    r:gives {
        799 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 799}]
        skolem:lemma1799
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 799];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma800 a r:Inference;
    r:gives {
        800 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 800}]
        skolem:lemma1800
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma801 a r:Inference;
    r:gives {
        801 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 801}]
        skolem:lemma1801
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 801];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma802 a r:Inference;
    r:gives {
        802 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 802}]
        skolem:lemma1802
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 802];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma803 a r:Inference;
    r:gives {
        803 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 803}]
        skolem:lemma1803
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 803];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma804 a r:Inference;
    r:gives {
        804 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 804}]
        skolem:lemma1804
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 804];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma805 a r:Inference;
    r:gives {
        805 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 805}]
        skolem:lemma1805
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 805];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma806 a r:Inference;
    r:gives {
        806 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 806}]
        skolem:lemma1806
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 806];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma807 a r:Inference;
    r:gives {
        807 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 807}]
        skolem:lemma1807
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 807];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma808 a r:Inference;
    r:gives {
        808 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 808}]
        skolem:lemma1808
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 808];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma809 a r:Inference;
    r:gives {
        809 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 809}]
        skolem:lemma1809
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 809];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma810 a r:Inference;
    r:gives {
        810 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 810}]
        skolem:lemma1810
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma811 a r:Inference;
    r:gives {
        811 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 811}]
        skolem:lemma1811
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 811];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma812 a r:Inference;
    r:gives {
        812 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 812}]
        skolem:lemma1812
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 812];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma813 a r:Inference;
    r:gives {
        813 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 813}]
        skolem:lemma1813
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 813];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma814 a r:Inference;
    r:gives {
        814 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 814}]
        skolem:lemma1814
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 814];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma815 a r:Inference;
    r:gives {
        815 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 815}]
        skolem:lemma1815
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 815];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma816 a r:Inference;
    r:gives {
        816 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 816}]
        skolem:lemma1816
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 816];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma817 a r:Inference;
    r:gives {
        817 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 817}]
        skolem:lemma1817
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 817];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma818 a r:Inference;
    r:gives {
        818 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 818}]
        skolem:lemma1818
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 818];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma819 a r:Inference;
    r:gives {
        819 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 819}]
        skolem:lemma1819
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 819];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma820 a r:Inference;
    r:gives {
        820 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 820}]
        skolem:lemma1820
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma821 a r:Inference;
    r:gives {
        821 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 821}]
        skolem:lemma1821
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 821];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma822 a r:Inference;
    r:gives {
        822 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 822}]
        skolem:lemma1822
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 822];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma823 a r:Inference;
    r:gives {
        823 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 823}]
        skolem:lemma1823
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 823];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma824 a r:Inference;
    r:gives {
        824 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 824}]
        skolem:lemma1824
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 824];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma825 a r:Inference;
    r:gives {
        825 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 825}]
        skolem:lemma1825
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 825];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma826 a r:Inference;
    r:gives {
        826 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 826}]
        skolem:lemma1826
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 826];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma827 a r:Inference;
    r:gives {
        827 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 827}]
        skolem:lemma1827
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 827];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma828 a r:Inference;
    r:gives {
        828 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 828}]
        skolem:lemma1828
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 828];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma829 a r:Inference;
    r:gives {
        829 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 829}]
        skolem:lemma1829
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 829];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma830 a r:Inference;
    r:gives {
        830 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 830}]
        skolem:lemma1830
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma831 a r:Inference;
    r:gives {
        831 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 831}]
        skolem:lemma1831
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 831];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma832 a r:Inference;
    r:gives {
        832 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 832}]
        skolem:lemma1832
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 832];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma833 a r:Inference;
    r:gives {
        833 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 833}]
        skolem:lemma1833
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 833];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma834 a r:Inference;
    r:gives {
        834 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 834}]
        skolem:lemma1834
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 834];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma835 a r:Inference;
    r:gives {
        835 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 835}]
        skolem:lemma1835
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 835];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma836 a r:Inference;
    r:gives {
        836 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 836}]
        skolem:lemma1836
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 836];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma837 a r:Inference;
    r:gives {
        837 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 837}]
        skolem:lemma1837
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 837];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma838 a r:Inference;
    r:gives {
        838 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 838}]
        skolem:lemma1838
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 838];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma839 a r:Inference;
    r:gives {
        839 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 839}]
        skolem:lemma1839
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 839];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma840 a r:Inference;
    r:gives {
        840 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 840}]
        skolem:lemma1840
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma841 a r:Inference;
    r:gives {
        841 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 841}]
        skolem:lemma1841
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 841];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma842 a r:Inference;
    r:gives {
        842 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 842}]
        skolem:lemma1842
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 842];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma843 a r:Inference;
    r:gives {
        843 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 843}]
        skolem:lemma1843
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 843];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma844 a r:Inference;
    r:gives {
        844 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 844}]
        skolem:lemma1844
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 844];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma845 a r:Inference;
    r:gives {
        845 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 845}]
        skolem:lemma1845
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 845];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma846 a r:Inference;
    r:gives {
        846 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 846}]
        skolem:lemma1846
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 846];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma847 a r:Inference;
    r:gives {
        847 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 847}]
        skolem:lemma1847
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 847];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma848 a r:Inference;
    r:gives {
        848 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 848}]
        skolem:lemma1848
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 848];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma849 a r:Inference;
    r:gives {
        849 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 849}]
        skolem:lemma1849
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 849];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma850 a r:Inference;
    r:gives {
        850 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 850}]
        skolem:lemma1850
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma851 a r:Inference;
    r:gives {
        851 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 851}]
        skolem:lemma1851
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 851];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma852 a r:Inference;
    r:gives {
        852 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 852}]
        skolem:lemma1852
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 852];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma853 a r:Inference;
    r:gives {
        853 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 853}]
        skolem:lemma1853
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 853];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma854 a r:Inference;
    r:gives {
        854 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 854}]
        skolem:lemma1854
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 854];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma855 a r:Inference;
    r:gives {
        855 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 855}]
        skolem:lemma1855
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 855];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma856 a r:Inference;
    r:gives {
        856 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 856}]
        skolem:lemma1856
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 856];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma857 a r:Inference;
    r:gives {
        857 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 857}]
        skolem:lemma1857
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 857];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma858 a r:Inference;
    r:gives {
        858 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 858}]
        skolem:lemma1858
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 858];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma859 a r:Inference;
    r:gives {
        859 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 859}]
        skolem:lemma1859
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 859];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma860 a r:Inference;
    r:gives {
        860 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 860}]
        skolem:lemma1860
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma861 a r:Inference;
    r:gives {
        861 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 861}]
        skolem:lemma1861
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 861];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma862 a r:Inference;
    r:gives {
        862 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 862}]
        skolem:lemma1862
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 862];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma863 a r:Inference;
    r:gives {
        863 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 863}]
        skolem:lemma1863
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 863];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma864 a r:Inference;
    r:gives {
        864 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 864}]
        skolem:lemma1864
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 864];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma865 a r:Inference;
    r:gives {
        865 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 865}]
        skolem:lemma1865
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 865];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma866 a r:Inference;
    r:gives {
        866 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 866}]
        skolem:lemma1866
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 866];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma867 a r:Inference;
    r:gives {
        867 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 867}]
        skolem:lemma1867
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 867];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma868 a r:Inference;
    r:gives {
        868 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 868}]
        skolem:lemma1868
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 868];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma869 a r:Inference;
    r:gives {
        869 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 869}]
        skolem:lemma1869
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 869];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma870 a r:Inference;
    r:gives {
        870 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 870}]
        skolem:lemma1870
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma871 a r:Inference;
    r:gives {
        871 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 871}]
        skolem:lemma1871
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 871];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma872 a r:Inference;
    r:gives {
        872 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 872}]
        skolem:lemma1872
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 872];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma873 a r:Inference;
    r:gives {
        873 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 873}]
        skolem:lemma1873
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 873];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma874 a r:Inference;
    r:gives {
        874 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 874}]
        skolem:lemma1874
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 874];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma875 a r:Inference;
    r:gives {
        875 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 875}]
        skolem:lemma1875
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 875];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma876 a r:Inference;
    r:gives {
        876 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 876}]
        skolem:lemma1876
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 876];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma877 a r:Inference;
    r:gives {
        877 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 877}]
        skolem:lemma1877
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 877];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma878 a r:Inference;
    r:gives {
        878 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 878}]
        skolem:lemma1878
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 878];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma879 a r:Inference;
    r:gives {
        879 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 879}]
        skolem:lemma1879
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 879];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma880 a r:Inference;
    r:gives {
        880 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 880}]
        skolem:lemma1880
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma881 a r:Inference;
    r:gives {
        881 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 881}]
        skolem:lemma1881
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 881];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma882 a r:Inference;
    r:gives {
        882 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 882}]
        skolem:lemma1882
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 882];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma883 a r:Inference;
    r:gives {
        883 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 883}]
        skolem:lemma1883
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 883];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma884 a r:Inference;
    r:gives {
        884 :recursionCount 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 884}]
        skolem:lemma1884
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 884];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:rule skolem:lemma1001.

skolem:lemma885 a r:Inference;
    r:gives {
        885 :recursionCount 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 885}]
        skolem:lemma1885
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 885];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:rule skolem:lemma1001.

skolem:lemma886 a r:Inference;
    r:gives {
        886 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 886}]
        skolem:lemma1886
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 886];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma887 a r:Inference;
    r:gives {
        887 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 887}]
        skolem:lemma1887
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 887];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma888 a r:Inference;
    r:gives {
        888 :recursionCount 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 888}]
        skolem:lemma1888
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 888];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:rule skolem:lemma1001.

skolem:lemma889 a r:Inference;
    r:gives {
        889 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 889}]
        skolem:lemma1889
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 889];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma890 a r:Inference;
    r:gives {
        890 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 890}]
        skolem:lemma1890
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 890];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma891 a r:Inference;
    r:gives {
        891 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 891}]
        skolem:lemma1891
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 891];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma892 a r:Inference;
    r:gives {
        892 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 892}]
        skolem:lemma1892
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 892];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma893 a r:Inference;
    r:gives {
        893 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 893}]
        skolem:lemma1893
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 893];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma894 a r:Inference;
    r:gives {
        894 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 894}]
        skolem:lemma1894
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 894];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma895 a r:Inference;
    r:gives {
        895 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 895}]
        skolem:lemma1895
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 895];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma896 a r:Inference;
    r:gives {
        896 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 896}]
        skolem:lemma1896
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 896];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma897 a r:Inference;
    r:gives {
        897 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 897}]
        skolem:lemma1897
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 897];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma898 a r:Inference;
    r:gives {
        898 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 898}]
        skolem:lemma1898
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 898];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma899 a r:Inference;
    r:gives {
        899 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 899}]
        skolem:lemma1899
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 899];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma900 a r:Inference;
    r:gives {
        900 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 900}]
        skolem:lemma1900
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma901 a r:Inference;
    r:gives {
        901 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 901}]
        skolem:lemma1901
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 901];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma902 a r:Inference;
    r:gives {
        902 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 902}]
        skolem:lemma1902
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 902];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma903 a r:Inference;
    r:gives {
        903 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 903}]
        skolem:lemma1903
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 903];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma904 a r:Inference;
    r:gives {
        904 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 904}]
        skolem:lemma1904
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 904];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma905 a r:Inference;
    r:gives {
        905 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 905}]
        skolem:lemma1905
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 905];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma906 a r:Inference;
    r:gives {
        906 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 906}]
        skolem:lemma1906
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 906];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma907 a r:Inference;
    r:gives {
        907 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 907}]
        skolem:lemma1907
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 907];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma908 a r:Inference;
    r:gives {
        908 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 908}]
        skolem:lemma1908
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 908];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma909 a r:Inference;
    r:gives {
        909 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 909}]
        skolem:lemma1909
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 909];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma910 a r:Inference;
    r:gives {
        910 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 910}]
        skolem:lemma1910
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 910];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma911 a r:Inference;
    r:gives {
        911 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 911}]
        skolem:lemma1911
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 911];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma912 a r:Inference;
    r:gives {
        912 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 912}]
        skolem:lemma1912
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 912];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma913 a r:Inference;
    r:gives {
        913 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 913}]
        skolem:lemma1913
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 913];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma914 a r:Inference;
    r:gives {
        914 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 914}]
        skolem:lemma1914
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 914];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma915 a r:Inference;
    r:gives {
        915 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 915}]
        skolem:lemma1915
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 915];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma916 a r:Inference;
    r:gives {
        916 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 916}]
        skolem:lemma1916
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 916];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma917 a r:Inference;
    r:gives {
        917 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 917}]
        skolem:lemma1917
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 917];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma918 a r:Inference;
    r:gives {
        918 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 918}]
        skolem:lemma1918
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 918];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma919 a r:Inference;
    r:gives {
        919 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 919}]
        skolem:lemma1919
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 919];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma920 a r:Inference;
    r:gives {
        920 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 920}]
        skolem:lemma1920
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 920];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma921 a r:Inference;
    r:gives {
        921 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 921}]
        skolem:lemma1921
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 921];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma922 a r:Inference;
    r:gives {
        922 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 922}]
        skolem:lemma1922
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 922];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma923 a r:Inference;
    r:gives {
        923 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 923}]
        skolem:lemma1923
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 923];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma924 a r:Inference;
    r:gives {
        924 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 924}]
        skolem:lemma1924
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 924];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma925 a r:Inference;
    r:gives {
        925 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 925}]
        skolem:lemma1925
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 925];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma926 a r:Inference;
    r:gives {
        926 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 926}]
        skolem:lemma1926
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 926];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma927 a r:Inference;
    r:gives {
        927 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 927}]
        skolem:lemma1927
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 927];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma928 a r:Inference;
    r:gives {
        928 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 928}]
        skolem:lemma1928
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 928];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma929 a r:Inference;
    r:gives {
        929 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 929}]
        skolem:lemma1929
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 929];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma930 a r:Inference;
    r:gives {
        930 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 930}]
        skolem:lemma1930
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 930];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma931 a r:Inference;
    r:gives {
        931 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 931}]
        skolem:lemma1931
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 931];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma932 a r:Inference;
    r:gives {
        932 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 932}]
        skolem:lemma1932
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 932];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma933 a r:Inference;
    r:gives {
        933 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 933}]
        skolem:lemma1933
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 933];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma934 a r:Inference;
    r:gives {
        934 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 934}]
        skolem:lemma1934
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 934];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma935 a r:Inference;
    r:gives {
        935 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 935}]
        skolem:lemma1935
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 935];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma936 a r:Inference;
    r:gives {
        936 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 936}]
        skolem:lemma1936
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 936];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma937 a r:Inference;
    r:gives {
        937 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 937}]
        skolem:lemma1937
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 937];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma938 a r:Inference;
    r:gives {
        938 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 938}]
        skolem:lemma1938
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 938];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma939 a r:Inference;
    r:gives {
        939 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 939}]
        skolem:lemma1939
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 939];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma940 a r:Inference;
    r:gives {
        940 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 940}]
        skolem:lemma1940
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 940];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma941 a r:Inference;
    r:gives {
        941 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 941}]
        skolem:lemma1941
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 941];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma942 a r:Inference;
    r:gives {
        942 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 942}]
        skolem:lemma1942
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 942];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma943 a r:Inference;
    r:gives {
        943 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 943}]
        skolem:lemma1943
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 943];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma944 a r:Inference;
    r:gives {
        944 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 944}]
        skolem:lemma1944
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 944];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma945 a r:Inference;
    r:gives {
        945 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 945}]
        skolem:lemma1945
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 945];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma946 a r:Inference;
    r:gives {
        946 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 946}]
        skolem:lemma1946
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 946];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma947 a r:Inference;
    r:gives {
        947 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 947}]
        skolem:lemma1947
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 947];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma948 a r:Inference;
    r:gives {
        948 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 948}]
        skolem:lemma1948
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 948];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma949 a r:Inference;
    r:gives {
        949 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 949}]
        skolem:lemma1949
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 949];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma950 a r:Inference;
    r:gives {
        950 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 950}]
        skolem:lemma1950
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 950];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma951 a r:Inference;
    r:gives {
        951 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 951}]
        skolem:lemma1951
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 951];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma952 a r:Inference;
    r:gives {
        952 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 952}]
        skolem:lemma1952
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 952];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma953 a r:Inference;
    r:gives {
        953 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 953}]
        skolem:lemma1953
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 953];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma954 a r:Inference;
    r:gives {
        954 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 954}]
        skolem:lemma1954
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 954];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma955 a r:Inference;
    r:gives {
        955 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 955}]
        skolem:lemma1955
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 955];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma956 a r:Inference;
    r:gives {
        956 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 956}]
        skolem:lemma1956
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 956];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma957 a r:Inference;
    r:gives {
        957 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 957}]
        skolem:lemma1957
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 957];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma958 a r:Inference;
    r:gives {
        958 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 958}]
        skolem:lemma1958
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 958];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma959 a r:Inference;
    r:gives {
        959 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 959}]
        skolem:lemma1959
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 959];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma960 a r:Inference;
    r:gives {
        960 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 960}]
        skolem:lemma1960
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 960];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma961 a r:Inference;
    r:gives {
        961 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 961}]
        skolem:lemma1961
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 961];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma962 a r:Inference;
    r:gives {
        962 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 962}]
        skolem:lemma1962
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 962];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma963 a r:Inference;
    r:gives {
        963 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 963}]
        skolem:lemma1963
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 963];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma964 a r:Inference;
    r:gives {
        964 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 964}]
        skolem:lemma1964
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 964];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma965 a r:Inference;
    r:gives {
        965 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 965}]
        skolem:lemma1965
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 965];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma966 a r:Inference;
    r:gives {
        966 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 966}]
        skolem:lemma1966
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 966];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma967 a r:Inference;
    r:gives {
        967 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 967}]
        skolem:lemma1967
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 967];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma968 a r:Inference;
    r:gives {
        968 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 968}]
        skolem:lemma1968
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 968];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma969 a r:Inference;
    r:gives {
        969 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 969}]
        skolem:lemma1969
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 969];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma970 a r:Inference;
    r:gives {
        970 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 970}]
        skolem:lemma1970
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 970];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma971 a r:Inference;
    r:gives {
        971 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 971}]
        skolem:lemma1971
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 971];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma972 a r:Inference;
    r:gives {
        972 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 972}]
        skolem:lemma1972
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 972];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma973 a r:Inference;
    r:gives {
        973 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 973}]
        skolem:lemma1973
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 973];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma974 a r:Inference;
    r:gives {
        974 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 974}]
        skolem:lemma1974
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 974];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma975 a r:Inference;
    r:gives {
        975 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 975}]
        skolem:lemma1975
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 975];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma976 a r:Inference;
    r:gives {
        976 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 976}]
        skolem:lemma1976
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 976];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma977 a r:Inference;
    r:gives {
        977 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 977}]
        skolem:lemma1977
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 977];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma978 a r:Inference;
    r:gives {
        978 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 978}]
        skolem:lemma1978
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 978];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma979 a r:Inference;
    r:gives {
        979 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 979}]
        skolem:lemma1979
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 979];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma980 a r:Inference;
    r:gives {
        980 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 980}]
        skolem:lemma1980
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 980];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma981 a r:Inference;
    r:gives {
        981 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 981}]
        skolem:lemma1981
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 981];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma982 a r:Inference;
    r:gives {
        982 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 982}]
        skolem:lemma1982
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 982];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma983 a r:Inference;
    r:gives {
        983 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 983}]
        skolem:lemma1983
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 983];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma984 a r:Inference;
    r:gives {
        984 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 984}]
        skolem:lemma1984
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 984];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma985 a r:Inference;
    r:gives {
        985 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 985}]
        skolem:lemma1985
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 985];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma986 a r:Inference;
    r:gives {
        986 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 986}]
        skolem:lemma1986
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 986];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma987 a r:Inference;
    r:gives {
        987 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 987}]
        skolem:lemma1987
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 987];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma988 a r:Inference;
    r:gives {
        988 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 988}]
        skolem:lemma1988
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 988];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma989 a r:Inference;
    r:gives {
        989 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 989}]
        skolem:lemma1989
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 989];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma990 a r:Inference;
    r:gives {
        990 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 990}]
        skolem:lemma1990
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 990];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma991 a r:Inference;
    r:gives {
        991 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 991}]
        skolem:lemma1991
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma992 a r:Inference;
    r:gives {
        992 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 992}]
        skolem:lemma1992
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma993 a r:Inference;
    r:gives {
        993 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 993}]
        skolem:lemma1993
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma994 a r:Inference;
    r:gives {
        994 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 994}]
        skolem:lemma1994
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma995 a r:Inference;
    r:gives {
        995 :recursionCount 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 995}]
        skolem:lemma1995
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:rule skolem:lemma1001.

skolem:lemma996 a r:Inference;
    r:gives {
        996 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 996}]
        skolem:lemma1996
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma997 a r:Inference;
    r:gives {
        997 :recursionCount 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 997}]
        skolem:lemma1997
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:rule skolem:lemma1001.

skolem:lemma998 a r:Inference;
    r:gives {
        998 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 998}]
        skolem:lemma1998
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma999 a r:Inference;
    r:gives {
        999 :recursionCount 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {1000 log:repeat 999}]
        skolem:lemma1999
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:rule skolem:lemma1001.

skolem:lemma1000 a r:Inference;
    r:gives {
        1 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {1 math:notEqualTo 0}]
        skolem:lemma2000
        [ a r:Fact; r:gives {((0 0 0 1) "=<") list:sort (0 0 0 1)}]
        [ a r:Fact; r:gives {((0 0 0 1) ">=") list:sort (1 0 0 0)}]
        skolem:lemma2001
        skolem:lemma2002
        [ a r:Fact; r:gives {(1000 1) math:difference 999}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            999 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            999 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1001 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1. {
            1000 log:repeat var:x_0.
            var:x_0 :kaprekar (0 var:x_1).
        } => {
            var:x_0 :recursionCount var:x_1.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2-query.n3>].

skolem:lemma1002 a r:Inference;
    r:gives {
        2 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {2 math:notEqualTo 0}]
        skolem:lemma2004
        [ a r:Fact; r:gives {((0 0 0 2) "=<") list:sort (0 0 0 2)}]
        [ a r:Fact; r:gives {((0 0 0 2) ">=") list:sort (2 0 0 0)}]
        skolem:lemma2005
        skolem:lemma2006
        [ a r:Fact; r:gives {(2000 2) math:difference 1998}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1998 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1998 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1003 a r:Inference;
    r:gives {
        3 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {3 math:notEqualTo 0}]
        skolem:lemma2007
        [ a r:Fact; r:gives {((0 0 0 3) "=<") list:sort (0 0 0 3)}]
        [ a r:Fact; r:gives {((0 0 0 3) ">=") list:sort (3 0 0 0)}]
        skolem:lemma2008
        skolem:lemma2009
        [ a r:Fact; r:gives {(3000 3) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1004 a r:Inference;
    r:gives {
        4 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {4 math:notEqualTo 0}]
        skolem:lemma2010
        [ a r:Fact; r:gives {((0 0 0 4) "=<") list:sort (0 0 0 4)}]
        [ a r:Fact; r:gives {((0 0 0 4) ">=") list:sort (4 0 0 0)}]
        skolem:lemma2011
        skolem:lemma2012
        [ a r:Fact; r:gives {(4000 4) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1005 a r:Inference;
    r:gives {
        5 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {5 math:notEqualTo 0}]
        skolem:lemma2013
        [ a r:Fact; r:gives {((0 0 0 5) "=<") list:sort (0 0 0 5)}]
        [ a r:Fact; r:gives {((0 0 0 5) ">=") list:sort (5 0 0 0)}]
        skolem:lemma2014
        skolem:lemma2015
        [ a r:Fact; r:gives {(5000 5) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1006 a r:Inference;
    r:gives {
        6 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {6 math:notEqualTo 0}]
        skolem:lemma2016
        [ a r:Fact; r:gives {((0 0 0 6) "=<") list:sort (0 0 0 6)}]
        [ a r:Fact; r:gives {((0 0 0 6) ">=") list:sort (6 0 0 0)}]
        skolem:lemma2017
        skolem:lemma2018
        [ a r:Fact; r:gives {(6000 6) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1007 a r:Inference;
    r:gives {
        7 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {7 math:notEqualTo 0}]
        skolem:lemma2019
        [ a r:Fact; r:gives {((0 0 0 7) "=<") list:sort (0 0 0 7)}]
        [ a r:Fact; r:gives {((0 0 0 7) ">=") list:sort (7 0 0 0)}]
        skolem:lemma2020
        skolem:lemma2021
        [ a r:Fact; r:gives {(7000 7) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1008 a r:Inference;
    r:gives {
        8 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {8 math:notEqualTo 0}]
        skolem:lemma2022
        [ a r:Fact; r:gives {((0 0 0 8) "=<") list:sort (0 0 0 8)}]
        [ a r:Fact; r:gives {((0 0 0 8) ">=") list:sort (8 0 0 0)}]
        skolem:lemma2023
        skolem:lemma2024
        [ a r:Fact; r:gives {(8000 8) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1009 a r:Inference;
    r:gives {
        9 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {9 math:notEqualTo 0}]
        skolem:lemma2025
        [ a r:Fact; r:gives {((0 0 0 9) "=<") list:sort (0 0 0 9)}]
        [ a r:Fact; r:gives {((0 0 0 9) ">=") list:sort (9 0 0 0)}]
        skolem:lemma2026
        skolem:lemma2027
        [ a r:Fact; r:gives {(9000 9) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1010 a r:Inference;
    r:gives {
        10 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {10 math:notEqualTo 0}]
        skolem:lemma2028
        [ a r:Fact; r:gives {((0 0 1 0) "=<") list:sort (0 0 0 1)}]
        [ a r:Fact; r:gives {((0 0 1 0) ">=") list:sort (1 0 0 0)}]
        skolem:lemma2001
        skolem:lemma2002
        [ a r:Fact; r:gives {(1000 1) math:difference 999}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            999 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            999 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1011 a r:Inference;
    r:gives {
        11 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {11 math:notEqualTo 0}]
        skolem:lemma2029
        [ a r:Fact; r:gives {((0 0 1 1) "=<") list:sort (0 0 1 1)}]
        [ a r:Fact; r:gives {((0 0 1 1) ">=") list:sort (1 1 0 0)}]
        skolem:lemma2030
        skolem:lemma2031
        [ a r:Fact; r:gives {(1100 11) math:difference 1089}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1089 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1089 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1089];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1012 a r:Inference;
    r:gives {
        12 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {12 math:notEqualTo 0}]
        skolem:lemma2032
        [ a r:Fact; r:gives {((0 0 1 2) "=<") list:sort (0 0 1 2)}]
        [ a r:Fact; r:gives {((0 0 1 2) ">=") list:sort (2 1 0 0)}]
        skolem:lemma2033
        skolem:lemma2034
        [ a r:Fact; r:gives {(2100 12) math:difference 2088}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2088 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            2088 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2088];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1013 a r:Inference;
    r:gives {
        13 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {13 math:notEqualTo 0}]
        skolem:lemma2035
        [ a r:Fact; r:gives {((0 0 1 3) "=<") list:sort (0 0 1 3)}]
        [ a r:Fact; r:gives {((0 0 1 3) ">=") list:sort (3 1 0 0)}]
        skolem:lemma2036
        skolem:lemma2037
        [ a r:Fact; r:gives {(3100 13) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1014 a r:Inference;
    r:gives {
        14 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {14 math:notEqualTo 0}]
        skolem:lemma2038
        [ a r:Fact; r:gives {((0 0 1 4) "=<") list:sort (0 0 1 4)}]
        [ a r:Fact; r:gives {((0 0 1 4) ">=") list:sort (4 1 0 0)}]
        skolem:lemma2039
        skolem:lemma2040
        [ a r:Fact; r:gives {(4100 14) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1015 a r:Inference;
    r:gives {
        15 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {15 math:notEqualTo 0}]
        skolem:lemma2041
        [ a r:Fact; r:gives {((0 0 1 5) "=<") list:sort (0 0 1 5)}]
        [ a r:Fact; r:gives {((0 0 1 5) ">=") list:sort (5 1 0 0)}]
        skolem:lemma2042
        skolem:lemma2043
        [ a r:Fact; r:gives {(5100 15) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1016 a r:Inference;
    r:gives {
        16 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {16 math:notEqualTo 0}]
        skolem:lemma2044
        [ a r:Fact; r:gives {((0 0 1 6) "=<") list:sort (0 0 1 6)}]
        [ a r:Fact; r:gives {((0 0 1 6) ">=") list:sort (6 1 0 0)}]
        skolem:lemma2045
        skolem:lemma2046
        [ a r:Fact; r:gives {(6100 16) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1017 a r:Inference;
    r:gives {
        17 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {17 math:notEqualTo 0}]
        skolem:lemma2047
        [ a r:Fact; r:gives {((0 0 1 7) "=<") list:sort (0 0 1 7)}]
        [ a r:Fact; r:gives {((0 0 1 7) ">=") list:sort (7 1 0 0)}]
        skolem:lemma2048
        skolem:lemma2049
        [ a r:Fact; r:gives {(7100 17) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1018 a r:Inference;
    r:gives {
        18 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {18 math:notEqualTo 0}]
        skolem:lemma2050
        [ a r:Fact; r:gives {((0 0 1 8) "=<") list:sort (0 0 1 8)}]
        [ a r:Fact; r:gives {((0 0 1 8) ">=") list:sort (8 1 0 0)}]
        skolem:lemma2051
        skolem:lemma2052
        [ a r:Fact; r:gives {(8100 18) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1019 a r:Inference;
    r:gives {
        19 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {19 math:notEqualTo 0}]
        skolem:lemma2053
        [ a r:Fact; r:gives {((0 0 1 9) "=<") list:sort (0 0 1 9)}]
        [ a r:Fact; r:gives {((0 0 1 9) ">=") list:sort (9 1 0 0)}]
        skolem:lemma2054
        skolem:lemma2055
        [ a r:Fact; r:gives {(9100 19) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1020 a r:Inference;
    r:gives {
        20 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {20 math:notEqualTo 0}]
        skolem:lemma2056
        [ a r:Fact; r:gives {((0 0 2 0) "=<") list:sort (0 0 0 2)}]
        [ a r:Fact; r:gives {((0 0 2 0) ">=") list:sort (2 0 0 0)}]
        skolem:lemma2005
        skolem:lemma2006
        [ a r:Fact; r:gives {(2000 2) math:difference 1998}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1998 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1998 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1021 a r:Inference;
    r:gives {
        21 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {21 math:notEqualTo 0}]
        skolem:lemma2057
        [ a r:Fact; r:gives {((0 0 2 1) "=<") list:sort (0 0 1 2)}]
        [ a r:Fact; r:gives {((0 0 2 1) ">=") list:sort (2 1 0 0)}]
        skolem:lemma2033
        skolem:lemma2034
        [ a r:Fact; r:gives {(2100 12) math:difference 2088}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2088 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            2088 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2088];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1022 a r:Inference;
    r:gives {
        22 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {22 math:notEqualTo 0}]
        skolem:lemma2058
        [ a r:Fact; r:gives {((0 0 2 2) "=<") list:sort (0 0 2 2)}]
        [ a r:Fact; r:gives {((0 0 2 2) ">=") list:sort (2 2 0 0)}]
        skolem:lemma2059
        skolem:lemma2060
        [ a r:Fact; r:gives {(2200 22) math:difference 2178}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2178 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2178 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1023 a r:Inference;
    r:gives {
        23 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {23 math:notEqualTo 0}]
        skolem:lemma2061
        [ a r:Fact; r:gives {((0 0 2 3) "=<") list:sort (0 0 2 3)}]
        [ a r:Fact; r:gives {((0 0 2 3) ">=") list:sort (3 2 0 0)}]
        skolem:lemma2062
        skolem:lemma2063
        [ a r:Fact; r:gives {(3200 23) math:difference 3177}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3177 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            3177 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1024 a r:Inference;
    r:gives {
        24 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {24 math:notEqualTo 0}]
        skolem:lemma2064
        [ a r:Fact; r:gives {((0 0 2 4) "=<") list:sort (0 0 2 4)}]
        [ a r:Fact; r:gives {((0 0 2 4) ">=") list:sort (4 2 0 0)}]
        skolem:lemma2065
        skolem:lemma2066
        [ a r:Fact; r:gives {(4200 24) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1025 a r:Inference;
    r:gives {
        25 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {25 math:notEqualTo 0}]
        skolem:lemma2067
        [ a r:Fact; r:gives {((0 0 2 5) "=<") list:sort (0 0 2 5)}]
        [ a r:Fact; r:gives {((0 0 2 5) ">=") list:sort (5 2 0 0)}]
        skolem:lemma2068
        skolem:lemma2069
        [ a r:Fact; r:gives {(5200 25) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1026 a r:Inference;
    r:gives {
        26 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {26 math:notEqualTo 0}]
        skolem:lemma2070
        [ a r:Fact; r:gives {((0 0 2 6) "=<") list:sort (0 0 2 6)}]
        [ a r:Fact; r:gives {((0 0 2 6) ">=") list:sort (6 2 0 0)}]
        skolem:lemma2071
        skolem:lemma2072
        [ a r:Fact; r:gives {(6200 26) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1027 a r:Inference;
    r:gives {
        27 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {27 math:notEqualTo 0}]
        skolem:lemma2073
        [ a r:Fact; r:gives {((0 0 2 7) "=<") list:sort (0 0 2 7)}]
        [ a r:Fact; r:gives {((0 0 2 7) ">=") list:sort (7 2 0 0)}]
        skolem:lemma2074
        skolem:lemma2075
        [ a r:Fact; r:gives {(7200 27) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1028 a r:Inference;
    r:gives {
        28 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {28 math:notEqualTo 0}]
        skolem:lemma2076
        [ a r:Fact; r:gives {((0 0 2 8) "=<") list:sort (0 0 2 8)}]
        [ a r:Fact; r:gives {((0 0 2 8) ">=") list:sort (8 2 0 0)}]
        skolem:lemma2077
        skolem:lemma2078
        [ a r:Fact; r:gives {(8200 28) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1029 a r:Inference;
    r:gives {
        29 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {29 math:notEqualTo 0}]
        skolem:lemma2079
        [ a r:Fact; r:gives {((0 0 2 9) "=<") list:sort (0 0 2 9)}]
        [ a r:Fact; r:gives {((0 0 2 9) ">=") list:sort (9 2 0 0)}]
        skolem:lemma2080
        skolem:lemma2081
        [ a r:Fact; r:gives {(9200 29) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1030 a r:Inference;
    r:gives {
        30 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {30 math:notEqualTo 0}]
        skolem:lemma2082
        [ a r:Fact; r:gives {((0 0 3 0) "=<") list:sort (0 0 0 3)}]
        [ a r:Fact; r:gives {((0 0 3 0) ">=") list:sort (3 0 0 0)}]
        skolem:lemma2008
        skolem:lemma2009
        [ a r:Fact; r:gives {(3000 3) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1031 a r:Inference;
    r:gives {
        31 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {31 math:notEqualTo 0}]
        skolem:lemma2083
        [ a r:Fact; r:gives {((0 0 3 1) "=<") list:sort (0 0 1 3)}]
        [ a r:Fact; r:gives {((0 0 3 1) ">=") list:sort (3 1 0 0)}]
        skolem:lemma2036
        skolem:lemma2037
        [ a r:Fact; r:gives {(3100 13) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1032 a r:Inference;
    r:gives {
        32 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {32 math:notEqualTo 0}]
        skolem:lemma2084
        [ a r:Fact; r:gives {((0 0 3 2) "=<") list:sort (0 0 2 3)}]
        [ a r:Fact; r:gives {((0 0 3 2) ">=") list:sort (3 2 0 0)}]
        skolem:lemma2062
        skolem:lemma2063
        [ a r:Fact; r:gives {(3200 23) math:difference 3177}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3177 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            3177 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1033 a r:Inference;
    r:gives {
        33 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {33 math:notEqualTo 0}]
        skolem:lemma2085
        [ a r:Fact; r:gives {((0 0 3 3) "=<") list:sort (0 0 3 3)}]
        [ a r:Fact; r:gives {((0 0 3 3) ">=") list:sort (3 3 0 0)}]
        skolem:lemma2086
        skolem:lemma2087
        [ a r:Fact; r:gives {(3300 33) math:difference 3267}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3267 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            3267 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1034 a r:Inference;
    r:gives {
        34 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {34 math:notEqualTo 0}]
        skolem:lemma2088
        [ a r:Fact; r:gives {((0 0 3 4) "=<") list:sort (0 0 3 4)}]
        [ a r:Fact; r:gives {((0 0 3 4) ">=") list:sort (4 3 0 0)}]
        skolem:lemma2089
        skolem:lemma2090
        [ a r:Fact; r:gives {(4300 34) math:difference 4266}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4266 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            4266 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1035 a r:Inference;
    r:gives {
        35 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {35 math:notEqualTo 0}]
        skolem:lemma2091
        [ a r:Fact; r:gives {((0 0 3 5) "=<") list:sort (0 0 3 5)}]
        [ a r:Fact; r:gives {((0 0 3 5) ">=") list:sort (5 3 0 0)}]
        skolem:lemma2092
        skolem:lemma2093
        [ a r:Fact; r:gives {(5300 35) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1036 a r:Inference;
    r:gives {
        36 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {36 math:notEqualTo 0}]
        skolem:lemma2094
        [ a r:Fact; r:gives {((0 0 3 6) "=<") list:sort (0 0 3 6)}]
        [ a r:Fact; r:gives {((0 0 3 6) ">=") list:sort (6 3 0 0)}]
        skolem:lemma2095
        skolem:lemma2096
        [ a r:Fact; r:gives {(6300 36) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1037 a r:Inference;
    r:gives {
        37 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {37 math:notEqualTo 0}]
        skolem:lemma2097
        [ a r:Fact; r:gives {((0 0 3 7) "=<") list:sort (0 0 3 7)}]
        [ a r:Fact; r:gives {((0 0 3 7) ">=") list:sort (7 3 0 0)}]
        skolem:lemma2098
        skolem:lemma2099
        [ a r:Fact; r:gives {(7300 37) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1038 a r:Inference;
    r:gives {
        38 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {38 math:notEqualTo 0}]
        skolem:lemma2100
        [ a r:Fact; r:gives {((0 0 3 8) "=<") list:sort (0 0 3 8)}]
        [ a r:Fact; r:gives {((0 0 3 8) ">=") list:sort (8 3 0 0)}]
        skolem:lemma2101
        skolem:lemma2102
        [ a r:Fact; r:gives {(8300 38) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1039 a r:Inference;
    r:gives {
        39 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {39 math:notEqualTo 0}]
        skolem:lemma2103
        [ a r:Fact; r:gives {((0 0 3 9) "=<") list:sort (0 0 3 9)}]
        [ a r:Fact; r:gives {((0 0 3 9) ">=") list:sort (9 3 0 0)}]
        skolem:lemma2104
        skolem:lemma2105
        [ a r:Fact; r:gives {(9300 39) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1040 a r:Inference;
    r:gives {
        40 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {40 math:notEqualTo 0}]
        skolem:lemma2106
        [ a r:Fact; r:gives {((0 0 4 0) "=<") list:sort (0 0 0 4)}]
        [ a r:Fact; r:gives {((0 0 4 0) ">=") list:sort (4 0 0 0)}]
        skolem:lemma2011
        skolem:lemma2012
        [ a r:Fact; r:gives {(4000 4) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1041 a r:Inference;
    r:gives {
        41 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {41 math:notEqualTo 0}]
        skolem:lemma2107
        [ a r:Fact; r:gives {((0 0 4 1) "=<") list:sort (0 0 1 4)}]
        [ a r:Fact; r:gives {((0 0 4 1) ">=") list:sort (4 1 0 0)}]
        skolem:lemma2039
        skolem:lemma2040
        [ a r:Fact; r:gives {(4100 14) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1042 a r:Inference;
    r:gives {
        42 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {42 math:notEqualTo 0}]
        skolem:lemma2108
        [ a r:Fact; r:gives {((0 0 4 2) "=<") list:sort (0 0 2 4)}]
        [ a r:Fact; r:gives {((0 0 4 2) ">=") list:sort (4 2 0 0)}]
        skolem:lemma2065
        skolem:lemma2066
        [ a r:Fact; r:gives {(4200 24) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1043 a r:Inference;
    r:gives {
        43 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {43 math:notEqualTo 0}]
        skolem:lemma2109
        [ a r:Fact; r:gives {((0 0 4 3) "=<") list:sort (0 0 3 4)}]
        [ a r:Fact; r:gives {((0 0 4 3) ">=") list:sort (4 3 0 0)}]
        skolem:lemma2089
        skolem:lemma2090
        [ a r:Fact; r:gives {(4300 34) math:difference 4266}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4266 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            4266 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1044 a r:Inference;
    r:gives {
        44 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {44 math:notEqualTo 0}]
        skolem:lemma2110
        [ a r:Fact; r:gives {((0 0 4 4) "=<") list:sort (0 0 4 4)}]
        [ a r:Fact; r:gives {((0 0 4 4) ">=") list:sort (4 4 0 0)}]
        skolem:lemma2111
        skolem:lemma2112
        [ a r:Fact; r:gives {(4400 44) math:difference 4356}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4356 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            4356 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1045 a r:Inference;
    r:gives {
        45 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {45 math:notEqualTo 0}]
        skolem:lemma2113
        [ a r:Fact; r:gives {((0 0 4 5) "=<") list:sort (0 0 4 5)}]
        [ a r:Fact; r:gives {((0 0 4 5) ">=") list:sort (5 4 0 0)}]
        skolem:lemma2114
        skolem:lemma2115
        [ a r:Fact; r:gives {(5400 45) math:difference 5355}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5355 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5355 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1046 a r:Inference;
    r:gives {
        46 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {46 math:notEqualTo 0}]
        skolem:lemma2116
        [ a r:Fact; r:gives {((0 0 4 6) "=<") list:sort (0 0 4 6)}]
        [ a r:Fact; r:gives {((0 0 4 6) ">=") list:sort (6 4 0 0)}]
        skolem:lemma2117
        skolem:lemma2118
        [ a r:Fact; r:gives {(6400 46) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1047 a r:Inference;
    r:gives {
        47 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {47 math:notEqualTo 0}]
        skolem:lemma2119
        [ a r:Fact; r:gives {((0 0 4 7) "=<") list:sort (0 0 4 7)}]
        [ a r:Fact; r:gives {((0 0 4 7) ">=") list:sort (7 4 0 0)}]
        skolem:lemma2120
        skolem:lemma2121
        [ a r:Fact; r:gives {(7400 47) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1048 a r:Inference;
    r:gives {
        48 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {48 math:notEqualTo 0}]
        skolem:lemma2122
        [ a r:Fact; r:gives {((0 0 4 8) "=<") list:sort (0 0 4 8)}]
        [ a r:Fact; r:gives {((0 0 4 8) ">=") list:sort (8 4 0 0)}]
        skolem:lemma2123
        skolem:lemma2124
        [ a r:Fact; r:gives {(8400 48) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1049 a r:Inference;
    r:gives {
        49 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {49 math:notEqualTo 0}]
        skolem:lemma2125
        [ a r:Fact; r:gives {((0 0 4 9) "=<") list:sort (0 0 4 9)}]
        [ a r:Fact; r:gives {((0 0 4 9) ">=") list:sort (9 4 0 0)}]
        skolem:lemma2126
        skolem:lemma2127
        [ a r:Fact; r:gives {(9400 49) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1050 a r:Inference;
    r:gives {
        50 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {50 math:notEqualTo 0}]
        skolem:lemma2128
        [ a r:Fact; r:gives {((0 0 5 0) "=<") list:sort (0 0 0 5)}]
        [ a r:Fact; r:gives {((0 0 5 0) ">=") list:sort (5 0 0 0)}]
        skolem:lemma2014
        skolem:lemma2015
        [ a r:Fact; r:gives {(5000 5) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1051 a r:Inference;
    r:gives {
        51 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {51 math:notEqualTo 0}]
        skolem:lemma2129
        [ a r:Fact; r:gives {((0 0 5 1) "=<") list:sort (0 0 1 5)}]
        [ a r:Fact; r:gives {((0 0 5 1) ">=") list:sort (5 1 0 0)}]
        skolem:lemma2042
        skolem:lemma2043
        [ a r:Fact; r:gives {(5100 15) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1052 a r:Inference;
    r:gives {
        52 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {52 math:notEqualTo 0}]
        skolem:lemma2130
        [ a r:Fact; r:gives {((0 0 5 2) "=<") list:sort (0 0 2 5)}]
        [ a r:Fact; r:gives {((0 0 5 2) ">=") list:sort (5 2 0 0)}]
        skolem:lemma2068
        skolem:lemma2069
        [ a r:Fact; r:gives {(5200 25) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1053 a r:Inference;
    r:gives {
        53 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {53 math:notEqualTo 0}]
        skolem:lemma2131
        [ a r:Fact; r:gives {((0 0 5 3) "=<") list:sort (0 0 3 5)}]
        [ a r:Fact; r:gives {((0 0 5 3) ">=") list:sort (5 3 0 0)}]
        skolem:lemma2092
        skolem:lemma2093
        [ a r:Fact; r:gives {(5300 35) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1054 a r:Inference;
    r:gives {
        54 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {54 math:notEqualTo 0}]
        skolem:lemma2132
        [ a r:Fact; r:gives {((0 0 5 4) "=<") list:sort (0 0 4 5)}]
        [ a r:Fact; r:gives {((0 0 5 4) ">=") list:sort (5 4 0 0)}]
        skolem:lemma2114
        skolem:lemma2115
        [ a r:Fact; r:gives {(5400 45) math:difference 5355}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5355 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5355 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1055 a r:Inference;
    r:gives {
        55 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {55 math:notEqualTo 0}]
        skolem:lemma2133
        [ a r:Fact; r:gives {((0 0 5 5) "=<") list:sort (0 0 5 5)}]
        [ a r:Fact; r:gives {((0 0 5 5) ">=") list:sort (5 5 0 0)}]
        skolem:lemma2134
        skolem:lemma2135
        [ a r:Fact; r:gives {(5500 55) math:difference 5445}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5445 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5445 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1056 a r:Inference;
    r:gives {
        56 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {56 math:notEqualTo 0}]
        skolem:lemma2136
        [ a r:Fact; r:gives {((0 0 5 6) "=<") list:sort (0 0 5 6)}]
        [ a r:Fact; r:gives {((0 0 5 6) ">=") list:sort (6 5 0 0)}]
        skolem:lemma2137
        skolem:lemma2138
        [ a r:Fact; r:gives {(6500 56) math:difference 6444}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6444 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            6444 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1057 a r:Inference;
    r:gives {
        57 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {57 math:notEqualTo 0}]
        skolem:lemma2139
        [ a r:Fact; r:gives {((0 0 5 7) "=<") list:sort (0 0 5 7)}]
        [ a r:Fact; r:gives {((0 0 5 7) ">=") list:sort (7 5 0 0)}]
        skolem:lemma2140
        skolem:lemma2141
        [ a r:Fact; r:gives {(7500 57) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1058 a r:Inference;
    r:gives {
        58 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {58 math:notEqualTo 0}]
        skolem:lemma2142
        [ a r:Fact; r:gives {((0 0 5 8) "=<") list:sort (0 0 5 8)}]
        [ a r:Fact; r:gives {((0 0 5 8) ">=") list:sort (8 5 0 0)}]
        skolem:lemma2143
        skolem:lemma2144
        [ a r:Fact; r:gives {(8500 58) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1059 a r:Inference;
    r:gives {
        59 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {59 math:notEqualTo 0}]
        skolem:lemma2145
        [ a r:Fact; r:gives {((0 0 5 9) "=<") list:sort (0 0 5 9)}]
        [ a r:Fact; r:gives {((0 0 5 9) ">=") list:sort (9 5 0 0)}]
        skolem:lemma2146
        skolem:lemma2147
        [ a r:Fact; r:gives {(9500 59) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1060 a r:Inference;
    r:gives {
        60 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {60 math:notEqualTo 0}]
        skolem:lemma2148
        [ a r:Fact; r:gives {((0 0 6 0) "=<") list:sort (0 0 0 6)}]
        [ a r:Fact; r:gives {((0 0 6 0) ">=") list:sort (6 0 0 0)}]
        skolem:lemma2017
        skolem:lemma2018
        [ a r:Fact; r:gives {(6000 6) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1061 a r:Inference;
    r:gives {
        61 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {61 math:notEqualTo 0}]
        skolem:lemma2149
        [ a r:Fact; r:gives {((0 0 6 1) "=<") list:sort (0 0 1 6)}]
        [ a r:Fact; r:gives {((0 0 6 1) ">=") list:sort (6 1 0 0)}]
        skolem:lemma2045
        skolem:lemma2046
        [ a r:Fact; r:gives {(6100 16) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1062 a r:Inference;
    r:gives {
        62 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {62 math:notEqualTo 0}]
        skolem:lemma2150
        [ a r:Fact; r:gives {((0 0 6 2) "=<") list:sort (0 0 2 6)}]
        [ a r:Fact; r:gives {((0 0 6 2) ">=") list:sort (6 2 0 0)}]
        skolem:lemma2071
        skolem:lemma2072
        [ a r:Fact; r:gives {(6200 26) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1063 a r:Inference;
    r:gives {
        63 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {63 math:notEqualTo 0}]
        skolem:lemma2151
        [ a r:Fact; r:gives {((0 0 6 3) "=<") list:sort (0 0 3 6)}]
        [ a r:Fact; r:gives {((0 0 6 3) ">=") list:sort (6 3 0 0)}]
        skolem:lemma2095
        skolem:lemma2096
        [ a r:Fact; r:gives {(6300 36) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1064 a r:Inference;
    r:gives {
        64 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {64 math:notEqualTo 0}]
        skolem:lemma2152
        [ a r:Fact; r:gives {((0 0 6 4) "=<") list:sort (0 0 4 6)}]
        [ a r:Fact; r:gives {((0 0 6 4) ">=") list:sort (6 4 0 0)}]
        skolem:lemma2117
        skolem:lemma2118
        [ a r:Fact; r:gives {(6400 46) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1065 a r:Inference;
    r:gives {
        65 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {65 math:notEqualTo 0}]
        skolem:lemma2153
        [ a r:Fact; r:gives {((0 0 6 5) "=<") list:sort (0 0 5 6)}]
        [ a r:Fact; r:gives {((0 0 6 5) ">=") list:sort (6 5 0 0)}]
        skolem:lemma2137
        skolem:lemma2138
        [ a r:Fact; r:gives {(6500 56) math:difference 6444}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6444 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            6444 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1066 a r:Inference;
    r:gives {
        66 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {66 math:notEqualTo 0}]
        skolem:lemma2154
        [ a r:Fact; r:gives {((0 0 6 6) "=<") list:sort (0 0 6 6)}]
        [ a r:Fact; r:gives {((0 0 6 6) ">=") list:sort (6 6 0 0)}]
        skolem:lemma2155
        skolem:lemma2156
        [ a r:Fact; r:gives {(6600 66) math:difference 6534}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6534 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6534 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6534];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1067 a r:Inference;
    r:gives {
        67 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {67 math:notEqualTo 0}]
        skolem:lemma2157
        [ a r:Fact; r:gives {((0 0 6 7) "=<") list:sort (0 0 6 7)}]
        [ a r:Fact; r:gives {((0 0 6 7) ">=") list:sort (7 6 0 0)}]
        skolem:lemma2158
        skolem:lemma2159
        [ a r:Fact; r:gives {(7600 67) math:difference 7533}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7533 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7533 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1068 a r:Inference;
    r:gives {
        68 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {68 math:notEqualTo 0}]
        skolem:lemma2160
        [ a r:Fact; r:gives {((0 0 6 8) "=<") list:sort (0 0 6 8)}]
        [ a r:Fact; r:gives {((0 0 6 8) ">=") list:sort (8 6 0 0)}]
        skolem:lemma2161
        skolem:lemma2162
        [ a r:Fact; r:gives {(8600 68) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1069 a r:Inference;
    r:gives {
        69 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {69 math:notEqualTo 0}]
        skolem:lemma2163
        [ a r:Fact; r:gives {((0 0 6 9) "=<") list:sort (0 0 6 9)}]
        [ a r:Fact; r:gives {((0 0 6 9) ">=") list:sort (9 6 0 0)}]
        skolem:lemma2164
        skolem:lemma2165
        [ a r:Fact; r:gives {(9600 69) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1070 a r:Inference;
    r:gives {
        70 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {70 math:notEqualTo 0}]
        skolem:lemma2166
        [ a r:Fact; r:gives {((0 0 7 0) "=<") list:sort (0 0 0 7)}]
        [ a r:Fact; r:gives {((0 0 7 0) ">=") list:sort (7 0 0 0)}]
        skolem:lemma2020
        skolem:lemma2021
        [ a r:Fact; r:gives {(7000 7) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1071 a r:Inference;
    r:gives {
        71 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {71 math:notEqualTo 0}]
        skolem:lemma2167
        [ a r:Fact; r:gives {((0 0 7 1) "=<") list:sort (0 0 1 7)}]
        [ a r:Fact; r:gives {((0 0 7 1) ">=") list:sort (7 1 0 0)}]
        skolem:lemma2048
        skolem:lemma2049
        [ a r:Fact; r:gives {(7100 17) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1072 a r:Inference;
    r:gives {
        72 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {72 math:notEqualTo 0}]
        skolem:lemma2168
        [ a r:Fact; r:gives {((0 0 7 2) "=<") list:sort (0 0 2 7)}]
        [ a r:Fact; r:gives {((0 0 7 2) ">=") list:sort (7 2 0 0)}]
        skolem:lemma2074
        skolem:lemma2075
        [ a r:Fact; r:gives {(7200 27) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1073 a r:Inference;
    r:gives {
        73 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {73 math:notEqualTo 0}]
        skolem:lemma2169
        [ a r:Fact; r:gives {((0 0 7 3) "=<") list:sort (0 0 3 7)}]
        [ a r:Fact; r:gives {((0 0 7 3) ">=") list:sort (7 3 0 0)}]
        skolem:lemma2098
        skolem:lemma2099
        [ a r:Fact; r:gives {(7300 37) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1074 a r:Inference;
    r:gives {
        74 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {74 math:notEqualTo 0}]
        skolem:lemma2170
        [ a r:Fact; r:gives {((0 0 7 4) "=<") list:sort (0 0 4 7)}]
        [ a r:Fact; r:gives {((0 0 7 4) ">=") list:sort (7 4 0 0)}]
        skolem:lemma2120
        skolem:lemma2121
        [ a r:Fact; r:gives {(7400 47) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1075 a r:Inference;
    r:gives {
        75 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {75 math:notEqualTo 0}]
        skolem:lemma2171
        [ a r:Fact; r:gives {((0 0 7 5) "=<") list:sort (0 0 5 7)}]
        [ a r:Fact; r:gives {((0 0 7 5) ">=") list:sort (7 5 0 0)}]
        skolem:lemma2140
        skolem:lemma2141
        [ a r:Fact; r:gives {(7500 57) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1076 a r:Inference;
    r:gives {
        76 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {76 math:notEqualTo 0}]
        skolem:lemma2172
        [ a r:Fact; r:gives {((0 0 7 6) "=<") list:sort (0 0 6 7)}]
        [ a r:Fact; r:gives {((0 0 7 6) ">=") list:sort (7 6 0 0)}]
        skolem:lemma2158
        skolem:lemma2159
        [ a r:Fact; r:gives {(7600 67) math:difference 7533}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7533 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7533 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1077 a r:Inference;
    r:gives {
        77 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {77 math:notEqualTo 0}]
        skolem:lemma2173
        [ a r:Fact; r:gives {((0 0 7 7) "=<") list:sort (0 0 7 7)}]
        [ a r:Fact; r:gives {((0 0 7 7) ">=") list:sort (7 7 0 0)}]
        skolem:lemma2174
        skolem:lemma2175
        [ a r:Fact; r:gives {(7700 77) math:difference 7623}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7623 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7623 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7623];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1078 a r:Inference;
    r:gives {
        78 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {78 math:notEqualTo 0}]
        skolem:lemma2176
        [ a r:Fact; r:gives {((0 0 7 8) "=<") list:sort (0 0 7 8)}]
        [ a r:Fact; r:gives {((0 0 7 8) ">=") list:sort (8 7 0 0)}]
        skolem:lemma2177
        skolem:lemma2178
        [ a r:Fact; r:gives {(8700 78) math:difference 8622}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8622 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8622 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1079 a r:Inference;
    r:gives {
        79 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {79 math:notEqualTo 0}]
        skolem:lemma2179
        [ a r:Fact; r:gives {((0 0 7 9) "=<") list:sort (0 0 7 9)}]
        [ a r:Fact; r:gives {((0 0 7 9) ">=") list:sort (9 7 0 0)}]
        skolem:lemma2180
        skolem:lemma2181
        [ a r:Fact; r:gives {(9700 79) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1080 a r:Inference;
    r:gives {
        80 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {80 math:notEqualTo 0}]
        skolem:lemma2182
        [ a r:Fact; r:gives {((0 0 8 0) "=<") list:sort (0 0 0 8)}]
        [ a r:Fact; r:gives {((0 0 8 0) ">=") list:sort (8 0 0 0)}]
        skolem:lemma2023
        skolem:lemma2024
        [ a r:Fact; r:gives {(8000 8) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1081 a r:Inference;
    r:gives {
        81 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {81 math:notEqualTo 0}]
        skolem:lemma2183
        [ a r:Fact; r:gives {((0 0 8 1) "=<") list:sort (0 0 1 8)}]
        [ a r:Fact; r:gives {((0 0 8 1) ">=") list:sort (8 1 0 0)}]
        skolem:lemma2051
        skolem:lemma2052
        [ a r:Fact; r:gives {(8100 18) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1082 a r:Inference;
    r:gives {
        82 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {82 math:notEqualTo 0}]
        skolem:lemma2184
        [ a r:Fact; r:gives {((0 0 8 2) "=<") list:sort (0 0 2 8)}]
        [ a r:Fact; r:gives {((0 0 8 2) ">=") list:sort (8 2 0 0)}]
        skolem:lemma2077
        skolem:lemma2078
        [ a r:Fact; r:gives {(8200 28) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1083 a r:Inference;
    r:gives {
        83 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {83 math:notEqualTo 0}]
        skolem:lemma2185
        [ a r:Fact; r:gives {((0 0 8 3) "=<") list:sort (0 0 3 8)}]
        [ a r:Fact; r:gives {((0 0 8 3) ">=") list:sort (8 3 0 0)}]
        skolem:lemma2101
        skolem:lemma2102
        [ a r:Fact; r:gives {(8300 38) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1084 a r:Inference;
    r:gives {
        84 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {84 math:notEqualTo 0}]
        skolem:lemma2186
        [ a r:Fact; r:gives {((0 0 8 4) "=<") list:sort (0 0 4 8)}]
        [ a r:Fact; r:gives {((0 0 8 4) ">=") list:sort (8 4 0 0)}]
        skolem:lemma2123
        skolem:lemma2124
        [ a r:Fact; r:gives {(8400 48) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1085 a r:Inference;
    r:gives {
        85 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {85 math:notEqualTo 0}]
        skolem:lemma2187
        [ a r:Fact; r:gives {((0 0 8 5) "=<") list:sort (0 0 5 8)}]
        [ a r:Fact; r:gives {((0 0 8 5) ">=") list:sort (8 5 0 0)}]
        skolem:lemma2143
        skolem:lemma2144
        [ a r:Fact; r:gives {(8500 58) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1086 a r:Inference;
    r:gives {
        86 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {86 math:notEqualTo 0}]
        skolem:lemma2188
        [ a r:Fact; r:gives {((0 0 8 6) "=<") list:sort (0 0 6 8)}]
        [ a r:Fact; r:gives {((0 0 8 6) ">=") list:sort (8 6 0 0)}]
        skolem:lemma2161
        skolem:lemma2162
        [ a r:Fact; r:gives {(8600 68) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1087 a r:Inference;
    r:gives {
        87 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {87 math:notEqualTo 0}]
        skolem:lemma2189
        [ a r:Fact; r:gives {((0 0 8 7) "=<") list:sort (0 0 7 8)}]
        [ a r:Fact; r:gives {((0 0 8 7) ">=") list:sort (8 7 0 0)}]
        skolem:lemma2177
        skolem:lemma2178
        [ a r:Fact; r:gives {(8700 78) math:difference 8622}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8622 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8622 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1088 a r:Inference;
    r:gives {
        88 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {88 math:notEqualTo 0}]
        skolem:lemma2190
        [ a r:Fact; r:gives {((0 0 8 8) "=<") list:sort (0 0 8 8)}]
        [ a r:Fact; r:gives {((0 0 8 8) ">=") list:sort (8 8 0 0)}]
        skolem:lemma2191
        skolem:lemma2192
        [ a r:Fact; r:gives {(8800 88) math:difference 8712}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8712 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8712 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8712];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1089 a r:Inference;
    r:gives {
        89 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {89 math:notEqualTo 0}]
        skolem:lemma2193
        [ a r:Fact; r:gives {((0 0 8 9) "=<") list:sort (0 0 8 9)}]
        [ a r:Fact; r:gives {((0 0 8 9) ">=") list:sort (9 8 0 0)}]
        skolem:lemma2194
        skolem:lemma2195
        [ a r:Fact; r:gives {(9800 89) math:difference 9711}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9711 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9711 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1090 a r:Inference;
    r:gives {
        90 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {90 math:notEqualTo 0}]
        skolem:lemma2196
        [ a r:Fact; r:gives {((0 0 9 0) "=<") list:sort (0 0 0 9)}]
        [ a r:Fact; r:gives {((0 0 9 0) ">=") list:sort (9 0 0 0)}]
        skolem:lemma2026
        skolem:lemma2027
        [ a r:Fact; r:gives {(9000 9) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1091 a r:Inference;
    r:gives {
        91 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {91 math:notEqualTo 0}]
        skolem:lemma2197
        [ a r:Fact; r:gives {((0 0 9 1) "=<") list:sort (0 0 1 9)}]
        [ a r:Fact; r:gives {((0 0 9 1) ">=") list:sort (9 1 0 0)}]
        skolem:lemma2054
        skolem:lemma2055
        [ a r:Fact; r:gives {(9100 19) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1092 a r:Inference;
    r:gives {
        92 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {92 math:notEqualTo 0}]
        skolem:lemma2198
        [ a r:Fact; r:gives {((0 0 9 2) "=<") list:sort (0 0 2 9)}]
        [ a r:Fact; r:gives {((0 0 9 2) ">=") list:sort (9 2 0 0)}]
        skolem:lemma2080
        skolem:lemma2081
        [ a r:Fact; r:gives {(9200 29) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1093 a r:Inference;
    r:gives {
        93 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {93 math:notEqualTo 0}]
        skolem:lemma2199
        [ a r:Fact; r:gives {((0 0 9 3) "=<") list:sort (0 0 3 9)}]
        [ a r:Fact; r:gives {((0 0 9 3) ">=") list:sort (9 3 0 0)}]
        skolem:lemma2104
        skolem:lemma2105
        [ a r:Fact; r:gives {(9300 39) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1094 a r:Inference;
    r:gives {
        94 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {94 math:notEqualTo 0}]
        skolem:lemma2200
        [ a r:Fact; r:gives {((0 0 9 4) "=<") list:sort (0 0 4 9)}]
        [ a r:Fact; r:gives {((0 0 9 4) ">=") list:sort (9 4 0 0)}]
        skolem:lemma2126
        skolem:lemma2127
        [ a r:Fact; r:gives {(9400 49) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1095 a r:Inference;
    r:gives {
        95 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {95 math:notEqualTo 0}]
        skolem:lemma2201
        [ a r:Fact; r:gives {((0 0 9 5) "=<") list:sort (0 0 5 9)}]
        [ a r:Fact; r:gives {((0 0 9 5) ">=") list:sort (9 5 0 0)}]
        skolem:lemma2146
        skolem:lemma2147
        [ a r:Fact; r:gives {(9500 59) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1096 a r:Inference;
    r:gives {
        96 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {96 math:notEqualTo 0}]
        skolem:lemma2202
        [ a r:Fact; r:gives {((0 0 9 6) "=<") list:sort (0 0 6 9)}]
        [ a r:Fact; r:gives {((0 0 9 6) ">=") list:sort (9 6 0 0)}]
        skolem:lemma2164
        skolem:lemma2165
        [ a r:Fact; r:gives {(9600 69) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1097 a r:Inference;
    r:gives {
        97 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {97 math:notEqualTo 0}]
        skolem:lemma2203
        [ a r:Fact; r:gives {((0 0 9 7) "=<") list:sort (0 0 7 9)}]
        [ a r:Fact; r:gives {((0 0 9 7) ">=") list:sort (9 7 0 0)}]
        skolem:lemma2180
        skolem:lemma2181
        [ a r:Fact; r:gives {(9700 79) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1098 a r:Inference;
    r:gives {
        98 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {98 math:notEqualTo 0}]
        skolem:lemma2204
        [ a r:Fact; r:gives {((0 0 9 8) "=<") list:sort (0 0 8 9)}]
        [ a r:Fact; r:gives {((0 0 9 8) ">=") list:sort (9 8 0 0)}]
        skolem:lemma2194
        skolem:lemma2195
        [ a r:Fact; r:gives {(9800 89) math:difference 9711}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9711 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9711 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1099 a r:Inference;
    r:gives {
        99 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {99 math:notEqualTo 0}]
        skolem:lemma2205
        [ a r:Fact; r:gives {((0 0 9 9) "=<") list:sort (0 0 9 9)}]
        [ a r:Fact; r:gives {((0 0 9 9) ">=") list:sort (9 9 0 0)}]
        skolem:lemma2206
        skolem:lemma2207
        [ a r:Fact; r:gives {(9900 99) math:difference 9801}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9801 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9801 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 0 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9801];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1100 a r:Inference;
    r:gives {
        100 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {100 math:notEqualTo 0}]
        skolem:lemma2208
        [ a r:Fact; r:gives {((0 1 0 0) "=<") list:sort (0 0 0 1)}]
        [ a r:Fact; r:gives {((0 1 0 0) ">=") list:sort (1 0 0 0)}]
        skolem:lemma2001
        skolem:lemma2002
        [ a r:Fact; r:gives {(1000 1) math:difference 999}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            999 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            999 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1101 a r:Inference;
    r:gives {
        101 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {101 math:notEqualTo 0}]
        skolem:lemma2209
        [ a r:Fact; r:gives {((0 1 0 1) "=<") list:sort (0 0 1 1)}]
        [ a r:Fact; r:gives {((0 1 0 1) ">=") list:sort (1 1 0 0)}]
        skolem:lemma2030
        skolem:lemma2031
        [ a r:Fact; r:gives {(1100 11) math:difference 1089}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1089 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1089 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 101];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1089];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1102 a r:Inference;
    r:gives {
        102 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {102 math:notEqualTo 0}]
        skolem:lemma2210
        [ a r:Fact; r:gives {((0 1 0 2) "=<") list:sort (0 0 1 2)}]
        [ a r:Fact; r:gives {((0 1 0 2) ">=") list:sort (2 1 0 0)}]
        skolem:lemma2033
        skolem:lemma2034
        [ a r:Fact; r:gives {(2100 12) math:difference 2088}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2088 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            2088 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 102];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2088];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1103 a r:Inference;
    r:gives {
        103 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {103 math:notEqualTo 0}]
        skolem:lemma2211
        [ a r:Fact; r:gives {((0 1 0 3) "=<") list:sort (0 0 1 3)}]
        [ a r:Fact; r:gives {((0 1 0 3) ">=") list:sort (3 1 0 0)}]
        skolem:lemma2036
        skolem:lemma2037
        [ a r:Fact; r:gives {(3100 13) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 103];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1104 a r:Inference;
    r:gives {
        104 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {104 math:notEqualTo 0}]
        skolem:lemma2212
        [ a r:Fact; r:gives {((0 1 0 4) "=<") list:sort (0 0 1 4)}]
        [ a r:Fact; r:gives {((0 1 0 4) ">=") list:sort (4 1 0 0)}]
        skolem:lemma2039
        skolem:lemma2040
        [ a r:Fact; r:gives {(4100 14) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 104];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1105 a r:Inference;
    r:gives {
        105 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {105 math:notEqualTo 0}]
        skolem:lemma2213
        [ a r:Fact; r:gives {((0 1 0 5) "=<") list:sort (0 0 1 5)}]
        [ a r:Fact; r:gives {((0 1 0 5) ">=") list:sort (5 1 0 0)}]
        skolem:lemma2042
        skolem:lemma2043
        [ a r:Fact; r:gives {(5100 15) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1106 a r:Inference;
    r:gives {
        106 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {106 math:notEqualTo 0}]
        skolem:lemma2214
        [ a r:Fact; r:gives {((0 1 0 6) "=<") list:sort (0 0 1 6)}]
        [ a r:Fact; r:gives {((0 1 0 6) ">=") list:sort (6 1 0 0)}]
        skolem:lemma2045
        skolem:lemma2046
        [ a r:Fact; r:gives {(6100 16) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 106];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1107 a r:Inference;
    r:gives {
        107 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {107 math:notEqualTo 0}]
        skolem:lemma2215
        [ a r:Fact; r:gives {((0 1 0 7) "=<") list:sort (0 0 1 7)}]
        [ a r:Fact; r:gives {((0 1 0 7) ">=") list:sort (7 1 0 0)}]
        skolem:lemma2048
        skolem:lemma2049
        [ a r:Fact; r:gives {(7100 17) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 107];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1108 a r:Inference;
    r:gives {
        108 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {108 math:notEqualTo 0}]
        skolem:lemma2216
        [ a r:Fact; r:gives {((0 1 0 8) "=<") list:sort (0 0 1 8)}]
        [ a r:Fact; r:gives {((0 1 0 8) ">=") list:sort (8 1 0 0)}]
        skolem:lemma2051
        skolem:lemma2052
        [ a r:Fact; r:gives {(8100 18) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 108];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1109 a r:Inference;
    r:gives {
        109 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {109 math:notEqualTo 0}]
        skolem:lemma2217
        [ a r:Fact; r:gives {((0 1 0 9) "=<") list:sort (0 0 1 9)}]
        [ a r:Fact; r:gives {((0 1 0 9) ">=") list:sort (9 1 0 0)}]
        skolem:lemma2054
        skolem:lemma2055
        [ a r:Fact; r:gives {(9100 19) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1110 a r:Inference;
    r:gives {
        110 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {110 math:notEqualTo 0}]
        skolem:lemma2218
        [ a r:Fact; r:gives {((0 1 1 0) "=<") list:sort (0 0 1 1)}]
        [ a r:Fact; r:gives {((0 1 1 0) ">=") list:sort (1 1 0 0)}]
        skolem:lemma2030
        skolem:lemma2031
        [ a r:Fact; r:gives {(1100 11) math:difference 1089}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1089 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1089 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1089];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1111 a r:Inference;
    r:gives {
        111 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {111 math:notEqualTo 0}]
        skolem:lemma2219
        [ a r:Fact; r:gives {((0 1 1 1) "=<") list:sort (0 1 1 1)}]
        [ a r:Fact; r:gives {((0 1 1 1) ">=") list:sort (1 1 1 0)}]
        skolem:lemma2220
        skolem:lemma2221
        [ a r:Fact; r:gives {(1110 111) math:difference 999}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            999 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            999 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1112 a r:Inference;
    r:gives {
        112 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {112 math:notEqualTo 0}]
        skolem:lemma2222
        [ a r:Fact; r:gives {((0 1 1 2) "=<") list:sort (0 1 1 2)}]
        [ a r:Fact; r:gives {((0 1 1 2) ">=") list:sort (2 1 1 0)}]
        skolem:lemma2223
        skolem:lemma2224
        [ a r:Fact; r:gives {(2110 112) math:difference 1998}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1998 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1998 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 112];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 112];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1113 a r:Inference;
    r:gives {
        113 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {113 math:notEqualTo 0}]
        skolem:lemma2225
        [ a r:Fact; r:gives {((0 1 1 3) "=<") list:sort (0 1 1 3)}]
        [ a r:Fact; r:gives {((0 1 1 3) ">=") list:sort (3 1 1 0)}]
        skolem:lemma2226
        skolem:lemma2227
        [ a r:Fact; r:gives {(3110 113) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 113];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 113];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1114 a r:Inference;
    r:gives {
        114 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {114 math:notEqualTo 0}]
        skolem:lemma2228
        [ a r:Fact; r:gives {((0 1 1 4) "=<") list:sort (0 1 1 4)}]
        [ a r:Fact; r:gives {((0 1 1 4) ">=") list:sort (4 1 1 0)}]
        skolem:lemma2229
        skolem:lemma2230
        [ a r:Fact; r:gives {(4110 114) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1115 a r:Inference;
    r:gives {
        115 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {115 math:notEqualTo 0}]
        skolem:lemma2231
        [ a r:Fact; r:gives {((0 1 1 5) "=<") list:sort (0 1 1 5)}]
        [ a r:Fact; r:gives {((0 1 1 5) ">=") list:sort (5 1 1 0)}]
        skolem:lemma2232
        skolem:lemma2233
        [ a r:Fact; r:gives {(5110 115) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1116 a r:Inference;
    r:gives {
        116 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {116 math:notEqualTo 0}]
        skolem:lemma2234
        [ a r:Fact; r:gives {((0 1 1 6) "=<") list:sort (0 1 1 6)}]
        [ a r:Fact; r:gives {((0 1 1 6) ">=") list:sort (6 1 1 0)}]
        skolem:lemma2235
        skolem:lemma2236
        [ a r:Fact; r:gives {(6110 116) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1117 a r:Inference;
    r:gives {
        117 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {117 math:notEqualTo 0}]
        skolem:lemma2237
        [ a r:Fact; r:gives {((0 1 1 7) "=<") list:sort (0 1 1 7)}]
        [ a r:Fact; r:gives {((0 1 1 7) ">=") list:sort (7 1 1 0)}]
        skolem:lemma2238
        skolem:lemma2239
        [ a r:Fact; r:gives {(7110 117) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1118 a r:Inference;
    r:gives {
        118 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {118 math:notEqualTo 0}]
        skolem:lemma2240
        [ a r:Fact; r:gives {((0 1 1 8) "=<") list:sort (0 1 1 8)}]
        [ a r:Fact; r:gives {((0 1 1 8) ">=") list:sort (8 1 1 0)}]
        skolem:lemma2241
        skolem:lemma2242
        [ a r:Fact; r:gives {(8110 118) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 118];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 118];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1119 a r:Inference;
    r:gives {
        119 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {119 math:notEqualTo 0}]
        skolem:lemma2243
        [ a r:Fact; r:gives {((0 1 1 9) "=<") list:sort (0 1 1 9)}]
        [ a r:Fact; r:gives {((0 1 1 9) ">=") list:sort (9 1 1 0)}]
        skolem:lemma2244
        skolem:lemma2245
        [ a r:Fact; r:gives {(9110 119) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 119];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 119];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1120 a r:Inference;
    r:gives {
        120 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {120 math:notEqualTo 0}]
        skolem:lemma2246
        [ a r:Fact; r:gives {((0 1 2 0) "=<") list:sort (0 0 1 2)}]
        [ a r:Fact; r:gives {((0 1 2 0) ">=") list:sort (2 1 0 0)}]
        skolem:lemma2033
        skolem:lemma2034
        [ a r:Fact; r:gives {(2100 12) math:difference 2088}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2088 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            2088 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 120];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2088];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1121 a r:Inference;
    r:gives {
        121 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {121 math:notEqualTo 0}]
        skolem:lemma2247
        [ a r:Fact; r:gives {((0 1 2 1) "=<") list:sort (0 1 1 2)}]
        [ a r:Fact; r:gives {((0 1 2 1) ">=") list:sort (2 1 1 0)}]
        skolem:lemma2223
        skolem:lemma2224
        [ a r:Fact; r:gives {(2110 112) math:difference 1998}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1998 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1998 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 121];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 112];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1122 a r:Inference;
    r:gives {
        122 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {122 math:notEqualTo 0}]
        skolem:lemma2248
        [ a r:Fact; r:gives {((0 1 2 2) "=<") list:sort (0 1 2 2)}]
        [ a r:Fact; r:gives {((0 1 2 2) ">=") list:sort (2 2 1 0)}]
        skolem:lemma2249
        skolem:lemma2250
        [ a r:Fact; r:gives {(2210 122) math:difference 2088}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2088 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            2088 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 122];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 122];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2088];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1123 a r:Inference;
    r:gives {
        123 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {123 math:notEqualTo 0}]
        skolem:lemma2251
        [ a r:Fact; r:gives {((0 1 2 3) "=<") list:sort (0 1 2 3)}]
        [ a r:Fact; r:gives {((0 1 2 3) ">=") list:sort (3 2 1 0)}]
        skolem:lemma2252
        skolem:lemma2253
        [ a r:Fact; r:gives {(3210 123) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1124 a r:Inference;
    r:gives {
        124 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {124 math:notEqualTo 0}]
        skolem:lemma2254
        [ a r:Fact; r:gives {((0 1 2 4) "=<") list:sort (0 1 2 4)}]
        [ a r:Fact; r:gives {((0 1 2 4) ">=") list:sort (4 2 1 0)}]
        skolem:lemma2255
        skolem:lemma2256
        [ a r:Fact; r:gives {(4210 124) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1125 a r:Inference;
    r:gives {
        125 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {125 math:notEqualTo 0}]
        skolem:lemma2257
        [ a r:Fact; r:gives {((0 1 2 5) "=<") list:sort (0 1 2 5)}]
        [ a r:Fact; r:gives {((0 1 2 5) ">=") list:sort (5 2 1 0)}]
        skolem:lemma2258
        skolem:lemma2259
        [ a r:Fact; r:gives {(5210 125) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1126 a r:Inference;
    r:gives {
        126 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {126 math:notEqualTo 0}]
        skolem:lemma2260
        [ a r:Fact; r:gives {((0 1 2 6) "=<") list:sort (0 1 2 6)}]
        [ a r:Fact; r:gives {((0 1 2 6) ">=") list:sort (6 2 1 0)}]
        skolem:lemma2261
        skolem:lemma2262
        [ a r:Fact; r:gives {(6210 126) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1127 a r:Inference;
    r:gives {
        127 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {127 math:notEqualTo 0}]
        skolem:lemma2263
        [ a r:Fact; r:gives {((0 1 2 7) "=<") list:sort (0 1 2 7)}]
        [ a r:Fact; r:gives {((0 1 2 7) ">=") list:sort (7 2 1 0)}]
        skolem:lemma2264
        skolem:lemma2265
        [ a r:Fact; r:gives {(7210 127) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1128 a r:Inference;
    r:gives {
        128 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {128 math:notEqualTo 0}]
        skolem:lemma2266
        [ a r:Fact; r:gives {((0 1 2 8) "=<") list:sort (0 1 2 8)}]
        [ a r:Fact; r:gives {((0 1 2 8) ">=") list:sort (8 2 1 0)}]
        skolem:lemma2267
        skolem:lemma2268
        [ a r:Fact; r:gives {(8210 128) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1129 a r:Inference;
    r:gives {
        129 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {129 math:notEqualTo 0}]
        skolem:lemma2269
        [ a r:Fact; r:gives {((0 1 2 9) "=<") list:sort (0 1 2 9)}]
        [ a r:Fact; r:gives {((0 1 2 9) ">=") list:sort (9 2 1 0)}]
        skolem:lemma2270
        skolem:lemma2271
        [ a r:Fact; r:gives {(9210 129) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1130 a r:Inference;
    r:gives {
        130 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {130 math:notEqualTo 0}]
        skolem:lemma2272
        [ a r:Fact; r:gives {((0 1 3 0) "=<") list:sort (0 0 1 3)}]
        [ a r:Fact; r:gives {((0 1 3 0) ">=") list:sort (3 1 0 0)}]
        skolem:lemma2036
        skolem:lemma2037
        [ a r:Fact; r:gives {(3100 13) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 130];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1131 a r:Inference;
    r:gives {
        131 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {131 math:notEqualTo 0}]
        skolem:lemma2273
        [ a r:Fact; r:gives {((0 1 3 1) "=<") list:sort (0 1 1 3)}]
        [ a r:Fact; r:gives {((0 1 3 1) ">=") list:sort (3 1 1 0)}]
        skolem:lemma2226
        skolem:lemma2227
        [ a r:Fact; r:gives {(3110 113) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 131];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 113];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1132 a r:Inference;
    r:gives {
        132 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {132 math:notEqualTo 0}]
        skolem:lemma2274
        [ a r:Fact; r:gives {((0 1 3 2) "=<") list:sort (0 1 2 3)}]
        [ a r:Fact; r:gives {((0 1 3 2) ">=") list:sort (3 2 1 0)}]
        skolem:lemma2252
        skolem:lemma2253
        [ a r:Fact; r:gives {(3210 123) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 132];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1133 a r:Inference;
    r:gives {
        133 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {133 math:notEqualTo 0}]
        skolem:lemma2275
        [ a r:Fact; r:gives {((0 1 3 3) "=<") list:sort (0 1 3 3)}]
        [ a r:Fact; r:gives {((0 1 3 3) ">=") list:sort (3 3 1 0)}]
        skolem:lemma2276
        skolem:lemma2277
        [ a r:Fact; r:gives {(3310 133) math:difference 3177}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3177 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            3177 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 133];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 133];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1134 a r:Inference;
    r:gives {
        134 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {134 math:notEqualTo 0}]
        skolem:lemma2278
        [ a r:Fact; r:gives {((0 1 3 4) "=<") list:sort (0 1 3 4)}]
        [ a r:Fact; r:gives {((0 1 3 4) ">=") list:sort (4 3 1 0)}]
        skolem:lemma2279
        skolem:lemma2280
        [ a r:Fact; r:gives {(4310 134) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1135 a r:Inference;
    r:gives {
        135 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {135 math:notEqualTo 0}]
        skolem:lemma2281
        [ a r:Fact; r:gives {((0 1 3 5) "=<") list:sort (0 1 3 5)}]
        [ a r:Fact; r:gives {((0 1 3 5) ">=") list:sort (5 3 1 0)}]
        skolem:lemma2282
        skolem:lemma2283
        [ a r:Fact; r:gives {(5310 135) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1136 a r:Inference;
    r:gives {
        136 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {136 math:notEqualTo 0}]
        skolem:lemma2284
        [ a r:Fact; r:gives {((0 1 3 6) "=<") list:sort (0 1 3 6)}]
        [ a r:Fact; r:gives {((0 1 3 6) ">=") list:sort (6 3 1 0)}]
        skolem:lemma2285
        skolem:lemma2286
        [ a r:Fact; r:gives {(6310 136) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1137 a r:Inference;
    r:gives {
        137 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {137 math:notEqualTo 0}]
        skolem:lemma2287
        [ a r:Fact; r:gives {((0 1 3 7) "=<") list:sort (0 1 3 7)}]
        [ a r:Fact; r:gives {((0 1 3 7) ">=") list:sort (7 3 1 0)}]
        skolem:lemma2288
        skolem:lemma2289
        [ a r:Fact; r:gives {(7310 137) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1138 a r:Inference;
    r:gives {
        138 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {138 math:notEqualTo 0}]
        skolem:lemma2290
        [ a r:Fact; r:gives {((0 1 3 8) "=<") list:sort (0 1 3 8)}]
        [ a r:Fact; r:gives {((0 1 3 8) ">=") list:sort (8 3 1 0)}]
        skolem:lemma2291
        skolem:lemma2292
        [ a r:Fact; r:gives {(8310 138) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1139 a r:Inference;
    r:gives {
        139 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {139 math:notEqualTo 0}]
        skolem:lemma2293
        [ a r:Fact; r:gives {((0 1 3 9) "=<") list:sort (0 1 3 9)}]
        [ a r:Fact; r:gives {((0 1 3 9) ">=") list:sort (9 3 1 0)}]
        skolem:lemma2294
        skolem:lemma2295
        [ a r:Fact; r:gives {(9310 139) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1140 a r:Inference;
    r:gives {
        140 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {140 math:notEqualTo 0}]
        skolem:lemma2296
        [ a r:Fact; r:gives {((0 1 4 0) "=<") list:sort (0 0 1 4)}]
        [ a r:Fact; r:gives {((0 1 4 0) ">=") list:sort (4 1 0 0)}]
        skolem:lemma2039
        skolem:lemma2040
        [ a r:Fact; r:gives {(4100 14) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 140];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1141 a r:Inference;
    r:gives {
        141 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {141 math:notEqualTo 0}]
        skolem:lemma2297
        [ a r:Fact; r:gives {((0 1 4 1) "=<") list:sort (0 1 1 4)}]
        [ a r:Fact; r:gives {((0 1 4 1) ">=") list:sort (4 1 1 0)}]
        skolem:lemma2229
        skolem:lemma2230
        [ a r:Fact; r:gives {(4110 114) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 141];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1142 a r:Inference;
    r:gives {
        142 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {142 math:notEqualTo 0}]
        skolem:lemma2298
        [ a r:Fact; r:gives {((0 1 4 2) "=<") list:sort (0 1 2 4)}]
        [ a r:Fact; r:gives {((0 1 4 2) ">=") list:sort (4 2 1 0)}]
        skolem:lemma2255
        skolem:lemma2256
        [ a r:Fact; r:gives {(4210 124) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 142];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1143 a r:Inference;
    r:gives {
        143 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {143 math:notEqualTo 0}]
        skolem:lemma2299
        [ a r:Fact; r:gives {((0 1 4 3) "=<") list:sort (0 1 3 4)}]
        [ a r:Fact; r:gives {((0 1 4 3) ">=") list:sort (4 3 1 0)}]
        skolem:lemma2279
        skolem:lemma2280
        [ a r:Fact; r:gives {(4310 134) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 143];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1144 a r:Inference;
    r:gives {
        144 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {144 math:notEqualTo 0}]
        skolem:lemma2300
        [ a r:Fact; r:gives {((0 1 4 4) "=<") list:sort (0 1 4 4)}]
        [ a r:Fact; r:gives {((0 1 4 4) ">=") list:sort (4 4 1 0)}]
        skolem:lemma2301
        skolem:lemma2302
        [ a r:Fact; r:gives {(4410 144) math:difference 4266}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4266 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            4266 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 144];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 144];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1145 a r:Inference;
    r:gives {
        145 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {145 math:notEqualTo 0}]
        skolem:lemma2303
        [ a r:Fact; r:gives {((0 1 4 5) "=<") list:sort (0 1 4 5)}]
        [ a r:Fact; r:gives {((0 1 4 5) ">=") list:sort (5 4 1 0)}]
        skolem:lemma2304
        skolem:lemma2305
        [ a r:Fact; r:gives {(5410 145) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1146 a r:Inference;
    r:gives {
        146 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {146 math:notEqualTo 0}]
        skolem:lemma2306
        [ a r:Fact; r:gives {((0 1 4 6) "=<") list:sort (0 1 4 6)}]
        [ a r:Fact; r:gives {((0 1 4 6) ">=") list:sort (6 4 1 0)}]
        skolem:lemma2307
        skolem:lemma2308
        [ a r:Fact; r:gives {(6410 146) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1147 a r:Inference;
    r:gives {
        147 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {147 math:notEqualTo 0}]
        skolem:lemma2309
        [ a r:Fact; r:gives {((0 1 4 7) "=<") list:sort (0 1 4 7)}]
        [ a r:Fact; r:gives {((0 1 4 7) ">=") list:sort (7 4 1 0)}]
        skolem:lemma2310
        skolem:lemma2311
        [ a r:Fact; r:gives {(7410 147) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1148 a r:Inference;
    r:gives {
        148 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {148 math:notEqualTo 0}]
        skolem:lemma2312
        [ a r:Fact; r:gives {((0 1 4 8) "=<") list:sort (0 1 4 8)}]
        [ a r:Fact; r:gives {((0 1 4 8) ">=") list:sort (8 4 1 0)}]
        skolem:lemma2313
        skolem:lemma2314
        [ a r:Fact; r:gives {(8410 148) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1149 a r:Inference;
    r:gives {
        149 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {149 math:notEqualTo 0}]
        skolem:lemma2315
        [ a r:Fact; r:gives {((0 1 4 9) "=<") list:sort (0 1 4 9)}]
        [ a r:Fact; r:gives {((0 1 4 9) ">=") list:sort (9 4 1 0)}]
        skolem:lemma2316
        skolem:lemma2317
        [ a r:Fact; r:gives {(9410 149) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1150 a r:Inference;
    r:gives {
        150 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {150 math:notEqualTo 0}]
        skolem:lemma2318
        [ a r:Fact; r:gives {((0 1 5 0) "=<") list:sort (0 0 1 5)}]
        [ a r:Fact; r:gives {((0 1 5 0) ">=") list:sort (5 1 0 0)}]
        skolem:lemma2042
        skolem:lemma2043
        [ a r:Fact; r:gives {(5100 15) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 150];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1151 a r:Inference;
    r:gives {
        151 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {151 math:notEqualTo 0}]
        skolem:lemma2319
        [ a r:Fact; r:gives {((0 1 5 1) "=<") list:sort (0 1 1 5)}]
        [ a r:Fact; r:gives {((0 1 5 1) ">=") list:sort (5 1 1 0)}]
        skolem:lemma2232
        skolem:lemma2233
        [ a r:Fact; r:gives {(5110 115) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 151];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1152 a r:Inference;
    r:gives {
        152 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {152 math:notEqualTo 0}]
        skolem:lemma2320
        [ a r:Fact; r:gives {((0 1 5 2) "=<") list:sort (0 1 2 5)}]
        [ a r:Fact; r:gives {((0 1 5 2) ">=") list:sort (5 2 1 0)}]
        skolem:lemma2258
        skolem:lemma2259
        [ a r:Fact; r:gives {(5210 125) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 152];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1153 a r:Inference;
    r:gives {
        153 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {153 math:notEqualTo 0}]
        skolem:lemma2321
        [ a r:Fact; r:gives {((0 1 5 3) "=<") list:sort (0 1 3 5)}]
        [ a r:Fact; r:gives {((0 1 5 3) ">=") list:sort (5 3 1 0)}]
        skolem:lemma2282
        skolem:lemma2283
        [ a r:Fact; r:gives {(5310 135) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 153];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1154 a r:Inference;
    r:gives {
        154 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {154 math:notEqualTo 0}]
        skolem:lemma2322
        [ a r:Fact; r:gives {((0 1 5 4) "=<") list:sort (0 1 4 5)}]
        [ a r:Fact; r:gives {((0 1 5 4) ">=") list:sort (5 4 1 0)}]
        skolem:lemma2304
        skolem:lemma2305
        [ a r:Fact; r:gives {(5410 145) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 154];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1155 a r:Inference;
    r:gives {
        155 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {155 math:notEqualTo 0}]
        skolem:lemma2323
        [ a r:Fact; r:gives {((0 1 5 5) "=<") list:sort (0 1 5 5)}]
        [ a r:Fact; r:gives {((0 1 5 5) ">=") list:sort (5 5 1 0)}]
        skolem:lemma2324
        skolem:lemma2325
        [ a r:Fact; r:gives {(5510 155) math:difference 5355}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5355 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5355 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 155];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 155];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1156 a r:Inference;
    r:gives {
        156 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {156 math:notEqualTo 0}]
        skolem:lemma2326
        [ a r:Fact; r:gives {((0 1 5 6) "=<") list:sort (0 1 5 6)}]
        [ a r:Fact; r:gives {((0 1 5 6) ">=") list:sort (6 5 1 0)}]
        skolem:lemma2327
        skolem:lemma2328
        [ a r:Fact; r:gives {(6510 156) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1157 a r:Inference;
    r:gives {
        157 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {157 math:notEqualTo 0}]
        skolem:lemma2329
        [ a r:Fact; r:gives {((0 1 5 7) "=<") list:sort (0 1 5 7)}]
        [ a r:Fact; r:gives {((0 1 5 7) ">=") list:sort (7 5 1 0)}]
        skolem:lemma2330
        skolem:lemma2331
        [ a r:Fact; r:gives {(7510 157) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1158 a r:Inference;
    r:gives {
        158 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {158 math:notEqualTo 0}]
        skolem:lemma2332
        [ a r:Fact; r:gives {((0 1 5 8) "=<") list:sort (0 1 5 8)}]
        [ a r:Fact; r:gives {((0 1 5 8) ">=") list:sort (8 5 1 0)}]
        skolem:lemma2333
        skolem:lemma2334
        [ a r:Fact; r:gives {(8510 158) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1159 a r:Inference;
    r:gives {
        159 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {159 math:notEqualTo 0}]
        skolem:lemma2335
        [ a r:Fact; r:gives {((0 1 5 9) "=<") list:sort (0 1 5 9)}]
        [ a r:Fact; r:gives {((0 1 5 9) ">=") list:sort (9 5 1 0)}]
        skolem:lemma2336
        skolem:lemma2337
        [ a r:Fact; r:gives {(9510 159) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1160 a r:Inference;
    r:gives {
        160 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {160 math:notEqualTo 0}]
        skolem:lemma2338
        [ a r:Fact; r:gives {((0 1 6 0) "=<") list:sort (0 0 1 6)}]
        [ a r:Fact; r:gives {((0 1 6 0) ">=") list:sort (6 1 0 0)}]
        skolem:lemma2045
        skolem:lemma2046
        [ a r:Fact; r:gives {(6100 16) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 160];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1161 a r:Inference;
    r:gives {
        161 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {161 math:notEqualTo 0}]
        skolem:lemma2339
        [ a r:Fact; r:gives {((0 1 6 1) "=<") list:sort (0 1 1 6)}]
        [ a r:Fact; r:gives {((0 1 6 1) ">=") list:sort (6 1 1 0)}]
        skolem:lemma2235
        skolem:lemma2236
        [ a r:Fact; r:gives {(6110 116) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 161];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1162 a r:Inference;
    r:gives {
        162 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {162 math:notEqualTo 0}]
        skolem:lemma2340
        [ a r:Fact; r:gives {((0 1 6 2) "=<") list:sort (0 1 2 6)}]
        [ a r:Fact; r:gives {((0 1 6 2) ">=") list:sort (6 2 1 0)}]
        skolem:lemma2261
        skolem:lemma2262
        [ a r:Fact; r:gives {(6210 126) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 162];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1163 a r:Inference;
    r:gives {
        163 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {163 math:notEqualTo 0}]
        skolem:lemma2341
        [ a r:Fact; r:gives {((0 1 6 3) "=<") list:sort (0 1 3 6)}]
        [ a r:Fact; r:gives {((0 1 6 3) ">=") list:sort (6 3 1 0)}]
        skolem:lemma2285
        skolem:lemma2286
        [ a r:Fact; r:gives {(6310 136) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 163];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1164 a r:Inference;
    r:gives {
        164 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {164 math:notEqualTo 0}]
        skolem:lemma2342
        [ a r:Fact; r:gives {((0 1 6 4) "=<") list:sort (0 1 4 6)}]
        [ a r:Fact; r:gives {((0 1 6 4) ">=") list:sort (6 4 1 0)}]
        skolem:lemma2307
        skolem:lemma2308
        [ a r:Fact; r:gives {(6410 146) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 164];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1165 a r:Inference;
    r:gives {
        165 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {165 math:notEqualTo 0}]
        skolem:lemma2343
        [ a r:Fact; r:gives {((0 1 6 5) "=<") list:sort (0 1 5 6)}]
        [ a r:Fact; r:gives {((0 1 6 5) ">=") list:sort (6 5 1 0)}]
        skolem:lemma2327
        skolem:lemma2328
        [ a r:Fact; r:gives {(6510 156) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 165];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1166 a r:Inference;
    r:gives {
        166 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {166 math:notEqualTo 0}]
        skolem:lemma2344
        [ a r:Fact; r:gives {((0 1 6 6) "=<") list:sort (0 1 6 6)}]
        [ a r:Fact; r:gives {((0 1 6 6) ">=") list:sort (6 6 1 0)}]
        skolem:lemma2345
        skolem:lemma2346
        [ a r:Fact; r:gives {(6610 166) math:difference 6444}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6444 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            6444 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 166];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 166];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1167 a r:Inference;
    r:gives {
        167 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {167 math:notEqualTo 0}]
        skolem:lemma2347
        [ a r:Fact; r:gives {((0 1 6 7) "=<") list:sort (0 1 6 7)}]
        [ a r:Fact; r:gives {((0 1 6 7) ">=") list:sort (7 6 1 0)}]
        skolem:lemma2348
        skolem:lemma2349
        [ a r:Fact; r:gives {(7610 167) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1168 a r:Inference;
    r:gives {
        168 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {168 math:notEqualTo 0}]
        skolem:lemma2350
        [ a r:Fact; r:gives {((0 1 6 8) "=<") list:sort (0 1 6 8)}]
        [ a r:Fact; r:gives {((0 1 6 8) ">=") list:sort (8 6 1 0)}]
        skolem:lemma2351
        skolem:lemma2352
        [ a r:Fact; r:gives {(8610 168) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1169 a r:Inference;
    r:gives {
        169 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {169 math:notEqualTo 0}]
        skolem:lemma2353
        [ a r:Fact; r:gives {((0 1 6 9) "=<") list:sort (0 1 6 9)}]
        [ a r:Fact; r:gives {((0 1 6 9) ">=") list:sort (9 6 1 0)}]
        skolem:lemma2354
        skolem:lemma2355
        [ a r:Fact; r:gives {(9610 169) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1170 a r:Inference;
    r:gives {
        170 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {170 math:notEqualTo 0}]
        skolem:lemma2356
        [ a r:Fact; r:gives {((0 1 7 0) "=<") list:sort (0 0 1 7)}]
        [ a r:Fact; r:gives {((0 1 7 0) ">=") list:sort (7 1 0 0)}]
        skolem:lemma2048
        skolem:lemma2049
        [ a r:Fact; r:gives {(7100 17) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 170];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1171 a r:Inference;
    r:gives {
        171 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {171 math:notEqualTo 0}]
        skolem:lemma2357
        [ a r:Fact; r:gives {((0 1 7 1) "=<") list:sort (0 1 1 7)}]
        [ a r:Fact; r:gives {((0 1 7 1) ">=") list:sort (7 1 1 0)}]
        skolem:lemma2238
        skolem:lemma2239
        [ a r:Fact; r:gives {(7110 117) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1172 a r:Inference;
    r:gives {
        172 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {172 math:notEqualTo 0}]
        skolem:lemma2358
        [ a r:Fact; r:gives {((0 1 7 2) "=<") list:sort (0 1 2 7)}]
        [ a r:Fact; r:gives {((0 1 7 2) ">=") list:sort (7 2 1 0)}]
        skolem:lemma2264
        skolem:lemma2265
        [ a r:Fact; r:gives {(7210 127) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1173 a r:Inference;
    r:gives {
        173 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {173 math:notEqualTo 0}]
        skolem:lemma2359
        [ a r:Fact; r:gives {((0 1 7 3) "=<") list:sort (0 1 3 7)}]
        [ a r:Fact; r:gives {((0 1 7 3) ">=") list:sort (7 3 1 0)}]
        skolem:lemma2288
        skolem:lemma2289
        [ a r:Fact; r:gives {(7310 137) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1174 a r:Inference;
    r:gives {
        174 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {174 math:notEqualTo 0}]
        skolem:lemma2360
        [ a r:Fact; r:gives {((0 1 7 4) "=<") list:sort (0 1 4 7)}]
        [ a r:Fact; r:gives {((0 1 7 4) ">=") list:sort (7 4 1 0)}]
        skolem:lemma2310
        skolem:lemma2311
        [ a r:Fact; r:gives {(7410 147) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1175 a r:Inference;
    r:gives {
        175 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {175 math:notEqualTo 0}]
        skolem:lemma2361
        [ a r:Fact; r:gives {((0 1 7 5) "=<") list:sort (0 1 5 7)}]
        [ a r:Fact; r:gives {((0 1 7 5) ">=") list:sort (7 5 1 0)}]
        skolem:lemma2330
        skolem:lemma2331
        [ a r:Fact; r:gives {(7510 157) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1176 a r:Inference;
    r:gives {
        176 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {176 math:notEqualTo 0}]
        skolem:lemma2362
        [ a r:Fact; r:gives {((0 1 7 6) "=<") list:sort (0 1 6 7)}]
        [ a r:Fact; r:gives {((0 1 7 6) ">=") list:sort (7 6 1 0)}]
        skolem:lemma2348
        skolem:lemma2349
        [ a r:Fact; r:gives {(7610 167) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1177 a r:Inference;
    r:gives {
        177 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {177 math:notEqualTo 0}]
        skolem:lemma2363
        [ a r:Fact; r:gives {((0 1 7 7) "=<") list:sort (0 1 7 7)}]
        [ a r:Fact; r:gives {((0 1 7 7) ">=") list:sort (7 7 1 0)}]
        skolem:lemma2364
        skolem:lemma2365
        [ a r:Fact; r:gives {(7710 177) math:difference 7533}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7533 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7533 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1178 a r:Inference;
    r:gives {
        178 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {178 math:notEqualTo 0}]
        skolem:lemma2366
        [ a r:Fact; r:gives {((0 1 7 8) "=<") list:sort (0 1 7 8)}]
        [ a r:Fact; r:gives {((0 1 7 8) ">=") list:sort (8 7 1 0)}]
        skolem:lemma2367
        skolem:lemma2368
        [ a r:Fact; r:gives {(8710 178) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1179 a r:Inference;
    r:gives {
        179 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {179 math:notEqualTo 0}]
        skolem:lemma2369
        [ a r:Fact; r:gives {((0 1 7 9) "=<") list:sort (0 1 7 9)}]
        [ a r:Fact; r:gives {((0 1 7 9) ">=") list:sort (9 7 1 0)}]
        skolem:lemma2370
        skolem:lemma2371
        [ a r:Fact; r:gives {(9710 179) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1180 a r:Inference;
    r:gives {
        180 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {180 math:notEqualTo 0}]
        skolem:lemma2372
        [ a r:Fact; r:gives {((0 1 8 0) "=<") list:sort (0 0 1 8)}]
        [ a r:Fact; r:gives {((0 1 8 0) ">=") list:sort (8 1 0 0)}]
        skolem:lemma2051
        skolem:lemma2052
        [ a r:Fact; r:gives {(8100 18) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 180];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1181 a r:Inference;
    r:gives {
        181 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {181 math:notEqualTo 0}]
        skolem:lemma2373
        [ a r:Fact; r:gives {((0 1 8 1) "=<") list:sort (0 1 1 8)}]
        [ a r:Fact; r:gives {((0 1 8 1) ">=") list:sort (8 1 1 0)}]
        skolem:lemma2241
        skolem:lemma2242
        [ a r:Fact; r:gives {(8110 118) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 181];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 118];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1182 a r:Inference;
    r:gives {
        182 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {182 math:notEqualTo 0}]
        skolem:lemma2374
        [ a r:Fact; r:gives {((0 1 8 2) "=<") list:sort (0 1 2 8)}]
        [ a r:Fact; r:gives {((0 1 8 2) ">=") list:sort (8 2 1 0)}]
        skolem:lemma2267
        skolem:lemma2268
        [ a r:Fact; r:gives {(8210 128) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 182];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1183 a r:Inference;
    r:gives {
        183 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {183 math:notEqualTo 0}]
        skolem:lemma2375
        [ a r:Fact; r:gives {((0 1 8 3) "=<") list:sort (0 1 3 8)}]
        [ a r:Fact; r:gives {((0 1 8 3) ">=") list:sort (8 3 1 0)}]
        skolem:lemma2291
        skolem:lemma2292
        [ a r:Fact; r:gives {(8310 138) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 183];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1184 a r:Inference;
    r:gives {
        184 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {184 math:notEqualTo 0}]
        skolem:lemma2376
        [ a r:Fact; r:gives {((0 1 8 4) "=<") list:sort (0 1 4 8)}]
        [ a r:Fact; r:gives {((0 1 8 4) ">=") list:sort (8 4 1 0)}]
        skolem:lemma2313
        skolem:lemma2314
        [ a r:Fact; r:gives {(8410 148) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 184];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1185 a r:Inference;
    r:gives {
        185 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {185 math:notEqualTo 0}]
        skolem:lemma2377
        [ a r:Fact; r:gives {((0 1 8 5) "=<") list:sort (0 1 5 8)}]
        [ a r:Fact; r:gives {((0 1 8 5) ">=") list:sort (8 5 1 0)}]
        skolem:lemma2333
        skolem:lemma2334
        [ a r:Fact; r:gives {(8510 158) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 185];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1186 a r:Inference;
    r:gives {
        186 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {186 math:notEqualTo 0}]
        skolem:lemma2378
        [ a r:Fact; r:gives {((0 1 8 6) "=<") list:sort (0 1 6 8)}]
        [ a r:Fact; r:gives {((0 1 8 6) ">=") list:sort (8 6 1 0)}]
        skolem:lemma2351
        skolem:lemma2352
        [ a r:Fact; r:gives {(8610 168) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 186];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1187 a r:Inference;
    r:gives {
        187 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {187 math:notEqualTo 0}]
        skolem:lemma2379
        [ a r:Fact; r:gives {((0 1 8 7) "=<") list:sort (0 1 7 8)}]
        [ a r:Fact; r:gives {((0 1 8 7) ">=") list:sort (8 7 1 0)}]
        skolem:lemma2367
        skolem:lemma2368
        [ a r:Fact; r:gives {(8710 178) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 187];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1188 a r:Inference;
    r:gives {
        188 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {188 math:notEqualTo 0}]
        skolem:lemma2380
        [ a r:Fact; r:gives {((0 1 8 8) "=<") list:sort (0 1 8 8)}]
        [ a r:Fact; r:gives {((0 1 8 8) ">=") list:sort (8 8 1 0)}]
        skolem:lemma2381
        skolem:lemma2382
        [ a r:Fact; r:gives {(8810 188) math:difference 8622}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8622 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8622 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 188];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 188];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1189 a r:Inference;
    r:gives {
        189 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {189 math:notEqualTo 0}]
        skolem:lemma2383
        [ a r:Fact; r:gives {((0 1 8 9) "=<") list:sort (0 1 8 9)}]
        [ a r:Fact; r:gives {((0 1 8 9) ">=") list:sort (9 8 1 0)}]
        skolem:lemma2384
        skolem:lemma2385
        [ a r:Fact; r:gives {(9810 189) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1190 a r:Inference;
    r:gives {
        190 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {190 math:notEqualTo 0}]
        skolem:lemma2386
        [ a r:Fact; r:gives {((0 1 9 0) "=<") list:sort (0 0 1 9)}]
        [ a r:Fact; r:gives {((0 1 9 0) ">=") list:sort (9 1 0 0)}]
        skolem:lemma2054
        skolem:lemma2055
        [ a r:Fact; r:gives {(9100 19) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 190];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1191 a r:Inference;
    r:gives {
        191 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {191 math:notEqualTo 0}]
        skolem:lemma2387
        [ a r:Fact; r:gives {((0 1 9 1) "=<") list:sort (0 1 1 9)}]
        [ a r:Fact; r:gives {((0 1 9 1) ">=") list:sort (9 1 1 0)}]
        skolem:lemma2244
        skolem:lemma2245
        [ a r:Fact; r:gives {(9110 119) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 191];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 119];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1192 a r:Inference;
    r:gives {
        192 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {192 math:notEqualTo 0}]
        skolem:lemma2388
        [ a r:Fact; r:gives {((0 1 9 2) "=<") list:sort (0 1 2 9)}]
        [ a r:Fact; r:gives {((0 1 9 2) ">=") list:sort (9 2 1 0)}]
        skolem:lemma2270
        skolem:lemma2271
        [ a r:Fact; r:gives {(9210 129) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 192];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1193 a r:Inference;
    r:gives {
        193 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {193 math:notEqualTo 0}]
        skolem:lemma2389
        [ a r:Fact; r:gives {((0 1 9 3) "=<") list:sort (0 1 3 9)}]
        [ a r:Fact; r:gives {((0 1 9 3) ">=") list:sort (9 3 1 0)}]
        skolem:lemma2294
        skolem:lemma2295
        [ a r:Fact; r:gives {(9310 139) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 193];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1194 a r:Inference;
    r:gives {
        194 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {194 math:notEqualTo 0}]
        skolem:lemma2390
        [ a r:Fact; r:gives {((0 1 9 4) "=<") list:sort (0 1 4 9)}]
        [ a r:Fact; r:gives {((0 1 9 4) ">=") list:sort (9 4 1 0)}]
        skolem:lemma2316
        skolem:lemma2317
        [ a r:Fact; r:gives {(9410 149) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 194];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1195 a r:Inference;
    r:gives {
        195 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {195 math:notEqualTo 0}]
        skolem:lemma2391
        [ a r:Fact; r:gives {((0 1 9 5) "=<") list:sort (0 1 5 9)}]
        [ a r:Fact; r:gives {((0 1 9 5) ">=") list:sort (9 5 1 0)}]
        skolem:lemma2336
        skolem:lemma2337
        [ a r:Fact; r:gives {(9510 159) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 195];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1196 a r:Inference;
    r:gives {
        196 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {196 math:notEqualTo 0}]
        skolem:lemma2392
        [ a r:Fact; r:gives {((0 1 9 6) "=<") list:sort (0 1 6 9)}]
        [ a r:Fact; r:gives {((0 1 9 6) ">=") list:sort (9 6 1 0)}]
        skolem:lemma2354
        skolem:lemma2355
        [ a r:Fact; r:gives {(9610 169) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 196];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1197 a r:Inference;
    r:gives {
        197 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {197 math:notEqualTo 0}]
        skolem:lemma2393
        [ a r:Fact; r:gives {((0 1 9 7) "=<") list:sort (0 1 7 9)}]
        [ a r:Fact; r:gives {((0 1 9 7) ">=") list:sort (9 7 1 0)}]
        skolem:lemma2370
        skolem:lemma2371
        [ a r:Fact; r:gives {(9710 179) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 197];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1198 a r:Inference;
    r:gives {
        198 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {198 math:notEqualTo 0}]
        skolem:lemma2394
        [ a r:Fact; r:gives {((0 1 9 8) "=<") list:sort (0 1 8 9)}]
        [ a r:Fact; r:gives {((0 1 9 8) ">=") list:sort (9 8 1 0)}]
        skolem:lemma2384
        skolem:lemma2385
        [ a r:Fact; r:gives {(9810 189) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 198];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1199 a r:Inference;
    r:gives {
        199 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {199 math:notEqualTo 0}]
        skolem:lemma2395
        [ a r:Fact; r:gives {((0 1 9 9) "=<") list:sort (0 1 9 9)}]
        [ a r:Fact; r:gives {((0 1 9 9) ">=") list:sort (9 9 1 0)}]
        skolem:lemma2396
        skolem:lemma2397
        [ a r:Fact; r:gives {(9910 199) math:difference 9711}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9711 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9711 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 199];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 1 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 199];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9910];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1200 a r:Inference;
    r:gives {
        200 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {200 math:notEqualTo 0}]
        skolem:lemma2398
        [ a r:Fact; r:gives {((0 2 0 0) "=<") list:sort (0 0 0 2)}]
        [ a r:Fact; r:gives {((0 2 0 0) ">=") list:sort (2 0 0 0)}]
        skolem:lemma2005
        skolem:lemma2006
        [ a r:Fact; r:gives {(2000 2) math:difference 1998}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1998 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1998 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1201 a r:Inference;
    r:gives {
        201 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {201 math:notEqualTo 0}]
        skolem:lemma2399
        [ a r:Fact; r:gives {((0 2 0 1) "=<") list:sort (0 0 1 2)}]
        [ a r:Fact; r:gives {((0 2 0 1) ">=") list:sort (2 1 0 0)}]
        skolem:lemma2033
        skolem:lemma2034
        [ a r:Fact; r:gives {(2100 12) math:difference 2088}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2088 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            2088 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 201];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2088];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1202 a r:Inference;
    r:gives {
        202 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {202 math:notEqualTo 0}]
        skolem:lemma2400
        [ a r:Fact; r:gives {((0 2 0 2) "=<") list:sort (0 0 2 2)}]
        [ a r:Fact; r:gives {((0 2 0 2) ">=") list:sort (2 2 0 0)}]
        skolem:lemma2059
        skolem:lemma2060
        [ a r:Fact; r:gives {(2200 22) math:difference 2178}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2178 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2178 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 202];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1203 a r:Inference;
    r:gives {
        203 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {203 math:notEqualTo 0}]
        skolem:lemma2401
        [ a r:Fact; r:gives {((0 2 0 3) "=<") list:sort (0 0 2 3)}]
        [ a r:Fact; r:gives {((0 2 0 3) ">=") list:sort (3 2 0 0)}]
        skolem:lemma2062
        skolem:lemma2063
        [ a r:Fact; r:gives {(3200 23) math:difference 3177}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3177 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            3177 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 203];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1204 a r:Inference;
    r:gives {
        204 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {204 math:notEqualTo 0}]
        skolem:lemma2402
        [ a r:Fact; r:gives {((0 2 0 4) "=<") list:sort (0 0 2 4)}]
        [ a r:Fact; r:gives {((0 2 0 4) ">=") list:sort (4 2 0 0)}]
        skolem:lemma2065
        skolem:lemma2066
        [ a r:Fact; r:gives {(4200 24) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 204];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1205 a r:Inference;
    r:gives {
        205 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {205 math:notEqualTo 0}]
        skolem:lemma2403
        [ a r:Fact; r:gives {((0 2 0 5) "=<") list:sort (0 0 2 5)}]
        [ a r:Fact; r:gives {((0 2 0 5) ">=") list:sort (5 2 0 0)}]
        skolem:lemma2068
        skolem:lemma2069
        [ a r:Fact; r:gives {(5200 25) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 205];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1206 a r:Inference;
    r:gives {
        206 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {206 math:notEqualTo 0}]
        skolem:lemma2404
        [ a r:Fact; r:gives {((0 2 0 6) "=<") list:sort (0 0 2 6)}]
        [ a r:Fact; r:gives {((0 2 0 6) ">=") list:sort (6 2 0 0)}]
        skolem:lemma2071
        skolem:lemma2072
        [ a r:Fact; r:gives {(6200 26) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 206];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1207 a r:Inference;
    r:gives {
        207 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {207 math:notEqualTo 0}]
        skolem:lemma2405
        [ a r:Fact; r:gives {((0 2 0 7) "=<") list:sort (0 0 2 7)}]
        [ a r:Fact; r:gives {((0 2 0 7) ">=") list:sort (7 2 0 0)}]
        skolem:lemma2074
        skolem:lemma2075
        [ a r:Fact; r:gives {(7200 27) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 207];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1208 a r:Inference;
    r:gives {
        208 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {208 math:notEqualTo 0}]
        skolem:lemma2406
        [ a r:Fact; r:gives {((0 2 0 8) "=<") list:sort (0 0 2 8)}]
        [ a r:Fact; r:gives {((0 2 0 8) ">=") list:sort (8 2 0 0)}]
        skolem:lemma2077
        skolem:lemma2078
        [ a r:Fact; r:gives {(8200 28) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 208];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1209 a r:Inference;
    r:gives {
        209 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {209 math:notEqualTo 0}]
        skolem:lemma2407
        [ a r:Fact; r:gives {((0 2 0 9) "=<") list:sort (0 0 2 9)}]
        [ a r:Fact; r:gives {((0 2 0 9) ">=") list:sort (9 2 0 0)}]
        skolem:lemma2080
        skolem:lemma2081
        [ a r:Fact; r:gives {(9200 29) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 209];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1210 a r:Inference;
    r:gives {
        210 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {210 math:notEqualTo 0}]
        skolem:lemma2408
        [ a r:Fact; r:gives {((0 2 1 0) "=<") list:sort (0 0 1 2)}]
        [ a r:Fact; r:gives {((0 2 1 0) ">=") list:sort (2 1 0 0)}]
        skolem:lemma2033
        skolem:lemma2034
        [ a r:Fact; r:gives {(2100 12) math:difference 2088}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2088 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            2088 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2088];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1211 a r:Inference;
    r:gives {
        211 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {211 math:notEqualTo 0}]
        skolem:lemma2409
        [ a r:Fact; r:gives {((0 2 1 1) "=<") list:sort (0 1 1 2)}]
        [ a r:Fact; r:gives {((0 2 1 1) ">=") list:sort (2 1 1 0)}]
        skolem:lemma2223
        skolem:lemma2224
        [ a r:Fact; r:gives {(2110 112) math:difference 1998}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1998 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1998 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 211];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 112];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1212 a r:Inference;
    r:gives {
        212 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {212 math:notEqualTo 0}]
        skolem:lemma2410
        [ a r:Fact; r:gives {((0 2 1 2) "=<") list:sort (0 1 2 2)}]
        [ a r:Fact; r:gives {((0 2 1 2) ">=") list:sort (2 2 1 0)}]
        skolem:lemma2249
        skolem:lemma2250
        [ a r:Fact; r:gives {(2210 122) math:difference 2088}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2088 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            2088 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 212];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 122];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2088];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1213 a r:Inference;
    r:gives {
        213 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {213 math:notEqualTo 0}]
        skolem:lemma2411
        [ a r:Fact; r:gives {((0 2 1 3) "=<") list:sort (0 1 2 3)}]
        [ a r:Fact; r:gives {((0 2 1 3) ">=") list:sort (3 2 1 0)}]
        skolem:lemma2252
        skolem:lemma2253
        [ a r:Fact; r:gives {(3210 123) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 213];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1214 a r:Inference;
    r:gives {
        214 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {214 math:notEqualTo 0}]
        skolem:lemma2412
        [ a r:Fact; r:gives {((0 2 1 4) "=<") list:sort (0 1 2 4)}]
        [ a r:Fact; r:gives {((0 2 1 4) ">=") list:sort (4 2 1 0)}]
        skolem:lemma2255
        skolem:lemma2256
        [ a r:Fact; r:gives {(4210 124) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 214];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1215 a r:Inference;
    r:gives {
        215 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {215 math:notEqualTo 0}]
        skolem:lemma2413
        [ a r:Fact; r:gives {((0 2 1 5) "=<") list:sort (0 1 2 5)}]
        [ a r:Fact; r:gives {((0 2 1 5) ">=") list:sort (5 2 1 0)}]
        skolem:lemma2258
        skolem:lemma2259
        [ a r:Fact; r:gives {(5210 125) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 215];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1216 a r:Inference;
    r:gives {
        216 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {216 math:notEqualTo 0}]
        skolem:lemma2414
        [ a r:Fact; r:gives {((0 2 1 6) "=<") list:sort (0 1 2 6)}]
        [ a r:Fact; r:gives {((0 2 1 6) ">=") list:sort (6 2 1 0)}]
        skolem:lemma2261
        skolem:lemma2262
        [ a r:Fact; r:gives {(6210 126) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 216];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1217 a r:Inference;
    r:gives {
        217 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {217 math:notEqualTo 0}]
        skolem:lemma2415
        [ a r:Fact; r:gives {((0 2 1 7) "=<") list:sort (0 1 2 7)}]
        [ a r:Fact; r:gives {((0 2 1 7) ">=") list:sort (7 2 1 0)}]
        skolem:lemma2264
        skolem:lemma2265
        [ a r:Fact; r:gives {(7210 127) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 217];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1218 a r:Inference;
    r:gives {
        218 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {218 math:notEqualTo 0}]
        skolem:lemma2416
        [ a r:Fact; r:gives {((0 2 1 8) "=<") list:sort (0 1 2 8)}]
        [ a r:Fact; r:gives {((0 2 1 8) ">=") list:sort (8 2 1 0)}]
        skolem:lemma2267
        skolem:lemma2268
        [ a r:Fact; r:gives {(8210 128) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 218];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1219 a r:Inference;
    r:gives {
        219 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {219 math:notEqualTo 0}]
        skolem:lemma2417
        [ a r:Fact; r:gives {((0 2 1 9) "=<") list:sort (0 1 2 9)}]
        [ a r:Fact; r:gives {((0 2 1 9) ">=") list:sort (9 2 1 0)}]
        skolem:lemma2270
        skolem:lemma2271
        [ a r:Fact; r:gives {(9210 129) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 219];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1220 a r:Inference;
    r:gives {
        220 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {220 math:notEqualTo 0}]
        skolem:lemma2418
        [ a r:Fact; r:gives {((0 2 2 0) "=<") list:sort (0 0 2 2)}]
        [ a r:Fact; r:gives {((0 2 2 0) ">=") list:sort (2 2 0 0)}]
        skolem:lemma2059
        skolem:lemma2060
        [ a r:Fact; r:gives {(2200 22) math:difference 2178}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2178 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2178 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1221 a r:Inference;
    r:gives {
        221 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {221 math:notEqualTo 0}]
        skolem:lemma2419
        [ a r:Fact; r:gives {((0 2 2 1) "=<") list:sort (0 1 2 2)}]
        [ a r:Fact; r:gives {((0 2 2 1) ">=") list:sort (2 2 1 0)}]
        skolem:lemma2249
        skolem:lemma2250
        [ a r:Fact; r:gives {(2210 122) math:difference 2088}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2088 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            2088 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 221];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 122];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2088];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1222 a r:Inference;
    r:gives {
        222 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {222 math:notEqualTo 0}]
        skolem:lemma2420
        [ a r:Fact; r:gives {((0 2 2 2) "=<") list:sort (0 2 2 2)}]
        [ a r:Fact; r:gives {((0 2 2 2) ">=") list:sort (2 2 2 0)}]
        skolem:lemma2421
        skolem:lemma2422
        [ a r:Fact; r:gives {(2220 222) math:difference 1998}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            1998 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            1998 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 222];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 222];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1223 a r:Inference;
    r:gives {
        223 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {223 math:notEqualTo 0}]
        skolem:lemma2423
        [ a r:Fact; r:gives {((0 2 2 3) "=<") list:sort (0 2 2 3)}]
        [ a r:Fact; r:gives {((0 2 2 3) ">=") list:sort (3 2 2 0)}]
        skolem:lemma2424
        skolem:lemma2425
        [ a r:Fact; r:gives {(3220 223) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 223];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 223];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1224 a r:Inference;
    r:gives {
        224 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {224 math:notEqualTo 0}]
        skolem:lemma2426
        [ a r:Fact; r:gives {((0 2 2 4) "=<") list:sort (0 2 2 4)}]
        [ a r:Fact; r:gives {((0 2 2 4) ">=") list:sort (4 2 2 0)}]
        skolem:lemma2427
        skolem:lemma2428
        [ a r:Fact; r:gives {(4220 224) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 224];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 224];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1225 a r:Inference;
    r:gives {
        225 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {225 math:notEqualTo 0}]
        skolem:lemma2429
        [ a r:Fact; r:gives {((0 2 2 5) "=<") list:sort (0 2 2 5)}]
        [ a r:Fact; r:gives {((0 2 2 5) ">=") list:sort (5 2 2 0)}]
        skolem:lemma2430
        skolem:lemma2431
        [ a r:Fact; r:gives {(5220 225) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 225];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 225];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1226 a r:Inference;
    r:gives {
        226 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {226 math:notEqualTo 0}]
        skolem:lemma2432
        [ a r:Fact; r:gives {((0 2 2 6) "=<") list:sort (0 2 2 6)}]
        [ a r:Fact; r:gives {((0 2 2 6) ">=") list:sort (6 2 2 0)}]
        skolem:lemma2433
        skolem:lemma2434
        [ a r:Fact; r:gives {(6220 226) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 226];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 226];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1227 a r:Inference;
    r:gives {
        227 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {227 math:notEqualTo 0}]
        skolem:lemma2435
        [ a r:Fact; r:gives {((0 2 2 7) "=<") list:sort (0 2 2 7)}]
        [ a r:Fact; r:gives {((0 2 2 7) ">=") list:sort (7 2 2 0)}]
        skolem:lemma2436
        skolem:lemma2437
        [ a r:Fact; r:gives {(7220 227) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 227];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 227];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1228 a r:Inference;
    r:gives {
        228 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {228 math:notEqualTo 0}]
        skolem:lemma2438
        [ a r:Fact; r:gives {((0 2 2 8) "=<") list:sort (0 2 2 8)}]
        [ a r:Fact; r:gives {((0 2 2 8) ">=") list:sort (8 2 2 0)}]
        skolem:lemma2439
        skolem:lemma2440
        [ a r:Fact; r:gives {(8220 228) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 228];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 228];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1229 a r:Inference;
    r:gives {
        229 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {229 math:notEqualTo 0}]
        skolem:lemma2441
        [ a r:Fact; r:gives {((0 2 2 9) "=<") list:sort (0 2 2 9)}]
        [ a r:Fact; r:gives {((0 2 2 9) ">=") list:sort (9 2 2 0)}]
        skolem:lemma2442
        skolem:lemma2443
        [ a r:Fact; r:gives {(9220 229) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 229];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 229];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1230 a r:Inference;
    r:gives {
        230 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {230 math:notEqualTo 0}]
        skolem:lemma2444
        [ a r:Fact; r:gives {((0 2 3 0) "=<") list:sort (0 0 2 3)}]
        [ a r:Fact; r:gives {((0 2 3 0) ">=") list:sort (3 2 0 0)}]
        skolem:lemma2062
        skolem:lemma2063
        [ a r:Fact; r:gives {(3200 23) math:difference 3177}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3177 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            3177 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 230];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1231 a r:Inference;
    r:gives {
        231 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {231 math:notEqualTo 0}]
        skolem:lemma2445
        [ a r:Fact; r:gives {((0 2 3 1) "=<") list:sort (0 1 2 3)}]
        [ a r:Fact; r:gives {((0 2 3 1) ">=") list:sort (3 2 1 0)}]
        skolem:lemma2252
        skolem:lemma2253
        [ a r:Fact; r:gives {(3210 123) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 231];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1232 a r:Inference;
    r:gives {
        232 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {232 math:notEqualTo 0}]
        skolem:lemma2446
        [ a r:Fact; r:gives {((0 2 3 2) "=<") list:sort (0 2 2 3)}]
        [ a r:Fact; r:gives {((0 2 3 2) ">=") list:sort (3 2 2 0)}]
        skolem:lemma2424
        skolem:lemma2425
        [ a r:Fact; r:gives {(3220 223) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 232];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 223];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1233 a r:Inference;
    r:gives {
        233 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {233 math:notEqualTo 0}]
        skolem:lemma2447
        [ a r:Fact; r:gives {((0 2 3 3) "=<") list:sort (0 2 3 3)}]
        [ a r:Fact; r:gives {((0 2 3 3) ">=") list:sort (3 3 2 0)}]
        skolem:lemma2448
        skolem:lemma2449
        [ a r:Fact; r:gives {(3320 233) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 233];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 233];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1234 a r:Inference;
    r:gives {
        234 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {234 math:notEqualTo 0}]
        skolem:lemma2450
        [ a r:Fact; r:gives {((0 2 3 4) "=<") list:sort (0 2 3 4)}]
        [ a r:Fact; r:gives {((0 2 3 4) ">=") list:sort (4 3 2 0)}]
        skolem:lemma2451
        skolem:lemma2452
        [ a r:Fact; r:gives {(4320 234) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1235 a r:Inference;
    r:gives {
        235 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {235 math:notEqualTo 0}]
        skolem:lemma2453
        [ a r:Fact; r:gives {((0 2 3 5) "=<") list:sort (0 2 3 5)}]
        [ a r:Fact; r:gives {((0 2 3 5) ">=") list:sort (5 3 2 0)}]
        skolem:lemma2454
        skolem:lemma2455
        [ a r:Fact; r:gives {(5320 235) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1236 a r:Inference;
    r:gives {
        236 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {236 math:notEqualTo 0}]
        skolem:lemma2456
        [ a r:Fact; r:gives {((0 2 3 6) "=<") list:sort (0 2 3 6)}]
        [ a r:Fact; r:gives {((0 2 3 6) ">=") list:sort (6 3 2 0)}]
        skolem:lemma2457
        skolem:lemma2458
        [ a r:Fact; r:gives {(6320 236) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1237 a r:Inference;
    r:gives {
        237 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {237 math:notEqualTo 0}]
        skolem:lemma2459
        [ a r:Fact; r:gives {((0 2 3 7) "=<") list:sort (0 2 3 7)}]
        [ a r:Fact; r:gives {((0 2 3 7) ">=") list:sort (7 3 2 0)}]
        skolem:lemma2460
        skolem:lemma2461
        [ a r:Fact; r:gives {(7320 237) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1238 a r:Inference;
    r:gives {
        238 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {238 math:notEqualTo 0}]
        skolem:lemma2462
        [ a r:Fact; r:gives {((0 2 3 8) "=<") list:sort (0 2 3 8)}]
        [ a r:Fact; r:gives {((0 2 3 8) ">=") list:sort (8 3 2 0)}]
        skolem:lemma2463
        skolem:lemma2464
        [ a r:Fact; r:gives {(8320 238) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1239 a r:Inference;
    r:gives {
        239 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {239 math:notEqualTo 0}]
        skolem:lemma2465
        [ a r:Fact; r:gives {((0 2 3 9) "=<") list:sort (0 2 3 9)}]
        [ a r:Fact; r:gives {((0 2 3 9) ">=") list:sort (9 3 2 0)}]
        skolem:lemma2466
        skolem:lemma2467
        [ a r:Fact; r:gives {(9320 239) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1240 a r:Inference;
    r:gives {
        240 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {240 math:notEqualTo 0}]
        skolem:lemma2468
        [ a r:Fact; r:gives {((0 2 4 0) "=<") list:sort (0 0 2 4)}]
        [ a r:Fact; r:gives {((0 2 4 0) ">=") list:sort (4 2 0 0)}]
        skolem:lemma2065
        skolem:lemma2066
        [ a r:Fact; r:gives {(4200 24) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 240];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1241 a r:Inference;
    r:gives {
        241 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {241 math:notEqualTo 0}]
        skolem:lemma2469
        [ a r:Fact; r:gives {((0 2 4 1) "=<") list:sort (0 1 2 4)}]
        [ a r:Fact; r:gives {((0 2 4 1) ">=") list:sort (4 2 1 0)}]
        skolem:lemma2255
        skolem:lemma2256
        [ a r:Fact; r:gives {(4210 124) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 241];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1242 a r:Inference;
    r:gives {
        242 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {242 math:notEqualTo 0}]
        skolem:lemma2470
        [ a r:Fact; r:gives {((0 2 4 2) "=<") list:sort (0 2 2 4)}]
        [ a r:Fact; r:gives {((0 2 4 2) ">=") list:sort (4 2 2 0)}]
        skolem:lemma2427
        skolem:lemma2428
        [ a r:Fact; r:gives {(4220 224) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 242];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 224];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1243 a r:Inference;
    r:gives {
        243 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {243 math:notEqualTo 0}]
        skolem:lemma2471
        [ a r:Fact; r:gives {((0 2 4 3) "=<") list:sort (0 2 3 4)}]
        [ a r:Fact; r:gives {((0 2 4 3) ">=") list:sort (4 3 2 0)}]
        skolem:lemma2451
        skolem:lemma2452
        [ a r:Fact; r:gives {(4320 234) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 243];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1244 a r:Inference;
    r:gives {
        244 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {244 math:notEqualTo 0}]
        skolem:lemma2472
        [ a r:Fact; r:gives {((0 2 4 4) "=<") list:sort (0 2 4 4)}]
        [ a r:Fact; r:gives {((0 2 4 4) ">=") list:sort (4 4 2 0)}]
        skolem:lemma2473
        skolem:lemma2474
        [ a r:Fact; r:gives {(4420 244) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 244];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 244];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1245 a r:Inference;
    r:gives {
        245 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {245 math:notEqualTo 0}]
        skolem:lemma2475
        [ a r:Fact; r:gives {((0 2 4 5) "=<") list:sort (0 2 4 5)}]
        [ a r:Fact; r:gives {((0 2 4 5) ">=") list:sort (5 4 2 0)}]
        skolem:lemma2476
        skolem:lemma2477
        [ a r:Fact; r:gives {(5420 245) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1246 a r:Inference;
    r:gives {
        246 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {246 math:notEqualTo 0}]
        skolem:lemma2478
        [ a r:Fact; r:gives {((0 2 4 6) "=<") list:sort (0 2 4 6)}]
        [ a r:Fact; r:gives {((0 2 4 6) ">=") list:sort (6 4 2 0)}]
        skolem:lemma2479
        skolem:lemma2480
        [ a r:Fact; r:gives {(6420 246) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1247 a r:Inference;
    r:gives {
        247 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {247 math:notEqualTo 0}]
        skolem:lemma2481
        [ a r:Fact; r:gives {((0 2 4 7) "=<") list:sort (0 2 4 7)}]
        [ a r:Fact; r:gives {((0 2 4 7) ">=") list:sort (7 4 2 0)}]
        skolem:lemma2482
        skolem:lemma2483
        [ a r:Fact; r:gives {(7420 247) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1248 a r:Inference;
    r:gives {
        248 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {248 math:notEqualTo 0}]
        skolem:lemma2484
        [ a r:Fact; r:gives {((0 2 4 8) "=<") list:sort (0 2 4 8)}]
        [ a r:Fact; r:gives {((0 2 4 8) ">=") list:sort (8 4 2 0)}]
        skolem:lemma2485
        skolem:lemma2486
        [ a r:Fact; r:gives {(8420 248) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1249 a r:Inference;
    r:gives {
        249 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {249 math:notEqualTo 0}]
        skolem:lemma2487
        [ a r:Fact; r:gives {((0 2 4 9) "=<") list:sort (0 2 4 9)}]
        [ a r:Fact; r:gives {((0 2 4 9) ">=") list:sort (9 4 2 0)}]
        skolem:lemma2488
        skolem:lemma2489
        [ a r:Fact; r:gives {(9420 249) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1250 a r:Inference;
    r:gives {
        250 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {250 math:notEqualTo 0}]
        skolem:lemma2490
        [ a r:Fact; r:gives {((0 2 5 0) "=<") list:sort (0 0 2 5)}]
        [ a r:Fact; r:gives {((0 2 5 0) ">=") list:sort (5 2 0 0)}]
        skolem:lemma2068
        skolem:lemma2069
        [ a r:Fact; r:gives {(5200 25) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 250];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1251 a r:Inference;
    r:gives {
        251 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {251 math:notEqualTo 0}]
        skolem:lemma2491
        [ a r:Fact; r:gives {((0 2 5 1) "=<") list:sort (0 1 2 5)}]
        [ a r:Fact; r:gives {((0 2 5 1) ">=") list:sort (5 2 1 0)}]
        skolem:lemma2258
        skolem:lemma2259
        [ a r:Fact; r:gives {(5210 125) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 251];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1252 a r:Inference;
    r:gives {
        252 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {252 math:notEqualTo 0}]
        skolem:lemma2492
        [ a r:Fact; r:gives {((0 2 5 2) "=<") list:sort (0 2 2 5)}]
        [ a r:Fact; r:gives {((0 2 5 2) ">=") list:sort (5 2 2 0)}]
        skolem:lemma2430
        skolem:lemma2431
        [ a r:Fact; r:gives {(5220 225) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 252];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 225];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1253 a r:Inference;
    r:gives {
        253 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {253 math:notEqualTo 0}]
        skolem:lemma2493
        [ a r:Fact; r:gives {((0 2 5 3) "=<") list:sort (0 2 3 5)}]
        [ a r:Fact; r:gives {((0 2 5 3) ">=") list:sort (5 3 2 0)}]
        skolem:lemma2454
        skolem:lemma2455
        [ a r:Fact; r:gives {(5320 235) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 253];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1254 a r:Inference;
    r:gives {
        254 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {254 math:notEqualTo 0}]
        skolem:lemma2494
        [ a r:Fact; r:gives {((0 2 5 4) "=<") list:sort (0 2 4 5)}]
        [ a r:Fact; r:gives {((0 2 5 4) ">=") list:sort (5 4 2 0)}]
        skolem:lemma2476
        skolem:lemma2477
        [ a r:Fact; r:gives {(5420 245) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 254];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1255 a r:Inference;
    r:gives {
        255 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {255 math:notEqualTo 0}]
        skolem:lemma2495
        [ a r:Fact; r:gives {((0 2 5 5) "=<") list:sort (0 2 5 5)}]
        [ a r:Fact; r:gives {((0 2 5 5) ">=") list:sort (5 5 2 0)}]
        skolem:lemma2496
        skolem:lemma2497
        [ a r:Fact; r:gives {(5520 255) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 255];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 255];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1256 a r:Inference;
    r:gives {
        256 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {256 math:notEqualTo 0}]
        skolem:lemma2498
        [ a r:Fact; r:gives {((0 2 5 6) "=<") list:sort (0 2 5 6)}]
        [ a r:Fact; r:gives {((0 2 5 6) ">=") list:sort (6 5 2 0)}]
        skolem:lemma2499
        skolem:lemma2500
        [ a r:Fact; r:gives {(6520 256) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1257 a r:Inference;
    r:gives {
        257 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {257 math:notEqualTo 0}]
        skolem:lemma2501
        [ a r:Fact; r:gives {((0 2 5 7) "=<") list:sort (0 2 5 7)}]
        [ a r:Fact; r:gives {((0 2 5 7) ">=") list:sort (7 5 2 0)}]
        skolem:lemma2502
        skolem:lemma2503
        [ a r:Fact; r:gives {(7520 257) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1258 a r:Inference;
    r:gives {
        258 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {258 math:notEqualTo 0}]
        skolem:lemma2504
        [ a r:Fact; r:gives {((0 2 5 8) "=<") list:sort (0 2 5 8)}]
        [ a r:Fact; r:gives {((0 2 5 8) ">=") list:sort (8 5 2 0)}]
        skolem:lemma2505
        skolem:lemma2506
        [ a r:Fact; r:gives {(8520 258) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1259 a r:Inference;
    r:gives {
        259 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {259 math:notEqualTo 0}]
        skolem:lemma2507
        [ a r:Fact; r:gives {((0 2 5 9) "=<") list:sort (0 2 5 9)}]
        [ a r:Fact; r:gives {((0 2 5 9) ">=") list:sort (9 5 2 0)}]
        skolem:lemma2508
        skolem:lemma2509
        [ a r:Fact; r:gives {(9520 259) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1260 a r:Inference;
    r:gives {
        260 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {260 math:notEqualTo 0}]
        skolem:lemma2510
        [ a r:Fact; r:gives {((0 2 6 0) "=<") list:sort (0 0 2 6)}]
        [ a r:Fact; r:gives {((0 2 6 0) ">=") list:sort (6 2 0 0)}]
        skolem:lemma2071
        skolem:lemma2072
        [ a r:Fact; r:gives {(6200 26) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 260];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1261 a r:Inference;
    r:gives {
        261 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {261 math:notEqualTo 0}]
        skolem:lemma2511
        [ a r:Fact; r:gives {((0 2 6 1) "=<") list:sort (0 1 2 6)}]
        [ a r:Fact; r:gives {((0 2 6 1) ">=") list:sort (6 2 1 0)}]
        skolem:lemma2261
        skolem:lemma2262
        [ a r:Fact; r:gives {(6210 126) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1262 a r:Inference;
    r:gives {
        262 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {262 math:notEqualTo 0}]
        skolem:lemma2512
        [ a r:Fact; r:gives {((0 2 6 2) "=<") list:sort (0 2 2 6)}]
        [ a r:Fact; r:gives {((0 2 6 2) ">=") list:sort (6 2 2 0)}]
        skolem:lemma2433
        skolem:lemma2434
        [ a r:Fact; r:gives {(6220 226) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 226];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1263 a r:Inference;
    r:gives {
        263 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {263 math:notEqualTo 0}]
        skolem:lemma2513
        [ a r:Fact; r:gives {((0 2 6 3) "=<") list:sort (0 2 3 6)}]
        [ a r:Fact; r:gives {((0 2 6 3) ">=") list:sort (6 3 2 0)}]
        skolem:lemma2457
        skolem:lemma2458
        [ a r:Fact; r:gives {(6320 236) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1264 a r:Inference;
    r:gives {
        264 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {264 math:notEqualTo 0}]
        skolem:lemma2514
        [ a r:Fact; r:gives {((0 2 6 4) "=<") list:sort (0 2 4 6)}]
        [ a r:Fact; r:gives {((0 2 6 4) ">=") list:sort (6 4 2 0)}]
        skolem:lemma2479
        skolem:lemma2480
        [ a r:Fact; r:gives {(6420 246) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1265 a r:Inference;
    r:gives {
        265 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {265 math:notEqualTo 0}]
        skolem:lemma2515
        [ a r:Fact; r:gives {((0 2 6 5) "=<") list:sort (0 2 5 6)}]
        [ a r:Fact; r:gives {((0 2 6 5) ">=") list:sort (6 5 2 0)}]
        skolem:lemma2499
        skolem:lemma2500
        [ a r:Fact; r:gives {(6520 256) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1266 a r:Inference;
    r:gives {
        266 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {266 math:notEqualTo 0}]
        skolem:lemma2516
        [ a r:Fact; r:gives {((0 2 6 6) "=<") list:sort (0 2 6 6)}]
        [ a r:Fact; r:gives {((0 2 6 6) ">=") list:sort (6 6 2 0)}]
        skolem:lemma2517
        skolem:lemma2518
        [ a r:Fact; r:gives {(6620 266) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1267 a r:Inference;
    r:gives {
        267 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {267 math:notEqualTo 0}]
        skolem:lemma2519
        [ a r:Fact; r:gives {((0 2 6 7) "=<") list:sort (0 2 6 7)}]
        [ a r:Fact; r:gives {((0 2 6 7) ">=") list:sort (7 6 2 0)}]
        skolem:lemma2520
        skolem:lemma2521
        [ a r:Fact; r:gives {(7620 267) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1268 a r:Inference;
    r:gives {
        268 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {268 math:notEqualTo 0}]
        skolem:lemma2522
        [ a r:Fact; r:gives {((0 2 6 8) "=<") list:sort (0 2 6 8)}]
        [ a r:Fact; r:gives {((0 2 6 8) ">=") list:sort (8 6 2 0)}]
        skolem:lemma2523
        skolem:lemma2524
        [ a r:Fact; r:gives {(8620 268) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1269 a r:Inference;
    r:gives {
        269 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {269 math:notEqualTo 0}]
        skolem:lemma2525
        [ a r:Fact; r:gives {((0 2 6 9) "=<") list:sort (0 2 6 9)}]
        [ a r:Fact; r:gives {((0 2 6 9) ">=") list:sort (9 6 2 0)}]
        skolem:lemma2526
        skolem:lemma2527
        [ a r:Fact; r:gives {(9620 269) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1270 a r:Inference;
    r:gives {
        270 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {270 math:notEqualTo 0}]
        skolem:lemma2528
        [ a r:Fact; r:gives {((0 2 7 0) "=<") list:sort (0 0 2 7)}]
        [ a r:Fact; r:gives {((0 2 7 0) ">=") list:sort (7 2 0 0)}]
        skolem:lemma2074
        skolem:lemma2075
        [ a r:Fact; r:gives {(7200 27) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 270];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1271 a r:Inference;
    r:gives {
        271 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {271 math:notEqualTo 0}]
        skolem:lemma2529
        [ a r:Fact; r:gives {((0 2 7 1) "=<") list:sort (0 1 2 7)}]
        [ a r:Fact; r:gives {((0 2 7 1) ">=") list:sort (7 2 1 0)}]
        skolem:lemma2264
        skolem:lemma2265
        [ a r:Fact; r:gives {(7210 127) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 271];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1272 a r:Inference;
    r:gives {
        272 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {272 math:notEqualTo 0}]
        skolem:lemma2530
        [ a r:Fact; r:gives {((0 2 7 2) "=<") list:sort (0 2 2 7)}]
        [ a r:Fact; r:gives {((0 2 7 2) ">=") list:sort (7 2 2 0)}]
        skolem:lemma2436
        skolem:lemma2437
        [ a r:Fact; r:gives {(7220 227) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 272];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 227];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1273 a r:Inference;
    r:gives {
        273 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {273 math:notEqualTo 0}]
        skolem:lemma2531
        [ a r:Fact; r:gives {((0 2 7 3) "=<") list:sort (0 2 3 7)}]
        [ a r:Fact; r:gives {((0 2 7 3) ">=") list:sort (7 3 2 0)}]
        skolem:lemma2460
        skolem:lemma2461
        [ a r:Fact; r:gives {(7320 237) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 273];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1274 a r:Inference;
    r:gives {
        274 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {274 math:notEqualTo 0}]
        skolem:lemma2532
        [ a r:Fact; r:gives {((0 2 7 4) "=<") list:sort (0 2 4 7)}]
        [ a r:Fact; r:gives {((0 2 7 4) ">=") list:sort (7 4 2 0)}]
        skolem:lemma2482
        skolem:lemma2483
        [ a r:Fact; r:gives {(7420 247) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 274];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1275 a r:Inference;
    r:gives {
        275 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {275 math:notEqualTo 0}]
        skolem:lemma2533
        [ a r:Fact; r:gives {((0 2 7 5) "=<") list:sort (0 2 5 7)}]
        [ a r:Fact; r:gives {((0 2 7 5) ">=") list:sort (7 5 2 0)}]
        skolem:lemma2502
        skolem:lemma2503
        [ a r:Fact; r:gives {(7520 257) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 275];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1276 a r:Inference;
    r:gives {
        276 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {276 math:notEqualTo 0}]
        skolem:lemma2534
        [ a r:Fact; r:gives {((0 2 7 6) "=<") list:sort (0 2 6 7)}]
        [ a r:Fact; r:gives {((0 2 7 6) ">=") list:sort (7 6 2 0)}]
        skolem:lemma2520
        skolem:lemma2521
        [ a r:Fact; r:gives {(7620 267) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 276];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1277 a r:Inference;
    r:gives {
        277 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {277 math:notEqualTo 0}]
        skolem:lemma2535
        [ a r:Fact; r:gives {((0 2 7 7) "=<") list:sort (0 2 7 7)}]
        [ a r:Fact; r:gives {((0 2 7 7) ">=") list:sort (7 7 2 0)}]
        skolem:lemma2536
        skolem:lemma2537
        [ a r:Fact; r:gives {(7720 277) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 277];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 277];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1278 a r:Inference;
    r:gives {
        278 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {278 math:notEqualTo 0}]
        skolem:lemma2538
        [ a r:Fact; r:gives {((0 2 7 8) "=<") list:sort (0 2 7 8)}]
        [ a r:Fact; r:gives {((0 2 7 8) ">=") list:sort (8 7 2 0)}]
        skolem:lemma2539
        skolem:lemma2540
        [ a r:Fact; r:gives {(8720 278) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1279 a r:Inference;
    r:gives {
        279 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {279 math:notEqualTo 0}]
        skolem:lemma2541
        [ a r:Fact; r:gives {((0 2 7 9) "=<") list:sort (0 2 7 9)}]
        [ a r:Fact; r:gives {((0 2 7 9) ">=") list:sort (9 7 2 0)}]
        skolem:lemma2542
        skolem:lemma2543
        [ a r:Fact; r:gives {(9720 279) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1280 a r:Inference;
    r:gives {
        280 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {280 math:notEqualTo 0}]
        skolem:lemma2544
        [ a r:Fact; r:gives {((0 2 8 0) "=<") list:sort (0 0 2 8)}]
        [ a r:Fact; r:gives {((0 2 8 0) ">=") list:sort (8 2 0 0)}]
        skolem:lemma2077
        skolem:lemma2078
        [ a r:Fact; r:gives {(8200 28) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 280];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1281 a r:Inference;
    r:gives {
        281 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {281 math:notEqualTo 0}]
        skolem:lemma2545
        [ a r:Fact; r:gives {((0 2 8 1) "=<") list:sort (0 1 2 8)}]
        [ a r:Fact; r:gives {((0 2 8 1) ">=") list:sort (8 2 1 0)}]
        skolem:lemma2267
        skolem:lemma2268
        [ a r:Fact; r:gives {(8210 128) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 281];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1282 a r:Inference;
    r:gives {
        282 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {282 math:notEqualTo 0}]
        skolem:lemma2546
        [ a r:Fact; r:gives {((0 2 8 2) "=<") list:sort (0 2 2 8)}]
        [ a r:Fact; r:gives {((0 2 8 2) ">=") list:sort (8 2 2 0)}]
        skolem:lemma2439
        skolem:lemma2440
        [ a r:Fact; r:gives {(8220 228) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 282];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 228];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1283 a r:Inference;
    r:gives {
        283 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {283 math:notEqualTo 0}]
        skolem:lemma2547
        [ a r:Fact; r:gives {((0 2 8 3) "=<") list:sort (0 2 3 8)}]
        [ a r:Fact; r:gives {((0 2 8 3) ">=") list:sort (8 3 2 0)}]
        skolem:lemma2463
        skolem:lemma2464
        [ a r:Fact; r:gives {(8320 238) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 283];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1284 a r:Inference;
    r:gives {
        284 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {284 math:notEqualTo 0}]
        skolem:lemma2548
        [ a r:Fact; r:gives {((0 2 8 4) "=<") list:sort (0 2 4 8)}]
        [ a r:Fact; r:gives {((0 2 8 4) ">=") list:sort (8 4 2 0)}]
        skolem:lemma2485
        skolem:lemma2486
        [ a r:Fact; r:gives {(8420 248) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 284];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1285 a r:Inference;
    r:gives {
        285 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {285 math:notEqualTo 0}]
        skolem:lemma2549
        [ a r:Fact; r:gives {((0 2 8 5) "=<") list:sort (0 2 5 8)}]
        [ a r:Fact; r:gives {((0 2 8 5) ">=") list:sort (8 5 2 0)}]
        skolem:lemma2505
        skolem:lemma2506
        [ a r:Fact; r:gives {(8520 258) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 285];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1286 a r:Inference;
    r:gives {
        286 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {286 math:notEqualTo 0}]
        skolem:lemma2550
        [ a r:Fact; r:gives {((0 2 8 6) "=<") list:sort (0 2 6 8)}]
        [ a r:Fact; r:gives {((0 2 8 6) ">=") list:sort (8 6 2 0)}]
        skolem:lemma2523
        skolem:lemma2524
        [ a r:Fact; r:gives {(8620 268) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 286];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1287 a r:Inference;
    r:gives {
        287 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {287 math:notEqualTo 0}]
        skolem:lemma2551
        [ a r:Fact; r:gives {((0 2 8 7) "=<") list:sort (0 2 7 8)}]
        [ a r:Fact; r:gives {((0 2 8 7) ">=") list:sort (8 7 2 0)}]
        skolem:lemma2539
        skolem:lemma2540
        [ a r:Fact; r:gives {(8720 278) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 287];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1288 a r:Inference;
    r:gives {
        288 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {288 math:notEqualTo 0}]
        skolem:lemma2552
        [ a r:Fact; r:gives {((0 2 8 8) "=<") list:sort (0 2 8 8)}]
        [ a r:Fact; r:gives {((0 2 8 8) ">=") list:sort (8 8 2 0)}]
        skolem:lemma2553
        skolem:lemma2554
        [ a r:Fact; r:gives {(8820 288) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 288];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 288];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1289 a r:Inference;
    r:gives {
        289 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {289 math:notEqualTo 0}]
        skolem:lemma2555
        [ a r:Fact; r:gives {((0 2 8 9) "=<") list:sort (0 2 8 9)}]
        [ a r:Fact; r:gives {((0 2 8 9) ">=") list:sort (9 8 2 0)}]
        skolem:lemma2556
        skolem:lemma2557
        [ a r:Fact; r:gives {(9820 289) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1290 a r:Inference;
    r:gives {
        290 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {290 math:notEqualTo 0}]
        skolem:lemma2558
        [ a r:Fact; r:gives {((0 2 9 0) "=<") list:sort (0 0 2 9)}]
        [ a r:Fact; r:gives {((0 2 9 0) ">=") list:sort (9 2 0 0)}]
        skolem:lemma2080
        skolem:lemma2081
        [ a r:Fact; r:gives {(9200 29) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 290];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1291 a r:Inference;
    r:gives {
        291 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {291 math:notEqualTo 0}]
        skolem:lemma2559
        [ a r:Fact; r:gives {((0 2 9 1) "=<") list:sort (0 1 2 9)}]
        [ a r:Fact; r:gives {((0 2 9 1) ">=") list:sort (9 2 1 0)}]
        skolem:lemma2270
        skolem:lemma2271
        [ a r:Fact; r:gives {(9210 129) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 291];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1292 a r:Inference;
    r:gives {
        292 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {292 math:notEqualTo 0}]
        skolem:lemma2560
        [ a r:Fact; r:gives {((0 2 9 2) "=<") list:sort (0 2 2 9)}]
        [ a r:Fact; r:gives {((0 2 9 2) ">=") list:sort (9 2 2 0)}]
        skolem:lemma2442
        skolem:lemma2443
        [ a r:Fact; r:gives {(9220 229) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 292];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 229];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1293 a r:Inference;
    r:gives {
        293 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {293 math:notEqualTo 0}]
        skolem:lemma2561
        [ a r:Fact; r:gives {((0 2 9 3) "=<") list:sort (0 2 3 9)}]
        [ a r:Fact; r:gives {((0 2 9 3) ">=") list:sort (9 3 2 0)}]
        skolem:lemma2466
        skolem:lemma2467
        [ a r:Fact; r:gives {(9320 239) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 293];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1294 a r:Inference;
    r:gives {
        294 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {294 math:notEqualTo 0}]
        skolem:lemma2562
        [ a r:Fact; r:gives {((0 2 9 4) "=<") list:sort (0 2 4 9)}]
        [ a r:Fact; r:gives {((0 2 9 4) ">=") list:sort (9 4 2 0)}]
        skolem:lemma2488
        skolem:lemma2489
        [ a r:Fact; r:gives {(9420 249) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 294];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1295 a r:Inference;
    r:gives {
        295 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {295 math:notEqualTo 0}]
        skolem:lemma2563
        [ a r:Fact; r:gives {((0 2 9 5) "=<") list:sort (0 2 5 9)}]
        [ a r:Fact; r:gives {((0 2 9 5) ">=") list:sort (9 5 2 0)}]
        skolem:lemma2508
        skolem:lemma2509
        [ a r:Fact; r:gives {(9520 259) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 295];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1296 a r:Inference;
    r:gives {
        296 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {296 math:notEqualTo 0}]
        skolem:lemma2564
        [ a r:Fact; r:gives {((0 2 9 6) "=<") list:sort (0 2 6 9)}]
        [ a r:Fact; r:gives {((0 2 9 6) ">=") list:sort (9 6 2 0)}]
        skolem:lemma2526
        skolem:lemma2527
        [ a r:Fact; r:gives {(9620 269) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 296];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1297 a r:Inference;
    r:gives {
        297 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {297 math:notEqualTo 0}]
        skolem:lemma2565
        [ a r:Fact; r:gives {((0 2 9 7) "=<") list:sort (0 2 7 9)}]
        [ a r:Fact; r:gives {((0 2 9 7) ">=") list:sort (9 7 2 0)}]
        skolem:lemma2542
        skolem:lemma2543
        [ a r:Fact; r:gives {(9720 279) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 297];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1298 a r:Inference;
    r:gives {
        298 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {298 math:notEqualTo 0}]
        skolem:lemma2566
        [ a r:Fact; r:gives {((0 2 9 8) "=<") list:sort (0 2 8 9)}]
        [ a r:Fact; r:gives {((0 2 9 8) ">=") list:sort (9 8 2 0)}]
        skolem:lemma2556
        skolem:lemma2557
        [ a r:Fact; r:gives {(9820 289) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 298];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1299 a r:Inference;
    r:gives {
        299 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {299 math:notEqualTo 0}]
        skolem:lemma2567
        [ a r:Fact; r:gives {((0 2 9 9) "=<") list:sort (0 2 9 9)}]
        [ a r:Fact; r:gives {((0 2 9 9) ">=") list:sort (9 9 2 0)}]
        skolem:lemma2568
        skolem:lemma2569
        [ a r:Fact; r:gives {(9920 299) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 299];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 2 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 299];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9920];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1300 a r:Inference;
    r:gives {
        300 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {300 math:notEqualTo 0}]
        skolem:lemma2570
        [ a r:Fact; r:gives {((0 3 0 0) "=<") list:sort (0 0 0 3)}]
        [ a r:Fact; r:gives {((0 3 0 0) ">=") list:sort (3 0 0 0)}]
        skolem:lemma2008
        skolem:lemma2009
        [ a r:Fact; r:gives {(3000 3) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1301 a r:Inference;
    r:gives {
        301 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {301 math:notEqualTo 0}]
        skolem:lemma2571
        [ a r:Fact; r:gives {((0 3 0 1) "=<") list:sort (0 0 1 3)}]
        [ a r:Fact; r:gives {((0 3 0 1) ">=") list:sort (3 1 0 0)}]
        skolem:lemma2036
        skolem:lemma2037
        [ a r:Fact; r:gives {(3100 13) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 301];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1302 a r:Inference;
    r:gives {
        302 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {302 math:notEqualTo 0}]
        skolem:lemma2572
        [ a r:Fact; r:gives {((0 3 0 2) "=<") list:sort (0 0 2 3)}]
        [ a r:Fact; r:gives {((0 3 0 2) ">=") list:sort (3 2 0 0)}]
        skolem:lemma2062
        skolem:lemma2063
        [ a r:Fact; r:gives {(3200 23) math:difference 3177}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3177 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            3177 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 302];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1303 a r:Inference;
    r:gives {
        303 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {303 math:notEqualTo 0}]
        skolem:lemma2573
        [ a r:Fact; r:gives {((0 3 0 3) "=<") list:sort (0 0 3 3)}]
        [ a r:Fact; r:gives {((0 3 0 3) ">=") list:sort (3 3 0 0)}]
        skolem:lemma2086
        skolem:lemma2087
        [ a r:Fact; r:gives {(3300 33) math:difference 3267}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3267 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            3267 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 303];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1304 a r:Inference;
    r:gives {
        304 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {304 math:notEqualTo 0}]
        skolem:lemma2574
        [ a r:Fact; r:gives {((0 3 0 4) "=<") list:sort (0 0 3 4)}]
        [ a r:Fact; r:gives {((0 3 0 4) ">=") list:sort (4 3 0 0)}]
        skolem:lemma2089
        skolem:lemma2090
        [ a r:Fact; r:gives {(4300 34) math:difference 4266}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4266 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            4266 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 304];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1305 a r:Inference;
    r:gives {
        305 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {305 math:notEqualTo 0}]
        skolem:lemma2575
        [ a r:Fact; r:gives {((0 3 0 5) "=<") list:sort (0 0 3 5)}]
        [ a r:Fact; r:gives {((0 3 0 5) ">=") list:sort (5 3 0 0)}]
        skolem:lemma2092
        skolem:lemma2093
        [ a r:Fact; r:gives {(5300 35) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 305];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1306 a r:Inference;
    r:gives {
        306 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {306 math:notEqualTo 0}]
        skolem:lemma2576
        [ a r:Fact; r:gives {((0 3 0 6) "=<") list:sort (0 0 3 6)}]
        [ a r:Fact; r:gives {((0 3 0 6) ">=") list:sort (6 3 0 0)}]
        skolem:lemma2095
        skolem:lemma2096
        [ a r:Fact; r:gives {(6300 36) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 306];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1307 a r:Inference;
    r:gives {
        307 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {307 math:notEqualTo 0}]
        skolem:lemma2577
        [ a r:Fact; r:gives {((0 3 0 7) "=<") list:sort (0 0 3 7)}]
        [ a r:Fact; r:gives {((0 3 0 7) ">=") list:sort (7 3 0 0)}]
        skolem:lemma2098
        skolem:lemma2099
        [ a r:Fact; r:gives {(7300 37) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 307];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1308 a r:Inference;
    r:gives {
        308 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {308 math:notEqualTo 0}]
        skolem:lemma2578
        [ a r:Fact; r:gives {((0 3 0 8) "=<") list:sort (0 0 3 8)}]
        [ a r:Fact; r:gives {((0 3 0 8) ">=") list:sort (8 3 0 0)}]
        skolem:lemma2101
        skolem:lemma2102
        [ a r:Fact; r:gives {(8300 38) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 308];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1309 a r:Inference;
    r:gives {
        309 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {309 math:notEqualTo 0}]
        skolem:lemma2579
        [ a r:Fact; r:gives {((0 3 0 9) "=<") list:sort (0 0 3 9)}]
        [ a r:Fact; r:gives {((0 3 0 9) ">=") list:sort (9 3 0 0)}]
        skolem:lemma2104
        skolem:lemma2105
        [ a r:Fact; r:gives {(9300 39) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 309];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1310 a r:Inference;
    r:gives {
        310 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {310 math:notEqualTo 0}]
        skolem:lemma2580
        [ a r:Fact; r:gives {((0 3 1 0) "=<") list:sort (0 0 1 3)}]
        [ a r:Fact; r:gives {((0 3 1 0) ">=") list:sort (3 1 0 0)}]
        skolem:lemma2036
        skolem:lemma2037
        [ a r:Fact; r:gives {(3100 13) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1311 a r:Inference;
    r:gives {
        311 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {311 math:notEqualTo 0}]
        skolem:lemma2581
        [ a r:Fact; r:gives {((0 3 1 1) "=<") list:sort (0 1 1 3)}]
        [ a r:Fact; r:gives {((0 3 1 1) ">=") list:sort (3 1 1 0)}]
        skolem:lemma2226
        skolem:lemma2227
        [ a r:Fact; r:gives {(3110 113) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 311];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 113];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1312 a r:Inference;
    r:gives {
        312 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {312 math:notEqualTo 0}]
        skolem:lemma2582
        [ a r:Fact; r:gives {((0 3 1 2) "=<") list:sort (0 1 2 3)}]
        [ a r:Fact; r:gives {((0 3 1 2) ">=") list:sort (3 2 1 0)}]
        skolem:lemma2252
        skolem:lemma2253
        [ a r:Fact; r:gives {(3210 123) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 312];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1313 a r:Inference;
    r:gives {
        313 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {313 math:notEqualTo 0}]
        skolem:lemma2583
        [ a r:Fact; r:gives {((0 3 1 3) "=<") list:sort (0 1 3 3)}]
        [ a r:Fact; r:gives {((0 3 1 3) ">=") list:sort (3 3 1 0)}]
        skolem:lemma2276
        skolem:lemma2277
        [ a r:Fact; r:gives {(3310 133) math:difference 3177}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3177 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            3177 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 313];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 133];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1314 a r:Inference;
    r:gives {
        314 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {314 math:notEqualTo 0}]
        skolem:lemma2584
        [ a r:Fact; r:gives {((0 3 1 4) "=<") list:sort (0 1 3 4)}]
        [ a r:Fact; r:gives {((0 3 1 4) ">=") list:sort (4 3 1 0)}]
        skolem:lemma2279
        skolem:lemma2280
        [ a r:Fact; r:gives {(4310 134) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 314];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1315 a r:Inference;
    r:gives {
        315 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {315 math:notEqualTo 0}]
        skolem:lemma2585
        [ a r:Fact; r:gives {((0 3 1 5) "=<") list:sort (0 1 3 5)}]
        [ a r:Fact; r:gives {((0 3 1 5) ">=") list:sort (5 3 1 0)}]
        skolem:lemma2282
        skolem:lemma2283
        [ a r:Fact; r:gives {(5310 135) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 315];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1316 a r:Inference;
    r:gives {
        316 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {316 math:notEqualTo 0}]
        skolem:lemma2586
        [ a r:Fact; r:gives {((0 3 1 6) "=<") list:sort (0 1 3 6)}]
        [ a r:Fact; r:gives {((0 3 1 6) ">=") list:sort (6 3 1 0)}]
        skolem:lemma2285
        skolem:lemma2286
        [ a r:Fact; r:gives {(6310 136) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 316];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1317 a r:Inference;
    r:gives {
        317 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {317 math:notEqualTo 0}]
        skolem:lemma2587
        [ a r:Fact; r:gives {((0 3 1 7) "=<") list:sort (0 1 3 7)}]
        [ a r:Fact; r:gives {((0 3 1 7) ">=") list:sort (7 3 1 0)}]
        skolem:lemma2288
        skolem:lemma2289
        [ a r:Fact; r:gives {(7310 137) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 317];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1318 a r:Inference;
    r:gives {
        318 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {318 math:notEqualTo 0}]
        skolem:lemma2588
        [ a r:Fact; r:gives {((0 3 1 8) "=<") list:sort (0 1 3 8)}]
        [ a r:Fact; r:gives {((0 3 1 8) ">=") list:sort (8 3 1 0)}]
        skolem:lemma2291
        skolem:lemma2292
        [ a r:Fact; r:gives {(8310 138) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 318];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1319 a r:Inference;
    r:gives {
        319 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {319 math:notEqualTo 0}]
        skolem:lemma2589
        [ a r:Fact; r:gives {((0 3 1 9) "=<") list:sort (0 1 3 9)}]
        [ a r:Fact; r:gives {((0 3 1 9) ">=") list:sort (9 3 1 0)}]
        skolem:lemma2294
        skolem:lemma2295
        [ a r:Fact; r:gives {(9310 139) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 319];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1320 a r:Inference;
    r:gives {
        320 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {320 math:notEqualTo 0}]
        skolem:lemma2590
        [ a r:Fact; r:gives {((0 3 2 0) "=<") list:sort (0 0 2 3)}]
        [ a r:Fact; r:gives {((0 3 2 0) ">=") list:sort (3 2 0 0)}]
        skolem:lemma2062
        skolem:lemma2063
        [ a r:Fact; r:gives {(3200 23) math:difference 3177}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3177 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            3177 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1321 a r:Inference;
    r:gives {
        321 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {321 math:notEqualTo 0}]
        skolem:lemma2591
        [ a r:Fact; r:gives {((0 3 2 1) "=<") list:sort (0 1 2 3)}]
        [ a r:Fact; r:gives {((0 3 2 1) ">=") list:sort (3 2 1 0)}]
        skolem:lemma2252
        skolem:lemma2253
        [ a r:Fact; r:gives {(3210 123) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 321];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1322 a r:Inference;
    r:gives {
        322 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {322 math:notEqualTo 0}]
        skolem:lemma2592
        [ a r:Fact; r:gives {((0 3 2 2) "=<") list:sort (0 2 2 3)}]
        [ a r:Fact; r:gives {((0 3 2 2) ">=") list:sort (3 2 2 0)}]
        skolem:lemma2424
        skolem:lemma2425
        [ a r:Fact; r:gives {(3220 223) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 322];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 223];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1323 a r:Inference;
    r:gives {
        323 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {323 math:notEqualTo 0}]
        skolem:lemma2593
        [ a r:Fact; r:gives {((0 3 2 3) "=<") list:sort (0 2 3 3)}]
        [ a r:Fact; r:gives {((0 3 2 3) ">=") list:sort (3 3 2 0)}]
        skolem:lemma2448
        skolem:lemma2449
        [ a r:Fact; r:gives {(3320 233) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 323];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 233];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1324 a r:Inference;
    r:gives {
        324 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {324 math:notEqualTo 0}]
        skolem:lemma2594
        [ a r:Fact; r:gives {((0 3 2 4) "=<") list:sort (0 2 3 4)}]
        [ a r:Fact; r:gives {((0 3 2 4) ">=") list:sort (4 3 2 0)}]
        skolem:lemma2451
        skolem:lemma2452
        [ a r:Fact; r:gives {(4320 234) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 324];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1325 a r:Inference;
    r:gives {
        325 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {325 math:notEqualTo 0}]
        skolem:lemma2595
        [ a r:Fact; r:gives {((0 3 2 5) "=<") list:sort (0 2 3 5)}]
        [ a r:Fact; r:gives {((0 3 2 5) ">=") list:sort (5 3 2 0)}]
        skolem:lemma2454
        skolem:lemma2455
        [ a r:Fact; r:gives {(5320 235) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 325];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1326 a r:Inference;
    r:gives {
        326 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {326 math:notEqualTo 0}]
        skolem:lemma2596
        [ a r:Fact; r:gives {((0 3 2 6) "=<") list:sort (0 2 3 6)}]
        [ a r:Fact; r:gives {((0 3 2 6) ">=") list:sort (6 3 2 0)}]
        skolem:lemma2457
        skolem:lemma2458
        [ a r:Fact; r:gives {(6320 236) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 326];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1327 a r:Inference;
    r:gives {
        327 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {327 math:notEqualTo 0}]
        skolem:lemma2597
        [ a r:Fact; r:gives {((0 3 2 7) "=<") list:sort (0 2 3 7)}]
        [ a r:Fact; r:gives {((0 3 2 7) ">=") list:sort (7 3 2 0)}]
        skolem:lemma2460
        skolem:lemma2461
        [ a r:Fact; r:gives {(7320 237) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 327];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1328 a r:Inference;
    r:gives {
        328 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {328 math:notEqualTo 0}]
        skolem:lemma2598
        [ a r:Fact; r:gives {((0 3 2 8) "=<") list:sort (0 2 3 8)}]
        [ a r:Fact; r:gives {((0 3 2 8) ">=") list:sort (8 3 2 0)}]
        skolem:lemma2463
        skolem:lemma2464
        [ a r:Fact; r:gives {(8320 238) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 328];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1329 a r:Inference;
    r:gives {
        329 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {329 math:notEqualTo 0}]
        skolem:lemma2599
        [ a r:Fact; r:gives {((0 3 2 9) "=<") list:sort (0 2 3 9)}]
        [ a r:Fact; r:gives {((0 3 2 9) ">=") list:sort (9 3 2 0)}]
        skolem:lemma2466
        skolem:lemma2467
        [ a r:Fact; r:gives {(9320 239) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 329];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1330 a r:Inference;
    r:gives {
        330 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {330 math:notEqualTo 0}]
        skolem:lemma2600
        [ a r:Fact; r:gives {((0 3 3 0) "=<") list:sort (0 0 3 3)}]
        [ a r:Fact; r:gives {((0 3 3 0) ">=") list:sort (3 3 0 0)}]
        skolem:lemma2086
        skolem:lemma2087
        [ a r:Fact; r:gives {(3300 33) math:difference 3267}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3267 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            3267 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1331 a r:Inference;
    r:gives {
        331 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {331 math:notEqualTo 0}]
        skolem:lemma2601
        [ a r:Fact; r:gives {((0 3 3 1) "=<") list:sort (0 1 3 3)}]
        [ a r:Fact; r:gives {((0 3 3 1) ">=") list:sort (3 3 1 0)}]
        skolem:lemma2276
        skolem:lemma2277
        [ a r:Fact; r:gives {(3310 133) math:difference 3177}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3177 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            3177 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 331];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 133];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1332 a r:Inference;
    r:gives {
        332 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {332 math:notEqualTo 0}]
        skolem:lemma2602
        [ a r:Fact; r:gives {((0 3 3 2) "=<") list:sort (0 2 3 3)}]
        [ a r:Fact; r:gives {((0 3 3 2) ">=") list:sort (3 3 2 0)}]
        skolem:lemma2448
        skolem:lemma2449
        [ a r:Fact; r:gives {(3320 233) math:difference 3087}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3087 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            3087 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 332];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 233];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3087];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1333 a r:Inference;
    r:gives {
        333 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {333 math:notEqualTo 0}]
        skolem:lemma2603
        [ a r:Fact; r:gives {((0 3 3 3) "=<") list:sort (0 3 3 3)}]
        [ a r:Fact; r:gives {((0 3 3 3) ">=") list:sort (3 3 3 0)}]
        skolem:lemma2604
        skolem:lemma2605
        [ a r:Fact; r:gives {(3330 333) math:difference 2997}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            2997 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            2997 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 333];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 333];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1334 a r:Inference;
    r:gives {
        334 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {334 math:notEqualTo 0}]
        skolem:lemma2606
        [ a r:Fact; r:gives {((0 3 3 4) "=<") list:sort (0 3 3 4)}]
        [ a r:Fact; r:gives {((0 3 3 4) ">=") list:sort (4 3 3 0)}]
        skolem:lemma2607
        skolem:lemma2608
        [ a r:Fact; r:gives {(4330 334) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 334];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 334];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1335 a r:Inference;
    r:gives {
        335 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {335 math:notEqualTo 0}]
        skolem:lemma2609
        [ a r:Fact; r:gives {((0 3 3 5) "=<") list:sort (0 3 3 5)}]
        [ a r:Fact; r:gives {((0 3 3 5) ">=") list:sort (5 3 3 0)}]
        skolem:lemma2610
        skolem:lemma2611
        [ a r:Fact; r:gives {(5330 335) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 335];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 335];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1336 a r:Inference;
    r:gives {
        336 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {336 math:notEqualTo 0}]
        skolem:lemma2612
        [ a r:Fact; r:gives {((0 3 3 6) "=<") list:sort (0 3 3 6)}]
        [ a r:Fact; r:gives {((0 3 3 6) ">=") list:sort (6 3 3 0)}]
        skolem:lemma2613
        skolem:lemma2614
        [ a r:Fact; r:gives {(6330 336) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 336];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 336];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1337 a r:Inference;
    r:gives {
        337 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {337 math:notEqualTo 0}]
        skolem:lemma2615
        [ a r:Fact; r:gives {((0 3 3 7) "=<") list:sort (0 3 3 7)}]
        [ a r:Fact; r:gives {((0 3 3 7) ">=") list:sort (7 3 3 0)}]
        skolem:lemma2616
        skolem:lemma2617
        [ a r:Fact; r:gives {(7330 337) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 337];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 337];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1338 a r:Inference;
    r:gives {
        338 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {338 math:notEqualTo 0}]
        skolem:lemma2618
        [ a r:Fact; r:gives {((0 3 3 8) "=<") list:sort (0 3 3 8)}]
        [ a r:Fact; r:gives {((0 3 3 8) ">=") list:sort (8 3 3 0)}]
        skolem:lemma2619
        skolem:lemma2620
        [ a r:Fact; r:gives {(8330 338) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 338];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 338];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1339 a r:Inference;
    r:gives {
        339 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {339 math:notEqualTo 0}]
        skolem:lemma2621
        [ a r:Fact; r:gives {((0 3 3 9) "=<") list:sort (0 3 3 9)}]
        [ a r:Fact; r:gives {((0 3 3 9) ">=") list:sort (9 3 3 0)}]
        skolem:lemma2622
        skolem:lemma2623
        [ a r:Fact; r:gives {(9330 339) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 339];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 339];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1340 a r:Inference;
    r:gives {
        340 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {340 math:notEqualTo 0}]
        skolem:lemma2624
        [ a r:Fact; r:gives {((0 3 4 0) "=<") list:sort (0 0 3 4)}]
        [ a r:Fact; r:gives {((0 3 4 0) ">=") list:sort (4 3 0 0)}]
        skolem:lemma2089
        skolem:lemma2090
        [ a r:Fact; r:gives {(4300 34) math:difference 4266}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4266 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            4266 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 340];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1341 a r:Inference;
    r:gives {
        341 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {341 math:notEqualTo 0}]
        skolem:lemma2625
        [ a r:Fact; r:gives {((0 3 4 1) "=<") list:sort (0 1 3 4)}]
        [ a r:Fact; r:gives {((0 3 4 1) ">=") list:sort (4 3 1 0)}]
        skolem:lemma2279
        skolem:lemma2280
        [ a r:Fact; r:gives {(4310 134) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 341];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1342 a r:Inference;
    r:gives {
        342 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {342 math:notEqualTo 0}]
        skolem:lemma2626
        [ a r:Fact; r:gives {((0 3 4 2) "=<") list:sort (0 2 3 4)}]
        [ a r:Fact; r:gives {((0 3 4 2) ">=") list:sort (4 3 2 0)}]
        skolem:lemma2451
        skolem:lemma2452
        [ a r:Fact; r:gives {(4320 234) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 342];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1343 a r:Inference;
    r:gives {
        343 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {343 math:notEqualTo 0}]
        skolem:lemma2627
        [ a r:Fact; r:gives {((0 3 4 3) "=<") list:sort (0 3 3 4)}]
        [ a r:Fact; r:gives {((0 3 4 3) ">=") list:sort (4 3 3 0)}]
        skolem:lemma2607
        skolem:lemma2608
        [ a r:Fact; r:gives {(4330 334) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 343];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 334];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1344 a r:Inference;
    r:gives {
        344 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {344 math:notEqualTo 0}]
        skolem:lemma2628
        [ a r:Fact; r:gives {((0 3 4 4) "=<") list:sort (0 3 4 4)}]
        [ a r:Fact; r:gives {((0 3 4 4) ">=") list:sort (4 4 3 0)}]
        skolem:lemma2629
        skolem:lemma2630
        [ a r:Fact; r:gives {(4430 344) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 344];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 344];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1345 a r:Inference;
    r:gives {
        345 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {345 math:notEqualTo 0}]
        skolem:lemma2631
        [ a r:Fact; r:gives {((0 3 4 5) "=<") list:sort (0 3 4 5)}]
        [ a r:Fact; r:gives {((0 3 4 5) ">=") list:sort (5 4 3 0)}]
        skolem:lemma2632
        skolem:lemma2633
        [ a r:Fact; r:gives {(5430 345) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1346 a r:Inference;
    r:gives {
        346 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {346 math:notEqualTo 0}]
        skolem:lemma2634
        [ a r:Fact; r:gives {((0 3 4 6) "=<") list:sort (0 3 4 6)}]
        [ a r:Fact; r:gives {((0 3 4 6) ">=") list:sort (6 4 3 0)}]
        skolem:lemma2635
        skolem:lemma2636
        [ a r:Fact; r:gives {(6430 346) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1347 a r:Inference;
    r:gives {
        347 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {347 math:notEqualTo 0}]
        skolem:lemma2637
        [ a r:Fact; r:gives {((0 3 4 7) "=<") list:sort (0 3 4 7)}]
        [ a r:Fact; r:gives {((0 3 4 7) ">=") list:sort (7 4 3 0)}]
        skolem:lemma2638
        skolem:lemma2639
        [ a r:Fact; r:gives {(7430 347) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1348 a r:Inference;
    r:gives {
        348 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {348 math:notEqualTo 0}]
        skolem:lemma2640
        [ a r:Fact; r:gives {((0 3 4 8) "=<") list:sort (0 3 4 8)}]
        [ a r:Fact; r:gives {((0 3 4 8) ">=") list:sort (8 4 3 0)}]
        skolem:lemma2641
        skolem:lemma2642
        [ a r:Fact; r:gives {(8430 348) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1349 a r:Inference;
    r:gives {
        349 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {349 math:notEqualTo 0}]
        skolem:lemma2643
        [ a r:Fact; r:gives {((0 3 4 9) "=<") list:sort (0 3 4 9)}]
        [ a r:Fact; r:gives {((0 3 4 9) ">=") list:sort (9 4 3 0)}]
        skolem:lemma2644
        skolem:lemma2645
        [ a r:Fact; r:gives {(9430 349) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1350 a r:Inference;
    r:gives {
        350 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {350 math:notEqualTo 0}]
        skolem:lemma2646
        [ a r:Fact; r:gives {((0 3 5 0) "=<") list:sort (0 0 3 5)}]
        [ a r:Fact; r:gives {((0 3 5 0) ">=") list:sort (5 3 0 0)}]
        skolem:lemma2092
        skolem:lemma2093
        [ a r:Fact; r:gives {(5300 35) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 350];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1351 a r:Inference;
    r:gives {
        351 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {351 math:notEqualTo 0}]
        skolem:lemma2647
        [ a r:Fact; r:gives {((0 3 5 1) "=<") list:sort (0 1 3 5)}]
        [ a r:Fact; r:gives {((0 3 5 1) ">=") list:sort (5 3 1 0)}]
        skolem:lemma2282
        skolem:lemma2283
        [ a r:Fact; r:gives {(5310 135) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1352 a r:Inference;
    r:gives {
        352 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {352 math:notEqualTo 0}]
        skolem:lemma2648
        [ a r:Fact; r:gives {((0 3 5 2) "=<") list:sort (0 2 3 5)}]
        [ a r:Fact; r:gives {((0 3 5 2) ">=") list:sort (5 3 2 0)}]
        skolem:lemma2454
        skolem:lemma2455
        [ a r:Fact; r:gives {(5320 235) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1353 a r:Inference;
    r:gives {
        353 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {353 math:notEqualTo 0}]
        skolem:lemma2649
        [ a r:Fact; r:gives {((0 3 5 3) "=<") list:sort (0 3 3 5)}]
        [ a r:Fact; r:gives {((0 3 5 3) ">=") list:sort (5 3 3 0)}]
        skolem:lemma2610
        skolem:lemma2611
        [ a r:Fact; r:gives {(5330 335) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 335];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1354 a r:Inference;
    r:gives {
        354 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {354 math:notEqualTo 0}]
        skolem:lemma2650
        [ a r:Fact; r:gives {((0 3 5 4) "=<") list:sort (0 3 4 5)}]
        [ a r:Fact; r:gives {((0 3 5 4) ">=") list:sort (5 4 3 0)}]
        skolem:lemma2632
        skolem:lemma2633
        [ a r:Fact; r:gives {(5430 345) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1355 a r:Inference;
    r:gives {
        355 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {355 math:notEqualTo 0}]
        skolem:lemma2651
        [ a r:Fact; r:gives {((0 3 5 5) "=<") list:sort (0 3 5 5)}]
        [ a r:Fact; r:gives {((0 3 5 5) ">=") list:sort (5 5 3 0)}]
        skolem:lemma2652
        skolem:lemma2653
        [ a r:Fact; r:gives {(5530 355) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1356 a r:Inference;
    r:gives {
        356 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {356 math:notEqualTo 0}]
        skolem:lemma2654
        [ a r:Fact; r:gives {((0 3 5 6) "=<") list:sort (0 3 5 6)}]
        [ a r:Fact; r:gives {((0 3 5 6) ">=") list:sort (6 5 3 0)}]
        skolem:lemma2655
        skolem:lemma2656
        [ a r:Fact; r:gives {(6530 356) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1357 a r:Inference;
    r:gives {
        357 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {357 math:notEqualTo 0}]
        skolem:lemma2657
        [ a r:Fact; r:gives {((0 3 5 7) "=<") list:sort (0 3 5 7)}]
        [ a r:Fact; r:gives {((0 3 5 7) ">=") list:sort (7 5 3 0)}]
        skolem:lemma2658
        skolem:lemma2659
        [ a r:Fact; r:gives {(7530 357) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1358 a r:Inference;
    r:gives {
        358 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {358 math:notEqualTo 0}]
        skolem:lemma2660
        [ a r:Fact; r:gives {((0 3 5 8) "=<") list:sort (0 3 5 8)}]
        [ a r:Fact; r:gives {((0 3 5 8) ">=") list:sort (8 5 3 0)}]
        skolem:lemma2661
        skolem:lemma2662
        [ a r:Fact; r:gives {(8530 358) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1359 a r:Inference;
    r:gives {
        359 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {359 math:notEqualTo 0}]
        skolem:lemma2663
        [ a r:Fact; r:gives {((0 3 5 9) "=<") list:sort (0 3 5 9)}]
        [ a r:Fact; r:gives {((0 3 5 9) ">=") list:sort (9 5 3 0)}]
        skolem:lemma2664
        skolem:lemma2665
        [ a r:Fact; r:gives {(9530 359) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1360 a r:Inference;
    r:gives {
        360 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {360 math:notEqualTo 0}]
        skolem:lemma2666
        [ a r:Fact; r:gives {((0 3 6 0) "=<") list:sort (0 0 3 6)}]
        [ a r:Fact; r:gives {((0 3 6 0) ">=") list:sort (6 3 0 0)}]
        skolem:lemma2095
        skolem:lemma2096
        [ a r:Fact; r:gives {(6300 36) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 360];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1361 a r:Inference;
    r:gives {
        361 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {361 math:notEqualTo 0}]
        skolem:lemma2667
        [ a r:Fact; r:gives {((0 3 6 1) "=<") list:sort (0 1 3 6)}]
        [ a r:Fact; r:gives {((0 3 6 1) ">=") list:sort (6 3 1 0)}]
        skolem:lemma2285
        skolem:lemma2286
        [ a r:Fact; r:gives {(6310 136) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 361];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1362 a r:Inference;
    r:gives {
        362 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {362 math:notEqualTo 0}]
        skolem:lemma2668
        [ a r:Fact; r:gives {((0 3 6 2) "=<") list:sort (0 2 3 6)}]
        [ a r:Fact; r:gives {((0 3 6 2) ">=") list:sort (6 3 2 0)}]
        skolem:lemma2457
        skolem:lemma2458
        [ a r:Fact; r:gives {(6320 236) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 362];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1363 a r:Inference;
    r:gives {
        363 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {363 math:notEqualTo 0}]
        skolem:lemma2669
        [ a r:Fact; r:gives {((0 3 6 3) "=<") list:sort (0 3 3 6)}]
        [ a r:Fact; r:gives {((0 3 6 3) ">=") list:sort (6 3 3 0)}]
        skolem:lemma2613
        skolem:lemma2614
        [ a r:Fact; r:gives {(6330 336) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 363];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 336];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1364 a r:Inference;
    r:gives {
        364 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {364 math:notEqualTo 0}]
        skolem:lemma2670
        [ a r:Fact; r:gives {((0 3 6 4) "=<") list:sort (0 3 4 6)}]
        [ a r:Fact; r:gives {((0 3 6 4) ">=") list:sort (6 4 3 0)}]
        skolem:lemma2635
        skolem:lemma2636
        [ a r:Fact; r:gives {(6430 346) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 364];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1365 a r:Inference;
    r:gives {
        365 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {365 math:notEqualTo 0}]
        skolem:lemma2671
        [ a r:Fact; r:gives {((0 3 6 5) "=<") list:sort (0 3 5 6)}]
        [ a r:Fact; r:gives {((0 3 6 5) ">=") list:sort (6 5 3 0)}]
        skolem:lemma2655
        skolem:lemma2656
        [ a r:Fact; r:gives {(6530 356) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 365];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1366 a r:Inference;
    r:gives {
        366 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {366 math:notEqualTo 0}]
        skolem:lemma2672
        [ a r:Fact; r:gives {((0 3 6 6) "=<") list:sort (0 3 6 6)}]
        [ a r:Fact; r:gives {((0 3 6 6) ">=") list:sort (6 6 3 0)}]
        skolem:lemma2673
        skolem:lemma2674
        [ a r:Fact; r:gives {(6630 366) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 366];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 366];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1367 a r:Inference;
    r:gives {
        367 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {367 math:notEqualTo 0}]
        skolem:lemma2675
        [ a r:Fact; r:gives {((0 3 6 7) "=<") list:sort (0 3 6 7)}]
        [ a r:Fact; r:gives {((0 3 6 7) ">=") list:sort (7 6 3 0)}]
        skolem:lemma2676
        skolem:lemma2677
        [ a r:Fact; r:gives {(7630 367) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1368 a r:Inference;
    r:gives {
        368 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {368 math:notEqualTo 0}]
        skolem:lemma2678
        [ a r:Fact; r:gives {((0 3 6 8) "=<") list:sort (0 3 6 8)}]
        [ a r:Fact; r:gives {((0 3 6 8) ">=") list:sort (8 6 3 0)}]
        skolem:lemma2679
        skolem:lemma2680
        [ a r:Fact; r:gives {(8630 368) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1369 a r:Inference;
    r:gives {
        369 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {369 math:notEqualTo 0}]
        skolem:lemma2681
        [ a r:Fact; r:gives {((0 3 6 9) "=<") list:sort (0 3 6 9)}]
        [ a r:Fact; r:gives {((0 3 6 9) ">=") list:sort (9 6 3 0)}]
        skolem:lemma2682
        skolem:lemma2683
        [ a r:Fact; r:gives {(9630 369) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1370 a r:Inference;
    r:gives {
        370 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {370 math:notEqualTo 0}]
        skolem:lemma2684
        [ a r:Fact; r:gives {((0 3 7 0) "=<") list:sort (0 0 3 7)}]
        [ a r:Fact; r:gives {((0 3 7 0) ">=") list:sort (7 3 0 0)}]
        skolem:lemma2098
        skolem:lemma2099
        [ a r:Fact; r:gives {(7300 37) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 370];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1371 a r:Inference;
    r:gives {
        371 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {371 math:notEqualTo 0}]
        skolem:lemma2685
        [ a r:Fact; r:gives {((0 3 7 1) "=<") list:sort (0 1 3 7)}]
        [ a r:Fact; r:gives {((0 3 7 1) ">=") list:sort (7 3 1 0)}]
        skolem:lemma2288
        skolem:lemma2289
        [ a r:Fact; r:gives {(7310 137) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 371];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1372 a r:Inference;
    r:gives {
        372 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {372 math:notEqualTo 0}]
        skolem:lemma2686
        [ a r:Fact; r:gives {((0 3 7 2) "=<") list:sort (0 2 3 7)}]
        [ a r:Fact; r:gives {((0 3 7 2) ">=") list:sort (7 3 2 0)}]
        skolem:lemma2460
        skolem:lemma2461
        [ a r:Fact; r:gives {(7320 237) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 372];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1373 a r:Inference;
    r:gives {
        373 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {373 math:notEqualTo 0}]
        skolem:lemma2687
        [ a r:Fact; r:gives {((0 3 7 3) "=<") list:sort (0 3 3 7)}]
        [ a r:Fact; r:gives {((0 3 7 3) ">=") list:sort (7 3 3 0)}]
        skolem:lemma2616
        skolem:lemma2617
        [ a r:Fact; r:gives {(7330 337) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 373];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 337];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1374 a r:Inference;
    r:gives {
        374 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {374 math:notEqualTo 0}]
        skolem:lemma2688
        [ a r:Fact; r:gives {((0 3 7 4) "=<") list:sort (0 3 4 7)}]
        [ a r:Fact; r:gives {((0 3 7 4) ">=") list:sort (7 4 3 0)}]
        skolem:lemma2638
        skolem:lemma2639
        [ a r:Fact; r:gives {(7430 347) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 374];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1375 a r:Inference;
    r:gives {
        375 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {375 math:notEqualTo 0}]
        skolem:lemma2689
        [ a r:Fact; r:gives {((0 3 7 5) "=<") list:sort (0 3 5 7)}]
        [ a r:Fact; r:gives {((0 3 7 5) ">=") list:sort (7 5 3 0)}]
        skolem:lemma2658
        skolem:lemma2659
        [ a r:Fact; r:gives {(7530 357) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 375];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1376 a r:Inference;
    r:gives {
        376 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {376 math:notEqualTo 0}]
        skolem:lemma2690
        [ a r:Fact; r:gives {((0 3 7 6) "=<") list:sort (0 3 6 7)}]
        [ a r:Fact; r:gives {((0 3 7 6) ">=") list:sort (7 6 3 0)}]
        skolem:lemma2676
        skolem:lemma2677
        [ a r:Fact; r:gives {(7630 367) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 376];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1377 a r:Inference;
    r:gives {
        377 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {377 math:notEqualTo 0}]
        skolem:lemma2691
        [ a r:Fact; r:gives {((0 3 7 7) "=<") list:sort (0 3 7 7)}]
        [ a r:Fact; r:gives {((0 3 7 7) ">=") list:sort (7 7 3 0)}]
        skolem:lemma2692
        skolem:lemma2693
        [ a r:Fact; r:gives {(7730 377) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 377];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 377];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1378 a r:Inference;
    r:gives {
        378 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {378 math:notEqualTo 0}]
        skolem:lemma2694
        [ a r:Fact; r:gives {((0 3 7 8) "=<") list:sort (0 3 7 8)}]
        [ a r:Fact; r:gives {((0 3 7 8) ">=") list:sort (8 7 3 0)}]
        skolem:lemma2695
        skolem:lemma2696
        [ a r:Fact; r:gives {(8730 378) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1379 a r:Inference;
    r:gives {
        379 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {379 math:notEqualTo 0}]
        skolem:lemma2697
        [ a r:Fact; r:gives {((0 3 7 9) "=<") list:sort (0 3 7 9)}]
        [ a r:Fact; r:gives {((0 3 7 9) ">=") list:sort (9 7 3 0)}]
        skolem:lemma2698
        skolem:lemma2699
        [ a r:Fact; r:gives {(9730 379) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1380 a r:Inference;
    r:gives {
        380 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {380 math:notEqualTo 0}]
        skolem:lemma2700
        [ a r:Fact; r:gives {((0 3 8 0) "=<") list:sort (0 0 3 8)}]
        [ a r:Fact; r:gives {((0 3 8 0) ">=") list:sort (8 3 0 0)}]
        skolem:lemma2101
        skolem:lemma2102
        [ a r:Fact; r:gives {(8300 38) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 380];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1381 a r:Inference;
    r:gives {
        381 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {381 math:notEqualTo 0}]
        skolem:lemma2701
        [ a r:Fact; r:gives {((0 3 8 1) "=<") list:sort (0 1 3 8)}]
        [ a r:Fact; r:gives {((0 3 8 1) ">=") list:sort (8 3 1 0)}]
        skolem:lemma2291
        skolem:lemma2292
        [ a r:Fact; r:gives {(8310 138) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 381];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1382 a r:Inference;
    r:gives {
        382 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {382 math:notEqualTo 0}]
        skolem:lemma2702
        [ a r:Fact; r:gives {((0 3 8 2) "=<") list:sort (0 2 3 8)}]
        [ a r:Fact; r:gives {((0 3 8 2) ">=") list:sort (8 3 2 0)}]
        skolem:lemma2463
        skolem:lemma2464
        [ a r:Fact; r:gives {(8320 238) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 382];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1383 a r:Inference;
    r:gives {
        383 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {383 math:notEqualTo 0}]
        skolem:lemma2703
        [ a r:Fact; r:gives {((0 3 8 3) "=<") list:sort (0 3 3 8)}]
        [ a r:Fact; r:gives {((0 3 8 3) ">=") list:sort (8 3 3 0)}]
        skolem:lemma2619
        skolem:lemma2620
        [ a r:Fact; r:gives {(8330 338) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 383];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 338];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1384 a r:Inference;
    r:gives {
        384 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {384 math:notEqualTo 0}]
        skolem:lemma2704
        [ a r:Fact; r:gives {((0 3 8 4) "=<") list:sort (0 3 4 8)}]
        [ a r:Fact; r:gives {((0 3 8 4) ">=") list:sort (8 4 3 0)}]
        skolem:lemma2641
        skolem:lemma2642
        [ a r:Fact; r:gives {(8430 348) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 384];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1385 a r:Inference;
    r:gives {
        385 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {385 math:notEqualTo 0}]
        skolem:lemma2705
        [ a r:Fact; r:gives {((0 3 8 5) "=<") list:sort (0 3 5 8)}]
        [ a r:Fact; r:gives {((0 3 8 5) ">=") list:sort (8 5 3 0)}]
        skolem:lemma2661
        skolem:lemma2662
        [ a r:Fact; r:gives {(8530 358) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 385];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1386 a r:Inference;
    r:gives {
        386 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {386 math:notEqualTo 0}]
        skolem:lemma2706
        [ a r:Fact; r:gives {((0 3 8 6) "=<") list:sort (0 3 6 8)}]
        [ a r:Fact; r:gives {((0 3 8 6) ">=") list:sort (8 6 3 0)}]
        skolem:lemma2679
        skolem:lemma2680
        [ a r:Fact; r:gives {(8630 368) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 386];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1387 a r:Inference;
    r:gives {
        387 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {387 math:notEqualTo 0}]
        skolem:lemma2707
        [ a r:Fact; r:gives {((0 3 8 7) "=<") list:sort (0 3 7 8)}]
        [ a r:Fact; r:gives {((0 3 8 7) ">=") list:sort (8 7 3 0)}]
        skolem:lemma2695
        skolem:lemma2696
        [ a r:Fact; r:gives {(8730 378) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 387];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1388 a r:Inference;
    r:gives {
        388 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {388 math:notEqualTo 0}]
        skolem:lemma2708
        [ a r:Fact; r:gives {((0 3 8 8) "=<") list:sort (0 3 8 8)}]
        [ a r:Fact; r:gives {((0 3 8 8) ">=") list:sort (8 8 3 0)}]
        skolem:lemma2709
        skolem:lemma2710
        [ a r:Fact; r:gives {(8830 388) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 388];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 388];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1389 a r:Inference;
    r:gives {
        389 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {389 math:notEqualTo 0}]
        skolem:lemma2711
        [ a r:Fact; r:gives {((0 3 8 9) "=<") list:sort (0 3 8 9)}]
        [ a r:Fact; r:gives {((0 3 8 9) ">=") list:sort (9 8 3 0)}]
        skolem:lemma2712
        skolem:lemma2713
        [ a r:Fact; r:gives {(9830 389) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1390 a r:Inference;
    r:gives {
        390 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {390 math:notEqualTo 0}]
        skolem:lemma2714
        [ a r:Fact; r:gives {((0 3 9 0) "=<") list:sort (0 0 3 9)}]
        [ a r:Fact; r:gives {((0 3 9 0) ">=") list:sort (9 3 0 0)}]
        skolem:lemma2104
        skolem:lemma2105
        [ a r:Fact; r:gives {(9300 39) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 390];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1391 a r:Inference;
    r:gives {
        391 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {391 math:notEqualTo 0}]
        skolem:lemma2715
        [ a r:Fact; r:gives {((0 3 9 1) "=<") list:sort (0 1 3 9)}]
        [ a r:Fact; r:gives {((0 3 9 1) ">=") list:sort (9 3 1 0)}]
        skolem:lemma2294
        skolem:lemma2295
        [ a r:Fact; r:gives {(9310 139) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 391];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1392 a r:Inference;
    r:gives {
        392 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {392 math:notEqualTo 0}]
        skolem:lemma2716
        [ a r:Fact; r:gives {((0 3 9 2) "=<") list:sort (0 2 3 9)}]
        [ a r:Fact; r:gives {((0 3 9 2) ">=") list:sort (9 3 2 0)}]
        skolem:lemma2466
        skolem:lemma2467
        [ a r:Fact; r:gives {(9320 239) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 392];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1393 a r:Inference;
    r:gives {
        393 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {393 math:notEqualTo 0}]
        skolem:lemma2717
        [ a r:Fact; r:gives {((0 3 9 3) "=<") list:sort (0 3 3 9)}]
        [ a r:Fact; r:gives {((0 3 9 3) ">=") list:sort (9 3 3 0)}]
        skolem:lemma2622
        skolem:lemma2623
        [ a r:Fact; r:gives {(9330 339) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 393];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 339];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1394 a r:Inference;
    r:gives {
        394 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {394 math:notEqualTo 0}]
        skolem:lemma2718
        [ a r:Fact; r:gives {((0 3 9 4) "=<") list:sort (0 3 4 9)}]
        [ a r:Fact; r:gives {((0 3 9 4) ">=") list:sort (9 4 3 0)}]
        skolem:lemma2644
        skolem:lemma2645
        [ a r:Fact; r:gives {(9430 349) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 394];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1395 a r:Inference;
    r:gives {
        395 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {395 math:notEqualTo 0}]
        skolem:lemma2719
        [ a r:Fact; r:gives {((0 3 9 5) "=<") list:sort (0 3 5 9)}]
        [ a r:Fact; r:gives {((0 3 9 5) ">=") list:sort (9 5 3 0)}]
        skolem:lemma2664
        skolem:lemma2665
        [ a r:Fact; r:gives {(9530 359) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 395];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1396 a r:Inference;
    r:gives {
        396 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {396 math:notEqualTo 0}]
        skolem:lemma2720
        [ a r:Fact; r:gives {((0 3 9 6) "=<") list:sort (0 3 6 9)}]
        [ a r:Fact; r:gives {((0 3 9 6) ">=") list:sort (9 6 3 0)}]
        skolem:lemma2682
        skolem:lemma2683
        [ a r:Fact; r:gives {(9630 369) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 396];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1397 a r:Inference;
    r:gives {
        397 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {397 math:notEqualTo 0}]
        skolem:lemma2721
        [ a r:Fact; r:gives {((0 3 9 7) "=<") list:sort (0 3 7 9)}]
        [ a r:Fact; r:gives {((0 3 9 7) ">=") list:sort (9 7 3 0)}]
        skolem:lemma2698
        skolem:lemma2699
        [ a r:Fact; r:gives {(9730 379) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 397];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1398 a r:Inference;
    r:gives {
        398 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {398 math:notEqualTo 0}]
        skolem:lemma2722
        [ a r:Fact; r:gives {((0 3 9 8) "=<") list:sort (0 3 8 9)}]
        [ a r:Fact; r:gives {((0 3 9 8) ">=") list:sort (9 8 3 0)}]
        skolem:lemma2712
        skolem:lemma2713
        [ a r:Fact; r:gives {(9830 389) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 398];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1399 a r:Inference;
    r:gives {
        399 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {399 math:notEqualTo 0}]
        skolem:lemma2723
        [ a r:Fact; r:gives {((0 3 9 9) "=<") list:sort (0 3 9 9)}]
        [ a r:Fact; r:gives {((0 3 9 9) ">=") list:sort (9 9 3 0)}]
        skolem:lemma2724
        skolem:lemma2725
        [ a r:Fact; r:gives {(9930 399) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 399];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 3 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 399];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9930];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1400 a r:Inference;
    r:gives {
        400 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {400 math:notEqualTo 0}]
        skolem:lemma2726
        [ a r:Fact; r:gives {((0 4 0 0) "=<") list:sort (0 0 0 4)}]
        [ a r:Fact; r:gives {((0 4 0 0) ">=") list:sort (4 0 0 0)}]
        skolem:lemma2011
        skolem:lemma2012
        [ a r:Fact; r:gives {(4000 4) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1401 a r:Inference;
    r:gives {
        401 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {401 math:notEqualTo 0}]
        skolem:lemma2727
        [ a r:Fact; r:gives {((0 4 0 1) "=<") list:sort (0 0 1 4)}]
        [ a r:Fact; r:gives {((0 4 0 1) ">=") list:sort (4 1 0 0)}]
        skolem:lemma2039
        skolem:lemma2040
        [ a r:Fact; r:gives {(4100 14) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 401];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1402 a r:Inference;
    r:gives {
        402 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {402 math:notEqualTo 0}]
        skolem:lemma2728
        [ a r:Fact; r:gives {((0 4 0 2) "=<") list:sort (0 0 2 4)}]
        [ a r:Fact; r:gives {((0 4 0 2) ">=") list:sort (4 2 0 0)}]
        skolem:lemma2065
        skolem:lemma2066
        [ a r:Fact; r:gives {(4200 24) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 402];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1403 a r:Inference;
    r:gives {
        403 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {403 math:notEqualTo 0}]
        skolem:lemma2729
        [ a r:Fact; r:gives {((0 4 0 3) "=<") list:sort (0 0 3 4)}]
        [ a r:Fact; r:gives {((0 4 0 3) ">=") list:sort (4 3 0 0)}]
        skolem:lemma2089
        skolem:lemma2090
        [ a r:Fact; r:gives {(4300 34) math:difference 4266}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4266 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            4266 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 403];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1404 a r:Inference;
    r:gives {
        404 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {404 math:notEqualTo 0}]
        skolem:lemma2730
        [ a r:Fact; r:gives {((0 4 0 4) "=<") list:sort (0 0 4 4)}]
        [ a r:Fact; r:gives {((0 4 0 4) ">=") list:sort (4 4 0 0)}]
        skolem:lemma2111
        skolem:lemma2112
        [ a r:Fact; r:gives {(4400 44) math:difference 4356}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4356 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            4356 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 404];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1405 a r:Inference;
    r:gives {
        405 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {405 math:notEqualTo 0}]
        skolem:lemma2731
        [ a r:Fact; r:gives {((0 4 0 5) "=<") list:sort (0 0 4 5)}]
        [ a r:Fact; r:gives {((0 4 0 5) ">=") list:sort (5 4 0 0)}]
        skolem:lemma2114
        skolem:lemma2115
        [ a r:Fact; r:gives {(5400 45) math:difference 5355}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5355 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5355 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 405];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1406 a r:Inference;
    r:gives {
        406 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {406 math:notEqualTo 0}]
        skolem:lemma2732
        [ a r:Fact; r:gives {((0 4 0 6) "=<") list:sort (0 0 4 6)}]
        [ a r:Fact; r:gives {((0 4 0 6) ">=") list:sort (6 4 0 0)}]
        skolem:lemma2117
        skolem:lemma2118
        [ a r:Fact; r:gives {(6400 46) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 406];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1407 a r:Inference;
    r:gives {
        407 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {407 math:notEqualTo 0}]
        skolem:lemma2733
        [ a r:Fact; r:gives {((0 4 0 7) "=<") list:sort (0 0 4 7)}]
        [ a r:Fact; r:gives {((0 4 0 7) ">=") list:sort (7 4 0 0)}]
        skolem:lemma2120
        skolem:lemma2121
        [ a r:Fact; r:gives {(7400 47) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 407];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1408 a r:Inference;
    r:gives {
        408 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {408 math:notEqualTo 0}]
        skolem:lemma2734
        [ a r:Fact; r:gives {((0 4 0 8) "=<") list:sort (0 0 4 8)}]
        [ a r:Fact; r:gives {((0 4 0 8) ">=") list:sort (8 4 0 0)}]
        skolem:lemma2123
        skolem:lemma2124
        [ a r:Fact; r:gives {(8400 48) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 408];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1409 a r:Inference;
    r:gives {
        409 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {409 math:notEqualTo 0}]
        skolem:lemma2735
        [ a r:Fact; r:gives {((0 4 0 9) "=<") list:sort (0 0 4 9)}]
        [ a r:Fact; r:gives {((0 4 0 9) ">=") list:sort (9 4 0 0)}]
        skolem:lemma2126
        skolem:lemma2127
        [ a r:Fact; r:gives {(9400 49) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 409];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1410 a r:Inference;
    r:gives {
        410 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {410 math:notEqualTo 0}]
        skolem:lemma2736
        [ a r:Fact; r:gives {((0 4 1 0) "=<") list:sort (0 0 1 4)}]
        [ a r:Fact; r:gives {((0 4 1 0) ">=") list:sort (4 1 0 0)}]
        skolem:lemma2039
        skolem:lemma2040
        [ a r:Fact; r:gives {(4100 14) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1411 a r:Inference;
    r:gives {
        411 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {411 math:notEqualTo 0}]
        skolem:lemma2737
        [ a r:Fact; r:gives {((0 4 1 1) "=<") list:sort (0 1 1 4)}]
        [ a r:Fact; r:gives {((0 4 1 1) ">=") list:sort (4 1 1 0)}]
        skolem:lemma2229
        skolem:lemma2230
        [ a r:Fact; r:gives {(4110 114) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 411];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1412 a r:Inference;
    r:gives {
        412 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {412 math:notEqualTo 0}]
        skolem:lemma2738
        [ a r:Fact; r:gives {((0 4 1 2) "=<") list:sort (0 1 2 4)}]
        [ a r:Fact; r:gives {((0 4 1 2) ">=") list:sort (4 2 1 0)}]
        skolem:lemma2255
        skolem:lemma2256
        [ a r:Fact; r:gives {(4210 124) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 412];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1413 a r:Inference;
    r:gives {
        413 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {413 math:notEqualTo 0}]
        skolem:lemma2739
        [ a r:Fact; r:gives {((0 4 1 3) "=<") list:sort (0 1 3 4)}]
        [ a r:Fact; r:gives {((0 4 1 3) ">=") list:sort (4 3 1 0)}]
        skolem:lemma2279
        skolem:lemma2280
        [ a r:Fact; r:gives {(4310 134) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 413];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1414 a r:Inference;
    r:gives {
        414 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {414 math:notEqualTo 0}]
        skolem:lemma2740
        [ a r:Fact; r:gives {((0 4 1 4) "=<") list:sort (0 1 4 4)}]
        [ a r:Fact; r:gives {((0 4 1 4) ">=") list:sort (4 4 1 0)}]
        skolem:lemma2301
        skolem:lemma2302
        [ a r:Fact; r:gives {(4410 144) math:difference 4266}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4266 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            4266 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 414];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 144];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1415 a r:Inference;
    r:gives {
        415 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {415 math:notEqualTo 0}]
        skolem:lemma2741
        [ a r:Fact; r:gives {((0 4 1 5) "=<") list:sort (0 1 4 5)}]
        [ a r:Fact; r:gives {((0 4 1 5) ">=") list:sort (5 4 1 0)}]
        skolem:lemma2304
        skolem:lemma2305
        [ a r:Fact; r:gives {(5410 145) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 415];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1416 a r:Inference;
    r:gives {
        416 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {416 math:notEqualTo 0}]
        skolem:lemma2742
        [ a r:Fact; r:gives {((0 4 1 6) "=<") list:sort (0 1 4 6)}]
        [ a r:Fact; r:gives {((0 4 1 6) ">=") list:sort (6 4 1 0)}]
        skolem:lemma2307
        skolem:lemma2308
        [ a r:Fact; r:gives {(6410 146) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 416];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1417 a r:Inference;
    r:gives {
        417 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {417 math:notEqualTo 0}]
        skolem:lemma2743
        [ a r:Fact; r:gives {((0 4 1 7) "=<") list:sort (0 1 4 7)}]
        [ a r:Fact; r:gives {((0 4 1 7) ">=") list:sort (7 4 1 0)}]
        skolem:lemma2310
        skolem:lemma2311
        [ a r:Fact; r:gives {(7410 147) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 417];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1418 a r:Inference;
    r:gives {
        418 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {418 math:notEqualTo 0}]
        skolem:lemma2744
        [ a r:Fact; r:gives {((0 4 1 8) "=<") list:sort (0 1 4 8)}]
        [ a r:Fact; r:gives {((0 4 1 8) ">=") list:sort (8 4 1 0)}]
        skolem:lemma2313
        skolem:lemma2314
        [ a r:Fact; r:gives {(8410 148) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 418];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1419 a r:Inference;
    r:gives {
        419 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {419 math:notEqualTo 0}]
        skolem:lemma2745
        [ a r:Fact; r:gives {((0 4 1 9) "=<") list:sort (0 1 4 9)}]
        [ a r:Fact; r:gives {((0 4 1 9) ">=") list:sort (9 4 1 0)}]
        skolem:lemma2316
        skolem:lemma2317
        [ a r:Fact; r:gives {(9410 149) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 419];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1420 a r:Inference;
    r:gives {
        420 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {420 math:notEqualTo 0}]
        skolem:lemma2746
        [ a r:Fact; r:gives {((0 4 2 0) "=<") list:sort (0 0 2 4)}]
        [ a r:Fact; r:gives {((0 4 2 0) ">=") list:sort (4 2 0 0)}]
        skolem:lemma2065
        skolem:lemma2066
        [ a r:Fact; r:gives {(4200 24) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1421 a r:Inference;
    r:gives {
        421 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {421 math:notEqualTo 0}]
        skolem:lemma2747
        [ a r:Fact; r:gives {((0 4 2 1) "=<") list:sort (0 1 2 4)}]
        [ a r:Fact; r:gives {((0 4 2 1) ">=") list:sort (4 2 1 0)}]
        skolem:lemma2255
        skolem:lemma2256
        [ a r:Fact; r:gives {(4210 124) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 421];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1422 a r:Inference;
    r:gives {
        422 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {422 math:notEqualTo 0}]
        skolem:lemma2748
        [ a r:Fact; r:gives {((0 4 2 2) "=<") list:sort (0 2 2 4)}]
        [ a r:Fact; r:gives {((0 4 2 2) ">=") list:sort (4 2 2 0)}]
        skolem:lemma2427
        skolem:lemma2428
        [ a r:Fact; r:gives {(4220 224) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 422];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 224];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1423 a r:Inference;
    r:gives {
        423 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {423 math:notEqualTo 0}]
        skolem:lemma2749
        [ a r:Fact; r:gives {((0 4 2 3) "=<") list:sort (0 2 3 4)}]
        [ a r:Fact; r:gives {((0 4 2 3) ">=") list:sort (4 3 2 0)}]
        skolem:lemma2451
        skolem:lemma2452
        [ a r:Fact; r:gives {(4320 234) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 423];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1424 a r:Inference;
    r:gives {
        424 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {424 math:notEqualTo 0}]
        skolem:lemma2750
        [ a r:Fact; r:gives {((0 4 2 4) "=<") list:sort (0 2 4 4)}]
        [ a r:Fact; r:gives {((0 4 2 4) ">=") list:sort (4 4 2 0)}]
        skolem:lemma2473
        skolem:lemma2474
        [ a r:Fact; r:gives {(4420 244) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 424];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 244];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1425 a r:Inference;
    r:gives {
        425 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {425 math:notEqualTo 0}]
        skolem:lemma2751
        [ a r:Fact; r:gives {((0 4 2 5) "=<") list:sort (0 2 4 5)}]
        [ a r:Fact; r:gives {((0 4 2 5) ">=") list:sort (5 4 2 0)}]
        skolem:lemma2476
        skolem:lemma2477
        [ a r:Fact; r:gives {(5420 245) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 425];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1426 a r:Inference;
    r:gives {
        426 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {426 math:notEqualTo 0}]
        skolem:lemma2752
        [ a r:Fact; r:gives {((0 4 2 6) "=<") list:sort (0 2 4 6)}]
        [ a r:Fact; r:gives {((0 4 2 6) ">=") list:sort (6 4 2 0)}]
        skolem:lemma2479
        skolem:lemma2480
        [ a r:Fact; r:gives {(6420 246) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 426];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1427 a r:Inference;
    r:gives {
        427 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {427 math:notEqualTo 0}]
        skolem:lemma2753
        [ a r:Fact; r:gives {((0 4 2 7) "=<") list:sort (0 2 4 7)}]
        [ a r:Fact; r:gives {((0 4 2 7) ">=") list:sort (7 4 2 0)}]
        skolem:lemma2482
        skolem:lemma2483
        [ a r:Fact; r:gives {(7420 247) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 427];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1428 a r:Inference;
    r:gives {
        428 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {428 math:notEqualTo 0}]
        skolem:lemma2754
        [ a r:Fact; r:gives {((0 4 2 8) "=<") list:sort (0 2 4 8)}]
        [ a r:Fact; r:gives {((0 4 2 8) ">=") list:sort (8 4 2 0)}]
        skolem:lemma2485
        skolem:lemma2486
        [ a r:Fact; r:gives {(8420 248) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 428];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1429 a r:Inference;
    r:gives {
        429 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {429 math:notEqualTo 0}]
        skolem:lemma2755
        [ a r:Fact; r:gives {((0 4 2 9) "=<") list:sort (0 2 4 9)}]
        [ a r:Fact; r:gives {((0 4 2 9) ">=") list:sort (9 4 2 0)}]
        skolem:lemma2488
        skolem:lemma2489
        [ a r:Fact; r:gives {(9420 249) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 429];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1430 a r:Inference;
    r:gives {
        430 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {430 math:notEqualTo 0}]
        skolem:lemma2756
        [ a r:Fact; r:gives {((0 4 3 0) "=<") list:sort (0 0 3 4)}]
        [ a r:Fact; r:gives {((0 4 3 0) ">=") list:sort (4 3 0 0)}]
        skolem:lemma2089
        skolem:lemma2090
        [ a r:Fact; r:gives {(4300 34) math:difference 4266}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4266 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            4266 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1431 a r:Inference;
    r:gives {
        431 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {431 math:notEqualTo 0}]
        skolem:lemma2757
        [ a r:Fact; r:gives {((0 4 3 1) "=<") list:sort (0 1 3 4)}]
        [ a r:Fact; r:gives {((0 4 3 1) ">=") list:sort (4 3 1 0)}]
        skolem:lemma2279
        skolem:lemma2280
        [ a r:Fact; r:gives {(4310 134) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 431];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1432 a r:Inference;
    r:gives {
        432 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {432 math:notEqualTo 0}]
        skolem:lemma2758
        [ a r:Fact; r:gives {((0 4 3 2) "=<") list:sort (0 2 3 4)}]
        [ a r:Fact; r:gives {((0 4 3 2) ">=") list:sort (4 3 2 0)}]
        skolem:lemma2451
        skolem:lemma2452
        [ a r:Fact; r:gives {(4320 234) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 432];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1433 a r:Inference;
    r:gives {
        433 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {433 math:notEqualTo 0}]
        skolem:lemma2759
        [ a r:Fact; r:gives {((0 4 3 3) "=<") list:sort (0 3 3 4)}]
        [ a r:Fact; r:gives {((0 4 3 3) ">=") list:sort (4 3 3 0)}]
        skolem:lemma2607
        skolem:lemma2608
        [ a r:Fact; r:gives {(4330 334) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 433];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 334];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1434 a r:Inference;
    r:gives {
        434 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {434 math:notEqualTo 0}]
        skolem:lemma2760
        [ a r:Fact; r:gives {((0 4 3 4) "=<") list:sort (0 3 4 4)}]
        [ a r:Fact; r:gives {((0 4 3 4) ">=") list:sort (4 4 3 0)}]
        skolem:lemma2629
        skolem:lemma2630
        [ a r:Fact; r:gives {(4430 344) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 434];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 344];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1435 a r:Inference;
    r:gives {
        435 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {435 math:notEqualTo 0}]
        skolem:lemma2761
        [ a r:Fact; r:gives {((0 4 3 5) "=<") list:sort (0 3 4 5)}]
        [ a r:Fact; r:gives {((0 4 3 5) ">=") list:sort (5 4 3 0)}]
        skolem:lemma2632
        skolem:lemma2633
        [ a r:Fact; r:gives {(5430 345) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 435];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1436 a r:Inference;
    r:gives {
        436 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {436 math:notEqualTo 0}]
        skolem:lemma2762
        [ a r:Fact; r:gives {((0 4 3 6) "=<") list:sort (0 3 4 6)}]
        [ a r:Fact; r:gives {((0 4 3 6) ">=") list:sort (6 4 3 0)}]
        skolem:lemma2635
        skolem:lemma2636
        [ a r:Fact; r:gives {(6430 346) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 436];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1437 a r:Inference;
    r:gives {
        437 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {437 math:notEqualTo 0}]
        skolem:lemma2763
        [ a r:Fact; r:gives {((0 4 3 7) "=<") list:sort (0 3 4 7)}]
        [ a r:Fact; r:gives {((0 4 3 7) ">=") list:sort (7 4 3 0)}]
        skolem:lemma2638
        skolem:lemma2639
        [ a r:Fact; r:gives {(7430 347) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 437];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1438 a r:Inference;
    r:gives {
        438 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {438 math:notEqualTo 0}]
        skolem:lemma2764
        [ a r:Fact; r:gives {((0 4 3 8) "=<") list:sort (0 3 4 8)}]
        [ a r:Fact; r:gives {((0 4 3 8) ">=") list:sort (8 4 3 0)}]
        skolem:lemma2641
        skolem:lemma2642
        [ a r:Fact; r:gives {(8430 348) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 438];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1439 a r:Inference;
    r:gives {
        439 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {439 math:notEqualTo 0}]
        skolem:lemma2765
        [ a r:Fact; r:gives {((0 4 3 9) "=<") list:sort (0 3 4 9)}]
        [ a r:Fact; r:gives {((0 4 3 9) ">=") list:sort (9 4 3 0)}]
        skolem:lemma2644
        skolem:lemma2645
        [ a r:Fact; r:gives {(9430 349) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 439];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1440 a r:Inference;
    r:gives {
        440 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {440 math:notEqualTo 0}]
        skolem:lemma2766
        [ a r:Fact; r:gives {((0 4 4 0) "=<") list:sort (0 0 4 4)}]
        [ a r:Fact; r:gives {((0 4 4 0) ">=") list:sort (4 4 0 0)}]
        skolem:lemma2111
        skolem:lemma2112
        [ a r:Fact; r:gives {(4400 44) math:difference 4356}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4356 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            4356 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1441 a r:Inference;
    r:gives {
        441 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {441 math:notEqualTo 0}]
        skolem:lemma2767
        [ a r:Fact; r:gives {((0 4 4 1) "=<") list:sort (0 1 4 4)}]
        [ a r:Fact; r:gives {((0 4 4 1) ">=") list:sort (4 4 1 0)}]
        skolem:lemma2301
        skolem:lemma2302
        [ a r:Fact; r:gives {(4410 144) math:difference 4266}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4266 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            4266 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 144];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1442 a r:Inference;
    r:gives {
        442 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {442 math:notEqualTo 0}]
        skolem:lemma2768
        [ a r:Fact; r:gives {((0 4 4 2) "=<") list:sort (0 2 4 4)}]
        [ a r:Fact; r:gives {((0 4 4 2) ">=") list:sort (4 4 2 0)}]
        skolem:lemma2473
        skolem:lemma2474
        [ a r:Fact; r:gives {(4420 244) math:difference 4176}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4176 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            4176 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 244];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1443 a r:Inference;
    r:gives {
        443 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {443 math:notEqualTo 0}]
        skolem:lemma2769
        [ a r:Fact; r:gives {((0 4 4 3) "=<") list:sort (0 3 4 4)}]
        [ a r:Fact; r:gives {((0 4 4 3) ">=") list:sort (4 4 3 0)}]
        skolem:lemma2629
        skolem:lemma2630
        [ a r:Fact; r:gives {(4430 344) math:difference 4086}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4086 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            4086 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 344];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4086];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1444 a r:Inference;
    r:gives {
        444 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {444 math:notEqualTo 0}]
        skolem:lemma2770
        [ a r:Fact; r:gives {((0 4 4 4) "=<") list:sort (0 4 4 4)}]
        [ a r:Fact; r:gives {((0 4 4 4) ">=") list:sort (4 4 4 0)}]
        skolem:lemma2771
        skolem:lemma2772
        [ a r:Fact; r:gives {(4440 444) math:difference 3996}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            3996 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            3996 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1445 a r:Inference;
    r:gives {
        445 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {445 math:notEqualTo 0}]
        skolem:lemma2773
        [ a r:Fact; r:gives {((0 4 4 5) "=<") list:sort (0 4 4 5)}]
        [ a r:Fact; r:gives {((0 4 4 5) ">=") list:sort (5 4 4 0)}]
        skolem:lemma2774
        skolem:lemma2775
        [ a r:Fact; r:gives {(5440 445) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1446 a r:Inference;
    r:gives {
        446 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {446 math:notEqualTo 0}]
        skolem:lemma2776
        [ a r:Fact; r:gives {((0 4 4 6) "=<") list:sort (0 4 4 6)}]
        [ a r:Fact; r:gives {((0 4 4 6) ">=") list:sort (6 4 4 0)}]
        skolem:lemma2777
        skolem:lemma2778
        [ a r:Fact; r:gives {(6440 446) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 446];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 446];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1447 a r:Inference;
    r:gives {
        447 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {447 math:notEqualTo 0}]
        skolem:lemma2779
        [ a r:Fact; r:gives {((0 4 4 7) "=<") list:sort (0 4 4 7)}]
        [ a r:Fact; r:gives {((0 4 4 7) ">=") list:sort (7 4 4 0)}]
        skolem:lemma2780
        skolem:lemma2781
        [ a r:Fact; r:gives {(7440 447) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 447];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 447];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1448 a r:Inference;
    r:gives {
        448 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {448 math:notEqualTo 0}]
        skolem:lemma2782
        [ a r:Fact; r:gives {((0 4 4 8) "=<") list:sort (0 4 4 8)}]
        [ a r:Fact; r:gives {((0 4 4 8) ">=") list:sort (8 4 4 0)}]
        skolem:lemma2783
        skolem:lemma2784
        [ a r:Fact; r:gives {(8440 448) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 448];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 448];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1449 a r:Inference;
    r:gives {
        449 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {449 math:notEqualTo 0}]
        skolem:lemma2785
        [ a r:Fact; r:gives {((0 4 4 9) "=<") list:sort (0 4 4 9)}]
        [ a r:Fact; r:gives {((0 4 4 9) ">=") list:sort (9 4 4 0)}]
        skolem:lemma2786
        skolem:lemma2787
        [ a r:Fact; r:gives {(9440 449) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 449];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 449];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1450 a r:Inference;
    r:gives {
        450 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {450 math:notEqualTo 0}]
        skolem:lemma2788
        [ a r:Fact; r:gives {((0 4 5 0) "=<") list:sort (0 0 4 5)}]
        [ a r:Fact; r:gives {((0 4 5 0) ">=") list:sort (5 4 0 0)}]
        skolem:lemma2114
        skolem:lemma2115
        [ a r:Fact; r:gives {(5400 45) math:difference 5355}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5355 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5355 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 450];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1451 a r:Inference;
    r:gives {
        451 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {451 math:notEqualTo 0}]
        skolem:lemma2789
        [ a r:Fact; r:gives {((0 4 5 1) "=<") list:sort (0 1 4 5)}]
        [ a r:Fact; r:gives {((0 4 5 1) ">=") list:sort (5 4 1 0)}]
        skolem:lemma2304
        skolem:lemma2305
        [ a r:Fact; r:gives {(5410 145) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 451];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1452 a r:Inference;
    r:gives {
        452 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {452 math:notEqualTo 0}]
        skolem:lemma2790
        [ a r:Fact; r:gives {((0 4 5 2) "=<") list:sort (0 2 4 5)}]
        [ a r:Fact; r:gives {((0 4 5 2) ">=") list:sort (5 4 2 0)}]
        skolem:lemma2476
        skolem:lemma2477
        [ a r:Fact; r:gives {(5420 245) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 452];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1453 a r:Inference;
    r:gives {
        453 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {453 math:notEqualTo 0}]
        skolem:lemma2791
        [ a r:Fact; r:gives {((0 4 5 3) "=<") list:sort (0 3 4 5)}]
        [ a r:Fact; r:gives {((0 4 5 3) ">=") list:sort (5 4 3 0)}]
        skolem:lemma2632
        skolem:lemma2633
        [ a r:Fact; r:gives {(5430 345) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 453];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1454 a r:Inference;
    r:gives {
        454 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {454 math:notEqualTo 0}]
        skolem:lemma2792
        [ a r:Fact; r:gives {((0 4 5 4) "=<") list:sort (0 4 4 5)}]
        [ a r:Fact; r:gives {((0 4 5 4) ">=") list:sort (5 4 4 0)}]
        skolem:lemma2774
        skolem:lemma2775
        [ a r:Fact; r:gives {(5440 445) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 454];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1455 a r:Inference;
    r:gives {
        455 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {455 math:notEqualTo 0}]
        skolem:lemma2793
        [ a r:Fact; r:gives {((0 4 5 5) "=<") list:sort (0 4 5 5)}]
        [ a r:Fact; r:gives {((0 4 5 5) ">=") list:sort (5 5 4 0)}]
        skolem:lemma2794
        skolem:lemma2795
        [ a r:Fact; r:gives {(5540 455) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 455];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 455];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1456 a r:Inference;
    r:gives {
        456 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {456 math:notEqualTo 0}]
        skolem:lemma2796
        [ a r:Fact; r:gives {((0 4 5 6) "=<") list:sort (0 4 5 6)}]
        [ a r:Fact; r:gives {((0 4 5 6) ">=") list:sort (6 5 4 0)}]
        skolem:lemma2797
        skolem:lemma2798
        [ a r:Fact; r:gives {(6540 456) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1457 a r:Inference;
    r:gives {
        457 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {457 math:notEqualTo 0}]
        skolem:lemma2799
        [ a r:Fact; r:gives {((0 4 5 7) "=<") list:sort (0 4 5 7)}]
        [ a r:Fact; r:gives {((0 4 5 7) ">=") list:sort (7 5 4 0)}]
        skolem:lemma2800
        skolem:lemma2801
        [ a r:Fact; r:gives {(7540 457) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1458 a r:Inference;
    r:gives {
        458 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {458 math:notEqualTo 0}]
        skolem:lemma2802
        [ a r:Fact; r:gives {((0 4 5 8) "=<") list:sort (0 4 5 8)}]
        [ a r:Fact; r:gives {((0 4 5 8) ">=") list:sort (8 5 4 0)}]
        skolem:lemma2803
        skolem:lemma2804
        [ a r:Fact; r:gives {(8540 458) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1459 a r:Inference;
    r:gives {
        459 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {459 math:notEqualTo 0}]
        skolem:lemma2805
        [ a r:Fact; r:gives {((0 4 5 9) "=<") list:sort (0 4 5 9)}]
        [ a r:Fact; r:gives {((0 4 5 9) ">=") list:sort (9 5 4 0)}]
        skolem:lemma2806
        skolem:lemma2807
        [ a r:Fact; r:gives {(9540 459) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1460 a r:Inference;
    r:gives {
        460 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {460 math:notEqualTo 0}]
        skolem:lemma2808
        [ a r:Fact; r:gives {((0 4 6 0) "=<") list:sort (0 0 4 6)}]
        [ a r:Fact; r:gives {((0 4 6 0) ">=") list:sort (6 4 0 0)}]
        skolem:lemma2117
        skolem:lemma2118
        [ a r:Fact; r:gives {(6400 46) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 460];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1461 a r:Inference;
    r:gives {
        461 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {461 math:notEqualTo 0}]
        skolem:lemma2809
        [ a r:Fact; r:gives {((0 4 6 1) "=<") list:sort (0 1 4 6)}]
        [ a r:Fact; r:gives {((0 4 6 1) ">=") list:sort (6 4 1 0)}]
        skolem:lemma2307
        skolem:lemma2308
        [ a r:Fact; r:gives {(6410 146) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 461];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1462 a r:Inference;
    r:gives {
        462 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {462 math:notEqualTo 0}]
        skolem:lemma2810
        [ a r:Fact; r:gives {((0 4 6 2) "=<") list:sort (0 2 4 6)}]
        [ a r:Fact; r:gives {((0 4 6 2) ">=") list:sort (6 4 2 0)}]
        skolem:lemma2479
        skolem:lemma2480
        [ a r:Fact; r:gives {(6420 246) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 462];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1463 a r:Inference;
    r:gives {
        463 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {463 math:notEqualTo 0}]
        skolem:lemma2811
        [ a r:Fact; r:gives {((0 4 6 3) "=<") list:sort (0 3 4 6)}]
        [ a r:Fact; r:gives {((0 4 6 3) ">=") list:sort (6 4 3 0)}]
        skolem:lemma2635
        skolem:lemma2636
        [ a r:Fact; r:gives {(6430 346) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 463];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1464 a r:Inference;
    r:gives {
        464 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {464 math:notEqualTo 0}]
        skolem:lemma2812
        [ a r:Fact; r:gives {((0 4 6 4) "=<") list:sort (0 4 4 6)}]
        [ a r:Fact; r:gives {((0 4 6 4) ">=") list:sort (6 4 4 0)}]
        skolem:lemma2777
        skolem:lemma2778
        [ a r:Fact; r:gives {(6440 446) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 464];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 446];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1465 a r:Inference;
    r:gives {
        465 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {465 math:notEqualTo 0}]
        skolem:lemma2813
        [ a r:Fact; r:gives {((0 4 6 5) "=<") list:sort (0 4 5 6)}]
        [ a r:Fact; r:gives {((0 4 6 5) ">=") list:sort (6 5 4 0)}]
        skolem:lemma2797
        skolem:lemma2798
        [ a r:Fact; r:gives {(6540 456) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 465];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1466 a r:Inference;
    r:gives {
        466 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {466 math:notEqualTo 0}]
        skolem:lemma2814
        [ a r:Fact; r:gives {((0 4 6 6) "=<") list:sort (0 4 6 6)}]
        [ a r:Fact; r:gives {((0 4 6 6) ">=") list:sort (6 6 4 0)}]
        skolem:lemma2815
        skolem:lemma2816
        [ a r:Fact; r:gives {(6640 466) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 466];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 466];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1467 a r:Inference;
    r:gives {
        467 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {467 math:notEqualTo 0}]
        skolem:lemma2817
        [ a r:Fact; r:gives {((0 4 6 7) "=<") list:sort (0 4 6 7)}]
        [ a r:Fact; r:gives {((0 4 6 7) ">=") list:sort (7 6 4 0)}]
        skolem:lemma2818
        skolem:lemma2819
        [ a r:Fact; r:gives {(7640 467) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1468 a r:Inference;
    r:gives {
        468 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {468 math:notEqualTo 0}]
        skolem:lemma2820
        [ a r:Fact; r:gives {((0 4 6 8) "=<") list:sort (0 4 6 8)}]
        [ a r:Fact; r:gives {((0 4 6 8) ">=") list:sort (8 6 4 0)}]
        skolem:lemma2821
        skolem:lemma2822
        [ a r:Fact; r:gives {(8640 468) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1469 a r:Inference;
    r:gives {
        469 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {469 math:notEqualTo 0}]
        skolem:lemma2823
        [ a r:Fact; r:gives {((0 4 6 9) "=<") list:sort (0 4 6 9)}]
        [ a r:Fact; r:gives {((0 4 6 9) ">=") list:sort (9 6 4 0)}]
        skolem:lemma2824
        skolem:lemma2825
        [ a r:Fact; r:gives {(9640 469) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1470 a r:Inference;
    r:gives {
        470 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {470 math:notEqualTo 0}]
        skolem:lemma2826
        [ a r:Fact; r:gives {((0 4 7 0) "=<") list:sort (0 0 4 7)}]
        [ a r:Fact; r:gives {((0 4 7 0) ">=") list:sort (7 4 0 0)}]
        skolem:lemma2120
        skolem:lemma2121
        [ a r:Fact; r:gives {(7400 47) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 470];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1471 a r:Inference;
    r:gives {
        471 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {471 math:notEqualTo 0}]
        skolem:lemma2827
        [ a r:Fact; r:gives {((0 4 7 1) "=<") list:sort (0 1 4 7)}]
        [ a r:Fact; r:gives {((0 4 7 1) ">=") list:sort (7 4 1 0)}]
        skolem:lemma2310
        skolem:lemma2311
        [ a r:Fact; r:gives {(7410 147) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 471];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1472 a r:Inference;
    r:gives {
        472 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {472 math:notEqualTo 0}]
        skolem:lemma2828
        [ a r:Fact; r:gives {((0 4 7 2) "=<") list:sort (0 2 4 7)}]
        [ a r:Fact; r:gives {((0 4 7 2) ">=") list:sort (7 4 2 0)}]
        skolem:lemma2482
        skolem:lemma2483
        [ a r:Fact; r:gives {(7420 247) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 472];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1473 a r:Inference;
    r:gives {
        473 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {473 math:notEqualTo 0}]
        skolem:lemma2829
        [ a r:Fact; r:gives {((0 4 7 3) "=<") list:sort (0 3 4 7)}]
        [ a r:Fact; r:gives {((0 4 7 3) ">=") list:sort (7 4 3 0)}]
        skolem:lemma2638
        skolem:lemma2639
        [ a r:Fact; r:gives {(7430 347) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 473];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1474 a r:Inference;
    r:gives {
        474 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {474 math:notEqualTo 0}]
        skolem:lemma2830
        [ a r:Fact; r:gives {((0 4 7 4) "=<") list:sort (0 4 4 7)}]
        [ a r:Fact; r:gives {((0 4 7 4) ">=") list:sort (7 4 4 0)}]
        skolem:lemma2780
        skolem:lemma2781
        [ a r:Fact; r:gives {(7440 447) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 474];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 447];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1475 a r:Inference;
    r:gives {
        475 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {475 math:notEqualTo 0}]
        skolem:lemma2831
        [ a r:Fact; r:gives {((0 4 7 5) "=<") list:sort (0 4 5 7)}]
        [ a r:Fact; r:gives {((0 4 7 5) ">=") list:sort (7 5 4 0)}]
        skolem:lemma2800
        skolem:lemma2801
        [ a r:Fact; r:gives {(7540 457) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 475];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1476 a r:Inference;
    r:gives {
        476 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {476 math:notEqualTo 0}]
        skolem:lemma2832
        [ a r:Fact; r:gives {((0 4 7 6) "=<") list:sort (0 4 6 7)}]
        [ a r:Fact; r:gives {((0 4 7 6) ">=") list:sort (7 6 4 0)}]
        skolem:lemma2818
        skolem:lemma2819
        [ a r:Fact; r:gives {(7640 467) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 476];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1477 a r:Inference;
    r:gives {
        477 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {477 math:notEqualTo 0}]
        skolem:lemma2833
        [ a r:Fact; r:gives {((0 4 7 7) "=<") list:sort (0 4 7 7)}]
        [ a r:Fact; r:gives {((0 4 7 7) ">=") list:sort (7 7 4 0)}]
        skolem:lemma2834
        skolem:lemma2835
        [ a r:Fact; r:gives {(7740 477) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 477];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 477];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1478 a r:Inference;
    r:gives {
        478 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {478 math:notEqualTo 0}]
        skolem:lemma2836
        [ a r:Fact; r:gives {((0 4 7 8) "=<") list:sort (0 4 7 8)}]
        [ a r:Fact; r:gives {((0 4 7 8) ">=") list:sort (8 7 4 0)}]
        skolem:lemma2837
        skolem:lemma2838
        [ a r:Fact; r:gives {(8740 478) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1479 a r:Inference;
    r:gives {
        479 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {479 math:notEqualTo 0}]
        skolem:lemma2839
        [ a r:Fact; r:gives {((0 4 7 9) "=<") list:sort (0 4 7 9)}]
        [ a r:Fact; r:gives {((0 4 7 9) ">=") list:sort (9 7 4 0)}]
        skolem:lemma2840
        skolem:lemma2841
        [ a r:Fact; r:gives {(9740 479) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1480 a r:Inference;
    r:gives {
        480 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {480 math:notEqualTo 0}]
        skolem:lemma2842
        [ a r:Fact; r:gives {((0 4 8 0) "=<") list:sort (0 0 4 8)}]
        [ a r:Fact; r:gives {((0 4 8 0) ">=") list:sort (8 4 0 0)}]
        skolem:lemma2123
        skolem:lemma2124
        [ a r:Fact; r:gives {(8400 48) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 480];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1481 a r:Inference;
    r:gives {
        481 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {481 math:notEqualTo 0}]
        skolem:lemma2843
        [ a r:Fact; r:gives {((0 4 8 1) "=<") list:sort (0 1 4 8)}]
        [ a r:Fact; r:gives {((0 4 8 1) ">=") list:sort (8 4 1 0)}]
        skolem:lemma2313
        skolem:lemma2314
        [ a r:Fact; r:gives {(8410 148) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 481];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1482 a r:Inference;
    r:gives {
        482 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {482 math:notEqualTo 0}]
        skolem:lemma2844
        [ a r:Fact; r:gives {((0 4 8 2) "=<") list:sort (0 2 4 8)}]
        [ a r:Fact; r:gives {((0 4 8 2) ">=") list:sort (8 4 2 0)}]
        skolem:lemma2485
        skolem:lemma2486
        [ a r:Fact; r:gives {(8420 248) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 482];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1483 a r:Inference;
    r:gives {
        483 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {483 math:notEqualTo 0}]
        skolem:lemma2845
        [ a r:Fact; r:gives {((0 4 8 3) "=<") list:sort (0 3 4 8)}]
        [ a r:Fact; r:gives {((0 4 8 3) ">=") list:sort (8 4 3 0)}]
        skolem:lemma2641
        skolem:lemma2642
        [ a r:Fact; r:gives {(8430 348) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 483];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1484 a r:Inference;
    r:gives {
        484 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {484 math:notEqualTo 0}]
        skolem:lemma2846
        [ a r:Fact; r:gives {((0 4 8 4) "=<") list:sort (0 4 4 8)}]
        [ a r:Fact; r:gives {((0 4 8 4) ">=") list:sort (8 4 4 0)}]
        skolem:lemma2783
        skolem:lemma2784
        [ a r:Fact; r:gives {(8440 448) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 484];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 448];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1485 a r:Inference;
    r:gives {
        485 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {485 math:notEqualTo 0}]
        skolem:lemma2847
        [ a r:Fact; r:gives {((0 4 8 5) "=<") list:sort (0 4 5 8)}]
        [ a r:Fact; r:gives {((0 4 8 5) ">=") list:sort (8 5 4 0)}]
        skolem:lemma2803
        skolem:lemma2804
        [ a r:Fact; r:gives {(8540 458) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 485];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1486 a r:Inference;
    r:gives {
        486 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {486 math:notEqualTo 0}]
        skolem:lemma2848
        [ a r:Fact; r:gives {((0 4 8 6) "=<") list:sort (0 4 6 8)}]
        [ a r:Fact; r:gives {((0 4 8 6) ">=") list:sort (8 6 4 0)}]
        skolem:lemma2821
        skolem:lemma2822
        [ a r:Fact; r:gives {(8640 468) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 486];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1487 a r:Inference;
    r:gives {
        487 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {487 math:notEqualTo 0}]
        skolem:lemma2849
        [ a r:Fact; r:gives {((0 4 8 7) "=<") list:sort (0 4 7 8)}]
        [ a r:Fact; r:gives {((0 4 8 7) ">=") list:sort (8 7 4 0)}]
        skolem:lemma2837
        skolem:lemma2838
        [ a r:Fact; r:gives {(8740 478) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 487];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1488 a r:Inference;
    r:gives {
        488 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {488 math:notEqualTo 0}]
        skolem:lemma2850
        [ a r:Fact; r:gives {((0 4 8 8) "=<") list:sort (0 4 8 8)}]
        [ a r:Fact; r:gives {((0 4 8 8) ">=") list:sort (8 8 4 0)}]
        skolem:lemma2851
        skolem:lemma2852
        [ a r:Fact; r:gives {(8840 488) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 488];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 488];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1489 a r:Inference;
    r:gives {
        489 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {489 math:notEqualTo 0}]
        skolem:lemma2853
        [ a r:Fact; r:gives {((0 4 8 9) "=<") list:sort (0 4 8 9)}]
        [ a r:Fact; r:gives {((0 4 8 9) ">=") list:sort (9 8 4 0)}]
        skolem:lemma2854
        skolem:lemma2855
        [ a r:Fact; r:gives {(9840 489) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1490 a r:Inference;
    r:gives {
        490 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {490 math:notEqualTo 0}]
        skolem:lemma2856
        [ a r:Fact; r:gives {((0 4 9 0) "=<") list:sort (0 0 4 9)}]
        [ a r:Fact; r:gives {((0 4 9 0) ">=") list:sort (9 4 0 0)}]
        skolem:lemma2126
        skolem:lemma2127
        [ a r:Fact; r:gives {(9400 49) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 490];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1491 a r:Inference;
    r:gives {
        491 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {491 math:notEqualTo 0}]
        skolem:lemma2857
        [ a r:Fact; r:gives {((0 4 9 1) "=<") list:sort (0 1 4 9)}]
        [ a r:Fact; r:gives {((0 4 9 1) ">=") list:sort (9 4 1 0)}]
        skolem:lemma2316
        skolem:lemma2317
        [ a r:Fact; r:gives {(9410 149) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 491];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1492 a r:Inference;
    r:gives {
        492 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {492 math:notEqualTo 0}]
        skolem:lemma2858
        [ a r:Fact; r:gives {((0 4 9 2) "=<") list:sort (0 2 4 9)}]
        [ a r:Fact; r:gives {((0 4 9 2) ">=") list:sort (9 4 2 0)}]
        skolem:lemma2488
        skolem:lemma2489
        [ a r:Fact; r:gives {(9420 249) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 492];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1493 a r:Inference;
    r:gives {
        493 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {493 math:notEqualTo 0}]
        skolem:lemma2859
        [ a r:Fact; r:gives {((0 4 9 3) "=<") list:sort (0 3 4 9)}]
        [ a r:Fact; r:gives {((0 4 9 3) ">=") list:sort (9 4 3 0)}]
        skolem:lemma2644
        skolem:lemma2645
        [ a r:Fact; r:gives {(9430 349) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 493];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1494 a r:Inference;
    r:gives {
        494 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {494 math:notEqualTo 0}]
        skolem:lemma2860
        [ a r:Fact; r:gives {((0 4 9 4) "=<") list:sort (0 4 4 9)}]
        [ a r:Fact; r:gives {((0 4 9 4) ">=") list:sort (9 4 4 0)}]
        skolem:lemma2786
        skolem:lemma2787
        [ a r:Fact; r:gives {(9440 449) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 494];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 449];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1495 a r:Inference;
    r:gives {
        495 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {495 math:notEqualTo 0}]
        skolem:lemma2861
        [ a r:Fact; r:gives {((0 4 9 5) "=<") list:sort (0 4 5 9)}]
        [ a r:Fact; r:gives {((0 4 9 5) ">=") list:sort (9 5 4 0)}]
        skolem:lemma2806
        skolem:lemma2807
        [ a r:Fact; r:gives {(9540 459) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 495];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1496 a r:Inference;
    r:gives {
        496 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {496 math:notEqualTo 0}]
        skolem:lemma2862
        [ a r:Fact; r:gives {((0 4 9 6) "=<") list:sort (0 4 6 9)}]
        [ a r:Fact; r:gives {((0 4 9 6) ">=") list:sort (9 6 4 0)}]
        skolem:lemma2824
        skolem:lemma2825
        [ a r:Fact; r:gives {(9640 469) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 496];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1497 a r:Inference;
    r:gives {
        497 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {497 math:notEqualTo 0}]
        skolem:lemma2863
        [ a r:Fact; r:gives {((0 4 9 7) "=<") list:sort (0 4 7 9)}]
        [ a r:Fact; r:gives {((0 4 9 7) ">=") list:sort (9 7 4 0)}]
        skolem:lemma2840
        skolem:lemma2841
        [ a r:Fact; r:gives {(9740 479) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 497];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1498 a r:Inference;
    r:gives {
        498 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {498 math:notEqualTo 0}]
        skolem:lemma2864
        [ a r:Fact; r:gives {((0 4 9 8) "=<") list:sort (0 4 8 9)}]
        [ a r:Fact; r:gives {((0 4 9 8) ">=") list:sort (9 8 4 0)}]
        skolem:lemma2854
        skolem:lemma2855
        [ a r:Fact; r:gives {(9840 489) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 498];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1499 a r:Inference;
    r:gives {
        499 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {499 math:notEqualTo 0}]
        skolem:lemma2865
        [ a r:Fact; r:gives {((0 4 9 9) "=<") list:sort (0 4 9 9)}]
        [ a r:Fact; r:gives {((0 4 9 9) ">=") list:sort (9 9 4 0)}]
        skolem:lemma2866
        skolem:lemma2867
        [ a r:Fact; r:gives {(9940 499) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 499];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 4 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 499];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9940];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1500 a r:Inference;
    r:gives {
        500 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {500 math:notEqualTo 0}]
        skolem:lemma2868
        [ a r:Fact; r:gives {((0 5 0 0) "=<") list:sort (0 0 0 5)}]
        [ a r:Fact; r:gives {((0 5 0 0) ">=") list:sort (5 0 0 0)}]
        skolem:lemma2014
        skolem:lemma2015
        [ a r:Fact; r:gives {(5000 5) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1501 a r:Inference;
    r:gives {
        501 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {501 math:notEqualTo 0}]
        skolem:lemma2869
        [ a r:Fact; r:gives {((0 5 0 1) "=<") list:sort (0 0 1 5)}]
        [ a r:Fact; r:gives {((0 5 0 1) ">=") list:sort (5 1 0 0)}]
        skolem:lemma2042
        skolem:lemma2043
        [ a r:Fact; r:gives {(5100 15) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 501];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1502 a r:Inference;
    r:gives {
        502 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {502 math:notEqualTo 0}]
        skolem:lemma2870
        [ a r:Fact; r:gives {((0 5 0 2) "=<") list:sort (0 0 2 5)}]
        [ a r:Fact; r:gives {((0 5 0 2) ">=") list:sort (5 2 0 0)}]
        skolem:lemma2068
        skolem:lemma2069
        [ a r:Fact; r:gives {(5200 25) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 502];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1503 a r:Inference;
    r:gives {
        503 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {503 math:notEqualTo 0}]
        skolem:lemma2871
        [ a r:Fact; r:gives {((0 5 0 3) "=<") list:sort (0 0 3 5)}]
        [ a r:Fact; r:gives {((0 5 0 3) ">=") list:sort (5 3 0 0)}]
        skolem:lemma2092
        skolem:lemma2093
        [ a r:Fact; r:gives {(5300 35) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 503];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1504 a r:Inference;
    r:gives {
        504 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {504 math:notEqualTo 0}]
        skolem:lemma2872
        [ a r:Fact; r:gives {((0 5 0 4) "=<") list:sort (0 0 4 5)}]
        [ a r:Fact; r:gives {((0 5 0 4) ">=") list:sort (5 4 0 0)}]
        skolem:lemma2114
        skolem:lemma2115
        [ a r:Fact; r:gives {(5400 45) math:difference 5355}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5355 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5355 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 504];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1505 a r:Inference;
    r:gives {
        505 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {505 math:notEqualTo 0}]
        skolem:lemma2873
        [ a r:Fact; r:gives {((0 5 0 5) "=<") list:sort (0 0 5 5)}]
        [ a r:Fact; r:gives {((0 5 0 5) ">=") list:sort (5 5 0 0)}]
        skolem:lemma2134
        skolem:lemma2135
        [ a r:Fact; r:gives {(5500 55) math:difference 5445}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5445 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5445 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 505];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1506 a r:Inference;
    r:gives {
        506 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {506 math:notEqualTo 0}]
        skolem:lemma2874
        [ a r:Fact; r:gives {((0 5 0 6) "=<") list:sort (0 0 5 6)}]
        [ a r:Fact; r:gives {((0 5 0 6) ">=") list:sort (6 5 0 0)}]
        skolem:lemma2137
        skolem:lemma2138
        [ a r:Fact; r:gives {(6500 56) math:difference 6444}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6444 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            6444 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 506];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1507 a r:Inference;
    r:gives {
        507 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {507 math:notEqualTo 0}]
        skolem:lemma2875
        [ a r:Fact; r:gives {((0 5 0 7) "=<") list:sort (0 0 5 7)}]
        [ a r:Fact; r:gives {((0 5 0 7) ">=") list:sort (7 5 0 0)}]
        skolem:lemma2140
        skolem:lemma2141
        [ a r:Fact; r:gives {(7500 57) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 507];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1508 a r:Inference;
    r:gives {
        508 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {508 math:notEqualTo 0}]
        skolem:lemma2876
        [ a r:Fact; r:gives {((0 5 0 8) "=<") list:sort (0 0 5 8)}]
        [ a r:Fact; r:gives {((0 5 0 8) ">=") list:sort (8 5 0 0)}]
        skolem:lemma2143
        skolem:lemma2144
        [ a r:Fact; r:gives {(8500 58) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 508];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1509 a r:Inference;
    r:gives {
        509 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {509 math:notEqualTo 0}]
        skolem:lemma2877
        [ a r:Fact; r:gives {((0 5 0 9) "=<") list:sort (0 0 5 9)}]
        [ a r:Fact; r:gives {((0 5 0 9) ">=") list:sort (9 5 0 0)}]
        skolem:lemma2146
        skolem:lemma2147
        [ a r:Fact; r:gives {(9500 59) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 509];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1510 a r:Inference;
    r:gives {
        510 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {510 math:notEqualTo 0}]
        skolem:lemma2878
        [ a r:Fact; r:gives {((0 5 1 0) "=<") list:sort (0 0 1 5)}]
        [ a r:Fact; r:gives {((0 5 1 0) ">=") list:sort (5 1 0 0)}]
        skolem:lemma2042
        skolem:lemma2043
        [ a r:Fact; r:gives {(5100 15) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1511 a r:Inference;
    r:gives {
        511 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {511 math:notEqualTo 0}]
        skolem:lemma2879
        [ a r:Fact; r:gives {((0 5 1 1) "=<") list:sort (0 1 1 5)}]
        [ a r:Fact; r:gives {((0 5 1 1) ">=") list:sort (5 1 1 0)}]
        skolem:lemma2232
        skolem:lemma2233
        [ a r:Fact; r:gives {(5110 115) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 511];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1512 a r:Inference;
    r:gives {
        512 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {512 math:notEqualTo 0}]
        skolem:lemma2880
        [ a r:Fact; r:gives {((0 5 1 2) "=<") list:sort (0 1 2 5)}]
        [ a r:Fact; r:gives {((0 5 1 2) ">=") list:sort (5 2 1 0)}]
        skolem:lemma2258
        skolem:lemma2259
        [ a r:Fact; r:gives {(5210 125) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 512];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1513 a r:Inference;
    r:gives {
        513 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {513 math:notEqualTo 0}]
        skolem:lemma2881
        [ a r:Fact; r:gives {((0 5 1 3) "=<") list:sort (0 1 3 5)}]
        [ a r:Fact; r:gives {((0 5 1 3) ">=") list:sort (5 3 1 0)}]
        skolem:lemma2282
        skolem:lemma2283
        [ a r:Fact; r:gives {(5310 135) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 513];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1514 a r:Inference;
    r:gives {
        514 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {514 math:notEqualTo 0}]
        skolem:lemma2882
        [ a r:Fact; r:gives {((0 5 1 4) "=<") list:sort (0 1 4 5)}]
        [ a r:Fact; r:gives {((0 5 1 4) ">=") list:sort (5 4 1 0)}]
        skolem:lemma2304
        skolem:lemma2305
        [ a r:Fact; r:gives {(5410 145) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 514];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1515 a r:Inference;
    r:gives {
        515 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {515 math:notEqualTo 0}]
        skolem:lemma2883
        [ a r:Fact; r:gives {((0 5 1 5) "=<") list:sort (0 1 5 5)}]
        [ a r:Fact; r:gives {((0 5 1 5) ">=") list:sort (5 5 1 0)}]
        skolem:lemma2324
        skolem:lemma2325
        [ a r:Fact; r:gives {(5510 155) math:difference 5355}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5355 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5355 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 515];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 155];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1516 a r:Inference;
    r:gives {
        516 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {516 math:notEqualTo 0}]
        skolem:lemma2884
        [ a r:Fact; r:gives {((0 5 1 6) "=<") list:sort (0 1 5 6)}]
        [ a r:Fact; r:gives {((0 5 1 6) ">=") list:sort (6 5 1 0)}]
        skolem:lemma2327
        skolem:lemma2328
        [ a r:Fact; r:gives {(6510 156) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 516];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1517 a r:Inference;
    r:gives {
        517 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {517 math:notEqualTo 0}]
        skolem:lemma2885
        [ a r:Fact; r:gives {((0 5 1 7) "=<") list:sort (0 1 5 7)}]
        [ a r:Fact; r:gives {((0 5 1 7) ">=") list:sort (7 5 1 0)}]
        skolem:lemma2330
        skolem:lemma2331
        [ a r:Fact; r:gives {(7510 157) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 517];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1518 a r:Inference;
    r:gives {
        518 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {518 math:notEqualTo 0}]
        skolem:lemma2886
        [ a r:Fact; r:gives {((0 5 1 8) "=<") list:sort (0 1 5 8)}]
        [ a r:Fact; r:gives {((0 5 1 8) ">=") list:sort (8 5 1 0)}]
        skolem:lemma2333
        skolem:lemma2334
        [ a r:Fact; r:gives {(8510 158) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 518];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1519 a r:Inference;
    r:gives {
        519 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {519 math:notEqualTo 0}]
        skolem:lemma2887
        [ a r:Fact; r:gives {((0 5 1 9) "=<") list:sort (0 1 5 9)}]
        [ a r:Fact; r:gives {((0 5 1 9) ">=") list:sort (9 5 1 0)}]
        skolem:lemma2336
        skolem:lemma2337
        [ a r:Fact; r:gives {(9510 159) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 519];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1520 a r:Inference;
    r:gives {
        520 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {520 math:notEqualTo 0}]
        skolem:lemma2888
        [ a r:Fact; r:gives {((0 5 2 0) "=<") list:sort (0 0 2 5)}]
        [ a r:Fact; r:gives {((0 5 2 0) ">=") list:sort (5 2 0 0)}]
        skolem:lemma2068
        skolem:lemma2069
        [ a r:Fact; r:gives {(5200 25) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1521 a r:Inference;
    r:gives {
        521 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {521 math:notEqualTo 0}]
        skolem:lemma2889
        [ a r:Fact; r:gives {((0 5 2 1) "=<") list:sort (0 1 2 5)}]
        [ a r:Fact; r:gives {((0 5 2 1) ">=") list:sort (5 2 1 0)}]
        skolem:lemma2258
        skolem:lemma2259
        [ a r:Fact; r:gives {(5210 125) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 521];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1522 a r:Inference;
    r:gives {
        522 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {522 math:notEqualTo 0}]
        skolem:lemma2890
        [ a r:Fact; r:gives {((0 5 2 2) "=<") list:sort (0 2 2 5)}]
        [ a r:Fact; r:gives {((0 5 2 2) ">=") list:sort (5 2 2 0)}]
        skolem:lemma2430
        skolem:lemma2431
        [ a r:Fact; r:gives {(5220 225) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 522];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 225];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1523 a r:Inference;
    r:gives {
        523 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {523 math:notEqualTo 0}]
        skolem:lemma2891
        [ a r:Fact; r:gives {((0 5 2 3) "=<") list:sort (0 2 3 5)}]
        [ a r:Fact; r:gives {((0 5 2 3) ">=") list:sort (5 3 2 0)}]
        skolem:lemma2454
        skolem:lemma2455
        [ a r:Fact; r:gives {(5320 235) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 523];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1524 a r:Inference;
    r:gives {
        524 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {524 math:notEqualTo 0}]
        skolem:lemma2892
        [ a r:Fact; r:gives {((0 5 2 4) "=<") list:sort (0 2 4 5)}]
        [ a r:Fact; r:gives {((0 5 2 4) ">=") list:sort (5 4 2 0)}]
        skolem:lemma2476
        skolem:lemma2477
        [ a r:Fact; r:gives {(5420 245) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 524];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1525 a r:Inference;
    r:gives {
        525 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {525 math:notEqualTo 0}]
        skolem:lemma2893
        [ a r:Fact; r:gives {((0 5 2 5) "=<") list:sort (0 2 5 5)}]
        [ a r:Fact; r:gives {((0 5 2 5) ">=") list:sort (5 5 2 0)}]
        skolem:lemma2496
        skolem:lemma2497
        [ a r:Fact; r:gives {(5520 255) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 525];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 255];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1526 a r:Inference;
    r:gives {
        526 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {526 math:notEqualTo 0}]
        skolem:lemma2894
        [ a r:Fact; r:gives {((0 5 2 6) "=<") list:sort (0 2 5 6)}]
        [ a r:Fact; r:gives {((0 5 2 6) ">=") list:sort (6 5 2 0)}]
        skolem:lemma2499
        skolem:lemma2500
        [ a r:Fact; r:gives {(6520 256) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 526];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1527 a r:Inference;
    r:gives {
        527 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {527 math:notEqualTo 0}]
        skolem:lemma2895
        [ a r:Fact; r:gives {((0 5 2 7) "=<") list:sort (0 2 5 7)}]
        [ a r:Fact; r:gives {((0 5 2 7) ">=") list:sort (7 5 2 0)}]
        skolem:lemma2502
        skolem:lemma2503
        [ a r:Fact; r:gives {(7520 257) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 527];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1528 a r:Inference;
    r:gives {
        528 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {528 math:notEqualTo 0}]
        skolem:lemma2896
        [ a r:Fact; r:gives {((0 5 2 8) "=<") list:sort (0 2 5 8)}]
        [ a r:Fact; r:gives {((0 5 2 8) ">=") list:sort (8 5 2 0)}]
        skolem:lemma2505
        skolem:lemma2506
        [ a r:Fact; r:gives {(8520 258) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 528];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1529 a r:Inference;
    r:gives {
        529 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {529 math:notEqualTo 0}]
        skolem:lemma2897
        [ a r:Fact; r:gives {((0 5 2 9) "=<") list:sort (0 2 5 9)}]
        [ a r:Fact; r:gives {((0 5 2 9) ">=") list:sort (9 5 2 0)}]
        skolem:lemma2508
        skolem:lemma2509
        [ a r:Fact; r:gives {(9520 259) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 529];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1530 a r:Inference;
    r:gives {
        530 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {530 math:notEqualTo 0}]
        skolem:lemma2898
        [ a r:Fact; r:gives {((0 5 3 0) "=<") list:sort (0 0 3 5)}]
        [ a r:Fact; r:gives {((0 5 3 0) ">=") list:sort (5 3 0 0)}]
        skolem:lemma2092
        skolem:lemma2093
        [ a r:Fact; r:gives {(5300 35) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1531 a r:Inference;
    r:gives {
        531 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {531 math:notEqualTo 0}]
        skolem:lemma2899
        [ a r:Fact; r:gives {((0 5 3 1) "=<") list:sort (0 1 3 5)}]
        [ a r:Fact; r:gives {((0 5 3 1) ">=") list:sort (5 3 1 0)}]
        skolem:lemma2282
        skolem:lemma2283
        [ a r:Fact; r:gives {(5310 135) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1532 a r:Inference;
    r:gives {
        532 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {532 math:notEqualTo 0}]
        skolem:lemma2900
        [ a r:Fact; r:gives {((0 5 3 2) "=<") list:sort (0 2 3 5)}]
        [ a r:Fact; r:gives {((0 5 3 2) ">=") list:sort (5 3 2 0)}]
        skolem:lemma2454
        skolem:lemma2455
        [ a r:Fact; r:gives {(5320 235) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1533 a r:Inference;
    r:gives {
        533 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {533 math:notEqualTo 0}]
        skolem:lemma2901
        [ a r:Fact; r:gives {((0 5 3 3) "=<") list:sort (0 3 3 5)}]
        [ a r:Fact; r:gives {((0 5 3 3) ">=") list:sort (5 3 3 0)}]
        skolem:lemma2610
        skolem:lemma2611
        [ a r:Fact; r:gives {(5330 335) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 335];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1534 a r:Inference;
    r:gives {
        534 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {534 math:notEqualTo 0}]
        skolem:lemma2902
        [ a r:Fact; r:gives {((0 5 3 4) "=<") list:sort (0 3 4 5)}]
        [ a r:Fact; r:gives {((0 5 3 4) ">=") list:sort (5 4 3 0)}]
        skolem:lemma2632
        skolem:lemma2633
        [ a r:Fact; r:gives {(5430 345) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 534];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1535 a r:Inference;
    r:gives {
        535 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {535 math:notEqualTo 0}]
        skolem:lemma2903
        [ a r:Fact; r:gives {((0 5 3 5) "=<") list:sort (0 3 5 5)}]
        [ a r:Fact; r:gives {((0 5 3 5) ">=") list:sort (5 5 3 0)}]
        skolem:lemma2652
        skolem:lemma2653
        [ a r:Fact; r:gives {(5530 355) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 535];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1536 a r:Inference;
    r:gives {
        536 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {536 math:notEqualTo 0}]
        skolem:lemma2904
        [ a r:Fact; r:gives {((0 5 3 6) "=<") list:sort (0 3 5 6)}]
        [ a r:Fact; r:gives {((0 5 3 6) ">=") list:sort (6 5 3 0)}]
        skolem:lemma2655
        skolem:lemma2656
        [ a r:Fact; r:gives {(6530 356) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 536];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1537 a r:Inference;
    r:gives {
        537 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {537 math:notEqualTo 0}]
        skolem:lemma2905
        [ a r:Fact; r:gives {((0 5 3 7) "=<") list:sort (0 3 5 7)}]
        [ a r:Fact; r:gives {((0 5 3 7) ">=") list:sort (7 5 3 0)}]
        skolem:lemma2658
        skolem:lemma2659
        [ a r:Fact; r:gives {(7530 357) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 537];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1538 a r:Inference;
    r:gives {
        538 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {538 math:notEqualTo 0}]
        skolem:lemma2906
        [ a r:Fact; r:gives {((0 5 3 8) "=<") list:sort (0 3 5 8)}]
        [ a r:Fact; r:gives {((0 5 3 8) ">=") list:sort (8 5 3 0)}]
        skolem:lemma2661
        skolem:lemma2662
        [ a r:Fact; r:gives {(8530 358) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 538];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1539 a r:Inference;
    r:gives {
        539 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {539 math:notEqualTo 0}]
        skolem:lemma2907
        [ a r:Fact; r:gives {((0 5 3 9) "=<") list:sort (0 3 5 9)}]
        [ a r:Fact; r:gives {((0 5 3 9) ">=") list:sort (9 5 3 0)}]
        skolem:lemma2664
        skolem:lemma2665
        [ a r:Fact; r:gives {(9530 359) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 539];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1540 a r:Inference;
    r:gives {
        540 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {540 math:notEqualTo 0}]
        skolem:lemma2908
        [ a r:Fact; r:gives {((0 5 4 0) "=<") list:sort (0 0 4 5)}]
        [ a r:Fact; r:gives {((0 5 4 0) ">=") list:sort (5 4 0 0)}]
        skolem:lemma2114
        skolem:lemma2115
        [ a r:Fact; r:gives {(5400 45) math:difference 5355}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5355 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5355 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1541 a r:Inference;
    r:gives {
        541 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {541 math:notEqualTo 0}]
        skolem:lemma2909
        [ a r:Fact; r:gives {((0 5 4 1) "=<") list:sort (0 1 4 5)}]
        [ a r:Fact; r:gives {((0 5 4 1) ">=") list:sort (5 4 1 0)}]
        skolem:lemma2304
        skolem:lemma2305
        [ a r:Fact; r:gives {(5410 145) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 541];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1542 a r:Inference;
    r:gives {
        542 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {542 math:notEqualTo 0}]
        skolem:lemma2910
        [ a r:Fact; r:gives {((0 5 4 2) "=<") list:sort (0 2 4 5)}]
        [ a r:Fact; r:gives {((0 5 4 2) ">=") list:sort (5 4 2 0)}]
        skolem:lemma2476
        skolem:lemma2477
        [ a r:Fact; r:gives {(5420 245) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 542];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1543 a r:Inference;
    r:gives {
        543 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {543 math:notEqualTo 0}]
        skolem:lemma2911
        [ a r:Fact; r:gives {((0 5 4 3) "=<") list:sort (0 3 4 5)}]
        [ a r:Fact; r:gives {((0 5 4 3) ">=") list:sort (5 4 3 0)}]
        skolem:lemma2632
        skolem:lemma2633
        [ a r:Fact; r:gives {(5430 345) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 543];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1544 a r:Inference;
    r:gives {
        544 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {544 math:notEqualTo 0}]
        skolem:lemma2912
        [ a r:Fact; r:gives {((0 5 4 4) "=<") list:sort (0 4 4 5)}]
        [ a r:Fact; r:gives {((0 5 4 4) ">=") list:sort (5 4 4 0)}]
        skolem:lemma2774
        skolem:lemma2775
        [ a r:Fact; r:gives {(5440 445) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 544];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1545 a r:Inference;
    r:gives {
        545 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {545 math:notEqualTo 0}]
        skolem:lemma2913
        [ a r:Fact; r:gives {((0 5 4 5) "=<") list:sort (0 4 5 5)}]
        [ a r:Fact; r:gives {((0 5 4 5) ">=") list:sort (5 5 4 0)}]
        skolem:lemma2794
        skolem:lemma2795
        [ a r:Fact; r:gives {(5540 455) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 545];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 455];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1546 a r:Inference;
    r:gives {
        546 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {546 math:notEqualTo 0}]
        skolem:lemma2914
        [ a r:Fact; r:gives {((0 5 4 6) "=<") list:sort (0 4 5 6)}]
        [ a r:Fact; r:gives {((0 5 4 6) ">=") list:sort (6 5 4 0)}]
        skolem:lemma2797
        skolem:lemma2798
        [ a r:Fact; r:gives {(6540 456) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 546];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1547 a r:Inference;
    r:gives {
        547 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {547 math:notEqualTo 0}]
        skolem:lemma2915
        [ a r:Fact; r:gives {((0 5 4 7) "=<") list:sort (0 4 5 7)}]
        [ a r:Fact; r:gives {((0 5 4 7) ">=") list:sort (7 5 4 0)}]
        skolem:lemma2800
        skolem:lemma2801
        [ a r:Fact; r:gives {(7540 457) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 547];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1548 a r:Inference;
    r:gives {
        548 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {548 math:notEqualTo 0}]
        skolem:lemma2916
        [ a r:Fact; r:gives {((0 5 4 8) "=<") list:sort (0 4 5 8)}]
        [ a r:Fact; r:gives {((0 5 4 8) ">=") list:sort (8 5 4 0)}]
        skolem:lemma2803
        skolem:lemma2804
        [ a r:Fact; r:gives {(8540 458) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 548];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1549 a r:Inference;
    r:gives {
        549 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {549 math:notEqualTo 0}]
        skolem:lemma2917
        [ a r:Fact; r:gives {((0 5 4 9) "=<") list:sort (0 4 5 9)}]
        [ a r:Fact; r:gives {((0 5 4 9) ">=") list:sort (9 5 4 0)}]
        skolem:lemma2806
        skolem:lemma2807
        [ a r:Fact; r:gives {(9540 459) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 549];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1550 a r:Inference;
    r:gives {
        550 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {550 math:notEqualTo 0}]
        skolem:lemma2918
        [ a r:Fact; r:gives {((0 5 5 0) "=<") list:sort (0 0 5 5)}]
        [ a r:Fact; r:gives {((0 5 5 0) ">=") list:sort (5 5 0 0)}]
        skolem:lemma2134
        skolem:lemma2135
        [ a r:Fact; r:gives {(5500 55) math:difference 5445}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5445 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5445 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1551 a r:Inference;
    r:gives {
        551 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {551 math:notEqualTo 0}]
        skolem:lemma2919
        [ a r:Fact; r:gives {((0 5 5 1) "=<") list:sort (0 1 5 5)}]
        [ a r:Fact; r:gives {((0 5 5 1) ">=") list:sort (5 5 1 0)}]
        skolem:lemma2324
        skolem:lemma2325
        [ a r:Fact; r:gives {(5510 155) math:difference 5355}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5355 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5355 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 551];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 155];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1552 a r:Inference;
    r:gives {
        552 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {552 math:notEqualTo 0}]
        skolem:lemma2920
        [ a r:Fact; r:gives {((0 5 5 2) "=<") list:sort (0 2 5 5)}]
        [ a r:Fact; r:gives {((0 5 5 2) ">=") list:sort (5 5 2 0)}]
        skolem:lemma2496
        skolem:lemma2497
        [ a r:Fact; r:gives {(5520 255) math:difference 5265}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5265 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            5265 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 552];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 255];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1553 a r:Inference;
    r:gives {
        553 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {553 math:notEqualTo 0}]
        skolem:lemma2921
        [ a r:Fact; r:gives {((0 5 5 3) "=<") list:sort (0 3 5 5)}]
        [ a r:Fact; r:gives {((0 5 5 3) ">=") list:sort (5 5 3 0)}]
        skolem:lemma2652
        skolem:lemma2653
        [ a r:Fact; r:gives {(5530 355) math:difference 5175}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5175 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5175 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 553];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1554 a r:Inference;
    r:gives {
        554 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {554 math:notEqualTo 0}]
        skolem:lemma2922
        [ a r:Fact; r:gives {((0 5 5 4) "=<") list:sort (0 4 5 5)}]
        [ a r:Fact; r:gives {((0 5 5 4) ">=") list:sort (5 5 4 0)}]
        skolem:lemma2794
        skolem:lemma2795
        [ a r:Fact; r:gives {(5540 455) math:difference 5085}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5085 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            5085 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 554];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 455];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5085];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1555 a r:Inference;
    r:gives {
        555 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {555 math:notEqualTo 0}]
        skolem:lemma2923
        [ a r:Fact; r:gives {((0 5 5 5) "=<") list:sort (0 5 5 5)}]
        [ a r:Fact; r:gives {((0 5 5 5) ">=") list:sort (5 5 5 0)}]
        skolem:lemma2924
        skolem:lemma2925
        [ a r:Fact; r:gives {(5550 555) math:difference 4995}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            4995 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            4995 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 555];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 555];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1556 a r:Inference;
    r:gives {
        556 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {556 math:notEqualTo 0}]
        skolem:lemma2926
        [ a r:Fact; r:gives {((0 5 5 6) "=<") list:sort (0 5 5 6)}]
        [ a r:Fact; r:gives {((0 5 5 6) ">=") list:sort (6 5 5 0)}]
        skolem:lemma2927
        skolem:lemma2928
        [ a r:Fact; r:gives {(6550 556) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 556];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 556];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1557 a r:Inference;
    r:gives {
        557 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {557 math:notEqualTo 0}]
        skolem:lemma2929
        [ a r:Fact; r:gives {((0 5 5 7) "=<") list:sort (0 5 5 7)}]
        [ a r:Fact; r:gives {((0 5 5 7) ">=") list:sort (7 5 5 0)}]
        skolem:lemma2930
        skolem:lemma2931
        [ a r:Fact; r:gives {(7550 557) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 557];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 557];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1558 a r:Inference;
    r:gives {
        558 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {558 math:notEqualTo 0}]
        skolem:lemma2932
        [ a r:Fact; r:gives {((0 5 5 8) "=<") list:sort (0 5 5 8)}]
        [ a r:Fact; r:gives {((0 5 5 8) ">=") list:sort (8 5 5 0)}]
        skolem:lemma2933
        skolem:lemma2934
        [ a r:Fact; r:gives {(8550 558) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 558];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 558];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1559 a r:Inference;
    r:gives {
        559 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {559 math:notEqualTo 0}]
        skolem:lemma2935
        [ a r:Fact; r:gives {((0 5 5 9) "=<") list:sort (0 5 5 9)}]
        [ a r:Fact; r:gives {((0 5 5 9) ">=") list:sort (9 5 5 0)}]
        skolem:lemma2936
        skolem:lemma2937
        [ a r:Fact; r:gives {(9550 559) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 559];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 559];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1560 a r:Inference;
    r:gives {
        560 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {560 math:notEqualTo 0}]
        skolem:lemma2938
        [ a r:Fact; r:gives {((0 5 6 0) "=<") list:sort (0 0 5 6)}]
        [ a r:Fact; r:gives {((0 5 6 0) ">=") list:sort (6 5 0 0)}]
        skolem:lemma2137
        skolem:lemma2138
        [ a r:Fact; r:gives {(6500 56) math:difference 6444}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6444 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            6444 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 560];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1561 a r:Inference;
    r:gives {
        561 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {561 math:notEqualTo 0}]
        skolem:lemma2939
        [ a r:Fact; r:gives {((0 5 6 1) "=<") list:sort (0 1 5 6)}]
        [ a r:Fact; r:gives {((0 5 6 1) ">=") list:sort (6 5 1 0)}]
        skolem:lemma2327
        skolem:lemma2328
        [ a r:Fact; r:gives {(6510 156) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 561];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1562 a r:Inference;
    r:gives {
        562 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {562 math:notEqualTo 0}]
        skolem:lemma2940
        [ a r:Fact; r:gives {((0 5 6 2) "=<") list:sort (0 2 5 6)}]
        [ a r:Fact; r:gives {((0 5 6 2) ">=") list:sort (6 5 2 0)}]
        skolem:lemma2499
        skolem:lemma2500
        [ a r:Fact; r:gives {(6520 256) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 562];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1563 a r:Inference;
    r:gives {
        563 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {563 math:notEqualTo 0}]
        skolem:lemma2941
        [ a r:Fact; r:gives {((0 5 6 3) "=<") list:sort (0 3 5 6)}]
        [ a r:Fact; r:gives {((0 5 6 3) ">=") list:sort (6 5 3 0)}]
        skolem:lemma2655
        skolem:lemma2656
        [ a r:Fact; r:gives {(6530 356) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 563];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1564 a r:Inference;
    r:gives {
        564 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {564 math:notEqualTo 0}]
        skolem:lemma2942
        [ a r:Fact; r:gives {((0 5 6 4) "=<") list:sort (0 4 5 6)}]
        [ a r:Fact; r:gives {((0 5 6 4) ">=") list:sort (6 5 4 0)}]
        skolem:lemma2797
        skolem:lemma2798
        [ a r:Fact; r:gives {(6540 456) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 564];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1565 a r:Inference;
    r:gives {
        565 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {565 math:notEqualTo 0}]
        skolem:lemma2943
        [ a r:Fact; r:gives {((0 5 6 5) "=<") list:sort (0 5 5 6)}]
        [ a r:Fact; r:gives {((0 5 6 5) ">=") list:sort (6 5 5 0)}]
        skolem:lemma2927
        skolem:lemma2928
        [ a r:Fact; r:gives {(6550 556) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 565];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 556];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1566 a r:Inference;
    r:gives {
        566 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {566 math:notEqualTo 0}]
        skolem:lemma2944
        [ a r:Fact; r:gives {((0 5 6 6) "=<") list:sort (0 5 6 6)}]
        [ a r:Fact; r:gives {((0 5 6 6) ">=") list:sort (6 6 5 0)}]
        skolem:lemma2945
        skolem:lemma2946
        [ a r:Fact; r:gives {(6650 566) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 566];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 566];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1567 a r:Inference;
    r:gives {
        567 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {567 math:notEqualTo 0}]
        skolem:lemma2947
        [ a r:Fact; r:gives {((0 5 6 7) "=<") list:sort (0 5 6 7)}]
        [ a r:Fact; r:gives {((0 5 6 7) ">=") list:sort (7 6 5 0)}]
        skolem:lemma2948
        skolem:lemma2949
        [ a r:Fact; r:gives {(7650 567) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1568 a r:Inference;
    r:gives {
        568 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {568 math:notEqualTo 0}]
        skolem:lemma2950
        [ a r:Fact; r:gives {((0 5 6 8) "=<") list:sort (0 5 6 8)}]
        [ a r:Fact; r:gives {((0 5 6 8) ">=") list:sort (8 6 5 0)}]
        skolem:lemma2951
        skolem:lemma2952
        [ a r:Fact; r:gives {(8650 568) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1569 a r:Inference;
    r:gives {
        569 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {569 math:notEqualTo 0}]
        skolem:lemma2953
        [ a r:Fact; r:gives {((0 5 6 9) "=<") list:sort (0 5 6 9)}]
        [ a r:Fact; r:gives {((0 5 6 9) ">=") list:sort (9 6 5 0)}]
        skolem:lemma2954
        skolem:lemma2955
        [ a r:Fact; r:gives {(9650 569) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1570 a r:Inference;
    r:gives {
        570 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {570 math:notEqualTo 0}]
        skolem:lemma2956
        [ a r:Fact; r:gives {((0 5 7 0) "=<") list:sort (0 0 5 7)}]
        [ a r:Fact; r:gives {((0 5 7 0) ">=") list:sort (7 5 0 0)}]
        skolem:lemma2140
        skolem:lemma2141
        [ a r:Fact; r:gives {(7500 57) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 570];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1571 a r:Inference;
    r:gives {
        571 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {571 math:notEqualTo 0}]
        skolem:lemma2957
        [ a r:Fact; r:gives {((0 5 7 1) "=<") list:sort (0 1 5 7)}]
        [ a r:Fact; r:gives {((0 5 7 1) ">=") list:sort (7 5 1 0)}]
        skolem:lemma2330
        skolem:lemma2331
        [ a r:Fact; r:gives {(7510 157) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 571];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1572 a r:Inference;
    r:gives {
        572 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {572 math:notEqualTo 0}]
        skolem:lemma2958
        [ a r:Fact; r:gives {((0 5 7 2) "=<") list:sort (0 2 5 7)}]
        [ a r:Fact; r:gives {((0 5 7 2) ">=") list:sort (7 5 2 0)}]
        skolem:lemma2502
        skolem:lemma2503
        [ a r:Fact; r:gives {(7520 257) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 572];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1573 a r:Inference;
    r:gives {
        573 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {573 math:notEqualTo 0}]
        skolem:lemma2959
        [ a r:Fact; r:gives {((0 5 7 3) "=<") list:sort (0 3 5 7)}]
        [ a r:Fact; r:gives {((0 5 7 3) ">=") list:sort (7 5 3 0)}]
        skolem:lemma2658
        skolem:lemma2659
        [ a r:Fact; r:gives {(7530 357) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 573];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1574 a r:Inference;
    r:gives {
        574 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {574 math:notEqualTo 0}]
        skolem:lemma2960
        [ a r:Fact; r:gives {((0 5 7 4) "=<") list:sort (0 4 5 7)}]
        [ a r:Fact; r:gives {((0 5 7 4) ">=") list:sort (7 5 4 0)}]
        skolem:lemma2800
        skolem:lemma2801
        [ a r:Fact; r:gives {(7540 457) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 574];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1575 a r:Inference;
    r:gives {
        575 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {575 math:notEqualTo 0}]
        skolem:lemma2961
        [ a r:Fact; r:gives {((0 5 7 5) "=<") list:sort (0 5 5 7)}]
        [ a r:Fact; r:gives {((0 5 7 5) ">=") list:sort (7 5 5 0)}]
        skolem:lemma2930
        skolem:lemma2931
        [ a r:Fact; r:gives {(7550 557) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 575];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 557];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1576 a r:Inference;
    r:gives {
        576 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {576 math:notEqualTo 0}]
        skolem:lemma2962
        [ a r:Fact; r:gives {((0 5 7 6) "=<") list:sort (0 5 6 7)}]
        [ a r:Fact; r:gives {((0 5 7 6) ">=") list:sort (7 6 5 0)}]
        skolem:lemma2948
        skolem:lemma2949
        [ a r:Fact; r:gives {(7650 567) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 576];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1577 a r:Inference;
    r:gives {
        577 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {577 math:notEqualTo 0}]
        skolem:lemma2963
        [ a r:Fact; r:gives {((0 5 7 7) "=<") list:sort (0 5 7 7)}]
        [ a r:Fact; r:gives {((0 5 7 7) ">=") list:sort (7 7 5 0)}]
        skolem:lemma2964
        skolem:lemma2965
        [ a r:Fact; r:gives {(7750 577) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 577];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 577];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1578 a r:Inference;
    r:gives {
        578 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {578 math:notEqualTo 0}]
        skolem:lemma2966
        [ a r:Fact; r:gives {((0 5 7 8) "=<") list:sort (0 5 7 8)}]
        [ a r:Fact; r:gives {((0 5 7 8) ">=") list:sort (8 7 5 0)}]
        skolem:lemma2967
        skolem:lemma2968
        [ a r:Fact; r:gives {(8750 578) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1579 a r:Inference;
    r:gives {
        579 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {579 math:notEqualTo 0}]
        skolem:lemma2969
        [ a r:Fact; r:gives {((0 5 7 9) "=<") list:sort (0 5 7 9)}]
        [ a r:Fact; r:gives {((0 5 7 9) ">=") list:sort (9 7 5 0)}]
        skolem:lemma2970
        skolem:lemma2971
        [ a r:Fact; r:gives {(9750 579) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1580 a r:Inference;
    r:gives {
        580 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {580 math:notEqualTo 0}]
        skolem:lemma2972
        [ a r:Fact; r:gives {((0 5 8 0) "=<") list:sort (0 0 5 8)}]
        [ a r:Fact; r:gives {((0 5 8 0) ">=") list:sort (8 5 0 0)}]
        skolem:lemma2143
        skolem:lemma2144
        [ a r:Fact; r:gives {(8500 58) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 580];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1581 a r:Inference;
    r:gives {
        581 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {581 math:notEqualTo 0}]
        skolem:lemma2973
        [ a r:Fact; r:gives {((0 5 8 1) "=<") list:sort (0 1 5 8)}]
        [ a r:Fact; r:gives {((0 5 8 1) ">=") list:sort (8 5 1 0)}]
        skolem:lemma2333
        skolem:lemma2334
        [ a r:Fact; r:gives {(8510 158) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 581];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1582 a r:Inference;
    r:gives {
        582 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {582 math:notEqualTo 0}]
        skolem:lemma2974
        [ a r:Fact; r:gives {((0 5 8 2) "=<") list:sort (0 2 5 8)}]
        [ a r:Fact; r:gives {((0 5 8 2) ">=") list:sort (8 5 2 0)}]
        skolem:lemma2505
        skolem:lemma2506
        [ a r:Fact; r:gives {(8520 258) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 582];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1583 a r:Inference;
    r:gives {
        583 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {583 math:notEqualTo 0}]
        skolem:lemma2975
        [ a r:Fact; r:gives {((0 5 8 3) "=<") list:sort (0 3 5 8)}]
        [ a r:Fact; r:gives {((0 5 8 3) ">=") list:sort (8 5 3 0)}]
        skolem:lemma2661
        skolem:lemma2662
        [ a r:Fact; r:gives {(8530 358) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 583];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1584 a r:Inference;
    r:gives {
        584 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {584 math:notEqualTo 0}]
        skolem:lemma2976
        [ a r:Fact; r:gives {((0 5 8 4) "=<") list:sort (0 4 5 8)}]
        [ a r:Fact; r:gives {((0 5 8 4) ">=") list:sort (8 5 4 0)}]
        skolem:lemma2803
        skolem:lemma2804
        [ a r:Fact; r:gives {(8540 458) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 584];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1585 a r:Inference;
    r:gives {
        585 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {585 math:notEqualTo 0}]
        skolem:lemma2977
        [ a r:Fact; r:gives {((0 5 8 5) "=<") list:sort (0 5 5 8)}]
        [ a r:Fact; r:gives {((0 5 8 5) ">=") list:sort (8 5 5 0)}]
        skolem:lemma2933
        skolem:lemma2934
        [ a r:Fact; r:gives {(8550 558) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 585];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 558];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1586 a r:Inference;
    r:gives {
        586 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {586 math:notEqualTo 0}]
        skolem:lemma2978
        [ a r:Fact; r:gives {((0 5 8 6) "=<") list:sort (0 5 6 8)}]
        [ a r:Fact; r:gives {((0 5 8 6) ">=") list:sort (8 6 5 0)}]
        skolem:lemma2951
        skolem:lemma2952
        [ a r:Fact; r:gives {(8650 568) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 586];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1587 a r:Inference;
    r:gives {
        587 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {587 math:notEqualTo 0}]
        skolem:lemma2979
        [ a r:Fact; r:gives {((0 5 8 7) "=<") list:sort (0 5 7 8)}]
        [ a r:Fact; r:gives {((0 5 8 7) ">=") list:sort (8 7 5 0)}]
        skolem:lemma2967
        skolem:lemma2968
        [ a r:Fact; r:gives {(8750 578) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 587];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1588 a r:Inference;
    r:gives {
        588 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {588 math:notEqualTo 0}]
        skolem:lemma2980
        [ a r:Fact; r:gives {((0 5 8 8) "=<") list:sort (0 5 8 8)}]
        [ a r:Fact; r:gives {((0 5 8 8) ">=") list:sort (8 8 5 0)}]
        skolem:lemma2981
        skolem:lemma2982
        [ a r:Fact; r:gives {(8850 588) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 588];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 588];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1589 a r:Inference;
    r:gives {
        589 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {589 math:notEqualTo 0}]
        skolem:lemma2983
        [ a r:Fact; r:gives {((0 5 8 9) "=<") list:sort (0 5 8 9)}]
        [ a r:Fact; r:gives {((0 5 8 9) ">=") list:sort (9 8 5 0)}]
        skolem:lemma2984
        skolem:lemma2985
        [ a r:Fact; r:gives {(9850 589) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1590 a r:Inference;
    r:gives {
        590 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {590 math:notEqualTo 0}]
        skolem:lemma2986
        [ a r:Fact; r:gives {((0 5 9 0) "=<") list:sort (0 0 5 9)}]
        [ a r:Fact; r:gives {((0 5 9 0) ">=") list:sort (9 5 0 0)}]
        skolem:lemma2146
        skolem:lemma2147
        [ a r:Fact; r:gives {(9500 59) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 590];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1591 a r:Inference;
    r:gives {
        591 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {591 math:notEqualTo 0}]
        skolem:lemma2987
        [ a r:Fact; r:gives {((0 5 9 1) "=<") list:sort (0 1 5 9)}]
        [ a r:Fact; r:gives {((0 5 9 1) ">=") list:sort (9 5 1 0)}]
        skolem:lemma2336
        skolem:lemma2337
        [ a r:Fact; r:gives {(9510 159) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 591];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1592 a r:Inference;
    r:gives {
        592 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {592 math:notEqualTo 0}]
        skolem:lemma2988
        [ a r:Fact; r:gives {((0 5 9 2) "=<") list:sort (0 2 5 9)}]
        [ a r:Fact; r:gives {((0 5 9 2) ">=") list:sort (9 5 2 0)}]
        skolem:lemma2508
        skolem:lemma2509
        [ a r:Fact; r:gives {(9520 259) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 592];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1593 a r:Inference;
    r:gives {
        593 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {593 math:notEqualTo 0}]
        skolem:lemma2989
        [ a r:Fact; r:gives {((0 5 9 3) "=<") list:sort (0 3 5 9)}]
        [ a r:Fact; r:gives {((0 5 9 3) ">=") list:sort (9 5 3 0)}]
        skolem:lemma2664
        skolem:lemma2665
        [ a r:Fact; r:gives {(9530 359) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 593];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1594 a r:Inference;
    r:gives {
        594 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {594 math:notEqualTo 0}]
        skolem:lemma2990
        [ a r:Fact; r:gives {((0 5 9 4) "=<") list:sort (0 4 5 9)}]
        [ a r:Fact; r:gives {((0 5 9 4) ">=") list:sort (9 5 4 0)}]
        skolem:lemma2806
        skolem:lemma2807
        [ a r:Fact; r:gives {(9540 459) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 594];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1595 a r:Inference;
    r:gives {
        595 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {595 math:notEqualTo 0}]
        skolem:lemma2991
        [ a r:Fact; r:gives {((0 5 9 5) "=<") list:sort (0 5 5 9)}]
        [ a r:Fact; r:gives {((0 5 9 5) ">=") list:sort (9 5 5 0)}]
        skolem:lemma2936
        skolem:lemma2937
        [ a r:Fact; r:gives {(9550 559) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 595];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 559];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1596 a r:Inference;
    r:gives {
        596 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {596 math:notEqualTo 0}]
        skolem:lemma2992
        [ a r:Fact; r:gives {((0 5 9 6) "=<") list:sort (0 5 6 9)}]
        [ a r:Fact; r:gives {((0 5 9 6) ">=") list:sort (9 6 5 0)}]
        skolem:lemma2954
        skolem:lemma2955
        [ a r:Fact; r:gives {(9650 569) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 596];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1597 a r:Inference;
    r:gives {
        597 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {597 math:notEqualTo 0}]
        skolem:lemma2993
        [ a r:Fact; r:gives {((0 5 9 7) "=<") list:sort (0 5 7 9)}]
        [ a r:Fact; r:gives {((0 5 9 7) ">=") list:sort (9 7 5 0)}]
        skolem:lemma2970
        skolem:lemma2971
        [ a r:Fact; r:gives {(9750 579) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 597];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1598 a r:Inference;
    r:gives {
        598 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {598 math:notEqualTo 0}]
        skolem:lemma2994
        [ a r:Fact; r:gives {((0 5 9 8) "=<") list:sort (0 5 8 9)}]
        [ a r:Fact; r:gives {((0 5 9 8) ">=") list:sort (9 8 5 0)}]
        skolem:lemma2984
        skolem:lemma2985
        [ a r:Fact; r:gives {(9850 589) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 598];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1599 a r:Inference;
    r:gives {
        599 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {599 math:notEqualTo 0}]
        skolem:lemma2995
        [ a r:Fact; r:gives {((0 5 9 9) "=<") list:sort (0 5 9 9)}]
        [ a r:Fact; r:gives {((0 5 9 9) ">=") list:sort (9 9 5 0)}]
        skolem:lemma2996
        skolem:lemma2997
        [ a r:Fact; r:gives {(9950 599) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 599];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 5 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 599];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9950];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1600 a r:Inference;
    r:gives {
        600 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {600 math:notEqualTo 0}]
        skolem:lemma2998
        [ a r:Fact; r:gives {((0 6 0 0) "=<") list:sort (0 0 0 6)}]
        [ a r:Fact; r:gives {((0 6 0 0) ">=") list:sort (6 0 0 0)}]
        skolem:lemma2017
        skolem:lemma2018
        [ a r:Fact; r:gives {(6000 6) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1601 a r:Inference;
    r:gives {
        601 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {601 math:notEqualTo 0}]
        skolem:lemma2999
        [ a r:Fact; r:gives {((0 6 0 1) "=<") list:sort (0 0 1 6)}]
        [ a r:Fact; r:gives {((0 6 0 1) ">=") list:sort (6 1 0 0)}]
        skolem:lemma2045
        skolem:lemma2046
        [ a r:Fact; r:gives {(6100 16) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 601];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1602 a r:Inference;
    r:gives {
        602 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {602 math:notEqualTo 0}]
        skolem:lemma3000
        [ a r:Fact; r:gives {((0 6 0 2) "=<") list:sort (0 0 2 6)}]
        [ a r:Fact; r:gives {((0 6 0 2) ">=") list:sort (6 2 0 0)}]
        skolem:lemma2071
        skolem:lemma2072
        [ a r:Fact; r:gives {(6200 26) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 602];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1603 a r:Inference;
    r:gives {
        603 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {603 math:notEqualTo 0}]
        skolem:lemma3001
        [ a r:Fact; r:gives {((0 6 0 3) "=<") list:sort (0 0 3 6)}]
        [ a r:Fact; r:gives {((0 6 0 3) ">=") list:sort (6 3 0 0)}]
        skolem:lemma2095
        skolem:lemma2096
        [ a r:Fact; r:gives {(6300 36) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 603];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1604 a r:Inference;
    r:gives {
        604 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {604 math:notEqualTo 0}]
        skolem:lemma3002
        [ a r:Fact; r:gives {((0 6 0 4) "=<") list:sort (0 0 4 6)}]
        [ a r:Fact; r:gives {((0 6 0 4) ">=") list:sort (6 4 0 0)}]
        skolem:lemma2117
        skolem:lemma2118
        [ a r:Fact; r:gives {(6400 46) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 604];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1605 a r:Inference;
    r:gives {
        605 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {605 math:notEqualTo 0}]
        skolem:lemma3003
        [ a r:Fact; r:gives {((0 6 0 5) "=<") list:sort (0 0 5 6)}]
        [ a r:Fact; r:gives {((0 6 0 5) ">=") list:sort (6 5 0 0)}]
        skolem:lemma2137
        skolem:lemma2138
        [ a r:Fact; r:gives {(6500 56) math:difference 6444}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6444 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            6444 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 605];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1606 a r:Inference;
    r:gives {
        606 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {606 math:notEqualTo 0}]
        skolem:lemma3004
        [ a r:Fact; r:gives {((0 6 0 6) "=<") list:sort (0 0 6 6)}]
        [ a r:Fact; r:gives {((0 6 0 6) ">=") list:sort (6 6 0 0)}]
        skolem:lemma2155
        skolem:lemma2156
        [ a r:Fact; r:gives {(6600 66) math:difference 6534}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6534 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6534 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 606];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6534];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1607 a r:Inference;
    r:gives {
        607 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {607 math:notEqualTo 0}]
        skolem:lemma3005
        [ a r:Fact; r:gives {((0 6 0 7) "=<") list:sort (0 0 6 7)}]
        [ a r:Fact; r:gives {((0 6 0 7) ">=") list:sort (7 6 0 0)}]
        skolem:lemma2158
        skolem:lemma2159
        [ a r:Fact; r:gives {(7600 67) math:difference 7533}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7533 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7533 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 607];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1608 a r:Inference;
    r:gives {
        608 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {608 math:notEqualTo 0}]
        skolem:lemma3006
        [ a r:Fact; r:gives {((0 6 0 8) "=<") list:sort (0 0 6 8)}]
        [ a r:Fact; r:gives {((0 6 0 8) ">=") list:sort (8 6 0 0)}]
        skolem:lemma2161
        skolem:lemma2162
        [ a r:Fact; r:gives {(8600 68) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 608];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1609 a r:Inference;
    r:gives {
        609 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {609 math:notEqualTo 0}]
        skolem:lemma3007
        [ a r:Fact; r:gives {((0 6 0 9) "=<") list:sort (0 0 6 9)}]
        [ a r:Fact; r:gives {((0 6 0 9) ">=") list:sort (9 6 0 0)}]
        skolem:lemma2164
        skolem:lemma2165
        [ a r:Fact; r:gives {(9600 69) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 609];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1610 a r:Inference;
    r:gives {
        610 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {610 math:notEqualTo 0}]
        skolem:lemma3008
        [ a r:Fact; r:gives {((0 6 1 0) "=<") list:sort (0 0 1 6)}]
        [ a r:Fact; r:gives {((0 6 1 0) ">=") list:sort (6 1 0 0)}]
        skolem:lemma2045
        skolem:lemma2046
        [ a r:Fact; r:gives {(6100 16) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1611 a r:Inference;
    r:gives {
        611 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {611 math:notEqualTo 0}]
        skolem:lemma3009
        [ a r:Fact; r:gives {((0 6 1 1) "=<") list:sort (0 1 1 6)}]
        [ a r:Fact; r:gives {((0 6 1 1) ">=") list:sort (6 1 1 0)}]
        skolem:lemma2235
        skolem:lemma2236
        [ a r:Fact; r:gives {(6110 116) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 611];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1612 a r:Inference;
    r:gives {
        612 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {612 math:notEqualTo 0}]
        skolem:lemma3010
        [ a r:Fact; r:gives {((0 6 1 2) "=<") list:sort (0 1 2 6)}]
        [ a r:Fact; r:gives {((0 6 1 2) ">=") list:sort (6 2 1 0)}]
        skolem:lemma2261
        skolem:lemma2262
        [ a r:Fact; r:gives {(6210 126) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 612];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1613 a r:Inference;
    r:gives {
        613 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {613 math:notEqualTo 0}]
        skolem:lemma3011
        [ a r:Fact; r:gives {((0 6 1 3) "=<") list:sort (0 1 3 6)}]
        [ a r:Fact; r:gives {((0 6 1 3) ">=") list:sort (6 3 1 0)}]
        skolem:lemma2285
        skolem:lemma2286
        [ a r:Fact; r:gives {(6310 136) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 613];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1614 a r:Inference;
    r:gives {
        614 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {614 math:notEqualTo 0}]
        skolem:lemma3012
        [ a r:Fact; r:gives {((0 6 1 4) "=<") list:sort (0 1 4 6)}]
        [ a r:Fact; r:gives {((0 6 1 4) ">=") list:sort (6 4 1 0)}]
        skolem:lemma2307
        skolem:lemma2308
        [ a r:Fact; r:gives {(6410 146) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 614];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1615 a r:Inference;
    r:gives {
        615 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {615 math:notEqualTo 0}]
        skolem:lemma3013
        [ a r:Fact; r:gives {((0 6 1 5) "=<") list:sort (0 1 5 6)}]
        [ a r:Fact; r:gives {((0 6 1 5) ">=") list:sort (6 5 1 0)}]
        skolem:lemma2327
        skolem:lemma2328
        [ a r:Fact; r:gives {(6510 156) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 615];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1616 a r:Inference;
    r:gives {
        616 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {616 math:notEqualTo 0}]
        skolem:lemma3014
        [ a r:Fact; r:gives {((0 6 1 6) "=<") list:sort (0 1 6 6)}]
        [ a r:Fact; r:gives {((0 6 1 6) ">=") list:sort (6 6 1 0)}]
        skolem:lemma2345
        skolem:lemma2346
        [ a r:Fact; r:gives {(6610 166) math:difference 6444}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6444 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            6444 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 616];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 166];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1617 a r:Inference;
    r:gives {
        617 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {617 math:notEqualTo 0}]
        skolem:lemma3015
        [ a r:Fact; r:gives {((0 6 1 7) "=<") list:sort (0 1 6 7)}]
        [ a r:Fact; r:gives {((0 6 1 7) ">=") list:sort (7 6 1 0)}]
        skolem:lemma2348
        skolem:lemma2349
        [ a r:Fact; r:gives {(7610 167) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 617];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1618 a r:Inference;
    r:gives {
        618 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {618 math:notEqualTo 0}]
        skolem:lemma3016
        [ a r:Fact; r:gives {((0 6 1 8) "=<") list:sort (0 1 6 8)}]
        [ a r:Fact; r:gives {((0 6 1 8) ">=") list:sort (8 6 1 0)}]
        skolem:lemma2351
        skolem:lemma2352
        [ a r:Fact; r:gives {(8610 168) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 618];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1619 a r:Inference;
    r:gives {
        619 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {619 math:notEqualTo 0}]
        skolem:lemma3017
        [ a r:Fact; r:gives {((0 6 1 9) "=<") list:sort (0 1 6 9)}]
        [ a r:Fact; r:gives {((0 6 1 9) ">=") list:sort (9 6 1 0)}]
        skolem:lemma2354
        skolem:lemma2355
        [ a r:Fact; r:gives {(9610 169) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 619];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1620 a r:Inference;
    r:gives {
        620 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {620 math:notEqualTo 0}]
        skolem:lemma3018
        [ a r:Fact; r:gives {((0 6 2 0) "=<") list:sort (0 0 2 6)}]
        [ a r:Fact; r:gives {((0 6 2 0) ">=") list:sort (6 2 0 0)}]
        skolem:lemma2071
        skolem:lemma2072
        [ a r:Fact; r:gives {(6200 26) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1621 a r:Inference;
    r:gives {
        621 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {621 math:notEqualTo 0}]
        skolem:lemma3019
        [ a r:Fact; r:gives {((0 6 2 1) "=<") list:sort (0 1 2 6)}]
        [ a r:Fact; r:gives {((0 6 2 1) ">=") list:sort (6 2 1 0)}]
        skolem:lemma2261
        skolem:lemma2262
        [ a r:Fact; r:gives {(6210 126) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1622 a r:Inference;
    r:gives {
        622 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {622 math:notEqualTo 0}]
        skolem:lemma3020
        [ a r:Fact; r:gives {((0 6 2 2) "=<") list:sort (0 2 2 6)}]
        [ a r:Fact; r:gives {((0 6 2 2) ">=") list:sort (6 2 2 0)}]
        skolem:lemma2433
        skolem:lemma2434
        [ a r:Fact; r:gives {(6220 226) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 226];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1623 a r:Inference;
    r:gives {
        623 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {623 math:notEqualTo 0}]
        skolem:lemma3021
        [ a r:Fact; r:gives {((0 6 2 3) "=<") list:sort (0 2 3 6)}]
        [ a r:Fact; r:gives {((0 6 2 3) ">=") list:sort (6 3 2 0)}]
        skolem:lemma2457
        skolem:lemma2458
        [ a r:Fact; r:gives {(6320 236) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 623];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1624 a r:Inference;
    r:gives {
        624 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {624 math:notEqualTo 0}]
        skolem:lemma3022
        [ a r:Fact; r:gives {((0 6 2 4) "=<") list:sort (0 2 4 6)}]
        [ a r:Fact; r:gives {((0 6 2 4) ">=") list:sort (6 4 2 0)}]
        skolem:lemma2479
        skolem:lemma2480
        [ a r:Fact; r:gives {(6420 246) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 624];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1625 a r:Inference;
    r:gives {
        625 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {625 math:notEqualTo 0}]
        skolem:lemma3023
        [ a r:Fact; r:gives {((0 6 2 5) "=<") list:sort (0 2 5 6)}]
        [ a r:Fact; r:gives {((0 6 2 5) ">=") list:sort (6 5 2 0)}]
        skolem:lemma2499
        skolem:lemma2500
        [ a r:Fact; r:gives {(6520 256) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 625];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1626 a r:Inference;
    r:gives {
        626 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {626 math:notEqualTo 0}]
        skolem:lemma3024
        [ a r:Fact; r:gives {((0 6 2 6) "=<") list:sort (0 2 6 6)}]
        [ a r:Fact; r:gives {((0 6 2 6) ">=") list:sort (6 6 2 0)}]
        skolem:lemma2517
        skolem:lemma2518
        [ a r:Fact; r:gives {(6620 266) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 626];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1627 a r:Inference;
    r:gives {
        627 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {627 math:notEqualTo 0}]
        skolem:lemma3025
        [ a r:Fact; r:gives {((0 6 2 7) "=<") list:sort (0 2 6 7)}]
        [ a r:Fact; r:gives {((0 6 2 7) ">=") list:sort (7 6 2 0)}]
        skolem:lemma2520
        skolem:lemma2521
        [ a r:Fact; r:gives {(7620 267) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 627];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1628 a r:Inference;
    r:gives {
        628 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {628 math:notEqualTo 0}]
        skolem:lemma3026
        [ a r:Fact; r:gives {((0 6 2 8) "=<") list:sort (0 2 6 8)}]
        [ a r:Fact; r:gives {((0 6 2 8) ">=") list:sort (8 6 2 0)}]
        skolem:lemma2523
        skolem:lemma2524
        [ a r:Fact; r:gives {(8620 268) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 628];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1629 a r:Inference;
    r:gives {
        629 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {629 math:notEqualTo 0}]
        skolem:lemma3027
        [ a r:Fact; r:gives {((0 6 2 9) "=<") list:sort (0 2 6 9)}]
        [ a r:Fact; r:gives {((0 6 2 9) ">=") list:sort (9 6 2 0)}]
        skolem:lemma2526
        skolem:lemma2527
        [ a r:Fact; r:gives {(9620 269) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 629];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1630 a r:Inference;
    r:gives {
        630 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {630 math:notEqualTo 0}]
        skolem:lemma3028
        [ a r:Fact; r:gives {((0 6 3 0) "=<") list:sort (0 0 3 6)}]
        [ a r:Fact; r:gives {((0 6 3 0) ">=") list:sort (6 3 0 0)}]
        skolem:lemma2095
        skolem:lemma2096
        [ a r:Fact; r:gives {(6300 36) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1631 a r:Inference;
    r:gives {
        631 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {631 math:notEqualTo 0}]
        skolem:lemma3029
        [ a r:Fact; r:gives {((0 6 3 1) "=<") list:sort (0 1 3 6)}]
        [ a r:Fact; r:gives {((0 6 3 1) ">=") list:sort (6 3 1 0)}]
        skolem:lemma2285
        skolem:lemma2286
        [ a r:Fact; r:gives {(6310 136) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 631];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1632 a r:Inference;
    r:gives {
        632 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {632 math:notEqualTo 0}]
        skolem:lemma3030
        [ a r:Fact; r:gives {((0 6 3 2) "=<") list:sort (0 2 3 6)}]
        [ a r:Fact; r:gives {((0 6 3 2) ">=") list:sort (6 3 2 0)}]
        skolem:lemma2457
        skolem:lemma2458
        [ a r:Fact; r:gives {(6320 236) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 632];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1633 a r:Inference;
    r:gives {
        633 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {633 math:notEqualTo 0}]
        skolem:lemma3031
        [ a r:Fact; r:gives {((0 6 3 3) "=<") list:sort (0 3 3 6)}]
        [ a r:Fact; r:gives {((0 6 3 3) ">=") list:sort (6 3 3 0)}]
        skolem:lemma2613
        skolem:lemma2614
        [ a r:Fact; r:gives {(6330 336) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 633];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 336];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1634 a r:Inference;
    r:gives {
        634 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {634 math:notEqualTo 0}]
        skolem:lemma3032
        [ a r:Fact; r:gives {((0 6 3 4) "=<") list:sort (0 3 4 6)}]
        [ a r:Fact; r:gives {((0 6 3 4) ">=") list:sort (6 4 3 0)}]
        skolem:lemma2635
        skolem:lemma2636
        [ a r:Fact; r:gives {(6430 346) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 634];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1635 a r:Inference;
    r:gives {
        635 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {635 math:notEqualTo 0}]
        skolem:lemma3033
        [ a r:Fact; r:gives {((0 6 3 5) "=<") list:sort (0 3 5 6)}]
        [ a r:Fact; r:gives {((0 6 3 5) ">=") list:sort (6 5 3 0)}]
        skolem:lemma2655
        skolem:lemma2656
        [ a r:Fact; r:gives {(6530 356) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 635];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1636 a r:Inference;
    r:gives {
        636 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {636 math:notEqualTo 0}]
        skolem:lemma3034
        [ a r:Fact; r:gives {((0 6 3 6) "=<") list:sort (0 3 6 6)}]
        [ a r:Fact; r:gives {((0 6 3 6) ">=") list:sort (6 6 3 0)}]
        skolem:lemma2673
        skolem:lemma2674
        [ a r:Fact; r:gives {(6630 366) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 636];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 366];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1637 a r:Inference;
    r:gives {
        637 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {637 math:notEqualTo 0}]
        skolem:lemma3035
        [ a r:Fact; r:gives {((0 6 3 7) "=<") list:sort (0 3 6 7)}]
        [ a r:Fact; r:gives {((0 6 3 7) ">=") list:sort (7 6 3 0)}]
        skolem:lemma2676
        skolem:lemma2677
        [ a r:Fact; r:gives {(7630 367) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 637];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1638 a r:Inference;
    r:gives {
        638 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {638 math:notEqualTo 0}]
        skolem:lemma3036
        [ a r:Fact; r:gives {((0 6 3 8) "=<") list:sort (0 3 6 8)}]
        [ a r:Fact; r:gives {((0 6 3 8) ">=") list:sort (8 6 3 0)}]
        skolem:lemma2679
        skolem:lemma2680
        [ a r:Fact; r:gives {(8630 368) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 638];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1639 a r:Inference;
    r:gives {
        639 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {639 math:notEqualTo 0}]
        skolem:lemma3037
        [ a r:Fact; r:gives {((0 6 3 9) "=<") list:sort (0 3 6 9)}]
        [ a r:Fact; r:gives {((0 6 3 9) ">=") list:sort (9 6 3 0)}]
        skolem:lemma2682
        skolem:lemma2683
        [ a r:Fact; r:gives {(9630 369) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 639];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1640 a r:Inference;
    r:gives {
        640 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {640 math:notEqualTo 0}]
        skolem:lemma3038
        [ a r:Fact; r:gives {((0 6 4 0) "=<") list:sort (0 0 4 6)}]
        [ a r:Fact; r:gives {((0 6 4 0) ">=") list:sort (6 4 0 0)}]
        skolem:lemma2117
        skolem:lemma2118
        [ a r:Fact; r:gives {(6400 46) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1641 a r:Inference;
    r:gives {
        641 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {641 math:notEqualTo 0}]
        skolem:lemma3039
        [ a r:Fact; r:gives {((0 6 4 1) "=<") list:sort (0 1 4 6)}]
        [ a r:Fact; r:gives {((0 6 4 1) ">=") list:sort (6 4 1 0)}]
        skolem:lemma2307
        skolem:lemma2308
        [ a r:Fact; r:gives {(6410 146) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 641];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1642 a r:Inference;
    r:gives {
        642 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {642 math:notEqualTo 0}]
        skolem:lemma3040
        [ a r:Fact; r:gives {((0 6 4 2) "=<") list:sort (0 2 4 6)}]
        [ a r:Fact; r:gives {((0 6 4 2) ">=") list:sort (6 4 2 0)}]
        skolem:lemma2479
        skolem:lemma2480
        [ a r:Fact; r:gives {(6420 246) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 642];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1643 a r:Inference;
    r:gives {
        643 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {643 math:notEqualTo 0}]
        skolem:lemma3041
        [ a r:Fact; r:gives {((0 6 4 3) "=<") list:sort (0 3 4 6)}]
        [ a r:Fact; r:gives {((0 6 4 3) ">=") list:sort (6 4 3 0)}]
        skolem:lemma2635
        skolem:lemma2636
        [ a r:Fact; r:gives {(6430 346) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 643];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1644 a r:Inference;
    r:gives {
        644 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {644 math:notEqualTo 0}]
        skolem:lemma3042
        [ a r:Fact; r:gives {((0 6 4 4) "=<") list:sort (0 4 4 6)}]
        [ a r:Fact; r:gives {((0 6 4 4) ">=") list:sort (6 4 4 0)}]
        skolem:lemma2777
        skolem:lemma2778
        [ a r:Fact; r:gives {(6440 446) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 644];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 446];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1645 a r:Inference;
    r:gives {
        645 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {645 math:notEqualTo 0}]
        skolem:lemma3043
        [ a r:Fact; r:gives {((0 6 4 5) "=<") list:sort (0 4 5 6)}]
        [ a r:Fact; r:gives {((0 6 4 5) ">=") list:sort (6 5 4 0)}]
        skolem:lemma2797
        skolem:lemma2798
        [ a r:Fact; r:gives {(6540 456) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 645];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1646 a r:Inference;
    r:gives {
        646 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {646 math:notEqualTo 0}]
        skolem:lemma3044
        [ a r:Fact; r:gives {((0 6 4 6) "=<") list:sort (0 4 6 6)}]
        [ a r:Fact; r:gives {((0 6 4 6) ">=") list:sort (6 6 4 0)}]
        skolem:lemma2815
        skolem:lemma2816
        [ a r:Fact; r:gives {(6640 466) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 646];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 466];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1647 a r:Inference;
    r:gives {
        647 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {647 math:notEqualTo 0}]
        skolem:lemma3045
        [ a r:Fact; r:gives {((0 6 4 7) "=<") list:sort (0 4 6 7)}]
        [ a r:Fact; r:gives {((0 6 4 7) ">=") list:sort (7 6 4 0)}]
        skolem:lemma2818
        skolem:lemma2819
        [ a r:Fact; r:gives {(7640 467) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 647];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1648 a r:Inference;
    r:gives {
        648 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {648 math:notEqualTo 0}]
        skolem:lemma3046
        [ a r:Fact; r:gives {((0 6 4 8) "=<") list:sort (0 4 6 8)}]
        [ a r:Fact; r:gives {((0 6 4 8) ">=") list:sort (8 6 4 0)}]
        skolem:lemma2821
        skolem:lemma2822
        [ a r:Fact; r:gives {(8640 468) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 648];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1649 a r:Inference;
    r:gives {
        649 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {649 math:notEqualTo 0}]
        skolem:lemma3047
        [ a r:Fact; r:gives {((0 6 4 9) "=<") list:sort (0 4 6 9)}]
        [ a r:Fact; r:gives {((0 6 4 9) ">=") list:sort (9 6 4 0)}]
        skolem:lemma2824
        skolem:lemma2825
        [ a r:Fact; r:gives {(9640 469) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 649];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1650 a r:Inference;
    r:gives {
        650 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {650 math:notEqualTo 0}]
        skolem:lemma3048
        [ a r:Fact; r:gives {((0 6 5 0) "=<") list:sort (0 0 5 6)}]
        [ a r:Fact; r:gives {((0 6 5 0) ">=") list:sort (6 5 0 0)}]
        skolem:lemma2137
        skolem:lemma2138
        [ a r:Fact; r:gives {(6500 56) math:difference 6444}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6444 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            6444 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1651 a r:Inference;
    r:gives {
        651 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {651 math:notEqualTo 0}]
        skolem:lemma3049
        [ a r:Fact; r:gives {((0 6 5 1) "=<") list:sort (0 1 5 6)}]
        [ a r:Fact; r:gives {((0 6 5 1) ">=") list:sort (6 5 1 0)}]
        skolem:lemma2327
        skolem:lemma2328
        [ a r:Fact; r:gives {(6510 156) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 651];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1652 a r:Inference;
    r:gives {
        652 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {652 math:notEqualTo 0}]
        skolem:lemma3050
        [ a r:Fact; r:gives {((0 6 5 2) "=<") list:sort (0 2 5 6)}]
        [ a r:Fact; r:gives {((0 6 5 2) ">=") list:sort (6 5 2 0)}]
        skolem:lemma2499
        skolem:lemma2500
        [ a r:Fact; r:gives {(6520 256) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 652];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1653 a r:Inference;
    r:gives {
        653 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {653 math:notEqualTo 0}]
        skolem:lemma3051
        [ a r:Fact; r:gives {((0 6 5 3) "=<") list:sort (0 3 5 6)}]
        [ a r:Fact; r:gives {((0 6 5 3) ">=") list:sort (6 5 3 0)}]
        skolem:lemma2655
        skolem:lemma2656
        [ a r:Fact; r:gives {(6530 356) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 653];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1654 a r:Inference;
    r:gives {
        654 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {654 math:notEqualTo 0}]
        skolem:lemma3052
        [ a r:Fact; r:gives {((0 6 5 4) "=<") list:sort (0 4 5 6)}]
        [ a r:Fact; r:gives {((0 6 5 4) ">=") list:sort (6 5 4 0)}]
        skolem:lemma2797
        skolem:lemma2798
        [ a r:Fact; r:gives {(6540 456) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 654];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1655 a r:Inference;
    r:gives {
        655 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {655 math:notEqualTo 0}]
        skolem:lemma3053
        [ a r:Fact; r:gives {((0 6 5 5) "=<") list:sort (0 5 5 6)}]
        [ a r:Fact; r:gives {((0 6 5 5) ">=") list:sort (6 5 5 0)}]
        skolem:lemma2927
        skolem:lemma2928
        [ a r:Fact; r:gives {(6550 556) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 655];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 556];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1656 a r:Inference;
    r:gives {
        656 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {656 math:notEqualTo 0}]
        skolem:lemma3054
        [ a r:Fact; r:gives {((0 6 5 6) "=<") list:sort (0 5 6 6)}]
        [ a r:Fact; r:gives {((0 6 5 6) ">=") list:sort (6 6 5 0)}]
        skolem:lemma2945
        skolem:lemma2946
        [ a r:Fact; r:gives {(6650 566) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 656];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 566];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1657 a r:Inference;
    r:gives {
        657 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {657 math:notEqualTo 0}]
        skolem:lemma3055
        [ a r:Fact; r:gives {((0 6 5 7) "=<") list:sort (0 5 6 7)}]
        [ a r:Fact; r:gives {((0 6 5 7) ">=") list:sort (7 6 5 0)}]
        skolem:lemma2948
        skolem:lemma2949
        [ a r:Fact; r:gives {(7650 567) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 657];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1658 a r:Inference;
    r:gives {
        658 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {658 math:notEqualTo 0}]
        skolem:lemma3056
        [ a r:Fact; r:gives {((0 6 5 8) "=<") list:sort (0 5 6 8)}]
        [ a r:Fact; r:gives {((0 6 5 8) ">=") list:sort (8 6 5 0)}]
        skolem:lemma2951
        skolem:lemma2952
        [ a r:Fact; r:gives {(8650 568) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 658];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1659 a r:Inference;
    r:gives {
        659 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {659 math:notEqualTo 0}]
        skolem:lemma3057
        [ a r:Fact; r:gives {((0 6 5 9) "=<") list:sort (0 5 6 9)}]
        [ a r:Fact; r:gives {((0 6 5 9) ">=") list:sort (9 6 5 0)}]
        skolem:lemma2954
        skolem:lemma2955
        [ a r:Fact; r:gives {(9650 569) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 659];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1660 a r:Inference;
    r:gives {
        660 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {660 math:notEqualTo 0}]
        skolem:lemma3058
        [ a r:Fact; r:gives {((0 6 6 0) "=<") list:sort (0 0 6 6)}]
        [ a r:Fact; r:gives {((0 6 6 0) ">=") list:sort (6 6 0 0)}]
        skolem:lemma2155
        skolem:lemma2156
        [ a r:Fact; r:gives {(6600 66) math:difference 6534}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6534 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6534 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6534];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1661 a r:Inference;
    r:gives {
        661 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {661 math:notEqualTo 0}]
        skolem:lemma3059
        [ a r:Fact; r:gives {((0 6 6 1) "=<") list:sort (0 1 6 6)}]
        [ a r:Fact; r:gives {((0 6 6 1) ">=") list:sort (6 6 1 0)}]
        skolem:lemma2345
        skolem:lemma2346
        [ a r:Fact; r:gives {(6610 166) math:difference 6444}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6444 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            6444 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 661];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 166];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1662 a r:Inference;
    r:gives {
        662 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {662 math:notEqualTo 0}]
        skolem:lemma3060
        [ a r:Fact; r:gives {((0 6 6 2) "=<") list:sort (0 2 6 6)}]
        [ a r:Fact; r:gives {((0 6 6 2) ">=") list:sort (6 6 2 0)}]
        skolem:lemma2517
        skolem:lemma2518
        [ a r:Fact; r:gives {(6620 266) math:difference 6354}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6354 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6354 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 662];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1663 a r:Inference;
    r:gives {
        663 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {663 math:notEqualTo 0}]
        skolem:lemma3061
        [ a r:Fact; r:gives {((0 6 6 3) "=<") list:sort (0 3 6 6)}]
        [ a r:Fact; r:gives {((0 6 6 3) ">=") list:sort (6 6 3 0)}]
        skolem:lemma2673
        skolem:lemma2674
        [ a r:Fact; r:gives {(6630 366) math:difference 6264}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6264 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            6264 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 663];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 366];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1664 a r:Inference;
    r:gives {
        664 :kaprekar (0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {664 math:notEqualTo 0}]
        skolem:lemma3062
        [ a r:Fact; r:gives {((0 6 6 4) "=<") list:sort (0 4 6 6)}]
        [ a r:Fact; r:gives {((0 6 6 4) ">=") list:sort (6 6 4 0)}]
        skolem:lemma2815
        skolem:lemma2816
        [ a r:Fact; r:gives {(6640 466) math:difference 6174}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6174 math:equalTo 6174.
        } {
            1 log:equalTo 1.
        } {
            6174 :kaprekar (1 1).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 664];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 466];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 1];
    r:rule skolem:lemma2003.

skolem:lemma1665 a r:Inference;
    r:gives {
        665 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {665 math:notEqualTo 0}]
        skolem:lemma3063
        [ a r:Fact; r:gives {((0 6 6 5) "=<") list:sort (0 5 6 6)}]
        [ a r:Fact; r:gives {((0 6 6 5) ">=") list:sort (6 6 5 0)}]
        skolem:lemma2945
        skolem:lemma2946
        [ a r:Fact; r:gives {(6650 566) math:difference 6084}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6084 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            6084 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 665];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 566];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6084];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1666 a r:Inference;
    r:gives {
        666 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {666 math:notEqualTo 0}]
        skolem:lemma3064
        [ a r:Fact; r:gives {((0 6 6 6) "=<") list:sort (0 6 6 6)}]
        [ a r:Fact; r:gives {((0 6 6 6) ">=") list:sort (6 6 6 0)}]
        skolem:lemma3065
        skolem:lemma3066
        [ a r:Fact; r:gives {(6660 666) math:difference 5994}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            5994 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            5994 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 666];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 666];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1667 a r:Inference;
    r:gives {
        667 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {667 math:notEqualTo 0}]
        skolem:lemma3067
        [ a r:Fact; r:gives {((0 6 6 7) "=<") list:sort (0 6 6 7)}]
        [ a r:Fact; r:gives {((0 6 6 7) ">=") list:sort (7 6 6 0)}]
        skolem:lemma3068
        skolem:lemma3069
        [ a r:Fact; r:gives {(7660 667) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 667];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 667];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1668 a r:Inference;
    r:gives {
        668 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {668 math:notEqualTo 0}]
        skolem:lemma3070
        [ a r:Fact; r:gives {((0 6 6 8) "=<") list:sort (0 6 6 8)}]
        [ a r:Fact; r:gives {((0 6 6 8) ">=") list:sort (8 6 6 0)}]
        skolem:lemma3071
        skolem:lemma3072
        [ a r:Fact; r:gives {(8660 668) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 668];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 668];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1669 a r:Inference;
    r:gives {
        669 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {669 math:notEqualTo 0}]
        skolem:lemma3073
        [ a r:Fact; r:gives {((0 6 6 9) "=<") list:sort (0 6 6 9)}]
        [ a r:Fact; r:gives {((0 6 6 9) ">=") list:sort (9 6 6 0)}]
        skolem:lemma3074
        skolem:lemma3075
        [ a r:Fact; r:gives {(9660 669) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 669];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 669];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1670 a r:Inference;
    r:gives {
        670 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {670 math:notEqualTo 0}]
        skolem:lemma3076
        [ a r:Fact; r:gives {((0 6 7 0) "=<") list:sort (0 0 6 7)}]
        [ a r:Fact; r:gives {((0 6 7 0) ">=") list:sort (7 6 0 0)}]
        skolem:lemma2158
        skolem:lemma2159
        [ a r:Fact; r:gives {(7600 67) math:difference 7533}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7533 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7533 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 670];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1671 a r:Inference;
    r:gives {
        671 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {671 math:notEqualTo 0}]
        skolem:lemma3077
        [ a r:Fact; r:gives {((0 6 7 1) "=<") list:sort (0 1 6 7)}]
        [ a r:Fact; r:gives {((0 6 7 1) ">=") list:sort (7 6 1 0)}]
        skolem:lemma2348
        skolem:lemma2349
        [ a r:Fact; r:gives {(7610 167) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 671];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1672 a r:Inference;
    r:gives {
        672 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {672 math:notEqualTo 0}]
        skolem:lemma3078
        [ a r:Fact; r:gives {((0 6 7 2) "=<") list:sort (0 2 6 7)}]
        [ a r:Fact; r:gives {((0 6 7 2) ">=") list:sort (7 6 2 0)}]
        skolem:lemma2520
        skolem:lemma2521
        [ a r:Fact; r:gives {(7620 267) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 672];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1673 a r:Inference;
    r:gives {
        673 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {673 math:notEqualTo 0}]
        skolem:lemma3079
        [ a r:Fact; r:gives {((0 6 7 3) "=<") list:sort (0 3 6 7)}]
        [ a r:Fact; r:gives {((0 6 7 3) ">=") list:sort (7 6 3 0)}]
        skolem:lemma2676
        skolem:lemma2677
        [ a r:Fact; r:gives {(7630 367) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 673];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1674 a r:Inference;
    r:gives {
        674 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {674 math:notEqualTo 0}]
        skolem:lemma3080
        [ a r:Fact; r:gives {((0 6 7 4) "=<") list:sort (0 4 6 7)}]
        [ a r:Fact; r:gives {((0 6 7 4) ">=") list:sort (7 6 4 0)}]
        skolem:lemma2818
        skolem:lemma2819
        [ a r:Fact; r:gives {(7640 467) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 674];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1675 a r:Inference;
    r:gives {
        675 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {675 math:notEqualTo 0}]
        skolem:lemma3081
        [ a r:Fact; r:gives {((0 6 7 5) "=<") list:sort (0 5 6 7)}]
        [ a r:Fact; r:gives {((0 6 7 5) ">=") list:sort (7 6 5 0)}]
        skolem:lemma2948
        skolem:lemma2949
        [ a r:Fact; r:gives {(7650 567) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 675];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1676 a r:Inference;
    r:gives {
        676 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {676 math:notEqualTo 0}]
        skolem:lemma3082
        [ a r:Fact; r:gives {((0 6 7 6) "=<") list:sort (0 6 6 7)}]
        [ a r:Fact; r:gives {((0 6 7 6) ">=") list:sort (7 6 6 0)}]
        skolem:lemma3068
        skolem:lemma3069
        [ a r:Fact; r:gives {(7660 667) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 676];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 667];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1677 a r:Inference;
    r:gives {
        677 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {677 math:notEqualTo 0}]
        skolem:lemma3083
        [ a r:Fact; r:gives {((0 6 7 7) "=<") list:sort (0 6 7 7)}]
        [ a r:Fact; r:gives {((0 6 7 7) ">=") list:sort (7 7 6 0)}]
        skolem:lemma3084
        skolem:lemma3085
        [ a r:Fact; r:gives {(7760 677) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 677];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 677];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1678 a r:Inference;
    r:gives {
        678 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {678 math:notEqualTo 0}]
        skolem:lemma3086
        [ a r:Fact; r:gives {((0 6 7 8) "=<") list:sort (0 6 7 8)}]
        [ a r:Fact; r:gives {((0 6 7 8) ">=") list:sort (8 7 6 0)}]
        skolem:lemma3087
        skolem:lemma3088
        [ a r:Fact; r:gives {(8760 678) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1679 a r:Inference;
    r:gives {
        679 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {679 math:notEqualTo 0}]
        skolem:lemma3089
        [ a r:Fact; r:gives {((0 6 7 9) "=<") list:sort (0 6 7 9)}]
        [ a r:Fact; r:gives {((0 6 7 9) ">=") list:sort (9 7 6 0)}]
        skolem:lemma3090
        skolem:lemma3091
        [ a r:Fact; r:gives {(9760 679) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1680 a r:Inference;
    r:gives {
        680 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {680 math:notEqualTo 0}]
        skolem:lemma3092
        [ a r:Fact; r:gives {((0 6 8 0) "=<") list:sort (0 0 6 8)}]
        [ a r:Fact; r:gives {((0 6 8 0) ">=") list:sort (8 6 0 0)}]
        skolem:lemma2161
        skolem:lemma2162
        [ a r:Fact; r:gives {(8600 68) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 680];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1681 a r:Inference;
    r:gives {
        681 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {681 math:notEqualTo 0}]
        skolem:lemma3093
        [ a r:Fact; r:gives {((0 6 8 1) "=<") list:sort (0 1 6 8)}]
        [ a r:Fact; r:gives {((0 6 8 1) ">=") list:sort (8 6 1 0)}]
        skolem:lemma2351
        skolem:lemma2352
        [ a r:Fact; r:gives {(8610 168) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 681];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1682 a r:Inference;
    r:gives {
        682 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {682 math:notEqualTo 0}]
        skolem:lemma3094
        [ a r:Fact; r:gives {((0 6 8 2) "=<") list:sort (0 2 6 8)}]
        [ a r:Fact; r:gives {((0 6 8 2) ">=") list:sort (8 6 2 0)}]
        skolem:lemma2523
        skolem:lemma2524
        [ a r:Fact; r:gives {(8620 268) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 682];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1683 a r:Inference;
    r:gives {
        683 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {683 math:notEqualTo 0}]
        skolem:lemma3095
        [ a r:Fact; r:gives {((0 6 8 3) "=<") list:sort (0 3 6 8)}]
        [ a r:Fact; r:gives {((0 6 8 3) ">=") list:sort (8 6 3 0)}]
        skolem:lemma2679
        skolem:lemma2680
        [ a r:Fact; r:gives {(8630 368) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 683];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1684 a r:Inference;
    r:gives {
        684 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {684 math:notEqualTo 0}]
        skolem:lemma3096
        [ a r:Fact; r:gives {((0 6 8 4) "=<") list:sort (0 4 6 8)}]
        [ a r:Fact; r:gives {((0 6 8 4) ">=") list:sort (8 6 4 0)}]
        skolem:lemma2821
        skolem:lemma2822
        [ a r:Fact; r:gives {(8640 468) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 684];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1685 a r:Inference;
    r:gives {
        685 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {685 math:notEqualTo 0}]
        skolem:lemma3097
        [ a r:Fact; r:gives {((0 6 8 5) "=<") list:sort (0 5 6 8)}]
        [ a r:Fact; r:gives {((0 6 8 5) ">=") list:sort (8 6 5 0)}]
        skolem:lemma2951
        skolem:lemma2952
        [ a r:Fact; r:gives {(8650 568) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 685];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1686 a r:Inference;
    r:gives {
        686 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {686 math:notEqualTo 0}]
        skolem:lemma3098
        [ a r:Fact; r:gives {((0 6 8 6) "=<") list:sort (0 6 6 8)}]
        [ a r:Fact; r:gives {((0 6 8 6) ">=") list:sort (8 6 6 0)}]
        skolem:lemma3071
        skolem:lemma3072
        [ a r:Fact; r:gives {(8660 668) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 686];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 668];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1687 a r:Inference;
    r:gives {
        687 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {687 math:notEqualTo 0}]
        skolem:lemma3099
        [ a r:Fact; r:gives {((0 6 8 7) "=<") list:sort (0 6 7 8)}]
        [ a r:Fact; r:gives {((0 6 8 7) ">=") list:sort (8 7 6 0)}]
        skolem:lemma3087
        skolem:lemma3088
        [ a r:Fact; r:gives {(8760 678) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 687];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1688 a r:Inference;
    r:gives {
        688 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {688 math:notEqualTo 0}]
        skolem:lemma3100
        [ a r:Fact; r:gives {((0 6 8 8) "=<") list:sort (0 6 8 8)}]
        [ a r:Fact; r:gives {((0 6 8 8) ">=") list:sort (8 8 6 0)}]
        skolem:lemma3101
        skolem:lemma3102
        [ a r:Fact; r:gives {(8860 688) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 688];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 688];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1689 a r:Inference;
    r:gives {
        689 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {689 math:notEqualTo 0}]
        skolem:lemma3103
        [ a r:Fact; r:gives {((0 6 8 9) "=<") list:sort (0 6 8 9)}]
        [ a r:Fact; r:gives {((0 6 8 9) ">=") list:sort (9 8 6 0)}]
        skolem:lemma3104
        skolem:lemma3105
        [ a r:Fact; r:gives {(9860 689) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1690 a r:Inference;
    r:gives {
        690 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {690 math:notEqualTo 0}]
        skolem:lemma3106
        [ a r:Fact; r:gives {((0 6 9 0) "=<") list:sort (0 0 6 9)}]
        [ a r:Fact; r:gives {((0 6 9 0) ">=") list:sort (9 6 0 0)}]
        skolem:lemma2164
        skolem:lemma2165
        [ a r:Fact; r:gives {(9600 69) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 690];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1691 a r:Inference;
    r:gives {
        691 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {691 math:notEqualTo 0}]
        skolem:lemma3107
        [ a r:Fact; r:gives {((0 6 9 1) "=<") list:sort (0 1 6 9)}]
        [ a r:Fact; r:gives {((0 6 9 1) ">=") list:sort (9 6 1 0)}]
        skolem:lemma2354
        skolem:lemma2355
        [ a r:Fact; r:gives {(9610 169) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 691];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1692 a r:Inference;
    r:gives {
        692 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {692 math:notEqualTo 0}]
        skolem:lemma3108
        [ a r:Fact; r:gives {((0 6 9 2) "=<") list:sort (0 2 6 9)}]
        [ a r:Fact; r:gives {((0 6 9 2) ">=") list:sort (9 6 2 0)}]
        skolem:lemma2526
        skolem:lemma2527
        [ a r:Fact; r:gives {(9620 269) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 692];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1693 a r:Inference;
    r:gives {
        693 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {693 math:notEqualTo 0}]
        skolem:lemma3109
        [ a r:Fact; r:gives {((0 6 9 3) "=<") list:sort (0 3 6 9)}]
        [ a r:Fact; r:gives {((0 6 9 3) ">=") list:sort (9 6 3 0)}]
        skolem:lemma2682
        skolem:lemma2683
        [ a r:Fact; r:gives {(9630 369) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 693];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1694 a r:Inference;
    r:gives {
        694 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {694 math:notEqualTo 0}]
        skolem:lemma3110
        [ a r:Fact; r:gives {((0 6 9 4) "=<") list:sort (0 4 6 9)}]
        [ a r:Fact; r:gives {((0 6 9 4) ">=") list:sort (9 6 4 0)}]
        skolem:lemma2824
        skolem:lemma2825
        [ a r:Fact; r:gives {(9640 469) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 694];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1695 a r:Inference;
    r:gives {
        695 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {695 math:notEqualTo 0}]
        skolem:lemma3111
        [ a r:Fact; r:gives {((0 6 9 5) "=<") list:sort (0 5 6 9)}]
        [ a r:Fact; r:gives {((0 6 9 5) ">=") list:sort (9 6 5 0)}]
        skolem:lemma2954
        skolem:lemma2955
        [ a r:Fact; r:gives {(9650 569) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 695];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1696 a r:Inference;
    r:gives {
        696 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {696 math:notEqualTo 0}]
        skolem:lemma3112
        [ a r:Fact; r:gives {((0 6 9 6) "=<") list:sort (0 6 6 9)}]
        [ a r:Fact; r:gives {((0 6 9 6) ">=") list:sort (9 6 6 0)}]
        skolem:lemma3074
        skolem:lemma3075
        [ a r:Fact; r:gives {(9660 669) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 696];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 669];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1697 a r:Inference;
    r:gives {
        697 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {697 math:notEqualTo 0}]
        skolem:lemma3113
        [ a r:Fact; r:gives {((0 6 9 7) "=<") list:sort (0 6 7 9)}]
        [ a r:Fact; r:gives {((0 6 9 7) ">=") list:sort (9 7 6 0)}]
        skolem:lemma3090
        skolem:lemma3091
        [ a r:Fact; r:gives {(9760 679) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 697];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1698 a r:Inference;
    r:gives {
        698 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {698 math:notEqualTo 0}]
        skolem:lemma3114
        [ a r:Fact; r:gives {((0 6 9 8) "=<") list:sort (0 6 8 9)}]
        [ a r:Fact; r:gives {((0 6 9 8) ">=") list:sort (9 8 6 0)}]
        skolem:lemma3104
        skolem:lemma3105
        [ a r:Fact; r:gives {(9860 689) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 698];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1699 a r:Inference;
    r:gives {
        699 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {699 math:notEqualTo 0}]
        skolem:lemma3115
        [ a r:Fact; r:gives {((0 6 9 9) "=<") list:sort (0 6 9 9)}]
        [ a r:Fact; r:gives {((0 6 9 9) ">=") list:sort (9 9 6 0)}]
        skolem:lemma3116
        skolem:lemma3117
        [ a r:Fact; r:gives {(9960 699) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 699];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 6 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 699];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9960];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1700 a r:Inference;
    r:gives {
        700 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {700 math:notEqualTo 0}]
        skolem:lemma3118
        [ a r:Fact; r:gives {((0 7 0 0) "=<") list:sort (0 0 0 7)}]
        [ a r:Fact; r:gives {((0 7 0 0) ">=") list:sort (7 0 0 0)}]
        skolem:lemma2020
        skolem:lemma2021
        [ a r:Fact; r:gives {(7000 7) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1701 a r:Inference;
    r:gives {
        701 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {701 math:notEqualTo 0}]
        skolem:lemma3119
        [ a r:Fact; r:gives {((0 7 0 1) "=<") list:sort (0 0 1 7)}]
        [ a r:Fact; r:gives {((0 7 0 1) ">=") list:sort (7 1 0 0)}]
        skolem:lemma2048
        skolem:lemma2049
        [ a r:Fact; r:gives {(7100 17) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 701];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1702 a r:Inference;
    r:gives {
        702 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {702 math:notEqualTo 0}]
        skolem:lemma3120
        [ a r:Fact; r:gives {((0 7 0 2) "=<") list:sort (0 0 2 7)}]
        [ a r:Fact; r:gives {((0 7 0 2) ">=") list:sort (7 2 0 0)}]
        skolem:lemma2074
        skolem:lemma2075
        [ a r:Fact; r:gives {(7200 27) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 702];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1703 a r:Inference;
    r:gives {
        703 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {703 math:notEqualTo 0}]
        skolem:lemma3121
        [ a r:Fact; r:gives {((0 7 0 3) "=<") list:sort (0 0 3 7)}]
        [ a r:Fact; r:gives {((0 7 0 3) ">=") list:sort (7 3 0 0)}]
        skolem:lemma2098
        skolem:lemma2099
        [ a r:Fact; r:gives {(7300 37) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 703];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1704 a r:Inference;
    r:gives {
        704 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {704 math:notEqualTo 0}]
        skolem:lemma3122
        [ a r:Fact; r:gives {((0 7 0 4) "=<") list:sort (0 0 4 7)}]
        [ a r:Fact; r:gives {((0 7 0 4) ">=") list:sort (7 4 0 0)}]
        skolem:lemma2120
        skolem:lemma2121
        [ a r:Fact; r:gives {(7400 47) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 704];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1705 a r:Inference;
    r:gives {
        705 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {705 math:notEqualTo 0}]
        skolem:lemma3123
        [ a r:Fact; r:gives {((0 7 0 5) "=<") list:sort (0 0 5 7)}]
        [ a r:Fact; r:gives {((0 7 0 5) ">=") list:sort (7 5 0 0)}]
        skolem:lemma2140
        skolem:lemma2141
        [ a r:Fact; r:gives {(7500 57) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 705];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1706 a r:Inference;
    r:gives {
        706 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {706 math:notEqualTo 0}]
        skolem:lemma3124
        [ a r:Fact; r:gives {((0 7 0 6) "=<") list:sort (0 0 6 7)}]
        [ a r:Fact; r:gives {((0 7 0 6) ">=") list:sort (7 6 0 0)}]
        skolem:lemma2158
        skolem:lemma2159
        [ a r:Fact; r:gives {(7600 67) math:difference 7533}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7533 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7533 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 706];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1707 a r:Inference;
    r:gives {
        707 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {707 math:notEqualTo 0}]
        skolem:lemma3125
        [ a r:Fact; r:gives {((0 7 0 7) "=<") list:sort (0 0 7 7)}]
        [ a r:Fact; r:gives {((0 7 0 7) ">=") list:sort (7 7 0 0)}]
        skolem:lemma2174
        skolem:lemma2175
        [ a r:Fact; r:gives {(7700 77) math:difference 7623}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7623 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7623 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 707];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7623];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1708 a r:Inference;
    r:gives {
        708 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {708 math:notEqualTo 0}]
        skolem:lemma3126
        [ a r:Fact; r:gives {((0 7 0 8) "=<") list:sort (0 0 7 8)}]
        [ a r:Fact; r:gives {((0 7 0 8) ">=") list:sort (8 7 0 0)}]
        skolem:lemma2177
        skolem:lemma2178
        [ a r:Fact; r:gives {(8700 78) math:difference 8622}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8622 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8622 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 708];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1709 a r:Inference;
    r:gives {
        709 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {709 math:notEqualTo 0}]
        skolem:lemma3127
        [ a r:Fact; r:gives {((0 7 0 9) "=<") list:sort (0 0 7 9)}]
        [ a r:Fact; r:gives {((0 7 0 9) ">=") list:sort (9 7 0 0)}]
        skolem:lemma2180
        skolem:lemma2181
        [ a r:Fact; r:gives {(9700 79) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 709];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1710 a r:Inference;
    r:gives {
        710 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {710 math:notEqualTo 0}]
        skolem:lemma3128
        [ a r:Fact; r:gives {((0 7 1 0) "=<") list:sort (0 0 1 7)}]
        [ a r:Fact; r:gives {((0 7 1 0) ">=") list:sort (7 1 0 0)}]
        skolem:lemma2048
        skolem:lemma2049
        [ a r:Fact; r:gives {(7100 17) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1711 a r:Inference;
    r:gives {
        711 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {711 math:notEqualTo 0}]
        skolem:lemma3129
        [ a r:Fact; r:gives {((0 7 1 1) "=<") list:sort (0 1 1 7)}]
        [ a r:Fact; r:gives {((0 7 1 1) ">=") list:sort (7 1 1 0)}]
        skolem:lemma2238
        skolem:lemma2239
        [ a r:Fact; r:gives {(7110 117) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1712 a r:Inference;
    r:gives {
        712 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {712 math:notEqualTo 0}]
        skolem:lemma3130
        [ a r:Fact; r:gives {((0 7 1 2) "=<") list:sort (0 1 2 7)}]
        [ a r:Fact; r:gives {((0 7 1 2) ">=") list:sort (7 2 1 0)}]
        skolem:lemma2264
        skolem:lemma2265
        [ a r:Fact; r:gives {(7210 127) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 712];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1713 a r:Inference;
    r:gives {
        713 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {713 math:notEqualTo 0}]
        skolem:lemma3131
        [ a r:Fact; r:gives {((0 7 1 3) "=<") list:sort (0 1 3 7)}]
        [ a r:Fact; r:gives {((0 7 1 3) ">=") list:sort (7 3 1 0)}]
        skolem:lemma2288
        skolem:lemma2289
        [ a r:Fact; r:gives {(7310 137) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 713];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1714 a r:Inference;
    r:gives {
        714 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {714 math:notEqualTo 0}]
        skolem:lemma3132
        [ a r:Fact; r:gives {((0 7 1 4) "=<") list:sort (0 1 4 7)}]
        [ a r:Fact; r:gives {((0 7 1 4) ">=") list:sort (7 4 1 0)}]
        skolem:lemma2310
        skolem:lemma2311
        [ a r:Fact; r:gives {(7410 147) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 714];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1715 a r:Inference;
    r:gives {
        715 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {715 math:notEqualTo 0}]
        skolem:lemma3133
        [ a r:Fact; r:gives {((0 7 1 5) "=<") list:sort (0 1 5 7)}]
        [ a r:Fact; r:gives {((0 7 1 5) ">=") list:sort (7 5 1 0)}]
        skolem:lemma2330
        skolem:lemma2331
        [ a r:Fact; r:gives {(7510 157) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 715];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1716 a r:Inference;
    r:gives {
        716 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {716 math:notEqualTo 0}]
        skolem:lemma3134
        [ a r:Fact; r:gives {((0 7 1 6) "=<") list:sort (0 1 6 7)}]
        [ a r:Fact; r:gives {((0 7 1 6) ">=") list:sort (7 6 1 0)}]
        skolem:lemma2348
        skolem:lemma2349
        [ a r:Fact; r:gives {(7610 167) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 716];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1717 a r:Inference;
    r:gives {
        717 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {717 math:notEqualTo 0}]
        skolem:lemma3135
        [ a r:Fact; r:gives {((0 7 1 7) "=<") list:sort (0 1 7 7)}]
        [ a r:Fact; r:gives {((0 7 1 7) ">=") list:sort (7 7 1 0)}]
        skolem:lemma2364
        skolem:lemma2365
        [ a r:Fact; r:gives {(7710 177) math:difference 7533}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7533 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7533 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 717];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1718 a r:Inference;
    r:gives {
        718 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {718 math:notEqualTo 0}]
        skolem:lemma3136
        [ a r:Fact; r:gives {((0 7 1 8) "=<") list:sort (0 1 7 8)}]
        [ a r:Fact; r:gives {((0 7 1 8) ">=") list:sort (8 7 1 0)}]
        skolem:lemma2367
        skolem:lemma2368
        [ a r:Fact; r:gives {(8710 178) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 718];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1719 a r:Inference;
    r:gives {
        719 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {719 math:notEqualTo 0}]
        skolem:lemma3137
        [ a r:Fact; r:gives {((0 7 1 9) "=<") list:sort (0 1 7 9)}]
        [ a r:Fact; r:gives {((0 7 1 9) ">=") list:sort (9 7 1 0)}]
        skolem:lemma2370
        skolem:lemma2371
        [ a r:Fact; r:gives {(9710 179) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 719];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1720 a r:Inference;
    r:gives {
        720 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {720 math:notEqualTo 0}]
        skolem:lemma3138
        [ a r:Fact; r:gives {((0 7 2 0) "=<") list:sort (0 0 2 7)}]
        [ a r:Fact; r:gives {((0 7 2 0) ">=") list:sort (7 2 0 0)}]
        skolem:lemma2074
        skolem:lemma2075
        [ a r:Fact; r:gives {(7200 27) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1721 a r:Inference;
    r:gives {
        721 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {721 math:notEqualTo 0}]
        skolem:lemma3139
        [ a r:Fact; r:gives {((0 7 2 1) "=<") list:sort (0 1 2 7)}]
        [ a r:Fact; r:gives {((0 7 2 1) ">=") list:sort (7 2 1 0)}]
        skolem:lemma2264
        skolem:lemma2265
        [ a r:Fact; r:gives {(7210 127) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 721];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1722 a r:Inference;
    r:gives {
        722 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {722 math:notEqualTo 0}]
        skolem:lemma3140
        [ a r:Fact; r:gives {((0 7 2 2) "=<") list:sort (0 2 2 7)}]
        [ a r:Fact; r:gives {((0 7 2 2) ">=") list:sort (7 2 2 0)}]
        skolem:lemma2436
        skolem:lemma2437
        [ a r:Fact; r:gives {(7220 227) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 722];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 227];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1723 a r:Inference;
    r:gives {
        723 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {723 math:notEqualTo 0}]
        skolem:lemma3141
        [ a r:Fact; r:gives {((0 7 2 3) "=<") list:sort (0 2 3 7)}]
        [ a r:Fact; r:gives {((0 7 2 3) ">=") list:sort (7 3 2 0)}]
        skolem:lemma2460
        skolem:lemma2461
        [ a r:Fact; r:gives {(7320 237) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 723];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1724 a r:Inference;
    r:gives {
        724 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {724 math:notEqualTo 0}]
        skolem:lemma3142
        [ a r:Fact; r:gives {((0 7 2 4) "=<") list:sort (0 2 4 7)}]
        [ a r:Fact; r:gives {((0 7 2 4) ">=") list:sort (7 4 2 0)}]
        skolem:lemma2482
        skolem:lemma2483
        [ a r:Fact; r:gives {(7420 247) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 724];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1725 a r:Inference;
    r:gives {
        725 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {725 math:notEqualTo 0}]
        skolem:lemma3143
        [ a r:Fact; r:gives {((0 7 2 5) "=<") list:sort (0 2 5 7)}]
        [ a r:Fact; r:gives {((0 7 2 5) ">=") list:sort (7 5 2 0)}]
        skolem:lemma2502
        skolem:lemma2503
        [ a r:Fact; r:gives {(7520 257) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 725];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1726 a r:Inference;
    r:gives {
        726 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {726 math:notEqualTo 0}]
        skolem:lemma3144
        [ a r:Fact; r:gives {((0 7 2 6) "=<") list:sort (0 2 6 7)}]
        [ a r:Fact; r:gives {((0 7 2 6) ">=") list:sort (7 6 2 0)}]
        skolem:lemma2520
        skolem:lemma2521
        [ a r:Fact; r:gives {(7620 267) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 726];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1727 a r:Inference;
    r:gives {
        727 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {727 math:notEqualTo 0}]
        skolem:lemma3145
        [ a r:Fact; r:gives {((0 7 2 7) "=<") list:sort (0 2 7 7)}]
        [ a r:Fact; r:gives {((0 7 2 7) ">=") list:sort (7 7 2 0)}]
        skolem:lemma2536
        skolem:lemma2537
        [ a r:Fact; r:gives {(7720 277) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 727];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 277];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1728 a r:Inference;
    r:gives {
        728 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {728 math:notEqualTo 0}]
        skolem:lemma3146
        [ a r:Fact; r:gives {((0 7 2 8) "=<") list:sort (0 2 7 8)}]
        [ a r:Fact; r:gives {((0 7 2 8) ">=") list:sort (8 7 2 0)}]
        skolem:lemma2539
        skolem:lemma2540
        [ a r:Fact; r:gives {(8720 278) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 728];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1729 a r:Inference;
    r:gives {
        729 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {729 math:notEqualTo 0}]
        skolem:lemma3147
        [ a r:Fact; r:gives {((0 7 2 9) "=<") list:sort (0 2 7 9)}]
        [ a r:Fact; r:gives {((0 7 2 9) ">=") list:sort (9 7 2 0)}]
        skolem:lemma2542
        skolem:lemma2543
        [ a r:Fact; r:gives {(9720 279) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 729];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1730 a r:Inference;
    r:gives {
        730 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {730 math:notEqualTo 0}]
        skolem:lemma3148
        [ a r:Fact; r:gives {((0 7 3 0) "=<") list:sort (0 0 3 7)}]
        [ a r:Fact; r:gives {((0 7 3 0) ">=") list:sort (7 3 0 0)}]
        skolem:lemma2098
        skolem:lemma2099
        [ a r:Fact; r:gives {(7300 37) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1731 a r:Inference;
    r:gives {
        731 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {731 math:notEqualTo 0}]
        skolem:lemma3149
        [ a r:Fact; r:gives {((0 7 3 1) "=<") list:sort (0 1 3 7)}]
        [ a r:Fact; r:gives {((0 7 3 1) ">=") list:sort (7 3 1 0)}]
        skolem:lemma2288
        skolem:lemma2289
        [ a r:Fact; r:gives {(7310 137) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 731];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1732 a r:Inference;
    r:gives {
        732 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {732 math:notEqualTo 0}]
        skolem:lemma3150
        [ a r:Fact; r:gives {((0 7 3 2) "=<") list:sort (0 2 3 7)}]
        [ a r:Fact; r:gives {((0 7 3 2) ">=") list:sort (7 3 2 0)}]
        skolem:lemma2460
        skolem:lemma2461
        [ a r:Fact; r:gives {(7320 237) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 732];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1733 a r:Inference;
    r:gives {
        733 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {733 math:notEqualTo 0}]
        skolem:lemma3151
        [ a r:Fact; r:gives {((0 7 3 3) "=<") list:sort (0 3 3 7)}]
        [ a r:Fact; r:gives {((0 7 3 3) ">=") list:sort (7 3 3 0)}]
        skolem:lemma2616
        skolem:lemma2617
        [ a r:Fact; r:gives {(7330 337) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 733];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 337];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1734 a r:Inference;
    r:gives {
        734 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {734 math:notEqualTo 0}]
        skolem:lemma3152
        [ a r:Fact; r:gives {((0 7 3 4) "=<") list:sort (0 3 4 7)}]
        [ a r:Fact; r:gives {((0 7 3 4) ">=") list:sort (7 4 3 0)}]
        skolem:lemma2638
        skolem:lemma2639
        [ a r:Fact; r:gives {(7430 347) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 734];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1735 a r:Inference;
    r:gives {
        735 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {735 math:notEqualTo 0}]
        skolem:lemma3153
        [ a r:Fact; r:gives {((0 7 3 5) "=<") list:sort (0 3 5 7)}]
        [ a r:Fact; r:gives {((0 7 3 5) ">=") list:sort (7 5 3 0)}]
        skolem:lemma2658
        skolem:lemma2659
        [ a r:Fact; r:gives {(7530 357) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 735];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1736 a r:Inference;
    r:gives {
        736 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {736 math:notEqualTo 0}]
        skolem:lemma3154
        [ a r:Fact; r:gives {((0 7 3 6) "=<") list:sort (0 3 6 7)}]
        [ a r:Fact; r:gives {((0 7 3 6) ">=") list:sort (7 6 3 0)}]
        skolem:lemma2676
        skolem:lemma2677
        [ a r:Fact; r:gives {(7630 367) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 736];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1737 a r:Inference;
    r:gives {
        737 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {737 math:notEqualTo 0}]
        skolem:lemma3155
        [ a r:Fact; r:gives {((0 7 3 7) "=<") list:sort (0 3 7 7)}]
        [ a r:Fact; r:gives {((0 7 3 7) ">=") list:sort (7 7 3 0)}]
        skolem:lemma2692
        skolem:lemma2693
        [ a r:Fact; r:gives {(7730 377) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 737];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 377];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1738 a r:Inference;
    r:gives {
        738 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {738 math:notEqualTo 0}]
        skolem:lemma3156
        [ a r:Fact; r:gives {((0 7 3 8) "=<") list:sort (0 3 7 8)}]
        [ a r:Fact; r:gives {((0 7 3 8) ">=") list:sort (8 7 3 0)}]
        skolem:lemma2695
        skolem:lemma2696
        [ a r:Fact; r:gives {(8730 378) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 738];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1739 a r:Inference;
    r:gives {
        739 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {739 math:notEqualTo 0}]
        skolem:lemma3157
        [ a r:Fact; r:gives {((0 7 3 9) "=<") list:sort (0 3 7 9)}]
        [ a r:Fact; r:gives {((0 7 3 9) ">=") list:sort (9 7 3 0)}]
        skolem:lemma2698
        skolem:lemma2699
        [ a r:Fact; r:gives {(9730 379) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 739];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1740 a r:Inference;
    r:gives {
        740 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {740 math:notEqualTo 0}]
        skolem:lemma3158
        [ a r:Fact; r:gives {((0 7 4 0) "=<") list:sort (0 0 4 7)}]
        [ a r:Fact; r:gives {((0 7 4 0) ">=") list:sort (7 4 0 0)}]
        skolem:lemma2120
        skolem:lemma2121
        [ a r:Fact; r:gives {(7400 47) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1741 a r:Inference;
    r:gives {
        741 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {741 math:notEqualTo 0}]
        skolem:lemma3159
        [ a r:Fact; r:gives {((0 7 4 1) "=<") list:sort (0 1 4 7)}]
        [ a r:Fact; r:gives {((0 7 4 1) ">=") list:sort (7 4 1 0)}]
        skolem:lemma2310
        skolem:lemma2311
        [ a r:Fact; r:gives {(7410 147) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 741];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1742 a r:Inference;
    r:gives {
        742 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {742 math:notEqualTo 0}]
        skolem:lemma3160
        [ a r:Fact; r:gives {((0 7 4 2) "=<") list:sort (0 2 4 7)}]
        [ a r:Fact; r:gives {((0 7 4 2) ">=") list:sort (7 4 2 0)}]
        skolem:lemma2482
        skolem:lemma2483
        [ a r:Fact; r:gives {(7420 247) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 742];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1743 a r:Inference;
    r:gives {
        743 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {743 math:notEqualTo 0}]
        skolem:lemma3161
        [ a r:Fact; r:gives {((0 7 4 3) "=<") list:sort (0 3 4 7)}]
        [ a r:Fact; r:gives {((0 7 4 3) ">=") list:sort (7 4 3 0)}]
        skolem:lemma2638
        skolem:lemma2639
        [ a r:Fact; r:gives {(7430 347) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 743];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1744 a r:Inference;
    r:gives {
        744 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {744 math:notEqualTo 0}]
        skolem:lemma3162
        [ a r:Fact; r:gives {((0 7 4 4) "=<") list:sort (0 4 4 7)}]
        [ a r:Fact; r:gives {((0 7 4 4) ">=") list:sort (7 4 4 0)}]
        skolem:lemma2780
        skolem:lemma2781
        [ a r:Fact; r:gives {(7440 447) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 744];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 447];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1745 a r:Inference;
    r:gives {
        745 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {745 math:notEqualTo 0}]
        skolem:lemma3163
        [ a r:Fact; r:gives {((0 7 4 5) "=<") list:sort (0 4 5 7)}]
        [ a r:Fact; r:gives {((0 7 4 5) ">=") list:sort (7 5 4 0)}]
        skolem:lemma2800
        skolem:lemma2801
        [ a r:Fact; r:gives {(7540 457) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 745];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1746 a r:Inference;
    r:gives {
        746 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {746 math:notEqualTo 0}]
        skolem:lemma3164
        [ a r:Fact; r:gives {((0 7 4 6) "=<") list:sort (0 4 6 7)}]
        [ a r:Fact; r:gives {((0 7 4 6) ">=") list:sort (7 6 4 0)}]
        skolem:lemma2818
        skolem:lemma2819
        [ a r:Fact; r:gives {(7640 467) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 746];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1747 a r:Inference;
    r:gives {
        747 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {747 math:notEqualTo 0}]
        skolem:lemma3165
        [ a r:Fact; r:gives {((0 7 4 7) "=<") list:sort (0 4 7 7)}]
        [ a r:Fact; r:gives {((0 7 4 7) ">=") list:sort (7 7 4 0)}]
        skolem:lemma2834
        skolem:lemma2835
        [ a r:Fact; r:gives {(7740 477) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 747];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 477];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1748 a r:Inference;
    r:gives {
        748 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {748 math:notEqualTo 0}]
        skolem:lemma3166
        [ a r:Fact; r:gives {((0 7 4 8) "=<") list:sort (0 4 7 8)}]
        [ a r:Fact; r:gives {((0 7 4 8) ">=") list:sort (8 7 4 0)}]
        skolem:lemma2837
        skolem:lemma2838
        [ a r:Fact; r:gives {(8740 478) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 748];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1749 a r:Inference;
    r:gives {
        749 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {749 math:notEqualTo 0}]
        skolem:lemma3167
        [ a r:Fact; r:gives {((0 7 4 9) "=<") list:sort (0 4 7 9)}]
        [ a r:Fact; r:gives {((0 7 4 9) ">=") list:sort (9 7 4 0)}]
        skolem:lemma2840
        skolem:lemma2841
        [ a r:Fact; r:gives {(9740 479) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 749];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1750 a r:Inference;
    r:gives {
        750 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {750 math:notEqualTo 0}]
        skolem:lemma3168
        [ a r:Fact; r:gives {((0 7 5 0) "=<") list:sort (0 0 5 7)}]
        [ a r:Fact; r:gives {((0 7 5 0) ">=") list:sort (7 5 0 0)}]
        skolem:lemma2140
        skolem:lemma2141
        [ a r:Fact; r:gives {(7500 57) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1751 a r:Inference;
    r:gives {
        751 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {751 math:notEqualTo 0}]
        skolem:lemma3169
        [ a r:Fact; r:gives {((0 7 5 1) "=<") list:sort (0 1 5 7)}]
        [ a r:Fact; r:gives {((0 7 5 1) ">=") list:sort (7 5 1 0)}]
        skolem:lemma2330
        skolem:lemma2331
        [ a r:Fact; r:gives {(7510 157) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 751];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1752 a r:Inference;
    r:gives {
        752 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {752 math:notEqualTo 0}]
        skolem:lemma3170
        [ a r:Fact; r:gives {((0 7 5 2) "=<") list:sort (0 2 5 7)}]
        [ a r:Fact; r:gives {((0 7 5 2) ">=") list:sort (7 5 2 0)}]
        skolem:lemma2502
        skolem:lemma2503
        [ a r:Fact; r:gives {(7520 257) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 752];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1753 a r:Inference;
    r:gives {
        753 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {753 math:notEqualTo 0}]
        skolem:lemma3171
        [ a r:Fact; r:gives {((0 7 5 3) "=<") list:sort (0 3 5 7)}]
        [ a r:Fact; r:gives {((0 7 5 3) ">=") list:sort (7 5 3 0)}]
        skolem:lemma2658
        skolem:lemma2659
        [ a r:Fact; r:gives {(7530 357) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 753];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1754 a r:Inference;
    r:gives {
        754 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {754 math:notEqualTo 0}]
        skolem:lemma3172
        [ a r:Fact; r:gives {((0 7 5 4) "=<") list:sort (0 4 5 7)}]
        [ a r:Fact; r:gives {((0 7 5 4) ">=") list:sort (7 5 4 0)}]
        skolem:lemma2800
        skolem:lemma2801
        [ a r:Fact; r:gives {(7540 457) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 754];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1755 a r:Inference;
    r:gives {
        755 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {755 math:notEqualTo 0}]
        skolem:lemma3173
        [ a r:Fact; r:gives {((0 7 5 5) "=<") list:sort (0 5 5 7)}]
        [ a r:Fact; r:gives {((0 7 5 5) ">=") list:sort (7 5 5 0)}]
        skolem:lemma2930
        skolem:lemma2931
        [ a r:Fact; r:gives {(7550 557) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 755];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 557];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1756 a r:Inference;
    r:gives {
        756 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {756 math:notEqualTo 0}]
        skolem:lemma3174
        [ a r:Fact; r:gives {((0 7 5 6) "=<") list:sort (0 5 6 7)}]
        [ a r:Fact; r:gives {((0 7 5 6) ">=") list:sort (7 6 5 0)}]
        skolem:lemma2948
        skolem:lemma2949
        [ a r:Fact; r:gives {(7650 567) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 756];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1757 a r:Inference;
    r:gives {
        757 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {757 math:notEqualTo 0}]
        skolem:lemma3175
        [ a r:Fact; r:gives {((0 7 5 7) "=<") list:sort (0 5 7 7)}]
        [ a r:Fact; r:gives {((0 7 5 7) ">=") list:sort (7 7 5 0)}]
        skolem:lemma2964
        skolem:lemma2965
        [ a r:Fact; r:gives {(7750 577) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 757];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 577];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1758 a r:Inference;
    r:gives {
        758 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {758 math:notEqualTo 0}]
        skolem:lemma3176
        [ a r:Fact; r:gives {((0 7 5 8) "=<") list:sort (0 5 7 8)}]
        [ a r:Fact; r:gives {((0 7 5 8) ">=") list:sort (8 7 5 0)}]
        skolem:lemma2967
        skolem:lemma2968
        [ a r:Fact; r:gives {(8750 578) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 758];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1759 a r:Inference;
    r:gives {
        759 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {759 math:notEqualTo 0}]
        skolem:lemma3177
        [ a r:Fact; r:gives {((0 7 5 9) "=<") list:sort (0 5 7 9)}]
        [ a r:Fact; r:gives {((0 7 5 9) ">=") list:sort (9 7 5 0)}]
        skolem:lemma2970
        skolem:lemma2971
        [ a r:Fact; r:gives {(9750 579) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 759];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1760 a r:Inference;
    r:gives {
        760 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {760 math:notEqualTo 0}]
        skolem:lemma3178
        [ a r:Fact; r:gives {((0 7 6 0) "=<") list:sort (0 0 6 7)}]
        [ a r:Fact; r:gives {((0 7 6 0) ">=") list:sort (7 6 0 0)}]
        skolem:lemma2158
        skolem:lemma2159
        [ a r:Fact; r:gives {(7600 67) math:difference 7533}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7533 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7533 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1761 a r:Inference;
    r:gives {
        761 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {761 math:notEqualTo 0}]
        skolem:lemma3179
        [ a r:Fact; r:gives {((0 7 6 1) "=<") list:sort (0 1 6 7)}]
        [ a r:Fact; r:gives {((0 7 6 1) ">=") list:sort (7 6 1 0)}]
        skolem:lemma2348
        skolem:lemma2349
        [ a r:Fact; r:gives {(7610 167) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 761];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1762 a r:Inference;
    r:gives {
        762 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {762 math:notEqualTo 0}]
        skolem:lemma3180
        [ a r:Fact; r:gives {((0 7 6 2) "=<") list:sort (0 2 6 7)}]
        [ a r:Fact; r:gives {((0 7 6 2) ">=") list:sort (7 6 2 0)}]
        skolem:lemma2520
        skolem:lemma2521
        [ a r:Fact; r:gives {(7620 267) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 762];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1763 a r:Inference;
    r:gives {
        763 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {763 math:notEqualTo 0}]
        skolem:lemma3181
        [ a r:Fact; r:gives {((0 7 6 3) "=<") list:sort (0 3 6 7)}]
        [ a r:Fact; r:gives {((0 7 6 3) ">=") list:sort (7 6 3 0)}]
        skolem:lemma2676
        skolem:lemma2677
        [ a r:Fact; r:gives {(7630 367) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 763];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1764 a r:Inference;
    r:gives {
        764 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {764 math:notEqualTo 0}]
        skolem:lemma3182
        [ a r:Fact; r:gives {((0 7 6 4) "=<") list:sort (0 4 6 7)}]
        [ a r:Fact; r:gives {((0 7 6 4) ">=") list:sort (7 6 4 0)}]
        skolem:lemma2818
        skolem:lemma2819
        [ a r:Fact; r:gives {(7640 467) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 764];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1765 a r:Inference;
    r:gives {
        765 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {765 math:notEqualTo 0}]
        skolem:lemma3183
        [ a r:Fact; r:gives {((0 7 6 5) "=<") list:sort (0 5 6 7)}]
        [ a r:Fact; r:gives {((0 7 6 5) ">=") list:sort (7 6 5 0)}]
        skolem:lemma2948
        skolem:lemma2949
        [ a r:Fact; r:gives {(7650 567) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 765];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1766 a r:Inference;
    r:gives {
        766 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {766 math:notEqualTo 0}]
        skolem:lemma3184
        [ a r:Fact; r:gives {((0 7 6 6) "=<") list:sort (0 6 6 7)}]
        [ a r:Fact; r:gives {((0 7 6 6) ">=") list:sort (7 6 6 0)}]
        skolem:lemma3068
        skolem:lemma3069
        [ a r:Fact; r:gives {(7660 667) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 766];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 667];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1767 a r:Inference;
    r:gives {
        767 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {767 math:notEqualTo 0}]
        skolem:lemma3185
        [ a r:Fact; r:gives {((0 7 6 7) "=<") list:sort (0 6 7 7)}]
        [ a r:Fact; r:gives {((0 7 6 7) ">=") list:sort (7 7 6 0)}]
        skolem:lemma3084
        skolem:lemma3085
        [ a r:Fact; r:gives {(7760 677) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 767];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 677];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1768 a r:Inference;
    r:gives {
        768 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {768 math:notEqualTo 0}]
        skolem:lemma3186
        [ a r:Fact; r:gives {((0 7 6 8) "=<") list:sort (0 6 7 8)}]
        [ a r:Fact; r:gives {((0 7 6 8) ">=") list:sort (8 7 6 0)}]
        skolem:lemma3087
        skolem:lemma3088
        [ a r:Fact; r:gives {(8760 678) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 768];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1769 a r:Inference;
    r:gives {
        769 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {769 math:notEqualTo 0}]
        skolem:lemma3187
        [ a r:Fact; r:gives {((0 7 6 9) "=<") list:sort (0 6 7 9)}]
        [ a r:Fact; r:gives {((0 7 6 9) ">=") list:sort (9 7 6 0)}]
        skolem:lemma3090
        skolem:lemma3091
        [ a r:Fact; r:gives {(9760 679) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 769];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1770 a r:Inference;
    r:gives {
        770 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {770 math:notEqualTo 0}]
        skolem:lemma3188
        [ a r:Fact; r:gives {((0 7 7 0) "=<") list:sort (0 0 7 7)}]
        [ a r:Fact; r:gives {((0 7 7 0) ">=") list:sort (7 7 0 0)}]
        skolem:lemma2174
        skolem:lemma2175
        [ a r:Fact; r:gives {(7700 77) math:difference 7623}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7623 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7623 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7623];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1771 a r:Inference;
    r:gives {
        771 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {771 math:notEqualTo 0}]
        skolem:lemma3189
        [ a r:Fact; r:gives {((0 7 7 1) "=<") list:sort (0 1 7 7)}]
        [ a r:Fact; r:gives {((0 7 7 1) ">=") list:sort (7 7 1 0)}]
        skolem:lemma2364
        skolem:lemma2365
        [ a r:Fact; r:gives {(7710 177) math:difference 7533}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7533 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7533 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 771];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1772 a r:Inference;
    r:gives {
        772 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {772 math:notEqualTo 0}]
        skolem:lemma3190
        [ a r:Fact; r:gives {((0 7 7 2) "=<") list:sort (0 2 7 7)}]
        [ a r:Fact; r:gives {((0 7 7 2) ">=") list:sort (7 7 2 0)}]
        skolem:lemma2536
        skolem:lemma2537
        [ a r:Fact; r:gives {(7720 277) math:difference 7443}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7443 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7443 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 772];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 277];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1773 a r:Inference;
    r:gives {
        773 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {773 math:notEqualTo 0}]
        skolem:lemma3191
        [ a r:Fact; r:gives {((0 7 7 3) "=<") list:sort (0 3 7 7)}]
        [ a r:Fact; r:gives {((0 7 7 3) ">=") list:sort (7 7 3 0)}]
        skolem:lemma2692
        skolem:lemma2693
        [ a r:Fact; r:gives {(7730 377) math:difference 7353}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7353 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7353 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 773];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 377];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1774 a r:Inference;
    r:gives {
        774 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {774 math:notEqualTo 0}]
        skolem:lemma3192
        [ a r:Fact; r:gives {((0 7 7 4) "=<") list:sort (0 4 7 7)}]
        [ a r:Fact; r:gives {((0 7 7 4) ">=") list:sort (7 7 4 0)}]
        skolem:lemma2834
        skolem:lemma2835
        [ a r:Fact; r:gives {(7740 477) math:difference 7263}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7263 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7263 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 774];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 477];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1775 a r:Inference;
    r:gives {
        775 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {775 math:notEqualTo 0}]
        skolem:lemma3193
        [ a r:Fact; r:gives {((0 7 7 5) "=<") list:sort (0 5 7 7)}]
        [ a r:Fact; r:gives {((0 7 7 5) ">=") list:sort (7 7 5 0)}]
        skolem:lemma2964
        skolem:lemma2965
        [ a r:Fact; r:gives {(7750 577) math:difference 7173}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7173 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            7173 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 775];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 577];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1776 a r:Inference;
    r:gives {
        776 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {776 math:notEqualTo 0}]
        skolem:lemma3194
        [ a r:Fact; r:gives {((0 7 7 6) "=<") list:sort (0 6 7 7)}]
        [ a r:Fact; r:gives {((0 7 7 6) ">=") list:sort (7 7 6 0)}]
        skolem:lemma3084
        skolem:lemma3085
        [ a r:Fact; r:gives {(7760 677) math:difference 7083}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7083 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            7083 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 776];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 677];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7083];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1777 a r:Inference;
    r:gives {
        777 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {777 math:notEqualTo 0}]
        skolem:lemma3195
        [ a r:Fact; r:gives {((0 7 7 7) "=<") list:sort (0 7 7 7)}]
        [ a r:Fact; r:gives {((0 7 7 7) ">=") list:sort (7 7 7 0)}]
        skolem:lemma3196
        skolem:lemma3197
        [ a r:Fact; r:gives {(7770 777) math:difference 6993}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            6993 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            6993 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 777];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 7 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 777];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1778 a r:Inference;
    r:gives {
        778 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {778 math:notEqualTo 0}]
        skolem:lemma3198
        [ a r:Fact; r:gives {((0 7 7 8) "=<") list:sort (0 7 7 8)}]
        [ a r:Fact; r:gives {((0 7 7 8) ">=") list:sort (8 7 7 0)}]
        skolem:lemma3199
        skolem:lemma3200
        [ a r:Fact; r:gives {(8770 778) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 778];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 778];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1779 a r:Inference;
    r:gives {
        779 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {779 math:notEqualTo 0}]
        skolem:lemma3201
        [ a r:Fact; r:gives {((0 7 7 9) "=<") list:sort (0 7 7 9)}]
        [ a r:Fact; r:gives {((0 7 7 9) ">=") list:sort (9 7 7 0)}]
        skolem:lemma3202
        skolem:lemma3203
        [ a r:Fact; r:gives {(9770 779) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 779];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 779];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1780 a r:Inference;
    r:gives {
        780 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {780 math:notEqualTo 0}]
        skolem:lemma3204
        [ a r:Fact; r:gives {((0 7 8 0) "=<") list:sort (0 0 7 8)}]
        [ a r:Fact; r:gives {((0 7 8 0) ">=") list:sort (8 7 0 0)}]
        skolem:lemma2177
        skolem:lemma2178
        [ a r:Fact; r:gives {(8700 78) math:difference 8622}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8622 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8622 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 780];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1781 a r:Inference;
    r:gives {
        781 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {781 math:notEqualTo 0}]
        skolem:lemma3205
        [ a r:Fact; r:gives {((0 7 8 1) "=<") list:sort (0 1 7 8)}]
        [ a r:Fact; r:gives {((0 7 8 1) ">=") list:sort (8 7 1 0)}]
        skolem:lemma2367
        skolem:lemma2368
        [ a r:Fact; r:gives {(8710 178) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 781];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1782 a r:Inference;
    r:gives {
        782 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {782 math:notEqualTo 0}]
        skolem:lemma3206
        [ a r:Fact; r:gives {((0 7 8 2) "=<") list:sort (0 2 7 8)}]
        [ a r:Fact; r:gives {((0 7 8 2) ">=") list:sort (8 7 2 0)}]
        skolem:lemma2539
        skolem:lemma2540
        [ a r:Fact; r:gives {(8720 278) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 782];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1783 a r:Inference;
    r:gives {
        783 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {783 math:notEqualTo 0}]
        skolem:lemma3207
        [ a r:Fact; r:gives {((0 7 8 3) "=<") list:sort (0 3 7 8)}]
        [ a r:Fact; r:gives {((0 7 8 3) ">=") list:sort (8 7 3 0)}]
        skolem:lemma2695
        skolem:lemma2696
        [ a r:Fact; r:gives {(8730 378) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 783];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1784 a r:Inference;
    r:gives {
        784 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {784 math:notEqualTo 0}]
        skolem:lemma3208
        [ a r:Fact; r:gives {((0 7 8 4) "=<") list:sort (0 4 7 8)}]
        [ a r:Fact; r:gives {((0 7 8 4) ">=") list:sort (8 7 4 0)}]
        skolem:lemma2837
        skolem:lemma2838
        [ a r:Fact; r:gives {(8740 478) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 784];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1785 a r:Inference;
    r:gives {
        785 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {785 math:notEqualTo 0}]
        skolem:lemma3209
        [ a r:Fact; r:gives {((0 7 8 5) "=<") list:sort (0 5 7 8)}]
        [ a r:Fact; r:gives {((0 7 8 5) ">=") list:sort (8 7 5 0)}]
        skolem:lemma2967
        skolem:lemma2968
        [ a r:Fact; r:gives {(8750 578) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 785];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1786 a r:Inference;
    r:gives {
        786 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {786 math:notEqualTo 0}]
        skolem:lemma3210
        [ a r:Fact; r:gives {((0 7 8 6) "=<") list:sort (0 6 7 8)}]
        [ a r:Fact; r:gives {((0 7 8 6) ">=") list:sort (8 7 6 0)}]
        skolem:lemma3087
        skolem:lemma3088
        [ a r:Fact; r:gives {(8760 678) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 786];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1787 a r:Inference;
    r:gives {
        787 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {787 math:notEqualTo 0}]
        skolem:lemma3211
        [ a r:Fact; r:gives {((0 7 8 7) "=<") list:sort (0 7 7 8)}]
        [ a r:Fact; r:gives {((0 7 8 7) ">=") list:sort (8 7 7 0)}]
        skolem:lemma3199
        skolem:lemma3200
        [ a r:Fact; r:gives {(8770 778) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 787];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 778];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1788 a r:Inference;
    r:gives {
        788 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {788 math:notEqualTo 0}]
        skolem:lemma3212
        [ a r:Fact; r:gives {((0 7 8 8) "=<") list:sort (0 7 8 8)}]
        [ a r:Fact; r:gives {((0 7 8 8) ">=") list:sort (8 8 7 0)}]
        skolem:lemma3213
        skolem:lemma3214
        [ a r:Fact; r:gives {(8870 788) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 788];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 788];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1789 a r:Inference;
    r:gives {
        789 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {789 math:notEqualTo 0}]
        skolem:lemma3215
        [ a r:Fact; r:gives {((0 7 8 9) "=<") list:sort (0 7 8 9)}]
        [ a r:Fact; r:gives {((0 7 8 9) ">=") list:sort (9 8 7 0)}]
        skolem:lemma3216
        skolem:lemma3217
        [ a r:Fact; r:gives {(9870 789) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1790 a r:Inference;
    r:gives {
        790 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {790 math:notEqualTo 0}]
        skolem:lemma3218
        [ a r:Fact; r:gives {((0 7 9 0) "=<") list:sort (0 0 7 9)}]
        [ a r:Fact; r:gives {((0 7 9 0) ">=") list:sort (9 7 0 0)}]
        skolem:lemma2180
        skolem:lemma2181
        [ a r:Fact; r:gives {(9700 79) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 790];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1791 a r:Inference;
    r:gives {
        791 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {791 math:notEqualTo 0}]
        skolem:lemma3219
        [ a r:Fact; r:gives {((0 7 9 1) "=<") list:sort (0 1 7 9)}]
        [ a r:Fact; r:gives {((0 7 9 1) ">=") list:sort (9 7 1 0)}]
        skolem:lemma2370
        skolem:lemma2371
        [ a r:Fact; r:gives {(9710 179) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 791];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1792 a r:Inference;
    r:gives {
        792 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {792 math:notEqualTo 0}]
        skolem:lemma3220
        [ a r:Fact; r:gives {((0 7 9 2) "=<") list:sort (0 2 7 9)}]
        [ a r:Fact; r:gives {((0 7 9 2) ">=") list:sort (9 7 2 0)}]
        skolem:lemma2542
        skolem:lemma2543
        [ a r:Fact; r:gives {(9720 279) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 792];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1793 a r:Inference;
    r:gives {
        793 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {793 math:notEqualTo 0}]
        skolem:lemma3221
        [ a r:Fact; r:gives {((0 7 9 3) "=<") list:sort (0 3 7 9)}]
        [ a r:Fact; r:gives {((0 7 9 3) ">=") list:sort (9 7 3 0)}]
        skolem:lemma2698
        skolem:lemma2699
        [ a r:Fact; r:gives {(9730 379) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 793];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1794 a r:Inference;
    r:gives {
        794 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {794 math:notEqualTo 0}]
        skolem:lemma3222
        [ a r:Fact; r:gives {((0 7 9 4) "=<") list:sort (0 4 7 9)}]
        [ a r:Fact; r:gives {((0 7 9 4) ">=") list:sort (9 7 4 0)}]
        skolem:lemma2840
        skolem:lemma2841
        [ a r:Fact; r:gives {(9740 479) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 794];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1795 a r:Inference;
    r:gives {
        795 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {795 math:notEqualTo 0}]
        skolem:lemma3223
        [ a r:Fact; r:gives {((0 7 9 5) "=<") list:sort (0 5 7 9)}]
        [ a r:Fact; r:gives {((0 7 9 5) ">=") list:sort (9 7 5 0)}]
        skolem:lemma2970
        skolem:lemma2971
        [ a r:Fact; r:gives {(9750 579) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 795];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1796 a r:Inference;
    r:gives {
        796 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {796 math:notEqualTo 0}]
        skolem:lemma3224
        [ a r:Fact; r:gives {((0 7 9 6) "=<") list:sort (0 6 7 9)}]
        [ a r:Fact; r:gives {((0 7 9 6) ">=") list:sort (9 7 6 0)}]
        skolem:lemma3090
        skolem:lemma3091
        [ a r:Fact; r:gives {(9760 679) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 796];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1797 a r:Inference;
    r:gives {
        797 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {797 math:notEqualTo 0}]
        skolem:lemma3225
        [ a r:Fact; r:gives {((0 7 9 7) "=<") list:sort (0 7 7 9)}]
        [ a r:Fact; r:gives {((0 7 9 7) ">=") list:sort (9 7 7 0)}]
        skolem:lemma3202
        skolem:lemma3203
        [ a r:Fact; r:gives {(9770 779) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 797];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 779];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1798 a r:Inference;
    r:gives {
        798 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {798 math:notEqualTo 0}]
        skolem:lemma3226
        [ a r:Fact; r:gives {((0 7 9 8) "=<") list:sort (0 7 8 9)}]
        [ a r:Fact; r:gives {((0 7 9 8) ">=") list:sort (9 8 7 0)}]
        skolem:lemma3216
        skolem:lemma3217
        [ a r:Fact; r:gives {(9870 789) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 798];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1799 a r:Inference;
    r:gives {
        799 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {799 math:notEqualTo 0}]
        skolem:lemma3227
        [ a r:Fact; r:gives {((0 7 9 9) "=<") list:sort (0 7 9 9)}]
        [ a r:Fact; r:gives {((0 7 9 9) ">=") list:sort (9 9 7 0)}]
        skolem:lemma3228
        skolem:lemma3229
        [ a r:Fact; r:gives {(9970 799) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 799];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 7 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 799];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9970];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1800 a r:Inference;
    r:gives {
        800 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {800 math:notEqualTo 0}]
        skolem:lemma3230
        [ a r:Fact; r:gives {((0 8 0 0) "=<") list:sort (0 0 0 8)}]
        [ a r:Fact; r:gives {((0 8 0 0) ">=") list:sort (8 0 0 0)}]
        skolem:lemma2023
        skolem:lemma2024
        [ a r:Fact; r:gives {(8000 8) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1801 a r:Inference;
    r:gives {
        801 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {801 math:notEqualTo 0}]
        skolem:lemma3231
        [ a r:Fact; r:gives {((0 8 0 1) "=<") list:sort (0 0 1 8)}]
        [ a r:Fact; r:gives {((0 8 0 1) ">=") list:sort (8 1 0 0)}]
        skolem:lemma2051
        skolem:lemma2052
        [ a r:Fact; r:gives {(8100 18) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 801];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1802 a r:Inference;
    r:gives {
        802 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {802 math:notEqualTo 0}]
        skolem:lemma3232
        [ a r:Fact; r:gives {((0 8 0 2) "=<") list:sort (0 0 2 8)}]
        [ a r:Fact; r:gives {((0 8 0 2) ">=") list:sort (8 2 0 0)}]
        skolem:lemma2077
        skolem:lemma2078
        [ a r:Fact; r:gives {(8200 28) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 802];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1803 a r:Inference;
    r:gives {
        803 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {803 math:notEqualTo 0}]
        skolem:lemma3233
        [ a r:Fact; r:gives {((0 8 0 3) "=<") list:sort (0 0 3 8)}]
        [ a r:Fact; r:gives {((0 8 0 3) ">=") list:sort (8 3 0 0)}]
        skolem:lemma2101
        skolem:lemma2102
        [ a r:Fact; r:gives {(8300 38) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 803];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1804 a r:Inference;
    r:gives {
        804 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {804 math:notEqualTo 0}]
        skolem:lemma3234
        [ a r:Fact; r:gives {((0 8 0 4) "=<") list:sort (0 0 4 8)}]
        [ a r:Fact; r:gives {((0 8 0 4) ">=") list:sort (8 4 0 0)}]
        skolem:lemma2123
        skolem:lemma2124
        [ a r:Fact; r:gives {(8400 48) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 804];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1805 a r:Inference;
    r:gives {
        805 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {805 math:notEqualTo 0}]
        skolem:lemma3235
        [ a r:Fact; r:gives {((0 8 0 5) "=<") list:sort (0 0 5 8)}]
        [ a r:Fact; r:gives {((0 8 0 5) ">=") list:sort (8 5 0 0)}]
        skolem:lemma2143
        skolem:lemma2144
        [ a r:Fact; r:gives {(8500 58) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 805];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1806 a r:Inference;
    r:gives {
        806 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {806 math:notEqualTo 0}]
        skolem:lemma3236
        [ a r:Fact; r:gives {((0 8 0 6) "=<") list:sort (0 0 6 8)}]
        [ a r:Fact; r:gives {((0 8 0 6) ">=") list:sort (8 6 0 0)}]
        skolem:lemma2161
        skolem:lemma2162
        [ a r:Fact; r:gives {(8600 68) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 806];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1807 a r:Inference;
    r:gives {
        807 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {807 math:notEqualTo 0}]
        skolem:lemma3237
        [ a r:Fact; r:gives {((0 8 0 7) "=<") list:sort (0 0 7 8)}]
        [ a r:Fact; r:gives {((0 8 0 7) ">=") list:sort (8 7 0 0)}]
        skolem:lemma2177
        skolem:lemma2178
        [ a r:Fact; r:gives {(8700 78) math:difference 8622}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8622 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8622 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 807];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1808 a r:Inference;
    r:gives {
        808 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {808 math:notEqualTo 0}]
        skolem:lemma3238
        [ a r:Fact; r:gives {((0 8 0 8) "=<") list:sort (0 0 8 8)}]
        [ a r:Fact; r:gives {((0 8 0 8) ">=") list:sort (8 8 0 0)}]
        skolem:lemma2191
        skolem:lemma2192
        [ a r:Fact; r:gives {(8800 88) math:difference 8712}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8712 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8712 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 808];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8712];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1809 a r:Inference;
    r:gives {
        809 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {809 math:notEqualTo 0}]
        skolem:lemma3239
        [ a r:Fact; r:gives {((0 8 0 9) "=<") list:sort (0 0 8 9)}]
        [ a r:Fact; r:gives {((0 8 0 9) ">=") list:sort (9 8 0 0)}]
        skolem:lemma2194
        skolem:lemma2195
        [ a r:Fact; r:gives {(9800 89) math:difference 9711}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9711 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9711 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 809];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1810 a r:Inference;
    r:gives {
        810 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {810 math:notEqualTo 0}]
        skolem:lemma3240
        [ a r:Fact; r:gives {((0 8 1 0) "=<") list:sort (0 0 1 8)}]
        [ a r:Fact; r:gives {((0 8 1 0) ">=") list:sort (8 1 0 0)}]
        skolem:lemma2051
        skolem:lemma2052
        [ a r:Fact; r:gives {(8100 18) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1811 a r:Inference;
    r:gives {
        811 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {811 math:notEqualTo 0}]
        skolem:lemma3241
        [ a r:Fact; r:gives {((0 8 1 1) "=<") list:sort (0 1 1 8)}]
        [ a r:Fact; r:gives {((0 8 1 1) ">=") list:sort (8 1 1 0)}]
        skolem:lemma2241
        skolem:lemma2242
        [ a r:Fact; r:gives {(8110 118) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 811];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 118];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1812 a r:Inference;
    r:gives {
        812 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {812 math:notEqualTo 0}]
        skolem:lemma3242
        [ a r:Fact; r:gives {((0 8 1 2) "=<") list:sort (0 1 2 8)}]
        [ a r:Fact; r:gives {((0 8 1 2) ">=") list:sort (8 2 1 0)}]
        skolem:lemma2267
        skolem:lemma2268
        [ a r:Fact; r:gives {(8210 128) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 812];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1813 a r:Inference;
    r:gives {
        813 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {813 math:notEqualTo 0}]
        skolem:lemma3243
        [ a r:Fact; r:gives {((0 8 1 3) "=<") list:sort (0 1 3 8)}]
        [ a r:Fact; r:gives {((0 8 1 3) ">=") list:sort (8 3 1 0)}]
        skolem:lemma2291
        skolem:lemma2292
        [ a r:Fact; r:gives {(8310 138) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 813];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1814 a r:Inference;
    r:gives {
        814 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {814 math:notEqualTo 0}]
        skolem:lemma3244
        [ a r:Fact; r:gives {((0 8 1 4) "=<") list:sort (0 1 4 8)}]
        [ a r:Fact; r:gives {((0 8 1 4) ">=") list:sort (8 4 1 0)}]
        skolem:lemma2313
        skolem:lemma2314
        [ a r:Fact; r:gives {(8410 148) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 814];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1815 a r:Inference;
    r:gives {
        815 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {815 math:notEqualTo 0}]
        skolem:lemma3245
        [ a r:Fact; r:gives {((0 8 1 5) "=<") list:sort (0 1 5 8)}]
        [ a r:Fact; r:gives {((0 8 1 5) ">=") list:sort (8 5 1 0)}]
        skolem:lemma2333
        skolem:lemma2334
        [ a r:Fact; r:gives {(8510 158) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 815];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1816 a r:Inference;
    r:gives {
        816 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {816 math:notEqualTo 0}]
        skolem:lemma3246
        [ a r:Fact; r:gives {((0 8 1 6) "=<") list:sort (0 1 6 8)}]
        [ a r:Fact; r:gives {((0 8 1 6) ">=") list:sort (8 6 1 0)}]
        skolem:lemma2351
        skolem:lemma2352
        [ a r:Fact; r:gives {(8610 168) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 816];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1817 a r:Inference;
    r:gives {
        817 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {817 math:notEqualTo 0}]
        skolem:lemma3247
        [ a r:Fact; r:gives {((0 8 1 7) "=<") list:sort (0 1 7 8)}]
        [ a r:Fact; r:gives {((0 8 1 7) ">=") list:sort (8 7 1 0)}]
        skolem:lemma2367
        skolem:lemma2368
        [ a r:Fact; r:gives {(8710 178) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 817];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1818 a r:Inference;
    r:gives {
        818 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {818 math:notEqualTo 0}]
        skolem:lemma3248
        [ a r:Fact; r:gives {((0 8 1 8) "=<") list:sort (0 1 8 8)}]
        [ a r:Fact; r:gives {((0 8 1 8) ">=") list:sort (8 8 1 0)}]
        skolem:lemma2381
        skolem:lemma2382
        [ a r:Fact; r:gives {(8810 188) math:difference 8622}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8622 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8622 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 818];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 188];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1819 a r:Inference;
    r:gives {
        819 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {819 math:notEqualTo 0}]
        skolem:lemma3249
        [ a r:Fact; r:gives {((0 8 1 9) "=<") list:sort (0 1 8 9)}]
        [ a r:Fact; r:gives {((0 8 1 9) ">=") list:sort (9 8 1 0)}]
        skolem:lemma2384
        skolem:lemma2385
        [ a r:Fact; r:gives {(9810 189) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 819];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1820 a r:Inference;
    r:gives {
        820 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {820 math:notEqualTo 0}]
        skolem:lemma3250
        [ a r:Fact; r:gives {((0 8 2 0) "=<") list:sort (0 0 2 8)}]
        [ a r:Fact; r:gives {((0 8 2 0) ">=") list:sort (8 2 0 0)}]
        skolem:lemma2077
        skolem:lemma2078
        [ a r:Fact; r:gives {(8200 28) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1821 a r:Inference;
    r:gives {
        821 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {821 math:notEqualTo 0}]
        skolem:lemma3251
        [ a r:Fact; r:gives {((0 8 2 1) "=<") list:sort (0 1 2 8)}]
        [ a r:Fact; r:gives {((0 8 2 1) ">=") list:sort (8 2 1 0)}]
        skolem:lemma2267
        skolem:lemma2268
        [ a r:Fact; r:gives {(8210 128) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 821];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1822 a r:Inference;
    r:gives {
        822 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {822 math:notEqualTo 0}]
        skolem:lemma3252
        [ a r:Fact; r:gives {((0 8 2 2) "=<") list:sort (0 2 2 8)}]
        [ a r:Fact; r:gives {((0 8 2 2) ">=") list:sort (8 2 2 0)}]
        skolem:lemma2439
        skolem:lemma2440
        [ a r:Fact; r:gives {(8220 228) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 822];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 228];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1823 a r:Inference;
    r:gives {
        823 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {823 math:notEqualTo 0}]
        skolem:lemma3253
        [ a r:Fact; r:gives {((0 8 2 3) "=<") list:sort (0 2 3 8)}]
        [ a r:Fact; r:gives {((0 8 2 3) ">=") list:sort (8 3 2 0)}]
        skolem:lemma2463
        skolem:lemma2464
        [ a r:Fact; r:gives {(8320 238) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 823];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1824 a r:Inference;
    r:gives {
        824 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {824 math:notEqualTo 0}]
        skolem:lemma3254
        [ a r:Fact; r:gives {((0 8 2 4) "=<") list:sort (0 2 4 8)}]
        [ a r:Fact; r:gives {((0 8 2 4) ">=") list:sort (8 4 2 0)}]
        skolem:lemma2485
        skolem:lemma2486
        [ a r:Fact; r:gives {(8420 248) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 824];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1825 a r:Inference;
    r:gives {
        825 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {825 math:notEqualTo 0}]
        skolem:lemma3255
        [ a r:Fact; r:gives {((0 8 2 5) "=<") list:sort (0 2 5 8)}]
        [ a r:Fact; r:gives {((0 8 2 5) ">=") list:sort (8 5 2 0)}]
        skolem:lemma2505
        skolem:lemma2506
        [ a r:Fact; r:gives {(8520 258) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 825];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1826 a r:Inference;
    r:gives {
        826 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {826 math:notEqualTo 0}]
        skolem:lemma3256
        [ a r:Fact; r:gives {((0 8 2 6) "=<") list:sort (0 2 6 8)}]
        [ a r:Fact; r:gives {((0 8 2 6) ">=") list:sort (8 6 2 0)}]
        skolem:lemma2523
        skolem:lemma2524
        [ a r:Fact; r:gives {(8620 268) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 826];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1827 a r:Inference;
    r:gives {
        827 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {827 math:notEqualTo 0}]
        skolem:lemma3257
        [ a r:Fact; r:gives {((0 8 2 7) "=<") list:sort (0 2 7 8)}]
        [ a r:Fact; r:gives {((0 8 2 7) ">=") list:sort (8 7 2 0)}]
        skolem:lemma2539
        skolem:lemma2540
        [ a r:Fact; r:gives {(8720 278) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 827];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1828 a r:Inference;
    r:gives {
        828 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {828 math:notEqualTo 0}]
        skolem:lemma3258
        [ a r:Fact; r:gives {((0 8 2 8) "=<") list:sort (0 2 8 8)}]
        [ a r:Fact; r:gives {((0 8 2 8) ">=") list:sort (8 8 2 0)}]
        skolem:lemma2553
        skolem:lemma2554
        [ a r:Fact; r:gives {(8820 288) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 828];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 288];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1829 a r:Inference;
    r:gives {
        829 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {829 math:notEqualTo 0}]
        skolem:lemma3259
        [ a r:Fact; r:gives {((0 8 2 9) "=<") list:sort (0 2 8 9)}]
        [ a r:Fact; r:gives {((0 8 2 9) ">=") list:sort (9 8 2 0)}]
        skolem:lemma2556
        skolem:lemma2557
        [ a r:Fact; r:gives {(9820 289) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 829];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1830 a r:Inference;
    r:gives {
        830 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {830 math:notEqualTo 0}]
        skolem:lemma3260
        [ a r:Fact; r:gives {((0 8 3 0) "=<") list:sort (0 0 3 8)}]
        [ a r:Fact; r:gives {((0 8 3 0) ">=") list:sort (8 3 0 0)}]
        skolem:lemma2101
        skolem:lemma2102
        [ a r:Fact; r:gives {(8300 38) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1831 a r:Inference;
    r:gives {
        831 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {831 math:notEqualTo 0}]
        skolem:lemma3261
        [ a r:Fact; r:gives {((0 8 3 1) "=<") list:sort (0 1 3 8)}]
        [ a r:Fact; r:gives {((0 8 3 1) ">=") list:sort (8 3 1 0)}]
        skolem:lemma2291
        skolem:lemma2292
        [ a r:Fact; r:gives {(8310 138) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 831];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1832 a r:Inference;
    r:gives {
        832 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {832 math:notEqualTo 0}]
        skolem:lemma3262
        [ a r:Fact; r:gives {((0 8 3 2) "=<") list:sort (0 2 3 8)}]
        [ a r:Fact; r:gives {((0 8 3 2) ">=") list:sort (8 3 2 0)}]
        skolem:lemma2463
        skolem:lemma2464
        [ a r:Fact; r:gives {(8320 238) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 832];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1833 a r:Inference;
    r:gives {
        833 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {833 math:notEqualTo 0}]
        skolem:lemma3263
        [ a r:Fact; r:gives {((0 8 3 3) "=<") list:sort (0 3 3 8)}]
        [ a r:Fact; r:gives {((0 8 3 3) ">=") list:sort (8 3 3 0)}]
        skolem:lemma2619
        skolem:lemma2620
        [ a r:Fact; r:gives {(8330 338) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 833];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 338];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1834 a r:Inference;
    r:gives {
        834 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {834 math:notEqualTo 0}]
        skolem:lemma3264
        [ a r:Fact; r:gives {((0 8 3 4) "=<") list:sort (0 3 4 8)}]
        [ a r:Fact; r:gives {((0 8 3 4) ">=") list:sort (8 4 3 0)}]
        skolem:lemma2641
        skolem:lemma2642
        [ a r:Fact; r:gives {(8430 348) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 834];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1835 a r:Inference;
    r:gives {
        835 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {835 math:notEqualTo 0}]
        skolem:lemma3265
        [ a r:Fact; r:gives {((0 8 3 5) "=<") list:sort (0 3 5 8)}]
        [ a r:Fact; r:gives {((0 8 3 5) ">=") list:sort (8 5 3 0)}]
        skolem:lemma2661
        skolem:lemma2662
        [ a r:Fact; r:gives {(8530 358) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 835];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1836 a r:Inference;
    r:gives {
        836 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {836 math:notEqualTo 0}]
        skolem:lemma3266
        [ a r:Fact; r:gives {((0 8 3 6) "=<") list:sort (0 3 6 8)}]
        [ a r:Fact; r:gives {((0 8 3 6) ">=") list:sort (8 6 3 0)}]
        skolem:lemma2679
        skolem:lemma2680
        [ a r:Fact; r:gives {(8630 368) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 836];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1837 a r:Inference;
    r:gives {
        837 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {837 math:notEqualTo 0}]
        skolem:lemma3267
        [ a r:Fact; r:gives {((0 8 3 7) "=<") list:sort (0 3 7 8)}]
        [ a r:Fact; r:gives {((0 8 3 7) ">=") list:sort (8 7 3 0)}]
        skolem:lemma2695
        skolem:lemma2696
        [ a r:Fact; r:gives {(8730 378) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 837];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1838 a r:Inference;
    r:gives {
        838 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {838 math:notEqualTo 0}]
        skolem:lemma3268
        [ a r:Fact; r:gives {((0 8 3 8) "=<") list:sort (0 3 8 8)}]
        [ a r:Fact; r:gives {((0 8 3 8) ">=") list:sort (8 8 3 0)}]
        skolem:lemma2709
        skolem:lemma2710
        [ a r:Fact; r:gives {(8830 388) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 838];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 388];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1839 a r:Inference;
    r:gives {
        839 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {839 math:notEqualTo 0}]
        skolem:lemma3269
        [ a r:Fact; r:gives {((0 8 3 9) "=<") list:sort (0 3 8 9)}]
        [ a r:Fact; r:gives {((0 8 3 9) ">=") list:sort (9 8 3 0)}]
        skolem:lemma2712
        skolem:lemma2713
        [ a r:Fact; r:gives {(9830 389) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 839];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1840 a r:Inference;
    r:gives {
        840 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {840 math:notEqualTo 0}]
        skolem:lemma3270
        [ a r:Fact; r:gives {((0 8 4 0) "=<") list:sort (0 0 4 8)}]
        [ a r:Fact; r:gives {((0 8 4 0) ">=") list:sort (8 4 0 0)}]
        skolem:lemma2123
        skolem:lemma2124
        [ a r:Fact; r:gives {(8400 48) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1841 a r:Inference;
    r:gives {
        841 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {841 math:notEqualTo 0}]
        skolem:lemma3271
        [ a r:Fact; r:gives {((0 8 4 1) "=<") list:sort (0 1 4 8)}]
        [ a r:Fact; r:gives {((0 8 4 1) ">=") list:sort (8 4 1 0)}]
        skolem:lemma2313
        skolem:lemma2314
        [ a r:Fact; r:gives {(8410 148) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 841];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1842 a r:Inference;
    r:gives {
        842 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {842 math:notEqualTo 0}]
        skolem:lemma3272
        [ a r:Fact; r:gives {((0 8 4 2) "=<") list:sort (0 2 4 8)}]
        [ a r:Fact; r:gives {((0 8 4 2) ">=") list:sort (8 4 2 0)}]
        skolem:lemma2485
        skolem:lemma2486
        [ a r:Fact; r:gives {(8420 248) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 842];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1843 a r:Inference;
    r:gives {
        843 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {843 math:notEqualTo 0}]
        skolem:lemma3273
        [ a r:Fact; r:gives {((0 8 4 3) "=<") list:sort (0 3 4 8)}]
        [ a r:Fact; r:gives {((0 8 4 3) ">=") list:sort (8 4 3 0)}]
        skolem:lemma2641
        skolem:lemma2642
        [ a r:Fact; r:gives {(8430 348) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 843];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1844 a r:Inference;
    r:gives {
        844 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {844 math:notEqualTo 0}]
        skolem:lemma3274
        [ a r:Fact; r:gives {((0 8 4 4) "=<") list:sort (0 4 4 8)}]
        [ a r:Fact; r:gives {((0 8 4 4) ">=") list:sort (8 4 4 0)}]
        skolem:lemma2783
        skolem:lemma2784
        [ a r:Fact; r:gives {(8440 448) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 844];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 448];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1845 a r:Inference;
    r:gives {
        845 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {845 math:notEqualTo 0}]
        skolem:lemma3275
        [ a r:Fact; r:gives {((0 8 4 5) "=<") list:sort (0 4 5 8)}]
        [ a r:Fact; r:gives {((0 8 4 5) ">=") list:sort (8 5 4 0)}]
        skolem:lemma2803
        skolem:lemma2804
        [ a r:Fact; r:gives {(8540 458) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 845];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1846 a r:Inference;
    r:gives {
        846 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {846 math:notEqualTo 0}]
        skolem:lemma3276
        [ a r:Fact; r:gives {((0 8 4 6) "=<") list:sort (0 4 6 8)}]
        [ a r:Fact; r:gives {((0 8 4 6) ">=") list:sort (8 6 4 0)}]
        skolem:lemma2821
        skolem:lemma2822
        [ a r:Fact; r:gives {(8640 468) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 846];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1847 a r:Inference;
    r:gives {
        847 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {847 math:notEqualTo 0}]
        skolem:lemma3277
        [ a r:Fact; r:gives {((0 8 4 7) "=<") list:sort (0 4 7 8)}]
        [ a r:Fact; r:gives {((0 8 4 7) ">=") list:sort (8 7 4 0)}]
        skolem:lemma2837
        skolem:lemma2838
        [ a r:Fact; r:gives {(8740 478) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 847];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1848 a r:Inference;
    r:gives {
        848 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {848 math:notEqualTo 0}]
        skolem:lemma3278
        [ a r:Fact; r:gives {((0 8 4 8) "=<") list:sort (0 4 8 8)}]
        [ a r:Fact; r:gives {((0 8 4 8) ">=") list:sort (8 8 4 0)}]
        skolem:lemma2851
        skolem:lemma2852
        [ a r:Fact; r:gives {(8840 488) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 848];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 488];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1849 a r:Inference;
    r:gives {
        849 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {849 math:notEqualTo 0}]
        skolem:lemma3279
        [ a r:Fact; r:gives {((0 8 4 9) "=<") list:sort (0 4 8 9)}]
        [ a r:Fact; r:gives {((0 8 4 9) ">=") list:sort (9 8 4 0)}]
        skolem:lemma2854
        skolem:lemma2855
        [ a r:Fact; r:gives {(9840 489) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 849];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1850 a r:Inference;
    r:gives {
        850 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {850 math:notEqualTo 0}]
        skolem:lemma3280
        [ a r:Fact; r:gives {((0 8 5 0) "=<") list:sort (0 0 5 8)}]
        [ a r:Fact; r:gives {((0 8 5 0) ">=") list:sort (8 5 0 0)}]
        skolem:lemma2143
        skolem:lemma2144
        [ a r:Fact; r:gives {(8500 58) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1851 a r:Inference;
    r:gives {
        851 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {851 math:notEqualTo 0}]
        skolem:lemma3281
        [ a r:Fact; r:gives {((0 8 5 1) "=<") list:sort (0 1 5 8)}]
        [ a r:Fact; r:gives {((0 8 5 1) ">=") list:sort (8 5 1 0)}]
        skolem:lemma2333
        skolem:lemma2334
        [ a r:Fact; r:gives {(8510 158) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 851];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1852 a r:Inference;
    r:gives {
        852 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {852 math:notEqualTo 0}]
        skolem:lemma3282
        [ a r:Fact; r:gives {((0 8 5 2) "=<") list:sort (0 2 5 8)}]
        [ a r:Fact; r:gives {((0 8 5 2) ">=") list:sort (8 5 2 0)}]
        skolem:lemma2505
        skolem:lemma2506
        [ a r:Fact; r:gives {(8520 258) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 852];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1853 a r:Inference;
    r:gives {
        853 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {853 math:notEqualTo 0}]
        skolem:lemma3283
        [ a r:Fact; r:gives {((0 8 5 3) "=<") list:sort (0 3 5 8)}]
        [ a r:Fact; r:gives {((0 8 5 3) ">=") list:sort (8 5 3 0)}]
        skolem:lemma2661
        skolem:lemma2662
        [ a r:Fact; r:gives {(8530 358) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 853];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1854 a r:Inference;
    r:gives {
        854 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {854 math:notEqualTo 0}]
        skolem:lemma3284
        [ a r:Fact; r:gives {((0 8 5 4) "=<") list:sort (0 4 5 8)}]
        [ a r:Fact; r:gives {((0 8 5 4) ">=") list:sort (8 5 4 0)}]
        skolem:lemma2803
        skolem:lemma2804
        [ a r:Fact; r:gives {(8540 458) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 854];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1855 a r:Inference;
    r:gives {
        855 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {855 math:notEqualTo 0}]
        skolem:lemma3285
        [ a r:Fact; r:gives {((0 8 5 5) "=<") list:sort (0 5 5 8)}]
        [ a r:Fact; r:gives {((0 8 5 5) ">=") list:sort (8 5 5 0)}]
        skolem:lemma2933
        skolem:lemma2934
        [ a r:Fact; r:gives {(8550 558) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 855];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 558];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1856 a r:Inference;
    r:gives {
        856 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {856 math:notEqualTo 0}]
        skolem:lemma3286
        [ a r:Fact; r:gives {((0 8 5 6) "=<") list:sort (0 5 6 8)}]
        [ a r:Fact; r:gives {((0 8 5 6) ">=") list:sort (8 6 5 0)}]
        skolem:lemma2951
        skolem:lemma2952
        [ a r:Fact; r:gives {(8650 568) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 856];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1857 a r:Inference;
    r:gives {
        857 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {857 math:notEqualTo 0}]
        skolem:lemma3287
        [ a r:Fact; r:gives {((0 8 5 7) "=<") list:sort (0 5 7 8)}]
        [ a r:Fact; r:gives {((0 8 5 7) ">=") list:sort (8 7 5 0)}]
        skolem:lemma2967
        skolem:lemma2968
        [ a r:Fact; r:gives {(8750 578) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 857];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1858 a r:Inference;
    r:gives {
        858 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {858 math:notEqualTo 0}]
        skolem:lemma3288
        [ a r:Fact; r:gives {((0 8 5 8) "=<") list:sort (0 5 8 8)}]
        [ a r:Fact; r:gives {((0 8 5 8) ">=") list:sort (8 8 5 0)}]
        skolem:lemma2981
        skolem:lemma2982
        [ a r:Fact; r:gives {(8850 588) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 858];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 588];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1859 a r:Inference;
    r:gives {
        859 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {859 math:notEqualTo 0}]
        skolem:lemma3289
        [ a r:Fact; r:gives {((0 8 5 9) "=<") list:sort (0 5 8 9)}]
        [ a r:Fact; r:gives {((0 8 5 9) ">=") list:sort (9 8 5 0)}]
        skolem:lemma2984
        skolem:lemma2985
        [ a r:Fact; r:gives {(9850 589) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 859];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1860 a r:Inference;
    r:gives {
        860 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {860 math:notEqualTo 0}]
        skolem:lemma3290
        [ a r:Fact; r:gives {((0 8 6 0) "=<") list:sort (0 0 6 8)}]
        [ a r:Fact; r:gives {((0 8 6 0) ">=") list:sort (8 6 0 0)}]
        skolem:lemma2161
        skolem:lemma2162
        [ a r:Fact; r:gives {(8600 68) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1861 a r:Inference;
    r:gives {
        861 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {861 math:notEqualTo 0}]
        skolem:lemma3291
        [ a r:Fact; r:gives {((0 8 6 1) "=<") list:sort (0 1 6 8)}]
        [ a r:Fact; r:gives {((0 8 6 1) ">=") list:sort (8 6 1 0)}]
        skolem:lemma2351
        skolem:lemma2352
        [ a r:Fact; r:gives {(8610 168) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 861];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1862 a r:Inference;
    r:gives {
        862 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {862 math:notEqualTo 0}]
        skolem:lemma3292
        [ a r:Fact; r:gives {((0 8 6 2) "=<") list:sort (0 2 6 8)}]
        [ a r:Fact; r:gives {((0 8 6 2) ">=") list:sort (8 6 2 0)}]
        skolem:lemma2523
        skolem:lemma2524
        [ a r:Fact; r:gives {(8620 268) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 862];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1863 a r:Inference;
    r:gives {
        863 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {863 math:notEqualTo 0}]
        skolem:lemma3293
        [ a r:Fact; r:gives {((0 8 6 3) "=<") list:sort (0 3 6 8)}]
        [ a r:Fact; r:gives {((0 8 6 3) ">=") list:sort (8 6 3 0)}]
        skolem:lemma2679
        skolem:lemma2680
        [ a r:Fact; r:gives {(8630 368) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 863];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1864 a r:Inference;
    r:gives {
        864 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {864 math:notEqualTo 0}]
        skolem:lemma3294
        [ a r:Fact; r:gives {((0 8 6 4) "=<") list:sort (0 4 6 8)}]
        [ a r:Fact; r:gives {((0 8 6 4) ">=") list:sort (8 6 4 0)}]
        skolem:lemma2821
        skolem:lemma2822
        [ a r:Fact; r:gives {(8640 468) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 864];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1865 a r:Inference;
    r:gives {
        865 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {865 math:notEqualTo 0}]
        skolem:lemma3295
        [ a r:Fact; r:gives {((0 8 6 5) "=<") list:sort (0 5 6 8)}]
        [ a r:Fact; r:gives {((0 8 6 5) ">=") list:sort (8 6 5 0)}]
        skolem:lemma2951
        skolem:lemma2952
        [ a r:Fact; r:gives {(8650 568) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 865];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1866 a r:Inference;
    r:gives {
        866 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {866 math:notEqualTo 0}]
        skolem:lemma3296
        [ a r:Fact; r:gives {((0 8 6 6) "=<") list:sort (0 6 6 8)}]
        [ a r:Fact; r:gives {((0 8 6 6) ">=") list:sort (8 6 6 0)}]
        skolem:lemma3071
        skolem:lemma3072
        [ a r:Fact; r:gives {(8660 668) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 866];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 668];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1867 a r:Inference;
    r:gives {
        867 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {867 math:notEqualTo 0}]
        skolem:lemma3297
        [ a r:Fact; r:gives {((0 8 6 7) "=<") list:sort (0 6 7 8)}]
        [ a r:Fact; r:gives {((0 8 6 7) ">=") list:sort (8 7 6 0)}]
        skolem:lemma3087
        skolem:lemma3088
        [ a r:Fact; r:gives {(8760 678) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 867];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1868 a r:Inference;
    r:gives {
        868 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {868 math:notEqualTo 0}]
        skolem:lemma3298
        [ a r:Fact; r:gives {((0 8 6 8) "=<") list:sort (0 6 8 8)}]
        [ a r:Fact; r:gives {((0 8 6 8) ">=") list:sort (8 8 6 0)}]
        skolem:lemma3101
        skolem:lemma3102
        [ a r:Fact; r:gives {(8860 688) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 868];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 688];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1869 a r:Inference;
    r:gives {
        869 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {869 math:notEqualTo 0}]
        skolem:lemma3299
        [ a r:Fact; r:gives {((0 8 6 9) "=<") list:sort (0 6 8 9)}]
        [ a r:Fact; r:gives {((0 8 6 9) ">=") list:sort (9 8 6 0)}]
        skolem:lemma3104
        skolem:lemma3105
        [ a r:Fact; r:gives {(9860 689) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 869];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1870 a r:Inference;
    r:gives {
        870 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {870 math:notEqualTo 0}]
        skolem:lemma3300
        [ a r:Fact; r:gives {((0 8 7 0) "=<") list:sort (0 0 7 8)}]
        [ a r:Fact; r:gives {((0 8 7 0) ">=") list:sort (8 7 0 0)}]
        skolem:lemma2177
        skolem:lemma2178
        [ a r:Fact; r:gives {(8700 78) math:difference 8622}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8622 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8622 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1871 a r:Inference;
    r:gives {
        871 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {871 math:notEqualTo 0}]
        skolem:lemma3301
        [ a r:Fact; r:gives {((0 8 7 1) "=<") list:sort (0 1 7 8)}]
        [ a r:Fact; r:gives {((0 8 7 1) ">=") list:sort (8 7 1 0)}]
        skolem:lemma2367
        skolem:lemma2368
        [ a r:Fact; r:gives {(8710 178) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 871];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1872 a r:Inference;
    r:gives {
        872 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {872 math:notEqualTo 0}]
        skolem:lemma3302
        [ a r:Fact; r:gives {((0 8 7 2) "=<") list:sort (0 2 7 8)}]
        [ a r:Fact; r:gives {((0 8 7 2) ">=") list:sort (8 7 2 0)}]
        skolem:lemma2539
        skolem:lemma2540
        [ a r:Fact; r:gives {(8720 278) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 872];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1873 a r:Inference;
    r:gives {
        873 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {873 math:notEqualTo 0}]
        skolem:lemma3303
        [ a r:Fact; r:gives {((0 8 7 3) "=<") list:sort (0 3 7 8)}]
        [ a r:Fact; r:gives {((0 8 7 3) ">=") list:sort (8 7 3 0)}]
        skolem:lemma2695
        skolem:lemma2696
        [ a r:Fact; r:gives {(8730 378) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 873];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1874 a r:Inference;
    r:gives {
        874 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {874 math:notEqualTo 0}]
        skolem:lemma3304
        [ a r:Fact; r:gives {((0 8 7 4) "=<") list:sort (0 4 7 8)}]
        [ a r:Fact; r:gives {((0 8 7 4) ">=") list:sort (8 7 4 0)}]
        skolem:lemma2837
        skolem:lemma2838
        [ a r:Fact; r:gives {(8740 478) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 874];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1875 a r:Inference;
    r:gives {
        875 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {875 math:notEqualTo 0}]
        skolem:lemma3305
        [ a r:Fact; r:gives {((0 8 7 5) "=<") list:sort (0 5 7 8)}]
        [ a r:Fact; r:gives {((0 8 7 5) ">=") list:sort (8 7 5 0)}]
        skolem:lemma2967
        skolem:lemma2968
        [ a r:Fact; r:gives {(8750 578) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 875];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1876 a r:Inference;
    r:gives {
        876 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {876 math:notEqualTo 0}]
        skolem:lemma3306
        [ a r:Fact; r:gives {((0 8 7 6) "=<") list:sort (0 6 7 8)}]
        [ a r:Fact; r:gives {((0 8 7 6) ">=") list:sort (8 7 6 0)}]
        skolem:lemma3087
        skolem:lemma3088
        [ a r:Fact; r:gives {(8760 678) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 876];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1877 a r:Inference;
    r:gives {
        877 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {877 math:notEqualTo 0}]
        skolem:lemma3307
        [ a r:Fact; r:gives {((0 8 7 7) "=<") list:sort (0 7 7 8)}]
        [ a r:Fact; r:gives {((0 8 7 7) ">=") list:sort (8 7 7 0)}]
        skolem:lemma3199
        skolem:lemma3200
        [ a r:Fact; r:gives {(8770 778) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 877];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 7 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 778];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1878 a r:Inference;
    r:gives {
        878 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {878 math:notEqualTo 0}]
        skolem:lemma3308
        [ a r:Fact; r:gives {((0 8 7 8) "=<") list:sort (0 7 8 8)}]
        [ a r:Fact; r:gives {((0 8 7 8) ">=") list:sort (8 8 7 0)}]
        skolem:lemma3213
        skolem:lemma3214
        [ a r:Fact; r:gives {(8870 788) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 878];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 788];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1879 a r:Inference;
    r:gives {
        879 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {879 math:notEqualTo 0}]
        skolem:lemma3309
        [ a r:Fact; r:gives {((0 8 7 9) "=<") list:sort (0 7 8 9)}]
        [ a r:Fact; r:gives {((0 8 7 9) ">=") list:sort (9 8 7 0)}]
        skolem:lemma3216
        skolem:lemma3217
        [ a r:Fact; r:gives {(9870 789) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 879];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1880 a r:Inference;
    r:gives {
        880 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {880 math:notEqualTo 0}]
        skolem:lemma3310
        [ a r:Fact; r:gives {((0 8 8 0) "=<") list:sort (0 0 8 8)}]
        [ a r:Fact; r:gives {((0 8 8 0) ">=") list:sort (8 8 0 0)}]
        skolem:lemma2191
        skolem:lemma2192
        [ a r:Fact; r:gives {(8800 88) math:difference 8712}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8712 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8712 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8712];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1881 a r:Inference;
    r:gives {
        881 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {881 math:notEqualTo 0}]
        skolem:lemma3311
        [ a r:Fact; r:gives {((0 8 8 1) "=<") list:sort (0 1 8 8)}]
        [ a r:Fact; r:gives {((0 8 8 1) ">=") list:sort (8 8 1 0)}]
        skolem:lemma2381
        skolem:lemma2382
        [ a r:Fact; r:gives {(8810 188) math:difference 8622}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8622 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8622 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 881];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 188];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1882 a r:Inference;
    r:gives {
        882 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {882 math:notEqualTo 0}]
        skolem:lemma3312
        [ a r:Fact; r:gives {((0 8 8 2) "=<") list:sort (0 2 8 8)}]
        [ a r:Fact; r:gives {((0 8 8 2) ">=") list:sort (8 8 2 0)}]
        skolem:lemma2553
        skolem:lemma2554
        [ a r:Fact; r:gives {(8820 288) math:difference 8532}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8532 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8532 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 882];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 288];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1883 a r:Inference;
    r:gives {
        883 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {883 math:notEqualTo 0}]
        skolem:lemma3313
        [ a r:Fact; r:gives {((0 8 8 3) "=<") list:sort (0 3 8 8)}]
        [ a r:Fact; r:gives {((0 8 8 3) ">=") list:sort (8 8 3 0)}]
        skolem:lemma2709
        skolem:lemma2710
        [ a r:Fact; r:gives {(8830 388) math:difference 8442}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8442 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            8442 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 883];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 388];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1884 a r:Inference;
    r:gives {
        884 :kaprekar (0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {884 math:notEqualTo 0}]
        skolem:lemma3314
        [ a r:Fact; r:gives {((0 8 8 4) "=<") list:sort (0 4 8 8)}]
        [ a r:Fact; r:gives {((0 8 8 4) ">=") list:sort (8 8 4 0)}]
        skolem:lemma2851
        skolem:lemma2852
        [ a r:Fact; r:gives {(8840 488) math:difference 8352}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8352 math:equalTo 6174.
        } {
            2 log:equalTo 1.
        } {
            8352 :kaprekar (1 2).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 884];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 488];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 2];
    r:rule skolem:lemma2003.

skolem:lemma1885 a r:Inference;
    r:gives {
        885 :kaprekar (0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {885 math:notEqualTo 0}]
        skolem:lemma3315
        [ a r:Fact; r:gives {((0 8 8 5) "=<") list:sort (0 5 8 8)}]
        [ a r:Fact; r:gives {((0 8 8 5) ">=") list:sort (8 8 5 0)}]
        skolem:lemma2981
        skolem:lemma2982
        [ a r:Fact; r:gives {(8850 588) math:difference 8262}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8262 math:equalTo 6174.
        } {
            5 log:equalTo 1.
        } {
            8262 :kaprekar (1 5).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 885];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 588];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 5];
    r:rule skolem:lemma2003.

skolem:lemma1886 a r:Inference;
    r:gives {
        886 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {886 math:notEqualTo 0}]
        skolem:lemma3316
        [ a r:Fact; r:gives {((0 8 8 6) "=<") list:sort (0 6 8 8)}]
        [ a r:Fact; r:gives {((0 8 8 6) ">=") list:sort (8 8 6 0)}]
        skolem:lemma3101
        skolem:lemma3102
        [ a r:Fact; r:gives {(8860 688) math:difference 8172}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8172 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            8172 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 886];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 688];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1887 a r:Inference;
    r:gives {
        887 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {887 math:notEqualTo 0}]
        skolem:lemma3317
        [ a r:Fact; r:gives {((0 8 8 7) "=<") list:sort (0 7 8 8)}]
        [ a r:Fact; r:gives {((0 8 8 7) ">=") list:sort (8 8 7 0)}]
        skolem:lemma3213
        skolem:lemma3214
        [ a r:Fact; r:gives {(8870 788) math:difference 8082}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8082 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            8082 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 887];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 788];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8082];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1888 a r:Inference;
    r:gives {
        888 :kaprekar (0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {888 math:notEqualTo 0}]
        skolem:lemma3318
        [ a r:Fact; r:gives {((0 8 8 8) "=<") list:sort (0 8 8 8)}]
        [ a r:Fact; r:gives {((0 8 8 8) ">=") list:sort (8 8 8 0)}]
        skolem:lemma3319
        skolem:lemma3320
        [ a r:Fact; r:gives {(8880 888) math:difference 7992}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            7992 math:equalTo 6174.
        } {
            6 log:equalTo 1.
        } {
            7992 :kaprekar (1 6).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 888];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 8 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 8 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 888];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 6];
    r:rule skolem:lemma2003.

skolem:lemma1889 a r:Inference;
    r:gives {
        889 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {889 math:notEqualTo 0}]
        skolem:lemma3321
        [ a r:Fact; r:gives {((0 8 8 9) "=<") list:sort (0 8 8 9)}]
        [ a r:Fact; r:gives {((0 8 8 9) ">=") list:sort (9 8 8 0)}]
        skolem:lemma3322
        skolem:lemma3323
        [ a r:Fact; r:gives {(9880 889) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 889];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 8 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 889];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1890 a r:Inference;
    r:gives {
        890 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {890 math:notEqualTo 0}]
        skolem:lemma3324
        [ a r:Fact; r:gives {((0 8 9 0) "=<") list:sort (0 0 8 9)}]
        [ a r:Fact; r:gives {((0 8 9 0) ">=") list:sort (9 8 0 0)}]
        skolem:lemma2194
        skolem:lemma2195
        [ a r:Fact; r:gives {(9800 89) math:difference 9711}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9711 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9711 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 890];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1891 a r:Inference;
    r:gives {
        891 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {891 math:notEqualTo 0}]
        skolem:lemma3325
        [ a r:Fact; r:gives {((0 8 9 1) "=<") list:sort (0 1 8 9)}]
        [ a r:Fact; r:gives {((0 8 9 1) ">=") list:sort (9 8 1 0)}]
        skolem:lemma2384
        skolem:lemma2385
        [ a r:Fact; r:gives {(9810 189) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 891];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1892 a r:Inference;
    r:gives {
        892 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {892 math:notEqualTo 0}]
        skolem:lemma3326
        [ a r:Fact; r:gives {((0 8 9 2) "=<") list:sort (0 2 8 9)}]
        [ a r:Fact; r:gives {((0 8 9 2) ">=") list:sort (9 8 2 0)}]
        skolem:lemma2556
        skolem:lemma2557
        [ a r:Fact; r:gives {(9820 289) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 892];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1893 a r:Inference;
    r:gives {
        893 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {893 math:notEqualTo 0}]
        skolem:lemma3327
        [ a r:Fact; r:gives {((0 8 9 3) "=<") list:sort (0 3 8 9)}]
        [ a r:Fact; r:gives {((0 8 9 3) ">=") list:sort (9 8 3 0)}]
        skolem:lemma2712
        skolem:lemma2713
        [ a r:Fact; r:gives {(9830 389) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 893];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1894 a r:Inference;
    r:gives {
        894 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {894 math:notEqualTo 0}]
        skolem:lemma3328
        [ a r:Fact; r:gives {((0 8 9 4) "=<") list:sort (0 4 8 9)}]
        [ a r:Fact; r:gives {((0 8 9 4) ">=") list:sort (9 8 4 0)}]
        skolem:lemma2854
        skolem:lemma2855
        [ a r:Fact; r:gives {(9840 489) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 894];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1895 a r:Inference;
    r:gives {
        895 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {895 math:notEqualTo 0}]
        skolem:lemma3329
        [ a r:Fact; r:gives {((0 8 9 5) "=<") list:sort (0 5 8 9)}]
        [ a r:Fact; r:gives {((0 8 9 5) ">=") list:sort (9 8 5 0)}]
        skolem:lemma2984
        skolem:lemma2985
        [ a r:Fact; r:gives {(9850 589) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 895];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1896 a r:Inference;
    r:gives {
        896 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {896 math:notEqualTo 0}]
        skolem:lemma3330
        [ a r:Fact; r:gives {((0 8 9 6) "=<") list:sort (0 6 8 9)}]
        [ a r:Fact; r:gives {((0 8 9 6) ">=") list:sort (9 8 6 0)}]
        skolem:lemma3104
        skolem:lemma3105
        [ a r:Fact; r:gives {(9860 689) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 896];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1897 a r:Inference;
    r:gives {
        897 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {897 math:notEqualTo 0}]
        skolem:lemma3331
        [ a r:Fact; r:gives {((0 8 9 7) "=<") list:sort (0 7 8 9)}]
        [ a r:Fact; r:gives {((0 8 9 7) ">=") list:sort (9 8 7 0)}]
        skolem:lemma3216
        skolem:lemma3217
        [ a r:Fact; r:gives {(9870 789) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 897];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1898 a r:Inference;
    r:gives {
        898 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {898 math:notEqualTo 0}]
        skolem:lemma3332
        [ a r:Fact; r:gives {((0 8 9 8) "=<") list:sort (0 8 8 9)}]
        [ a r:Fact; r:gives {((0 8 9 8) ">=") list:sort (9 8 8 0)}]
        skolem:lemma3322
        skolem:lemma3323
        [ a r:Fact; r:gives {(9880 889) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 898];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 8 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 889];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1899 a r:Inference;
    r:gives {
        899 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {899 math:notEqualTo 0}]
        skolem:lemma3333
        [ a r:Fact; r:gives {((0 8 9 9) "=<") list:sort (0 8 9 9)}]
        [ a r:Fact; r:gives {((0 8 9 9) ">=") list:sort (9 9 8 0)}]
        skolem:lemma3334
        skolem:lemma3335
        [ a r:Fact; r:gives {(9980 899) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 899];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 8 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 8 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 899];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9980];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1900 a r:Inference;
    r:gives {
        900 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {900 math:notEqualTo 0}]
        skolem:lemma3336
        [ a r:Fact; r:gives {((0 9 0 0) "=<") list:sort (0 0 0 9)}]
        [ a r:Fact; r:gives {((0 9 0 0) ">=") list:sort (9 0 0 0)}]
        skolem:lemma2026
        skolem:lemma2027
        [ a r:Fact; r:gives {(9000 9) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 0 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1901 a r:Inference;
    r:gives {
        901 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {901 math:notEqualTo 0}]
        skolem:lemma3337
        [ a r:Fact; r:gives {((0 9 0 1) "=<") list:sort (0 0 1 9)}]
        [ a r:Fact; r:gives {((0 9 0 1) ">=") list:sort (9 1 0 0)}]
        skolem:lemma2054
        skolem:lemma2055
        [ a r:Fact; r:gives {(9100 19) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 901];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1902 a r:Inference;
    r:gives {
        902 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {902 math:notEqualTo 0}]
        skolem:lemma3338
        [ a r:Fact; r:gives {((0 9 0 2) "=<") list:sort (0 0 2 9)}]
        [ a r:Fact; r:gives {((0 9 0 2) ">=") list:sort (9 2 0 0)}]
        skolem:lemma2080
        skolem:lemma2081
        [ a r:Fact; r:gives {(9200 29) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 902];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1903 a r:Inference;
    r:gives {
        903 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {903 math:notEqualTo 0}]
        skolem:lemma3339
        [ a r:Fact; r:gives {((0 9 0 3) "=<") list:sort (0 0 3 9)}]
        [ a r:Fact; r:gives {((0 9 0 3) ">=") list:sort (9 3 0 0)}]
        skolem:lemma2104
        skolem:lemma2105
        [ a r:Fact; r:gives {(9300 39) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 903];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1904 a r:Inference;
    r:gives {
        904 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {904 math:notEqualTo 0}]
        skolem:lemma3340
        [ a r:Fact; r:gives {((0 9 0 4) "=<") list:sort (0 0 4 9)}]
        [ a r:Fact; r:gives {((0 9 0 4) ">=") list:sort (9 4 0 0)}]
        skolem:lemma2126
        skolem:lemma2127
        [ a r:Fact; r:gives {(9400 49) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 904];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1905 a r:Inference;
    r:gives {
        905 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {905 math:notEqualTo 0}]
        skolem:lemma3341
        [ a r:Fact; r:gives {((0 9 0 5) "=<") list:sort (0 0 5 9)}]
        [ a r:Fact; r:gives {((0 9 0 5) ">=") list:sort (9 5 0 0)}]
        skolem:lemma2146
        skolem:lemma2147
        [ a r:Fact; r:gives {(9500 59) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 905];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1906 a r:Inference;
    r:gives {
        906 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {906 math:notEqualTo 0}]
        skolem:lemma3342
        [ a r:Fact; r:gives {((0 9 0 6) "=<") list:sort (0 0 6 9)}]
        [ a r:Fact; r:gives {((0 9 0 6) ">=") list:sort (9 6 0 0)}]
        skolem:lemma2164
        skolem:lemma2165
        [ a r:Fact; r:gives {(9600 69) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 906];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1907 a r:Inference;
    r:gives {
        907 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {907 math:notEqualTo 0}]
        skolem:lemma3343
        [ a r:Fact; r:gives {((0 9 0 7) "=<") list:sort (0 0 7 9)}]
        [ a r:Fact; r:gives {((0 9 0 7) ">=") list:sort (9 7 0 0)}]
        skolem:lemma2180
        skolem:lemma2181
        [ a r:Fact; r:gives {(9700 79) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 907];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1908 a r:Inference;
    r:gives {
        908 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {908 math:notEqualTo 0}]
        skolem:lemma3344
        [ a r:Fact; r:gives {((0 9 0 8) "=<") list:sort (0 0 8 9)}]
        [ a r:Fact; r:gives {((0 9 0 8) ">=") list:sort (9 8 0 0)}]
        skolem:lemma2194
        skolem:lemma2195
        [ a r:Fact; r:gives {(9800 89) math:difference 9711}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9711 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9711 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 908];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1909 a r:Inference;
    r:gives {
        909 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {909 math:notEqualTo 0}]
        skolem:lemma3345
        [ a r:Fact; r:gives {((0 9 0 9) "=<") list:sort (0 0 9 9)}]
        [ a r:Fact; r:gives {((0 9 0 9) ">=") list:sort (9 9 0 0)}]
        skolem:lemma2206
        skolem:lemma2207
        [ a r:Fact; r:gives {(9900 99) math:difference 9801}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9801 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9801 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 909];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 0 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9801];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1910 a r:Inference;
    r:gives {
        910 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {910 math:notEqualTo 0}]
        skolem:lemma3346
        [ a r:Fact; r:gives {((0 9 1 0) "=<") list:sort (0 0 1 9)}]
        [ a r:Fact; r:gives {((0 9 1 0) ">=") list:sort (9 1 0 0)}]
        skolem:lemma2054
        skolem:lemma2055
        [ a r:Fact; r:gives {(9100 19) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 910];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 1 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1911 a r:Inference;
    r:gives {
        911 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {911 math:notEqualTo 0}]
        skolem:lemma3347
        [ a r:Fact; r:gives {((0 9 1 1) "=<") list:sort (0 1 1 9)}]
        [ a r:Fact; r:gives {((0 9 1 1) ">=") list:sort (9 1 1 0)}]
        skolem:lemma2244
        skolem:lemma2245
        [ a r:Fact; r:gives {(9110 119) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 911];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 1 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 119];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1912 a r:Inference;
    r:gives {
        912 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {912 math:notEqualTo 0}]
        skolem:lemma3348
        [ a r:Fact; r:gives {((0 9 1 2) "=<") list:sort (0 1 2 9)}]
        [ a r:Fact; r:gives {((0 9 1 2) ">=") list:sort (9 2 1 0)}]
        skolem:lemma2270
        skolem:lemma2271
        [ a r:Fact; r:gives {(9210 129) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 912];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1913 a r:Inference;
    r:gives {
        913 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {913 math:notEqualTo 0}]
        skolem:lemma3349
        [ a r:Fact; r:gives {((0 9 1 3) "=<") list:sort (0 1 3 9)}]
        [ a r:Fact; r:gives {((0 9 1 3) ">=") list:sort (9 3 1 0)}]
        skolem:lemma2294
        skolem:lemma2295
        [ a r:Fact; r:gives {(9310 139) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 913];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1914 a r:Inference;
    r:gives {
        914 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {914 math:notEqualTo 0}]
        skolem:lemma3350
        [ a r:Fact; r:gives {((0 9 1 4) "=<") list:sort (0 1 4 9)}]
        [ a r:Fact; r:gives {((0 9 1 4) ">=") list:sort (9 4 1 0)}]
        skolem:lemma2316
        skolem:lemma2317
        [ a r:Fact; r:gives {(9410 149) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 914];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1915 a r:Inference;
    r:gives {
        915 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {915 math:notEqualTo 0}]
        skolem:lemma3351
        [ a r:Fact; r:gives {((0 9 1 5) "=<") list:sort (0 1 5 9)}]
        [ a r:Fact; r:gives {((0 9 1 5) ">=") list:sort (9 5 1 0)}]
        skolem:lemma2336
        skolem:lemma2337
        [ a r:Fact; r:gives {(9510 159) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 915];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1916 a r:Inference;
    r:gives {
        916 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {916 math:notEqualTo 0}]
        skolem:lemma3352
        [ a r:Fact; r:gives {((0 9 1 6) "=<") list:sort (0 1 6 9)}]
        [ a r:Fact; r:gives {((0 9 1 6) ">=") list:sort (9 6 1 0)}]
        skolem:lemma2354
        skolem:lemma2355
        [ a r:Fact; r:gives {(9610 169) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 916];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1917 a r:Inference;
    r:gives {
        917 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {917 math:notEqualTo 0}]
        skolem:lemma3353
        [ a r:Fact; r:gives {((0 9 1 7) "=<") list:sort (0 1 7 9)}]
        [ a r:Fact; r:gives {((0 9 1 7) ">=") list:sort (9 7 1 0)}]
        skolem:lemma2370
        skolem:lemma2371
        [ a r:Fact; r:gives {(9710 179) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 917];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1918 a r:Inference;
    r:gives {
        918 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {918 math:notEqualTo 0}]
        skolem:lemma3354
        [ a r:Fact; r:gives {((0 9 1 8) "=<") list:sort (0 1 8 9)}]
        [ a r:Fact; r:gives {((0 9 1 8) ">=") list:sort (9 8 1 0)}]
        skolem:lemma2384
        skolem:lemma2385
        [ a r:Fact; r:gives {(9810 189) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 918];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1919 a r:Inference;
    r:gives {
        919 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {919 math:notEqualTo 0}]
        skolem:lemma3355
        [ a r:Fact; r:gives {((0 9 1 9) "=<") list:sort (0 1 9 9)}]
        [ a r:Fact; r:gives {((0 9 1 9) ">=") list:sort (9 9 1 0)}]
        skolem:lemma2396
        skolem:lemma2397
        [ a r:Fact; r:gives {(9910 199) math:difference 9711}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9711 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9711 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 919];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 1 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 199];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9910];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1920 a r:Inference;
    r:gives {
        920 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {920 math:notEqualTo 0}]
        skolem:lemma3356
        [ a r:Fact; r:gives {((0 9 2 0) "=<") list:sort (0 0 2 9)}]
        [ a r:Fact; r:gives {((0 9 2 0) ">=") list:sort (9 2 0 0)}]
        skolem:lemma2080
        skolem:lemma2081
        [ a r:Fact; r:gives {(9200 29) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 920];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1921 a r:Inference;
    r:gives {
        921 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {921 math:notEqualTo 0}]
        skolem:lemma3357
        [ a r:Fact; r:gives {((0 9 2 1) "=<") list:sort (0 1 2 9)}]
        [ a r:Fact; r:gives {((0 9 2 1) ">=") list:sort (9 2 1 0)}]
        skolem:lemma2270
        skolem:lemma2271
        [ a r:Fact; r:gives {(9210 129) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 921];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1922 a r:Inference;
    r:gives {
        922 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {922 math:notEqualTo 0}]
        skolem:lemma3358
        [ a r:Fact; r:gives {((0 9 2 2) "=<") list:sort (0 2 2 9)}]
        [ a r:Fact; r:gives {((0 9 2 2) ">=") list:sort (9 2 2 0)}]
        skolem:lemma2442
        skolem:lemma2443
        [ a r:Fact; r:gives {(9220 229) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 922];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 2 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 229];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1923 a r:Inference;
    r:gives {
        923 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {923 math:notEqualTo 0}]
        skolem:lemma3359
        [ a r:Fact; r:gives {((0 9 2 3) "=<") list:sort (0 2 3 9)}]
        [ a r:Fact; r:gives {((0 9 2 3) ">=") list:sort (9 3 2 0)}]
        skolem:lemma2466
        skolem:lemma2467
        [ a r:Fact; r:gives {(9320 239) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 923];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1924 a r:Inference;
    r:gives {
        924 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {924 math:notEqualTo 0}]
        skolem:lemma3360
        [ a r:Fact; r:gives {((0 9 2 4) "=<") list:sort (0 2 4 9)}]
        [ a r:Fact; r:gives {((0 9 2 4) ">=") list:sort (9 4 2 0)}]
        skolem:lemma2488
        skolem:lemma2489
        [ a r:Fact; r:gives {(9420 249) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 924];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1925 a r:Inference;
    r:gives {
        925 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {925 math:notEqualTo 0}]
        skolem:lemma3361
        [ a r:Fact; r:gives {((0 9 2 5) "=<") list:sort (0 2 5 9)}]
        [ a r:Fact; r:gives {((0 9 2 5) ">=") list:sort (9 5 2 0)}]
        skolem:lemma2508
        skolem:lemma2509
        [ a r:Fact; r:gives {(9520 259) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 925];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1926 a r:Inference;
    r:gives {
        926 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {926 math:notEqualTo 0}]
        skolem:lemma3362
        [ a r:Fact; r:gives {((0 9 2 6) "=<") list:sort (0 2 6 9)}]
        [ a r:Fact; r:gives {((0 9 2 6) ">=") list:sort (9 6 2 0)}]
        skolem:lemma2526
        skolem:lemma2527
        [ a r:Fact; r:gives {(9620 269) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 926];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1927 a r:Inference;
    r:gives {
        927 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {927 math:notEqualTo 0}]
        skolem:lemma3363
        [ a r:Fact; r:gives {((0 9 2 7) "=<") list:sort (0 2 7 9)}]
        [ a r:Fact; r:gives {((0 9 2 7) ">=") list:sort (9 7 2 0)}]
        skolem:lemma2542
        skolem:lemma2543
        [ a r:Fact; r:gives {(9720 279) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 927];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1928 a r:Inference;
    r:gives {
        928 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {928 math:notEqualTo 0}]
        skolem:lemma3364
        [ a r:Fact; r:gives {((0 9 2 8) "=<") list:sort (0 2 8 9)}]
        [ a r:Fact; r:gives {((0 9 2 8) ">=") list:sort (9 8 2 0)}]
        skolem:lemma2556
        skolem:lemma2557
        [ a r:Fact; r:gives {(9820 289) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 928];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1929 a r:Inference;
    r:gives {
        929 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {929 math:notEqualTo 0}]
        skolem:lemma3365
        [ a r:Fact; r:gives {((0 9 2 9) "=<") list:sort (0 2 9 9)}]
        [ a r:Fact; r:gives {((0 9 2 9) ">=") list:sort (9 9 2 0)}]
        skolem:lemma2568
        skolem:lemma2569
        [ a r:Fact; r:gives {(9920 299) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 929];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 2 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 299];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9920];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1930 a r:Inference;
    r:gives {
        930 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {930 math:notEqualTo 0}]
        skolem:lemma3366
        [ a r:Fact; r:gives {((0 9 3 0) "=<") list:sort (0 0 3 9)}]
        [ a r:Fact; r:gives {((0 9 3 0) ">=") list:sort (9 3 0 0)}]
        skolem:lemma2104
        skolem:lemma2105
        [ a r:Fact; r:gives {(9300 39) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 930];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1931 a r:Inference;
    r:gives {
        931 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {931 math:notEqualTo 0}]
        skolem:lemma3367
        [ a r:Fact; r:gives {((0 9 3 1) "=<") list:sort (0 1 3 9)}]
        [ a r:Fact; r:gives {((0 9 3 1) ">=") list:sort (9 3 1 0)}]
        skolem:lemma2294
        skolem:lemma2295
        [ a r:Fact; r:gives {(9310 139) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 931];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1932 a r:Inference;
    r:gives {
        932 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {932 math:notEqualTo 0}]
        skolem:lemma3368
        [ a r:Fact; r:gives {((0 9 3 2) "=<") list:sort (0 2 3 9)}]
        [ a r:Fact; r:gives {((0 9 3 2) ">=") list:sort (9 3 2 0)}]
        skolem:lemma2466
        skolem:lemma2467
        [ a r:Fact; r:gives {(9320 239) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 932];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1933 a r:Inference;
    r:gives {
        933 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {933 math:notEqualTo 0}]
        skolem:lemma3369
        [ a r:Fact; r:gives {((0 9 3 3) "=<") list:sort (0 3 3 9)}]
        [ a r:Fact; r:gives {((0 9 3 3) ">=") list:sort (9 3 3 0)}]
        skolem:lemma2622
        skolem:lemma2623
        [ a r:Fact; r:gives {(9330 339) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 933];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 3 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 339];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1934 a r:Inference;
    r:gives {
        934 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {934 math:notEqualTo 0}]
        skolem:lemma3370
        [ a r:Fact; r:gives {((0 9 3 4) "=<") list:sort (0 3 4 9)}]
        [ a r:Fact; r:gives {((0 9 3 4) ">=") list:sort (9 4 3 0)}]
        skolem:lemma2644
        skolem:lemma2645
        [ a r:Fact; r:gives {(9430 349) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 934];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1935 a r:Inference;
    r:gives {
        935 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {935 math:notEqualTo 0}]
        skolem:lemma3371
        [ a r:Fact; r:gives {((0 9 3 5) "=<") list:sort (0 3 5 9)}]
        [ a r:Fact; r:gives {((0 9 3 5) ">=") list:sort (9 5 3 0)}]
        skolem:lemma2664
        skolem:lemma2665
        [ a r:Fact; r:gives {(9530 359) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 935];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1936 a r:Inference;
    r:gives {
        936 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {936 math:notEqualTo 0}]
        skolem:lemma3372
        [ a r:Fact; r:gives {((0 9 3 6) "=<") list:sort (0 3 6 9)}]
        [ a r:Fact; r:gives {((0 9 3 6) ">=") list:sort (9 6 3 0)}]
        skolem:lemma2682
        skolem:lemma2683
        [ a r:Fact; r:gives {(9630 369) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 936];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1937 a r:Inference;
    r:gives {
        937 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {937 math:notEqualTo 0}]
        skolem:lemma3373
        [ a r:Fact; r:gives {((0 9 3 7) "=<") list:sort (0 3 7 9)}]
        [ a r:Fact; r:gives {((0 9 3 7) ">=") list:sort (9 7 3 0)}]
        skolem:lemma2698
        skolem:lemma2699
        [ a r:Fact; r:gives {(9730 379) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 937];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1938 a r:Inference;
    r:gives {
        938 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {938 math:notEqualTo 0}]
        skolem:lemma3374
        [ a r:Fact; r:gives {((0 9 3 8) "=<") list:sort (0 3 8 9)}]
        [ a r:Fact; r:gives {((0 9 3 8) ">=") list:sort (9 8 3 0)}]
        skolem:lemma2712
        skolem:lemma2713
        [ a r:Fact; r:gives {(9830 389) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 938];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1939 a r:Inference;
    r:gives {
        939 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {939 math:notEqualTo 0}]
        skolem:lemma3375
        [ a r:Fact; r:gives {((0 9 3 9) "=<") list:sort (0 3 9 9)}]
        [ a r:Fact; r:gives {((0 9 3 9) ">=") list:sort (9 9 3 0)}]
        skolem:lemma2724
        skolem:lemma2725
        [ a r:Fact; r:gives {(9930 399) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 939];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 3 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 399];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9930];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1940 a r:Inference;
    r:gives {
        940 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {940 math:notEqualTo 0}]
        skolem:lemma3376
        [ a r:Fact; r:gives {((0 9 4 0) "=<") list:sort (0 0 4 9)}]
        [ a r:Fact; r:gives {((0 9 4 0) ">=") list:sort (9 4 0 0)}]
        skolem:lemma2126
        skolem:lemma2127
        [ a r:Fact; r:gives {(9400 49) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 940];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1941 a r:Inference;
    r:gives {
        941 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {941 math:notEqualTo 0}]
        skolem:lemma3377
        [ a r:Fact; r:gives {((0 9 4 1) "=<") list:sort (0 1 4 9)}]
        [ a r:Fact; r:gives {((0 9 4 1) ">=") list:sort (9 4 1 0)}]
        skolem:lemma2316
        skolem:lemma2317
        [ a r:Fact; r:gives {(9410 149) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 941];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1942 a r:Inference;
    r:gives {
        942 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {942 math:notEqualTo 0}]
        skolem:lemma3378
        [ a r:Fact; r:gives {((0 9 4 2) "=<") list:sort (0 2 4 9)}]
        [ a r:Fact; r:gives {((0 9 4 2) ">=") list:sort (9 4 2 0)}]
        skolem:lemma2488
        skolem:lemma2489
        [ a r:Fact; r:gives {(9420 249) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 942];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1943 a r:Inference;
    r:gives {
        943 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {943 math:notEqualTo 0}]
        skolem:lemma3379
        [ a r:Fact; r:gives {((0 9 4 3) "=<") list:sort (0 3 4 9)}]
        [ a r:Fact; r:gives {((0 9 4 3) ">=") list:sort (9 4 3 0)}]
        skolem:lemma2644
        skolem:lemma2645
        [ a r:Fact; r:gives {(9430 349) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 943];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1944 a r:Inference;
    r:gives {
        944 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {944 math:notEqualTo 0}]
        skolem:lemma3380
        [ a r:Fact; r:gives {((0 9 4 4) "=<") list:sort (0 4 4 9)}]
        [ a r:Fact; r:gives {((0 9 4 4) ">=") list:sort (9 4 4 0)}]
        skolem:lemma2786
        skolem:lemma2787
        [ a r:Fact; r:gives {(9440 449) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 944];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 4 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 449];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1945 a r:Inference;
    r:gives {
        945 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {945 math:notEqualTo 0}]
        skolem:lemma3381
        [ a r:Fact; r:gives {((0 9 4 5) "=<") list:sort (0 4 5 9)}]
        [ a r:Fact; r:gives {((0 9 4 5) ">=") list:sort (9 5 4 0)}]
        skolem:lemma2806
        skolem:lemma2807
        [ a r:Fact; r:gives {(9540 459) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 945];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1946 a r:Inference;
    r:gives {
        946 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {946 math:notEqualTo 0}]
        skolem:lemma3382
        [ a r:Fact; r:gives {((0 9 4 6) "=<") list:sort (0 4 6 9)}]
        [ a r:Fact; r:gives {((0 9 4 6) ">=") list:sort (9 6 4 0)}]
        skolem:lemma2824
        skolem:lemma2825
        [ a r:Fact; r:gives {(9640 469) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 946];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1947 a r:Inference;
    r:gives {
        947 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {947 math:notEqualTo 0}]
        skolem:lemma3383
        [ a r:Fact; r:gives {((0 9 4 7) "=<") list:sort (0 4 7 9)}]
        [ a r:Fact; r:gives {((0 9 4 7) ">=") list:sort (9 7 4 0)}]
        skolem:lemma2840
        skolem:lemma2841
        [ a r:Fact; r:gives {(9740 479) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 947];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1948 a r:Inference;
    r:gives {
        948 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {948 math:notEqualTo 0}]
        skolem:lemma3384
        [ a r:Fact; r:gives {((0 9 4 8) "=<") list:sort (0 4 8 9)}]
        [ a r:Fact; r:gives {((0 9 4 8) ">=") list:sort (9 8 4 0)}]
        skolem:lemma2854
        skolem:lemma2855
        [ a r:Fact; r:gives {(9840 489) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 948];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1949 a r:Inference;
    r:gives {
        949 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {949 math:notEqualTo 0}]
        skolem:lemma3385
        [ a r:Fact; r:gives {((0 9 4 9) "=<") list:sort (0 4 9 9)}]
        [ a r:Fact; r:gives {((0 9 4 9) ">=") list:sort (9 9 4 0)}]
        skolem:lemma2866
        skolem:lemma2867
        [ a r:Fact; r:gives {(9940 499) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 949];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 4 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 499];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9940];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1950 a r:Inference;
    r:gives {
        950 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {950 math:notEqualTo 0}]
        skolem:lemma3386
        [ a r:Fact; r:gives {((0 9 5 0) "=<") list:sort (0 0 5 9)}]
        [ a r:Fact; r:gives {((0 9 5 0) ">=") list:sort (9 5 0 0)}]
        skolem:lemma2146
        skolem:lemma2147
        [ a r:Fact; r:gives {(9500 59) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 950];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1951 a r:Inference;
    r:gives {
        951 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {951 math:notEqualTo 0}]
        skolem:lemma3387
        [ a r:Fact; r:gives {((0 9 5 1) "=<") list:sort (0 1 5 9)}]
        [ a r:Fact; r:gives {((0 9 5 1) ">=") list:sort (9 5 1 0)}]
        skolem:lemma2336
        skolem:lemma2337
        [ a r:Fact; r:gives {(9510 159) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 951];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1952 a r:Inference;
    r:gives {
        952 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {952 math:notEqualTo 0}]
        skolem:lemma3388
        [ a r:Fact; r:gives {((0 9 5 2) "=<") list:sort (0 2 5 9)}]
        [ a r:Fact; r:gives {((0 9 5 2) ">=") list:sort (9 5 2 0)}]
        skolem:lemma2508
        skolem:lemma2509
        [ a r:Fact; r:gives {(9520 259) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 952];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1953 a r:Inference;
    r:gives {
        953 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {953 math:notEqualTo 0}]
        skolem:lemma3389
        [ a r:Fact; r:gives {((0 9 5 3) "=<") list:sort (0 3 5 9)}]
        [ a r:Fact; r:gives {((0 9 5 3) ">=") list:sort (9 5 3 0)}]
        skolem:lemma2664
        skolem:lemma2665
        [ a r:Fact; r:gives {(9530 359) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 953];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1954 a r:Inference;
    r:gives {
        954 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {954 math:notEqualTo 0}]
        skolem:lemma3390
        [ a r:Fact; r:gives {((0 9 5 4) "=<") list:sort (0 4 5 9)}]
        [ a r:Fact; r:gives {((0 9 5 4) ">=") list:sort (9 5 4 0)}]
        skolem:lemma2806
        skolem:lemma2807
        [ a r:Fact; r:gives {(9540 459) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 954];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1955 a r:Inference;
    r:gives {
        955 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {955 math:notEqualTo 0}]
        skolem:lemma3391
        [ a r:Fact; r:gives {((0 9 5 5) "=<") list:sort (0 5 5 9)}]
        [ a r:Fact; r:gives {((0 9 5 5) ">=") list:sort (9 5 5 0)}]
        skolem:lemma2936
        skolem:lemma2937
        [ a r:Fact; r:gives {(9550 559) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 955];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 5 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 559];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1956 a r:Inference;
    r:gives {
        956 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {956 math:notEqualTo 0}]
        skolem:lemma3392
        [ a r:Fact; r:gives {((0 9 5 6) "=<") list:sort (0 5 6 9)}]
        [ a r:Fact; r:gives {((0 9 5 6) ">=") list:sort (9 6 5 0)}]
        skolem:lemma2954
        skolem:lemma2955
        [ a r:Fact; r:gives {(9650 569) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 956];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1957 a r:Inference;
    r:gives {
        957 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {957 math:notEqualTo 0}]
        skolem:lemma3393
        [ a r:Fact; r:gives {((0 9 5 7) "=<") list:sort (0 5 7 9)}]
        [ a r:Fact; r:gives {((0 9 5 7) ">=") list:sort (9 7 5 0)}]
        skolem:lemma2970
        skolem:lemma2971
        [ a r:Fact; r:gives {(9750 579) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 957];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1958 a r:Inference;
    r:gives {
        958 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {958 math:notEqualTo 0}]
        skolem:lemma3394
        [ a r:Fact; r:gives {((0 9 5 8) "=<") list:sort (0 5 8 9)}]
        [ a r:Fact; r:gives {((0 9 5 8) ">=") list:sort (9 8 5 0)}]
        skolem:lemma2984
        skolem:lemma2985
        [ a r:Fact; r:gives {(9850 589) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 958];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1959 a r:Inference;
    r:gives {
        959 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {959 math:notEqualTo 0}]
        skolem:lemma3395
        [ a r:Fact; r:gives {((0 9 5 9) "=<") list:sort (0 5 9 9)}]
        [ a r:Fact; r:gives {((0 9 5 9) ">=") list:sort (9 9 5 0)}]
        skolem:lemma2996
        skolem:lemma2997
        [ a r:Fact; r:gives {(9950 599) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 959];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 5 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 599];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9950];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1960 a r:Inference;
    r:gives {
        960 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {960 math:notEqualTo 0}]
        skolem:lemma3396
        [ a r:Fact; r:gives {((0 9 6 0) "=<") list:sort (0 0 6 9)}]
        [ a r:Fact; r:gives {((0 9 6 0) ">=") list:sort (9 6 0 0)}]
        skolem:lemma2164
        skolem:lemma2165
        [ a r:Fact; r:gives {(9600 69) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 960];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1961 a r:Inference;
    r:gives {
        961 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {961 math:notEqualTo 0}]
        skolem:lemma3397
        [ a r:Fact; r:gives {((0 9 6 1) "=<") list:sort (0 1 6 9)}]
        [ a r:Fact; r:gives {((0 9 6 1) ">=") list:sort (9 6 1 0)}]
        skolem:lemma2354
        skolem:lemma2355
        [ a r:Fact; r:gives {(9610 169) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 961];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1962 a r:Inference;
    r:gives {
        962 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {962 math:notEqualTo 0}]
        skolem:lemma3398
        [ a r:Fact; r:gives {((0 9 6 2) "=<") list:sort (0 2 6 9)}]
        [ a r:Fact; r:gives {((0 9 6 2) ">=") list:sort (9 6 2 0)}]
        skolem:lemma2526
        skolem:lemma2527
        [ a r:Fact; r:gives {(9620 269) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 962];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1963 a r:Inference;
    r:gives {
        963 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {963 math:notEqualTo 0}]
        skolem:lemma3399
        [ a r:Fact; r:gives {((0 9 6 3) "=<") list:sort (0 3 6 9)}]
        [ a r:Fact; r:gives {((0 9 6 3) ">=") list:sort (9 6 3 0)}]
        skolem:lemma2682
        skolem:lemma2683
        [ a r:Fact; r:gives {(9630 369) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 963];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1964 a r:Inference;
    r:gives {
        964 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {964 math:notEqualTo 0}]
        skolem:lemma3400
        [ a r:Fact; r:gives {((0 9 6 4) "=<") list:sort (0 4 6 9)}]
        [ a r:Fact; r:gives {((0 9 6 4) ">=") list:sort (9 6 4 0)}]
        skolem:lemma2824
        skolem:lemma2825
        [ a r:Fact; r:gives {(9640 469) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 964];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1965 a r:Inference;
    r:gives {
        965 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {965 math:notEqualTo 0}]
        skolem:lemma3401
        [ a r:Fact; r:gives {((0 9 6 5) "=<") list:sort (0 5 6 9)}]
        [ a r:Fact; r:gives {((0 9 6 5) ">=") list:sort (9 6 5 0)}]
        skolem:lemma2954
        skolem:lemma2955
        [ a r:Fact; r:gives {(9650 569) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 965];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1966 a r:Inference;
    r:gives {
        966 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {966 math:notEqualTo 0}]
        skolem:lemma3402
        [ a r:Fact; r:gives {((0 9 6 6) "=<") list:sort (0 6 6 9)}]
        [ a r:Fact; r:gives {((0 9 6 6) ">=") list:sort (9 6 6 0)}]
        skolem:lemma3074
        skolem:lemma3075
        [ a r:Fact; r:gives {(9660 669) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 966];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 6 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 669];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1967 a r:Inference;
    r:gives {
        967 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {967 math:notEqualTo 0}]
        skolem:lemma3403
        [ a r:Fact; r:gives {((0 9 6 7) "=<") list:sort (0 6 7 9)}]
        [ a r:Fact; r:gives {((0 9 6 7) ">=") list:sort (9 7 6 0)}]
        skolem:lemma3090
        skolem:lemma3091
        [ a r:Fact; r:gives {(9760 679) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 967];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1968 a r:Inference;
    r:gives {
        968 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {968 math:notEqualTo 0}]
        skolem:lemma3404
        [ a r:Fact; r:gives {((0 9 6 8) "=<") list:sort (0 6 8 9)}]
        [ a r:Fact; r:gives {((0 9 6 8) ">=") list:sort (9 8 6 0)}]
        skolem:lemma3104
        skolem:lemma3105
        [ a r:Fact; r:gives {(9860 689) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 968];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1969 a r:Inference;
    r:gives {
        969 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {969 math:notEqualTo 0}]
        skolem:lemma3405
        [ a r:Fact; r:gives {((0 9 6 9) "=<") list:sort (0 6 9 9)}]
        [ a r:Fact; r:gives {((0 9 6 9) ">=") list:sort (9 9 6 0)}]
        skolem:lemma3116
        skolem:lemma3117
        [ a r:Fact; r:gives {(9960 699) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 969];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 6 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 699];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9960];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1970 a r:Inference;
    r:gives {
        970 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {970 math:notEqualTo 0}]
        skolem:lemma3406
        [ a r:Fact; r:gives {((0 9 7 0) "=<") list:sort (0 0 7 9)}]
        [ a r:Fact; r:gives {((0 9 7 0) ">=") list:sort (9 7 0 0)}]
        skolem:lemma2180
        skolem:lemma2181
        [ a r:Fact; r:gives {(9700 79) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 970];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1971 a r:Inference;
    r:gives {
        971 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {971 math:notEqualTo 0}]
        skolem:lemma3407
        [ a r:Fact; r:gives {((0 9 7 1) "=<") list:sort (0 1 7 9)}]
        [ a r:Fact; r:gives {((0 9 7 1) ">=") list:sort (9 7 1 0)}]
        skolem:lemma2370
        skolem:lemma2371
        [ a r:Fact; r:gives {(9710 179) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 971];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1972 a r:Inference;
    r:gives {
        972 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {972 math:notEqualTo 0}]
        skolem:lemma3408
        [ a r:Fact; r:gives {((0 9 7 2) "=<") list:sort (0 2 7 9)}]
        [ a r:Fact; r:gives {((0 9 7 2) ">=") list:sort (9 7 2 0)}]
        skolem:lemma2542
        skolem:lemma2543
        [ a r:Fact; r:gives {(9720 279) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 972];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1973 a r:Inference;
    r:gives {
        973 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {973 math:notEqualTo 0}]
        skolem:lemma3409
        [ a r:Fact; r:gives {((0 9 7 3) "=<") list:sort (0 3 7 9)}]
        [ a r:Fact; r:gives {((0 9 7 3) ">=") list:sort (9 7 3 0)}]
        skolem:lemma2698
        skolem:lemma2699
        [ a r:Fact; r:gives {(9730 379) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 973];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1974 a r:Inference;
    r:gives {
        974 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {974 math:notEqualTo 0}]
        skolem:lemma3410
        [ a r:Fact; r:gives {((0 9 7 4) "=<") list:sort (0 4 7 9)}]
        [ a r:Fact; r:gives {((0 9 7 4) ">=") list:sort (9 7 4 0)}]
        skolem:lemma2840
        skolem:lemma2841
        [ a r:Fact; r:gives {(9740 479) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 974];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1975 a r:Inference;
    r:gives {
        975 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {975 math:notEqualTo 0}]
        skolem:lemma3411
        [ a r:Fact; r:gives {((0 9 7 5) "=<") list:sort (0 5 7 9)}]
        [ a r:Fact; r:gives {((0 9 7 5) ">=") list:sort (9 7 5 0)}]
        skolem:lemma2970
        skolem:lemma2971
        [ a r:Fact; r:gives {(9750 579) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 975];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1976 a r:Inference;
    r:gives {
        976 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {976 math:notEqualTo 0}]
        skolem:lemma3412
        [ a r:Fact; r:gives {((0 9 7 6) "=<") list:sort (0 6 7 9)}]
        [ a r:Fact; r:gives {((0 9 7 6) ">=") list:sort (9 7 6 0)}]
        skolem:lemma3090
        skolem:lemma3091
        [ a r:Fact; r:gives {(9760 679) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 976];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1977 a r:Inference;
    r:gives {
        977 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {977 math:notEqualTo 0}]
        skolem:lemma3413
        [ a r:Fact; r:gives {((0 9 7 7) "=<") list:sort (0 7 7 9)}]
        [ a r:Fact; r:gives {((0 9 7 7) ">=") list:sort (9 7 7 0)}]
        skolem:lemma3202
        skolem:lemma3203
        [ a r:Fact; r:gives {(9770 779) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 977];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 7 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 779];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1978 a r:Inference;
    r:gives {
        978 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {978 math:notEqualTo 0}]
        skolem:lemma3414
        [ a r:Fact; r:gives {((0 9 7 8) "=<") list:sort (0 7 8 9)}]
        [ a r:Fact; r:gives {((0 9 7 8) ">=") list:sort (9 8 7 0)}]
        skolem:lemma3216
        skolem:lemma3217
        [ a r:Fact; r:gives {(9870 789) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 978];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1979 a r:Inference;
    r:gives {
        979 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {979 math:notEqualTo 0}]
        skolem:lemma3415
        [ a r:Fact; r:gives {((0 9 7 9) "=<") list:sort (0 7 9 9)}]
        [ a r:Fact; r:gives {((0 9 7 9) ">=") list:sort (9 9 7 0)}]
        skolem:lemma3228
        skolem:lemma3229
        [ a r:Fact; r:gives {(9970 799) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 979];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 7 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 799];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9970];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1980 a r:Inference;
    r:gives {
        980 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {980 math:notEqualTo 0}]
        skolem:lemma3416
        [ a r:Fact; r:gives {((0 9 8 0) "=<") list:sort (0 0 8 9)}]
        [ a r:Fact; r:gives {((0 9 8 0) ">=") list:sort (9 8 0 0)}]
        skolem:lemma2194
        skolem:lemma2195
        [ a r:Fact; r:gives {(9800 89) math:difference 9711}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9711 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9711 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 980];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1981 a r:Inference;
    r:gives {
        981 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {981 math:notEqualTo 0}]
        skolem:lemma3417
        [ a r:Fact; r:gives {((0 9 8 1) "=<") list:sort (0 1 8 9)}]
        [ a r:Fact; r:gives {((0 9 8 1) ">=") list:sort (9 8 1 0)}]
        skolem:lemma2384
        skolem:lemma2385
        [ a r:Fact; r:gives {(9810 189) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 981];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1982 a r:Inference;
    r:gives {
        982 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {982 math:notEqualTo 0}]
        skolem:lemma3418
        [ a r:Fact; r:gives {((0 9 8 2) "=<") list:sort (0 2 8 9)}]
        [ a r:Fact; r:gives {((0 9 8 2) ">=") list:sort (9 8 2 0)}]
        skolem:lemma2556
        skolem:lemma2557
        [ a r:Fact; r:gives {(9820 289) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 982];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1983 a r:Inference;
    r:gives {
        983 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {983 math:notEqualTo 0}]
        skolem:lemma3419
        [ a r:Fact; r:gives {((0 9 8 3) "=<") list:sort (0 3 8 9)}]
        [ a r:Fact; r:gives {((0 9 8 3) ">=") list:sort (9 8 3 0)}]
        skolem:lemma2712
        skolem:lemma2713
        [ a r:Fact; r:gives {(9830 389) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 983];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1984 a r:Inference;
    r:gives {
        984 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {984 math:notEqualTo 0}]
        skolem:lemma3420
        [ a r:Fact; r:gives {((0 9 8 4) "=<") list:sort (0 4 8 9)}]
        [ a r:Fact; r:gives {((0 9 8 4) ">=") list:sort (9 8 4 0)}]
        skolem:lemma2854
        skolem:lemma2855
        [ a r:Fact; r:gives {(9840 489) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 984];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1985 a r:Inference;
    r:gives {
        985 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {985 math:notEqualTo 0}]
        skolem:lemma3421
        [ a r:Fact; r:gives {((0 9 8 5) "=<") list:sort (0 5 8 9)}]
        [ a r:Fact; r:gives {((0 9 8 5) ">=") list:sort (9 8 5 0)}]
        skolem:lemma2984
        skolem:lemma2985
        [ a r:Fact; r:gives {(9850 589) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 985];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1986 a r:Inference;
    r:gives {
        986 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {986 math:notEqualTo 0}]
        skolem:lemma3422
        [ a r:Fact; r:gives {((0 9 8 6) "=<") list:sort (0 6 8 9)}]
        [ a r:Fact; r:gives {((0 9 8 6) ">=") list:sort (9 8 6 0)}]
        skolem:lemma3104
        skolem:lemma3105
        [ a r:Fact; r:gives {(9860 689) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 986];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1987 a r:Inference;
    r:gives {
        987 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {987 math:notEqualTo 0}]
        skolem:lemma3423
        [ a r:Fact; r:gives {((0 9 8 7) "=<") list:sort (0 7 8 9)}]
        [ a r:Fact; r:gives {((0 9 8 7) ">=") list:sort (9 8 7 0)}]
        skolem:lemma3216
        skolem:lemma3217
        [ a r:Fact; r:gives {(9870 789) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 987];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1988 a r:Inference;
    r:gives {
        988 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {988 math:notEqualTo 0}]
        skolem:lemma3424
        [ a r:Fact; r:gives {((0 9 8 8) "=<") list:sort (0 8 8 9)}]
        [ a r:Fact; r:gives {((0 9 8 8) ">=") list:sort (9 8 8 0)}]
        skolem:lemma3322
        skolem:lemma3323
        [ a r:Fact; r:gives {(9880 889) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 988];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 8 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 8 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 889];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1989 a r:Inference;
    r:gives {
        989 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {989 math:notEqualTo 0}]
        skolem:lemma3425
        [ a r:Fact; r:gives {((0 9 8 9) "=<") list:sort (0 8 9 9)}]
        [ a r:Fact; r:gives {((0 9 8 9) ">=") list:sort (9 9 8 0)}]
        skolem:lemma3334
        skolem:lemma3335
        [ a r:Fact; r:gives {(9980 899) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 989];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 8 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 8 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 899];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9980];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1990 a r:Inference;
    r:gives {
        990 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {990 math:notEqualTo 0}]
        skolem:lemma3426
        [ a r:Fact; r:gives {((0 9 9 0) "=<") list:sort (0 0 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 0) ">=") list:sort (9 9 0 0)}]
        skolem:lemma2206
        skolem:lemma2207
        [ a r:Fact; r:gives {(9900 99) math:difference 9801}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9801 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9801 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 990];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 0 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 0 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9801];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1991 a r:Inference;
    r:gives {
        991 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {991 math:notEqualTo 0}]
        skolem:lemma3427
        [ a r:Fact; r:gives {((0 9 9 1) "=<") list:sort (0 1 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 1) ">=") list:sort (9 9 1 0)}]
        skolem:lemma2396
        skolem:lemma2397
        [ a r:Fact; r:gives {(9910 199) math:difference 9711}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9711 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9711 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 1 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 1 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 199];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9910];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1992 a r:Inference;
    r:gives {
        992 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {992 math:notEqualTo 0}]
        skolem:lemma3428
        [ a r:Fact; r:gives {((0 9 9 2) "=<") list:sort (0 2 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 2) ">=") list:sort (9 9 2 0)}]
        skolem:lemma2568
        skolem:lemma2569
        [ a r:Fact; r:gives {(9920 299) math:difference 9621}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9621 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9621 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 2 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 2 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 299];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9920];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1993 a r:Inference;
    r:gives {
        993 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {993 math:notEqualTo 0}]
        skolem:lemma3429
        [ a r:Fact; r:gives {((0 9 9 3) "=<") list:sort (0 3 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 3) ">=") list:sort (9 9 3 0)}]
        skolem:lemma2724
        skolem:lemma2725
        [ a r:Fact; r:gives {(9930 399) math:difference 9531}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9531 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9531 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 3 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 3 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 399];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9930];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1994 a r:Inference;
    r:gives {
        994 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {994 math:notEqualTo 0}]
        skolem:lemma3430
        [ a r:Fact; r:gives {((0 9 9 4) "=<") list:sort (0 4 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 4) ">=") list:sort (9 9 4 0)}]
        skolem:lemma2866
        skolem:lemma2867
        [ a r:Fact; r:gives {(9940 499) math:difference 9441}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9441 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9441 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 4 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 4 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 499];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9940];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1995 a r:Inference;
    r:gives {
        995 :kaprekar (0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {995 math:notEqualTo 0}]
        skolem:lemma3431
        [ a r:Fact; r:gives {((0 9 9 5) "=<") list:sort (0 5 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 5) ">=") list:sort (9 9 5 0)}]
        skolem:lemma2996
        skolem:lemma2997
        [ a r:Fact; r:gives {(9950 599) math:difference 9351}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9351 math:equalTo 6174.
        } {
            7 log:equalTo 1.
        } {
            9351 :kaprekar (1 7).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 5 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 5 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 599];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9950];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 7];
    r:rule skolem:lemma2003.

skolem:lemma1996 a r:Inference;
    r:gives {
        996 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {996 math:notEqualTo 0}]
        skolem:lemma3432
        [ a r:Fact; r:gives {((0 9 9 6) "=<") list:sort (0 6 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 6) ">=") list:sort (9 9 6 0)}]
        skolem:lemma3116
        skolem:lemma3117
        [ a r:Fact; r:gives {(9960 699) math:difference 9261}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9261 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9261 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 6 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 6 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 699];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9960];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1997 a r:Inference;
    r:gives {
        997 :kaprekar (0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {997 math:notEqualTo 0}]
        skolem:lemma3433
        [ a r:Fact; r:gives {((0 9 9 7) "=<") list:sort (0 7 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 7) ">=") list:sort (9 9 7 0)}]
        skolem:lemma3228
        skolem:lemma3229
        [ a r:Fact; r:gives {(9970 799) math:difference 9171}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9171 math:equalTo 6174.
        } {
            3 log:equalTo 1.
        } {
            9171 :kaprekar (1 3).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 7 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 7 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 799];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9970];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 3];
    r:rule skolem:lemma2003.

skolem:lemma1998 a r:Inference;
    r:gives {
        998 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {998 math:notEqualTo 0}]
        skolem:lemma3434
        [ a r:Fact; r:gives {((0 9 9 8) "=<") list:sort (0 8 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 8) ">=") list:sort (9 9 8 0)}]
        skolem:lemma3334
        skolem:lemma3335
        [ a r:Fact; r:gives {(9980 899) math:difference 9081}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            9081 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            9081 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 8 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 8 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 899];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9980];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9081];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma1999 a r:Inference;
    r:gives {
        999 :kaprekar (0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {999 math:notEqualTo 0}]
        skolem:lemma3435
        [ a r:Fact; r:gives {((0 9 9 9) "=<") list:sort (0 9 9 9)}]
        [ a r:Fact; r:gives {((0 9 9 9) ">=") list:sort (9 9 9 0)}]
        skolem:lemma3436
        skolem:lemma3437
        [ a r:Fact; r:gives {(9990 999) math:difference 8991}]
        [ a r:Fact; r:gives {(0 1) math:sum 1}]
        [ a r:Fact; r:gives {({
            8991 math:equalTo 6174.
        } {
            4 log:equalTo 1.
        } {
            8991 :kaprekar (1 4).
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (0 9 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (0 9 9 9)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (9 9 9 0)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9990];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo 4];
    r:rule skolem:lemma2003.

skolem:lemma2000 a r:Inference;
    r:gives {
        1 :numberToDigits (0 0 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 1000) math:remainder 1}]
        [ a r:Fact; r:gives {(1 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2001 a r:Inference;
    r:gives {
        (0 0 0 1) :digitsToNumber 1 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(0 0 0 1) math:sum 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3439.

skolem:lemma2002 a r:Inference;
    r:gives {
        (1 0 0 0) :digitsToNumber 1000 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 1000) math:product 1000}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(1000 0 0 0) math:sum 1000}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 1000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2003 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6, var:x_7, var:x_8, var:x_9, var:x_10. {
            var:x_0 :kaprekar (var:x_7 var:x_9).
        } <= {
            var:x_0 math:notEqualTo 0 .
            var:x_0 :numberToDigits var:x_1.
            (var:x_1 "=<") list:sort var:x_2.
            (var:x_1 ">=") list:sort var:x_3.
            var:x_2 :digitsToNumber var:x_4.
            var:x_3 :digitsToNumber var:x_5.
            (var:x_5 var:x_4) math:difference var:x_6.
            (var:x_7 1) math:sum var:x_8.
            ({
                var:x_6 math:equalTo 6174.
            } {
                var:x_9 log:equalTo var:x_8.
            } {
                var:x_6 :kaprekar (var:x_8 var:x_9).
            }) log:ifThenElseIn var:x_10.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>].

skolem:lemma2004 a r:Inference;
    r:gives {
        2 :numberToDigits (0 0 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 1000) math:remainder 2}]
        [ a r:Fact; r:gives {(2 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2005 a r:Inference;
    r:gives {
        (0 0 0 2) :digitsToNumber 2 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(0 0 0 2) math:sum 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3439.

skolem:lemma2006 a r:Inference;
    r:gives {
        (2 0 0 0) :digitsToNumber 2000 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 1000) math:product 2000}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(2000 0 0 0) math:sum 2000}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2007 a r:Inference;
    r:gives {
        3 :numberToDigits (0 0 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 1000) math:remainder 3}]
        [ a r:Fact; r:gives {(3 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2008 a r:Inference;
    r:gives {
        (0 0 0 3) :digitsToNumber 3 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(0 0 0 3) math:sum 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2009 a r:Inference;
    r:gives {
        (3 0 0 0) :digitsToNumber 3000 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(3000 0 0 0) math:sum 3000}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2010 a r:Inference;
    r:gives {
        4 :numberToDigits (0 0 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 1000) math:remainder 4}]
        [ a r:Fact; r:gives {(4 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2011 a r:Inference;
    r:gives {
        (0 0 0 4) :digitsToNumber 4 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(0 0 0 4) math:sum 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2012 a r:Inference;
    r:gives {
        (4 0 0 0) :digitsToNumber 4000 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(4000 0 0 0) math:sum 4000}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2013 a r:Inference;
    r:gives {
        5 :numberToDigits (0 0 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 1000) math:remainder 5}]
        [ a r:Fact; r:gives {(5 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2014 a r:Inference;
    r:gives {
        (0 0 0 5) :digitsToNumber 5 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(0 0 0 5) math:sum 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2015 a r:Inference;
    r:gives {
        (5 0 0 0) :digitsToNumber 5000 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(5000 0 0 0) math:sum 5000}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2016 a r:Inference;
    r:gives {
        6 :numberToDigits (0 0 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 1000) math:remainder 6}]
        [ a r:Fact; r:gives {(6 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2017 a r:Inference;
    r:gives {
        (0 0 0 6) :digitsToNumber 6 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(0 0 0 6) math:sum 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2018 a r:Inference;
    r:gives {
        (6 0 0 0) :digitsToNumber 6000 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(6000 0 0 0) math:sum 6000}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2019 a r:Inference;
    r:gives {
        7 :numberToDigits (0 0 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 1000) math:remainder 7}]
        [ a r:Fact; r:gives {(7 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2020 a r:Inference;
    r:gives {
        (0 0 0 7) :digitsToNumber 7 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(0 0 0 7) math:sum 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2021 a r:Inference;
    r:gives {
        (7 0 0 0) :digitsToNumber 7000 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(7000 0 0 0) math:sum 7000}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2022 a r:Inference;
    r:gives {
        8 :numberToDigits (0 0 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 1000) math:remainder 8}]
        [ a r:Fact; r:gives {(8 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2023 a r:Inference;
    r:gives {
        (0 0 0 8) :digitsToNumber 8 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(0 0 0 8) math:sum 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2024 a r:Inference;
    r:gives {
        (8 0 0 0) :digitsToNumber 8000 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(8000 0 0 0) math:sum 8000}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2025 a r:Inference;
    r:gives {
        9 :numberToDigits (0 0 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 1000) math:remainder 9}]
        [ a r:Fact; r:gives {(9 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2026 a r:Inference;
    r:gives {
        (0 0 0 9) :digitsToNumber 9 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(0 0 0 9) math:sum 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2027 a r:Inference;
    r:gives {
        (9 0 0 0) :digitsToNumber 9000 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 0 0 0) math:sum 9000}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2028 a r:Inference;
    r:gives {
        10 :numberToDigits (0 0 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(10 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(10 1000) math:remainder 10}]
        [ a r:Fact; r:gives {(10 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(10 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2029 a r:Inference;
    r:gives {
        11 :numberToDigits (0 0 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(11 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(11 1000) math:remainder 11}]
        [ a r:Fact; r:gives {(11 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(11 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2030 a r:Inference;
    r:gives {
        (0 0 1 1) :digitsToNumber 11 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 0 10 1) math:sum 11}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3439.

skolem:lemma2031 a r:Inference;
    r:gives {
        (1 1 0 0) :digitsToNumber 1100 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 1000) math:product 1000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(1000 100 0 0) math:sum 1100}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 1100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2032 a r:Inference;
    r:gives {
        12 :numberToDigits (0 0 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(12 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(12 1000) math:remainder 12}]
        [ a r:Fact; r:gives {(12 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(12 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2033 a r:Inference;
    r:gives {
        (0 0 1 2) :digitsToNumber 12 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 0 10 2) math:sum 12}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3439.

skolem:lemma2034 a r:Inference;
    r:gives {
        (2 1 0 0) :digitsToNumber 2100 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 1000) math:product 2000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(2000 100 0 0) math:sum 2100}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 2100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2035 a r:Inference;
    r:gives {
        13 :numberToDigits (0 0 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(13 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(13 1000) math:remainder 13}]
        [ a r:Fact; r:gives {(13 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(13 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2036 a r:Inference;
    r:gives {
        (0 0 1 3) :digitsToNumber 13 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 0 10 3) math:sum 13}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2037 a r:Inference;
    r:gives {
        (3 1 0 0) :digitsToNumber 3100 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(3000 100 0 0) math:sum 3100}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2038 a r:Inference;
    r:gives {
        14 :numberToDigits (0 0 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(14 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(14 1000) math:remainder 14}]
        [ a r:Fact; r:gives {(14 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(14 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2039 a r:Inference;
    r:gives {
        (0 0 1 4) :digitsToNumber 14 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 0 10 4) math:sum 14}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2040 a r:Inference;
    r:gives {
        (4 1 0 0) :digitsToNumber 4100 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(4000 100 0 0) math:sum 4100}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2041 a r:Inference;
    r:gives {
        15 :numberToDigits (0 0 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(15 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(15 1000) math:remainder 15}]
        [ a r:Fact; r:gives {(15 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(15 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2042 a r:Inference;
    r:gives {
        (0 0 1 5) :digitsToNumber 15 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 0 10 5) math:sum 15}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2043 a r:Inference;
    r:gives {
        (5 1 0 0) :digitsToNumber 5100 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(5000 100 0 0) math:sum 5100}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2044 a r:Inference;
    r:gives {
        16 :numberToDigits (0 0 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(16 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(16 1000) math:remainder 16}]
        [ a r:Fact; r:gives {(16 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(16 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2045 a r:Inference;
    r:gives {
        (0 0 1 6) :digitsToNumber 16 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 0 10 6) math:sum 16}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2046 a r:Inference;
    r:gives {
        (6 1 0 0) :digitsToNumber 6100 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(6000 100 0 0) math:sum 6100}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2047 a r:Inference;
    r:gives {
        17 :numberToDigits (0 0 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(17 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(17 1000) math:remainder 17}]
        [ a r:Fact; r:gives {(17 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(17 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2048 a r:Inference;
    r:gives {
        (0 0 1 7) :digitsToNumber 17 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 0 10 7) math:sum 17}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2049 a r:Inference;
    r:gives {
        (7 1 0 0) :digitsToNumber 7100 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(7000 100 0 0) math:sum 7100}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2050 a r:Inference;
    r:gives {
        18 :numberToDigits (0 0 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(18 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(18 1000) math:remainder 18}]
        [ a r:Fact; r:gives {(18 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(18 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2051 a r:Inference;
    r:gives {
        (0 0 1 8) :digitsToNumber 18 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 0 10 8) math:sum 18}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2052 a r:Inference;
    r:gives {
        (8 1 0 0) :digitsToNumber 8100 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(8000 100 0 0) math:sum 8100}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2053 a r:Inference;
    r:gives {
        19 :numberToDigits (0 0 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(19 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(19 1000) math:remainder 19}]
        [ a r:Fact; r:gives {(19 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(19 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2054 a r:Inference;
    r:gives {
        (0 0 1 9) :digitsToNumber 19 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 0 10 9) math:sum 19}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2055 a r:Inference;
    r:gives {
        (9 1 0 0) :digitsToNumber 9100 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 100 0 0) math:sum 9100}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2056 a r:Inference;
    r:gives {
        20 :numberToDigits (0 0 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(20 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(20 1000) math:remainder 20}]
        [ a r:Fact; r:gives {(20 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(20 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2057 a r:Inference;
    r:gives {
        21 :numberToDigits (0 0 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(21 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(21 1000) math:remainder 21}]
        [ a r:Fact; r:gives {(21 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(21 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2058 a r:Inference;
    r:gives {
        22 :numberToDigits (0 0 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(22 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(22 1000) math:remainder 22}]
        [ a r:Fact; r:gives {(22 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(22 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2059 a r:Inference;
    r:gives {
        (0 0 2 2) :digitsToNumber 22 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 0 20 2) math:sum 22}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3439.

skolem:lemma2060 a r:Inference;
    r:gives {
        (2 2 0 0) :digitsToNumber 2200 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 1000) math:product 2000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(2000 200 0 0) math:sum 2200}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 2200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2061 a r:Inference;
    r:gives {
        23 :numberToDigits (0 0 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(23 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(23 1000) math:remainder 23}]
        [ a r:Fact; r:gives {(23 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(23 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2062 a r:Inference;
    r:gives {
        (0 0 2 3) :digitsToNumber 23 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 0 20 3) math:sum 23}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2063 a r:Inference;
    r:gives {
        (3 2 0 0) :digitsToNumber 3200 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(3000 200 0 0) math:sum 3200}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2064 a r:Inference;
    r:gives {
        24 :numberToDigits (0 0 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(24 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(24 1000) math:remainder 24}]
        [ a r:Fact; r:gives {(24 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(24 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2065 a r:Inference;
    r:gives {
        (0 0 2 4) :digitsToNumber 24 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 0 20 4) math:sum 24}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2066 a r:Inference;
    r:gives {
        (4 2 0 0) :digitsToNumber 4200 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(4000 200 0 0) math:sum 4200}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2067 a r:Inference;
    r:gives {
        25 :numberToDigits (0 0 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(25 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(25 1000) math:remainder 25}]
        [ a r:Fact; r:gives {(25 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(25 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2068 a r:Inference;
    r:gives {
        (0 0 2 5) :digitsToNumber 25 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 0 20 5) math:sum 25}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2069 a r:Inference;
    r:gives {
        (5 2 0 0) :digitsToNumber 5200 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(5000 200 0 0) math:sum 5200}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2070 a r:Inference;
    r:gives {
        26 :numberToDigits (0 0 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(26 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(26 1000) math:remainder 26}]
        [ a r:Fact; r:gives {(26 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(26 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2071 a r:Inference;
    r:gives {
        (0 0 2 6) :digitsToNumber 26 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 0 20 6) math:sum 26}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2072 a r:Inference;
    r:gives {
        (6 2 0 0) :digitsToNumber 6200 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(6000 200 0 0) math:sum 6200}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2073 a r:Inference;
    r:gives {
        27 :numberToDigits (0 0 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(27 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(27 1000) math:remainder 27}]
        [ a r:Fact; r:gives {(27 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(27 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2074 a r:Inference;
    r:gives {
        (0 0 2 7) :digitsToNumber 27 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 0 20 7) math:sum 27}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2075 a r:Inference;
    r:gives {
        (7 2 0 0) :digitsToNumber 7200 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(7000 200 0 0) math:sum 7200}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2076 a r:Inference;
    r:gives {
        28 :numberToDigits (0 0 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(28 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(28 1000) math:remainder 28}]
        [ a r:Fact; r:gives {(28 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(28 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2077 a r:Inference;
    r:gives {
        (0 0 2 8) :digitsToNumber 28 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 0 20 8) math:sum 28}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2078 a r:Inference;
    r:gives {
        (8 2 0 0) :digitsToNumber 8200 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(8000 200 0 0) math:sum 8200}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2079 a r:Inference;
    r:gives {
        29 :numberToDigits (0 0 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(29 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(29 1000) math:remainder 29}]
        [ a r:Fact; r:gives {(29 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(29 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2080 a r:Inference;
    r:gives {
        (0 0 2 9) :digitsToNumber 29 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 0 20 9) math:sum 29}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2081 a r:Inference;
    r:gives {
        (9 2 0 0) :digitsToNumber 9200 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 200 0 0) math:sum 9200}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2082 a r:Inference;
    r:gives {
        30 :numberToDigits (0 0 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(30 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(30 1000) math:remainder 30}]
        [ a r:Fact; r:gives {(30 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(30 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2083 a r:Inference;
    r:gives {
        31 :numberToDigits (0 0 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(31 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(31 1000) math:remainder 31}]
        [ a r:Fact; r:gives {(31 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(31 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2084 a r:Inference;
    r:gives {
        32 :numberToDigits (0 0 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(32 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(32 1000) math:remainder 32}]
        [ a r:Fact; r:gives {(32 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(32 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2085 a r:Inference;
    r:gives {
        33 :numberToDigits (0 0 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(33 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(33 1000) math:remainder 33}]
        [ a r:Fact; r:gives {(33 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(33 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2086 a r:Inference;
    r:gives {
        (0 0 3 3) :digitsToNumber 33 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 0 30 3) math:sum 33}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2087 a r:Inference;
    r:gives {
        (3 3 0 0) :digitsToNumber 3300 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(3000 300 0 0) math:sum 3300}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2088 a r:Inference;
    r:gives {
        34 :numberToDigits (0 0 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(34 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(34 1000) math:remainder 34}]
        [ a r:Fact; r:gives {(34 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(34 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2089 a r:Inference;
    r:gives {
        (0 0 3 4) :digitsToNumber 34 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 0 30 4) math:sum 34}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2090 a r:Inference;
    r:gives {
        (4 3 0 0) :digitsToNumber 4300 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(4000 300 0 0) math:sum 4300}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2091 a r:Inference;
    r:gives {
        35 :numberToDigits (0 0 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(35 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(35 1000) math:remainder 35}]
        [ a r:Fact; r:gives {(35 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(35 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2092 a r:Inference;
    r:gives {
        (0 0 3 5) :digitsToNumber 35 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 0 30 5) math:sum 35}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2093 a r:Inference;
    r:gives {
        (5 3 0 0) :digitsToNumber 5300 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(5000 300 0 0) math:sum 5300}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2094 a r:Inference;
    r:gives {
        36 :numberToDigits (0 0 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(36 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(36 1000) math:remainder 36}]
        [ a r:Fact; r:gives {(36 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(36 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2095 a r:Inference;
    r:gives {
        (0 0 3 6) :digitsToNumber 36 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 0 30 6) math:sum 36}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2096 a r:Inference;
    r:gives {
        (6 3 0 0) :digitsToNumber 6300 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(6000 300 0 0) math:sum 6300}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2097 a r:Inference;
    r:gives {
        37 :numberToDigits (0 0 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(37 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(37 1000) math:remainder 37}]
        [ a r:Fact; r:gives {(37 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(37 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2098 a r:Inference;
    r:gives {
        (0 0 3 7) :digitsToNumber 37 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 0 30 7) math:sum 37}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2099 a r:Inference;
    r:gives {
        (7 3 0 0) :digitsToNumber 7300 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(7000 300 0 0) math:sum 7300}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2100 a r:Inference;
    r:gives {
        38 :numberToDigits (0 0 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(38 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(38 1000) math:remainder 38}]
        [ a r:Fact; r:gives {(38 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(38 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2101 a r:Inference;
    r:gives {
        (0 0 3 8) :digitsToNumber 38 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 0 30 8) math:sum 38}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2102 a r:Inference;
    r:gives {
        (8 3 0 0) :digitsToNumber 8300 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(8000 300 0 0) math:sum 8300}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2103 a r:Inference;
    r:gives {
        39 :numberToDigits (0 0 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(39 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(39 1000) math:remainder 39}]
        [ a r:Fact; r:gives {(39 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(39 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2104 a r:Inference;
    r:gives {
        (0 0 3 9) :digitsToNumber 39 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 0 30 9) math:sum 39}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2105 a r:Inference;
    r:gives {
        (9 3 0 0) :digitsToNumber 9300 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 300 0 0) math:sum 9300}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2106 a r:Inference;
    r:gives {
        40 :numberToDigits (0 0 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(40 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(40 1000) math:remainder 40}]
        [ a r:Fact; r:gives {(40 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(40 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2107 a r:Inference;
    r:gives {
        41 :numberToDigits (0 0 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(41 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(41 1000) math:remainder 41}]
        [ a r:Fact; r:gives {(41 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(41 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2108 a r:Inference;
    r:gives {
        42 :numberToDigits (0 0 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(42 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(42 1000) math:remainder 42}]
        [ a r:Fact; r:gives {(42 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(42 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2109 a r:Inference;
    r:gives {
        43 :numberToDigits (0 0 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(43 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(43 1000) math:remainder 43}]
        [ a r:Fact; r:gives {(43 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(43 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2110 a r:Inference;
    r:gives {
        44 :numberToDigits (0 0 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(44 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(44 1000) math:remainder 44}]
        [ a r:Fact; r:gives {(44 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(44 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2111 a r:Inference;
    r:gives {
        (0 0 4 4) :digitsToNumber 44 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 0 40 4) math:sum 44}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2112 a r:Inference;
    r:gives {
        (4 4 0 0) :digitsToNumber 4400 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(4000 400 0 0) math:sum 4400}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2113 a r:Inference;
    r:gives {
        45 :numberToDigits (0 0 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(45 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(45 1000) math:remainder 45}]
        [ a r:Fact; r:gives {(45 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(45 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2114 a r:Inference;
    r:gives {
        (0 0 4 5) :digitsToNumber 45 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 0 40 5) math:sum 45}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2115 a r:Inference;
    r:gives {
        (5 4 0 0) :digitsToNumber 5400 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(5000 400 0 0) math:sum 5400}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2116 a r:Inference;
    r:gives {
        46 :numberToDigits (0 0 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(46 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(46 1000) math:remainder 46}]
        [ a r:Fact; r:gives {(46 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(46 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2117 a r:Inference;
    r:gives {
        (0 0 4 6) :digitsToNumber 46 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 0 40 6) math:sum 46}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2118 a r:Inference;
    r:gives {
        (6 4 0 0) :digitsToNumber 6400 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(6000 400 0 0) math:sum 6400}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2119 a r:Inference;
    r:gives {
        47 :numberToDigits (0 0 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(47 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(47 1000) math:remainder 47}]
        [ a r:Fact; r:gives {(47 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(47 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2120 a r:Inference;
    r:gives {
        (0 0 4 7) :digitsToNumber 47 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 0 40 7) math:sum 47}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2121 a r:Inference;
    r:gives {
        (7 4 0 0) :digitsToNumber 7400 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(7000 400 0 0) math:sum 7400}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2122 a r:Inference;
    r:gives {
        48 :numberToDigits (0 0 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(48 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(48 1000) math:remainder 48}]
        [ a r:Fact; r:gives {(48 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(48 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2123 a r:Inference;
    r:gives {
        (0 0 4 8) :digitsToNumber 48 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 0 40 8) math:sum 48}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2124 a r:Inference;
    r:gives {
        (8 4 0 0) :digitsToNumber 8400 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(8000 400 0 0) math:sum 8400}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2125 a r:Inference;
    r:gives {
        49 :numberToDigits (0 0 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(49 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(49 1000) math:remainder 49}]
        [ a r:Fact; r:gives {(49 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(49 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2126 a r:Inference;
    r:gives {
        (0 0 4 9) :digitsToNumber 49 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 0 40 9) math:sum 49}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2127 a r:Inference;
    r:gives {
        (9 4 0 0) :digitsToNumber 9400 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 400 0 0) math:sum 9400}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2128 a r:Inference;
    r:gives {
        50 :numberToDigits (0 0 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(50 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(50 1000) math:remainder 50}]
        [ a r:Fact; r:gives {(50 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(50 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2129 a r:Inference;
    r:gives {
        51 :numberToDigits (0 0 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(51 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(51 1000) math:remainder 51}]
        [ a r:Fact; r:gives {(51 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(51 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2130 a r:Inference;
    r:gives {
        52 :numberToDigits (0 0 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(52 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(52 1000) math:remainder 52}]
        [ a r:Fact; r:gives {(52 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(52 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2131 a r:Inference;
    r:gives {
        53 :numberToDigits (0 0 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(53 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(53 1000) math:remainder 53}]
        [ a r:Fact; r:gives {(53 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(53 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2132 a r:Inference;
    r:gives {
        54 :numberToDigits (0 0 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(54 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(54 1000) math:remainder 54}]
        [ a r:Fact; r:gives {(54 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(54 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2133 a r:Inference;
    r:gives {
        55 :numberToDigits (0 0 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(55 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(55 1000) math:remainder 55}]
        [ a r:Fact; r:gives {(55 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(55 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2134 a r:Inference;
    r:gives {
        (0 0 5 5) :digitsToNumber 55 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 0 50 5) math:sum 55}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2135 a r:Inference;
    r:gives {
        (5 5 0 0) :digitsToNumber 5500 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(5000 500 0 0) math:sum 5500}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2136 a r:Inference;
    r:gives {
        56 :numberToDigits (0 0 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(56 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(56 1000) math:remainder 56}]
        [ a r:Fact; r:gives {(56 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(56 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2137 a r:Inference;
    r:gives {
        (0 0 5 6) :digitsToNumber 56 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 0 50 6) math:sum 56}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2138 a r:Inference;
    r:gives {
        (6 5 0 0) :digitsToNumber 6500 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(6000 500 0 0) math:sum 6500}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2139 a r:Inference;
    r:gives {
        57 :numberToDigits (0 0 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(57 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(57 1000) math:remainder 57}]
        [ a r:Fact; r:gives {(57 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(57 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2140 a r:Inference;
    r:gives {
        (0 0 5 7) :digitsToNumber 57 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 0 50 7) math:sum 57}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2141 a r:Inference;
    r:gives {
        (7 5 0 0) :digitsToNumber 7500 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(7000 500 0 0) math:sum 7500}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2142 a r:Inference;
    r:gives {
        58 :numberToDigits (0 0 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(58 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(58 1000) math:remainder 58}]
        [ a r:Fact; r:gives {(58 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(58 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2143 a r:Inference;
    r:gives {
        (0 0 5 8) :digitsToNumber 58 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 0 50 8) math:sum 58}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2144 a r:Inference;
    r:gives {
        (8 5 0 0) :digitsToNumber 8500 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(8000 500 0 0) math:sum 8500}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2145 a r:Inference;
    r:gives {
        59 :numberToDigits (0 0 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(59 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(59 1000) math:remainder 59}]
        [ a r:Fact; r:gives {(59 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(59 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2146 a r:Inference;
    r:gives {
        (0 0 5 9) :digitsToNumber 59 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 0 50 9) math:sum 59}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2147 a r:Inference;
    r:gives {
        (9 5 0 0) :digitsToNumber 9500 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 500 0 0) math:sum 9500}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2148 a r:Inference;
    r:gives {
        60 :numberToDigits (0 0 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(60 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(60 1000) math:remainder 60}]
        [ a r:Fact; r:gives {(60 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(60 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2149 a r:Inference;
    r:gives {
        61 :numberToDigits (0 0 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(61 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(61 1000) math:remainder 61}]
        [ a r:Fact; r:gives {(61 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(61 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2150 a r:Inference;
    r:gives {
        62 :numberToDigits (0 0 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(62 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(62 1000) math:remainder 62}]
        [ a r:Fact; r:gives {(62 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(62 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2151 a r:Inference;
    r:gives {
        63 :numberToDigits (0 0 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(63 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(63 1000) math:remainder 63}]
        [ a r:Fact; r:gives {(63 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(63 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2152 a r:Inference;
    r:gives {
        64 :numberToDigits (0 0 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(64 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(64 1000) math:remainder 64}]
        [ a r:Fact; r:gives {(64 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(64 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2153 a r:Inference;
    r:gives {
        65 :numberToDigits (0 0 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(65 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(65 1000) math:remainder 65}]
        [ a r:Fact; r:gives {(65 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(65 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2154 a r:Inference;
    r:gives {
        66 :numberToDigits (0 0 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(66 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(66 1000) math:remainder 66}]
        [ a r:Fact; r:gives {(66 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(66 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2155 a r:Inference;
    r:gives {
        (0 0 6 6) :digitsToNumber 66 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 0 60 6) math:sum 66}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2156 a r:Inference;
    r:gives {
        (6 6 0 0) :digitsToNumber 6600 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(6000 600 0 0) math:sum 6600}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2157 a r:Inference;
    r:gives {
        67 :numberToDigits (0 0 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(67 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(67 1000) math:remainder 67}]
        [ a r:Fact; r:gives {(67 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(67 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2158 a r:Inference;
    r:gives {
        (0 0 6 7) :digitsToNumber 67 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 0 60 7) math:sum 67}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2159 a r:Inference;
    r:gives {
        (7 6 0 0) :digitsToNumber 7600 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(7000 600 0 0) math:sum 7600}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2160 a r:Inference;
    r:gives {
        68 :numberToDigits (0 0 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(68 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(68 1000) math:remainder 68}]
        [ a r:Fact; r:gives {(68 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(68 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2161 a r:Inference;
    r:gives {
        (0 0 6 8) :digitsToNumber 68 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 0 60 8) math:sum 68}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2162 a r:Inference;
    r:gives {
        (8 6 0 0) :digitsToNumber 8600 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(8000 600 0 0) math:sum 8600}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2163 a r:Inference;
    r:gives {
        69 :numberToDigits (0 0 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(69 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(69 1000) math:remainder 69}]
        [ a r:Fact; r:gives {(69 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(69 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2164 a r:Inference;
    r:gives {
        (0 0 6 9) :digitsToNumber 69 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 0 60 9) math:sum 69}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2165 a r:Inference;
    r:gives {
        (9 6 0 0) :digitsToNumber 9600 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 600 0 0) math:sum 9600}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2166 a r:Inference;
    r:gives {
        70 :numberToDigits (0 0 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(70 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(70 1000) math:remainder 70}]
        [ a r:Fact; r:gives {(70 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(70 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2167 a r:Inference;
    r:gives {
        71 :numberToDigits (0 0 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(71 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(71 1000) math:remainder 71}]
        [ a r:Fact; r:gives {(71 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(71 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2168 a r:Inference;
    r:gives {
        72 :numberToDigits (0 0 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(72 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(72 1000) math:remainder 72}]
        [ a r:Fact; r:gives {(72 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(72 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2169 a r:Inference;
    r:gives {
        73 :numberToDigits (0 0 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(73 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(73 1000) math:remainder 73}]
        [ a r:Fact; r:gives {(73 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(73 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2170 a r:Inference;
    r:gives {
        74 :numberToDigits (0 0 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(74 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(74 1000) math:remainder 74}]
        [ a r:Fact; r:gives {(74 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(74 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2171 a r:Inference;
    r:gives {
        75 :numberToDigits (0 0 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(75 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(75 1000) math:remainder 75}]
        [ a r:Fact; r:gives {(75 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(75 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2172 a r:Inference;
    r:gives {
        76 :numberToDigits (0 0 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(76 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(76 1000) math:remainder 76}]
        [ a r:Fact; r:gives {(76 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(76 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2173 a r:Inference;
    r:gives {
        77 :numberToDigits (0 0 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(77 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(77 1000) math:remainder 77}]
        [ a r:Fact; r:gives {(77 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(77 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2174 a r:Inference;
    r:gives {
        (0 0 7 7) :digitsToNumber 77 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 0 70 7) math:sum 77}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2175 a r:Inference;
    r:gives {
        (7 7 0 0) :digitsToNumber 7700 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(7000 700 0 0) math:sum 7700}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2176 a r:Inference;
    r:gives {
        78 :numberToDigits (0 0 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(78 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(78 1000) math:remainder 78}]
        [ a r:Fact; r:gives {(78 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(78 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2177 a r:Inference;
    r:gives {
        (0 0 7 8) :digitsToNumber 78 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 0 70 8) math:sum 78}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2178 a r:Inference;
    r:gives {
        (8 7 0 0) :digitsToNumber 8700 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(8000 700 0 0) math:sum 8700}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2179 a r:Inference;
    r:gives {
        79 :numberToDigits (0 0 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(79 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(79 1000) math:remainder 79}]
        [ a r:Fact; r:gives {(79 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(79 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2180 a r:Inference;
    r:gives {
        (0 0 7 9) :digitsToNumber 79 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 0 70 9) math:sum 79}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2181 a r:Inference;
    r:gives {
        (9 7 0 0) :digitsToNumber 9700 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 700 0 0) math:sum 9700}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2182 a r:Inference;
    r:gives {
        80 :numberToDigits (0 0 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(80 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(80 1000) math:remainder 80}]
        [ a r:Fact; r:gives {(80 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(80 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2183 a r:Inference;
    r:gives {
        81 :numberToDigits (0 0 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(81 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(81 1000) math:remainder 81}]
        [ a r:Fact; r:gives {(81 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(81 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2184 a r:Inference;
    r:gives {
        82 :numberToDigits (0 0 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(82 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(82 1000) math:remainder 82}]
        [ a r:Fact; r:gives {(82 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(82 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2185 a r:Inference;
    r:gives {
        83 :numberToDigits (0 0 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(83 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(83 1000) math:remainder 83}]
        [ a r:Fact; r:gives {(83 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(83 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2186 a r:Inference;
    r:gives {
        84 :numberToDigits (0 0 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(84 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(84 1000) math:remainder 84}]
        [ a r:Fact; r:gives {(84 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(84 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2187 a r:Inference;
    r:gives {
        85 :numberToDigits (0 0 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(85 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(85 1000) math:remainder 85}]
        [ a r:Fact; r:gives {(85 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(85 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2188 a r:Inference;
    r:gives {
        86 :numberToDigits (0 0 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(86 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(86 1000) math:remainder 86}]
        [ a r:Fact; r:gives {(86 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(86 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2189 a r:Inference;
    r:gives {
        87 :numberToDigits (0 0 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(87 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(87 1000) math:remainder 87}]
        [ a r:Fact; r:gives {(87 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(87 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2190 a r:Inference;
    r:gives {
        88 :numberToDigits (0 0 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(88 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(88 1000) math:remainder 88}]
        [ a r:Fact; r:gives {(88 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(88 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2191 a r:Inference;
    r:gives {
        (0 0 8 8) :digitsToNumber 88 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 0 80 8) math:sum 88}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2192 a r:Inference;
    r:gives {
        (8 8 0 0) :digitsToNumber 8800 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(8000 800 0 0) math:sum 8800}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2193 a r:Inference;
    r:gives {
        89 :numberToDigits (0 0 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(89 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(89 1000) math:remainder 89}]
        [ a r:Fact; r:gives {(89 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(89 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2194 a r:Inference;
    r:gives {
        (0 0 8 9) :digitsToNumber 89 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 0 80 9) math:sum 89}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2195 a r:Inference;
    r:gives {
        (9 8 0 0) :digitsToNumber 9800 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 800 0 0) math:sum 9800}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2196 a r:Inference;
    r:gives {
        90 :numberToDigits (0 0 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(90 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(90 1000) math:remainder 90}]
        [ a r:Fact; r:gives {(90 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(90 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2197 a r:Inference;
    r:gives {
        91 :numberToDigits (0 0 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(91 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(91 1000) math:remainder 91}]
        [ a r:Fact; r:gives {(91 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(91 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2198 a r:Inference;
    r:gives {
        92 :numberToDigits (0 0 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(92 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(92 1000) math:remainder 92}]
        [ a r:Fact; r:gives {(92 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(92 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2199 a r:Inference;
    r:gives {
        93 :numberToDigits (0 0 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(93 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(93 1000) math:remainder 93}]
        [ a r:Fact; r:gives {(93 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(93 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2200 a r:Inference;
    r:gives {
        94 :numberToDigits (0 0 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(94 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(94 1000) math:remainder 94}]
        [ a r:Fact; r:gives {(94 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(94 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2201 a r:Inference;
    r:gives {
        95 :numberToDigits (0 0 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(95 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(95 1000) math:remainder 95}]
        [ a r:Fact; r:gives {(95 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(95 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2202 a r:Inference;
    r:gives {
        96 :numberToDigits (0 0 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(96 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(96 1000) math:remainder 96}]
        [ a r:Fact; r:gives {(96 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(96 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2203 a r:Inference;
    r:gives {
        97 :numberToDigits (0 0 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(97 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(97 1000) math:remainder 97}]
        [ a r:Fact; r:gives {(97 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(97 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2204 a r:Inference;
    r:gives {
        98 :numberToDigits (0 0 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(98 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(98 1000) math:remainder 98}]
        [ a r:Fact; r:gives {(98 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(98 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2205 a r:Inference;
    r:gives {
        99 :numberToDigits (0 0 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(99 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(99 1000) math:remainder 99}]
        [ a r:Fact; r:gives {(99 100) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(99 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2206 a r:Inference;
    r:gives {
        (0 0 9 9) :digitsToNumber 99 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(0 100) math:product 0}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 0 90 9) math:sum 99}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2207 a r:Inference;
    r:gives {
        (9 9 0 0) :digitsToNumber 9900 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(0 10) math:product 0}]
        [ a r:Fact; r:gives {(9000 900 0 0) math:sum 9900}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2208 a r:Inference;
    r:gives {
        100 :numberToDigits (0 1 0 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(100 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(100 1000) math:remainder 100}]
        [ a r:Fact; r:gives {(100 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(100 100) math:remainder 0}]
        [ a r:Fact; r:gives {(0 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(0 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2209 a r:Inference;
    r:gives {
        101 :numberToDigits (0 1 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(101 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(101 1000) math:remainder 101}]
        [ a r:Fact; r:gives {(101 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(101 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 101];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 101];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2210 a r:Inference;
    r:gives {
        102 :numberToDigits (0 1 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(102 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(102 1000) math:remainder 102}]
        [ a r:Fact; r:gives {(102 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(102 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 102];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 102];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2211 a r:Inference;
    r:gives {
        103 :numberToDigits (0 1 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(103 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(103 1000) math:remainder 103}]
        [ a r:Fact; r:gives {(103 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(103 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 103];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 103];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2212 a r:Inference;
    r:gives {
        104 :numberToDigits (0 1 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(104 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(104 1000) math:remainder 104}]
        [ a r:Fact; r:gives {(104 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(104 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 104];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 104];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2213 a r:Inference;
    r:gives {
        105 :numberToDigits (0 1 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(105 1000) math:remainder 105}]
        [ a r:Fact; r:gives {(105 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(105 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2214 a r:Inference;
    r:gives {
        106 :numberToDigits (0 1 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(106 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(106 1000) math:remainder 106}]
        [ a r:Fact; r:gives {(106 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(106 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 106];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 106];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2215 a r:Inference;
    r:gives {
        107 :numberToDigits (0 1 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(107 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(107 1000) math:remainder 107}]
        [ a r:Fact; r:gives {(107 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(107 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 107];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 107];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2216 a r:Inference;
    r:gives {
        108 :numberToDigits (0 1 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(108 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(108 1000) math:remainder 108}]
        [ a r:Fact; r:gives {(108 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(108 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 108];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 108];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2217 a r:Inference;
    r:gives {
        109 :numberToDigits (0 1 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(109 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(109 1000) math:remainder 109}]
        [ a r:Fact; r:gives {(109 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(109 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2218 a r:Inference;
    r:gives {
        110 :numberToDigits (0 1 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(110 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(110 1000) math:remainder 110}]
        [ a r:Fact; r:gives {(110 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(110 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2219 a r:Inference;
    r:gives {
        111 :numberToDigits (0 1 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(111 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(111 1000) math:remainder 111}]
        [ a r:Fact; r:gives {(111 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(111 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2220 a r:Inference;
    r:gives {
        (0 1 1 1) :digitsToNumber 111 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 100 10 1) math:sum 111}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3439.

skolem:lemma2221 a r:Inference;
    r:gives {
        (1 1 1 0) :digitsToNumber 1110 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 1000) math:product 1000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(1000 100 10 0) math:sum 1110}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 1110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2222 a r:Inference;
    r:gives {
        112 :numberToDigits (0 1 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(112 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(112 1000) math:remainder 112}]
        [ a r:Fact; r:gives {(112 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(112 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 112];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 112];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2223 a r:Inference;
    r:gives {
        (0 1 1 2) :digitsToNumber 112 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 100 10 2) math:sum 112}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 112];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3439.

skolem:lemma2224 a r:Inference;
    r:gives {
        (2 1 1 0) :digitsToNumber 2110 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 1000) math:product 2000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(2000 100 10 0) math:sum 2110}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 2110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2225 a r:Inference;
    r:gives {
        113 :numberToDigits (0 1 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(113 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(113 1000) math:remainder 113}]
        [ a r:Fact; r:gives {(113 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(113 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 113];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 113];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2226 a r:Inference;
    r:gives {
        (0 1 1 3) :digitsToNumber 113 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 100 10 3) math:sum 113}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 113];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2227 a r:Inference;
    r:gives {
        (3 1 1 0) :digitsToNumber 3110 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(3000 100 10 0) math:sum 3110}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2228 a r:Inference;
    r:gives {
        114 :numberToDigits (0 1 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(114 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(114 1000) math:remainder 114}]
        [ a r:Fact; r:gives {(114 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(114 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2229 a r:Inference;
    r:gives {
        (0 1 1 4) :digitsToNumber 114 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 100 10 4) math:sum 114}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2230 a r:Inference;
    r:gives {
        (4 1 1 0) :digitsToNumber 4110 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(4000 100 10 0) math:sum 4110}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2231 a r:Inference;
    r:gives {
        115 :numberToDigits (0 1 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(115 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(115 1000) math:remainder 115}]
        [ a r:Fact; r:gives {(115 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(115 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2232 a r:Inference;
    r:gives {
        (0 1 1 5) :digitsToNumber 115 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 100 10 5) math:sum 115}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2233 a r:Inference;
    r:gives {
        (5 1 1 0) :digitsToNumber 5110 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(5000 100 10 0) math:sum 5110}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2234 a r:Inference;
    r:gives {
        116 :numberToDigits (0 1 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(116 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(116 1000) math:remainder 116}]
        [ a r:Fact; r:gives {(116 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(116 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2235 a r:Inference;
    r:gives {
        (0 1 1 6) :digitsToNumber 116 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 100 10 6) math:sum 116}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2236 a r:Inference;
    r:gives {
        (6 1 1 0) :digitsToNumber 6110 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(6000 100 10 0) math:sum 6110}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2237 a r:Inference;
    r:gives {
        117 :numberToDigits (0 1 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(117 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(117 1000) math:remainder 117}]
        [ a r:Fact; r:gives {(117 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(117 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2238 a r:Inference;
    r:gives {
        (0 1 1 7) :digitsToNumber 117 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 100 10 7) math:sum 117}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2239 a r:Inference;
    r:gives {
        (7 1 1 0) :digitsToNumber 7110 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(7000 100 10 0) math:sum 7110}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2240 a r:Inference;
    r:gives {
        118 :numberToDigits (0 1 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(118 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(118 1000) math:remainder 118}]
        [ a r:Fact; r:gives {(118 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(118 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 118];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 118];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2241 a r:Inference;
    r:gives {
        (0 1 1 8) :digitsToNumber 118 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 100 10 8) math:sum 118}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 118];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2242 a r:Inference;
    r:gives {
        (8 1 1 0) :digitsToNumber 8110 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(8000 100 10 0) math:sum 8110}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2243 a r:Inference;
    r:gives {
        119 :numberToDigits (0 1 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(119 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(119 1000) math:remainder 119}]
        [ a r:Fact; r:gives {(119 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(119 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 119];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 119];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2244 a r:Inference;
    r:gives {
        (0 1 1 9) :digitsToNumber 119 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(0 100 10 9) math:sum 119}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 119];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2245 a r:Inference;
    r:gives {
        (9 1 1 0) :digitsToNumber 9110 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(9000 100 10 0) math:sum 9110}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9110];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2246 a r:Inference;
    r:gives {
        120 :numberToDigits (0 1 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(120 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(120 1000) math:remainder 120}]
        [ a r:Fact; r:gives {(120 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(120 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 120];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 120];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2247 a r:Inference;
    r:gives {
        121 :numberToDigits (0 1 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(121 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(121 1000) math:remainder 121}]
        [ a r:Fact; r:gives {(121 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(121 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 121];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 121];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2248 a r:Inference;
    r:gives {
        122 :numberToDigits (0 1 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(122 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(122 1000) math:remainder 122}]
        [ a r:Fact; r:gives {(122 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(122 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 122];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 122];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2249 a r:Inference;
    r:gives {
        (0 1 2 2) :digitsToNumber 122 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 100 20 2) math:sum 122}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 122];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3439.

skolem:lemma2250 a r:Inference;
    r:gives {
        (2 2 1 0) :digitsToNumber 2210 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 1000) math:product 2000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(2000 200 10 0) math:sum 2210}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 2210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2251 a r:Inference;
    r:gives {
        123 :numberToDigits (0 1 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(123 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(123 1000) math:remainder 123}]
        [ a r:Fact; r:gives {(123 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(123 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2252 a r:Inference;
    r:gives {
        (0 1 2 3) :digitsToNumber 123 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 100 20 3) math:sum 123}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 123];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2253 a r:Inference;
    r:gives {
        (3 2 1 0) :digitsToNumber 3210 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(3000 200 10 0) math:sum 3210}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2254 a r:Inference;
    r:gives {
        124 :numberToDigits (0 1 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(124 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(124 1000) math:remainder 124}]
        [ a r:Fact; r:gives {(124 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(124 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2255 a r:Inference;
    r:gives {
        (0 1 2 4) :digitsToNumber 124 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 100 20 4) math:sum 124}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 124];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2256 a r:Inference;
    r:gives {
        (4 2 1 0) :digitsToNumber 4210 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(4000 200 10 0) math:sum 4210}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2257 a r:Inference;
    r:gives {
        125 :numberToDigits (0 1 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(125 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(125 1000) math:remainder 125}]
        [ a r:Fact; r:gives {(125 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(125 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2258 a r:Inference;
    r:gives {
        (0 1 2 5) :digitsToNumber 125 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 100 20 5) math:sum 125}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 125];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2259 a r:Inference;
    r:gives {
        (5 2 1 0) :digitsToNumber 5210 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(5000 200 10 0) math:sum 5210}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2260 a r:Inference;
    r:gives {
        126 :numberToDigits (0 1 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(126 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(126 1000) math:remainder 126}]
        [ a r:Fact; r:gives {(126 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(126 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2261 a r:Inference;
    r:gives {
        (0 1 2 6) :digitsToNumber 126 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 100 20 6) math:sum 126}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 126];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2262 a r:Inference;
    r:gives {
        (6 2 1 0) :digitsToNumber 6210 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(6000 200 10 0) math:sum 6210}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2263 a r:Inference;
    r:gives {
        127 :numberToDigits (0 1 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(127 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(127 1000) math:remainder 127}]
        [ a r:Fact; r:gives {(127 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(127 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2264 a r:Inference;
    r:gives {
        (0 1 2 7) :digitsToNumber 127 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 100 20 7) math:sum 127}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 127];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2265 a r:Inference;
    r:gives {
        (7 2 1 0) :digitsToNumber 7210 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(7000 200 10 0) math:sum 7210}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2266 a r:Inference;
    r:gives {
        128 :numberToDigits (0 1 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(128 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(128 1000) math:remainder 128}]
        [ a r:Fact; r:gives {(128 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(128 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2267 a r:Inference;
    r:gives {
        (0 1 2 8) :digitsToNumber 128 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 100 20 8) math:sum 128}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 128];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2268 a r:Inference;
    r:gives {
        (8 2 1 0) :digitsToNumber 8210 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(8000 200 10 0) math:sum 8210}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2269 a r:Inference;
    r:gives {
        129 :numberToDigits (0 1 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(129 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(129 1000) math:remainder 129}]
        [ a r:Fact; r:gives {(129 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(129 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2270 a r:Inference;
    r:gives {
        (0 1 2 9) :digitsToNumber 129 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 100 20 9) math:sum 129}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 129];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2271 a r:Inference;
    r:gives {
        (9 2 1 0) :digitsToNumber 9210 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(9000 200 10 0) math:sum 9210}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2272 a r:Inference;
    r:gives {
        130 :numberToDigits (0 1 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(130 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(130 1000) math:remainder 130}]
        [ a r:Fact; r:gives {(130 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(130 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 130];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 130];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2273 a r:Inference;
    r:gives {
        131 :numberToDigits (0 1 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(131 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(131 1000) math:remainder 131}]
        [ a r:Fact; r:gives {(131 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(131 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 131];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 131];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2274 a r:Inference;
    r:gives {
        132 :numberToDigits (0 1 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(132 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(132 1000) math:remainder 132}]
        [ a r:Fact; r:gives {(132 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(132 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 132];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 132];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2275 a r:Inference;
    r:gives {
        133 :numberToDigits (0 1 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(133 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(133 1000) math:remainder 133}]
        [ a r:Fact; r:gives {(133 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(133 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 133];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 133];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2276 a r:Inference;
    r:gives {
        (0 1 3 3) :digitsToNumber 133 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 100 30 3) math:sum 133}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 133];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2277 a r:Inference;
    r:gives {
        (3 3 1 0) :digitsToNumber 3310 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(3000 300 10 0) math:sum 3310}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2278 a r:Inference;
    r:gives {
        134 :numberToDigits (0 1 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(134 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(134 1000) math:remainder 134}]
        [ a r:Fact; r:gives {(134 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(134 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2279 a r:Inference;
    r:gives {
        (0 1 3 4) :digitsToNumber 134 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 100 30 4) math:sum 134}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 134];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2280 a r:Inference;
    r:gives {
        (4 3 1 0) :digitsToNumber 4310 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(4000 300 10 0) math:sum 4310}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2281 a r:Inference;
    r:gives {
        135 :numberToDigits (0 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(135 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(135 1000) math:remainder 135}]
        [ a r:Fact; r:gives {(135 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(135 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2282 a r:Inference;
    r:gives {
        (0 1 3 5) :digitsToNumber 135 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 100 30 5) math:sum 135}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 135];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2283 a r:Inference;
    r:gives {
        (5 3 1 0) :digitsToNumber 5310 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(5000 300 10 0) math:sum 5310}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2284 a r:Inference;
    r:gives {
        136 :numberToDigits (0 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(136 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(136 1000) math:remainder 136}]
        [ a r:Fact; r:gives {(136 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(136 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2285 a r:Inference;
    r:gives {
        (0 1 3 6) :digitsToNumber 136 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 100 30 6) math:sum 136}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 136];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2286 a r:Inference;
    r:gives {
        (6 3 1 0) :digitsToNumber 6310 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(6000 300 10 0) math:sum 6310}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2287 a r:Inference;
    r:gives {
        137 :numberToDigits (0 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(137 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(137 1000) math:remainder 137}]
        [ a r:Fact; r:gives {(137 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(137 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2288 a r:Inference;
    r:gives {
        (0 1 3 7) :digitsToNumber 137 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 100 30 7) math:sum 137}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 137];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2289 a r:Inference;
    r:gives {
        (7 3 1 0) :digitsToNumber 7310 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(7000 300 10 0) math:sum 7310}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2290 a r:Inference;
    r:gives {
        138 :numberToDigits (0 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(138 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(138 1000) math:remainder 138}]
        [ a r:Fact; r:gives {(138 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(138 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2291 a r:Inference;
    r:gives {
        (0 1 3 8) :digitsToNumber 138 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 100 30 8) math:sum 138}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 138];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2292 a r:Inference;
    r:gives {
        (8 3 1 0) :digitsToNumber 8310 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(8000 300 10 0) math:sum 8310}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2293 a r:Inference;
    r:gives {
        139 :numberToDigits (0 1 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(139 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(139 1000) math:remainder 139}]
        [ a r:Fact; r:gives {(139 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(139 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2294 a r:Inference;
    r:gives {
        (0 1 3 9) :digitsToNumber 139 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 100 30 9) math:sum 139}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 139];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2295 a r:Inference;
    r:gives {
        (9 3 1 0) :digitsToNumber 9310 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(9000 300 10 0) math:sum 9310}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2296 a r:Inference;
    r:gives {
        140 :numberToDigits (0 1 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(140 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(140 1000) math:remainder 140}]
        [ a r:Fact; r:gives {(140 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(140 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 140];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 140];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2297 a r:Inference;
    r:gives {
        141 :numberToDigits (0 1 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(141 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(141 1000) math:remainder 141}]
        [ a r:Fact; r:gives {(141 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(141 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 141];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 141];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2298 a r:Inference;
    r:gives {
        142 :numberToDigits (0 1 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(142 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(142 1000) math:remainder 142}]
        [ a r:Fact; r:gives {(142 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(142 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 142];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 142];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2299 a r:Inference;
    r:gives {
        143 :numberToDigits (0 1 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(143 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(143 1000) math:remainder 143}]
        [ a r:Fact; r:gives {(143 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(143 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 143];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 143];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2300 a r:Inference;
    r:gives {
        144 :numberToDigits (0 1 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(144 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(144 1000) math:remainder 144}]
        [ a r:Fact; r:gives {(144 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(144 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 144];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 144];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2301 a r:Inference;
    r:gives {
        (0 1 4 4) :digitsToNumber 144 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 100 40 4) math:sum 144}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 144];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2302 a r:Inference;
    r:gives {
        (4 4 1 0) :digitsToNumber 4410 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(4000 400 10 0) math:sum 4410}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2303 a r:Inference;
    r:gives {
        145 :numberToDigits (0 1 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(145 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(145 1000) math:remainder 145}]
        [ a r:Fact; r:gives {(145 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(145 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2304 a r:Inference;
    r:gives {
        (0 1 4 5) :digitsToNumber 145 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 100 40 5) math:sum 145}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 145];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2305 a r:Inference;
    r:gives {
        (5 4 1 0) :digitsToNumber 5410 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(5000 400 10 0) math:sum 5410}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2306 a r:Inference;
    r:gives {
        146 :numberToDigits (0 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(146 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(146 1000) math:remainder 146}]
        [ a r:Fact; r:gives {(146 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(146 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2307 a r:Inference;
    r:gives {
        (0 1 4 6) :digitsToNumber 146 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 100 40 6) math:sum 146}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 146];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2308 a r:Inference;
    r:gives {
        (6 4 1 0) :digitsToNumber 6410 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(6000 400 10 0) math:sum 6410}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2309 a r:Inference;
    r:gives {
        147 :numberToDigits (0 1 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(147 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(147 1000) math:remainder 147}]
        [ a r:Fact; r:gives {(147 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(147 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2310 a r:Inference;
    r:gives {
        (0 1 4 7) :digitsToNumber 147 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 100 40 7) math:sum 147}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 147];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2311 a r:Inference;
    r:gives {
        (7 4 1 0) :digitsToNumber 7410 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(7000 400 10 0) math:sum 7410}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2312 a r:Inference;
    r:gives {
        148 :numberToDigits (0 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(148 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(148 1000) math:remainder 148}]
        [ a r:Fact; r:gives {(148 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(148 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2313 a r:Inference;
    r:gives {
        (0 1 4 8) :digitsToNumber 148 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 100 40 8) math:sum 148}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 148];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2314 a r:Inference;
    r:gives {
        (8 4 1 0) :digitsToNumber 8410 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(8000 400 10 0) math:sum 8410}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2315 a r:Inference;
    r:gives {
        149 :numberToDigits (0 1 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(149 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(149 1000) math:remainder 149}]
        [ a r:Fact; r:gives {(149 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(149 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2316 a r:Inference;
    r:gives {
        (0 1 4 9) :digitsToNumber 149 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 100 40 9) math:sum 149}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 149];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2317 a r:Inference;
    r:gives {
        (9 4 1 0) :digitsToNumber 9410 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(9000 400 10 0) math:sum 9410}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2318 a r:Inference;
    r:gives {
        150 :numberToDigits (0 1 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(150 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(150 1000) math:remainder 150}]
        [ a r:Fact; r:gives {(150 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(150 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 150];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 150];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2319 a r:Inference;
    r:gives {
        151 :numberToDigits (0 1 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(151 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(151 1000) math:remainder 151}]
        [ a r:Fact; r:gives {(151 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(151 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 151];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 151];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2320 a r:Inference;
    r:gives {
        152 :numberToDigits (0 1 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(152 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(152 1000) math:remainder 152}]
        [ a r:Fact; r:gives {(152 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(152 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 152];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 152];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2321 a r:Inference;
    r:gives {
        153 :numberToDigits (0 1 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(153 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(153 1000) math:remainder 153}]
        [ a r:Fact; r:gives {(153 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(153 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 153];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 153];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2322 a r:Inference;
    r:gives {
        154 :numberToDigits (0 1 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(154 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(154 1000) math:remainder 154}]
        [ a r:Fact; r:gives {(154 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(154 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 154];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 154];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2323 a r:Inference;
    r:gives {
        155 :numberToDigits (0 1 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(155 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(155 1000) math:remainder 155}]
        [ a r:Fact; r:gives {(155 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(155 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 155];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 155];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2324 a r:Inference;
    r:gives {
        (0 1 5 5) :digitsToNumber 155 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 100 50 5) math:sum 155}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 155];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2325 a r:Inference;
    r:gives {
        (5 5 1 0) :digitsToNumber 5510 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(5000 500 10 0) math:sum 5510}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2326 a r:Inference;
    r:gives {
        156 :numberToDigits (0 1 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(156 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(156 1000) math:remainder 156}]
        [ a r:Fact; r:gives {(156 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(156 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2327 a r:Inference;
    r:gives {
        (0 1 5 6) :digitsToNumber 156 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 100 50 6) math:sum 156}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 156];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2328 a r:Inference;
    r:gives {
        (6 5 1 0) :digitsToNumber 6510 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(6000 500 10 0) math:sum 6510}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2329 a r:Inference;
    r:gives {
        157 :numberToDigits (0 1 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(157 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(157 1000) math:remainder 157}]
        [ a r:Fact; r:gives {(157 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(157 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2330 a r:Inference;
    r:gives {
        (0 1 5 7) :digitsToNumber 157 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 100 50 7) math:sum 157}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 157];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2331 a r:Inference;
    r:gives {
        (7 5 1 0) :digitsToNumber 7510 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(7000 500 10 0) math:sum 7510}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2332 a r:Inference;
    r:gives {
        158 :numberToDigits (0 1 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(158 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(158 1000) math:remainder 158}]
        [ a r:Fact; r:gives {(158 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(158 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2333 a r:Inference;
    r:gives {
        (0 1 5 8) :digitsToNumber 158 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 100 50 8) math:sum 158}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 158];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2334 a r:Inference;
    r:gives {
        (8 5 1 0) :digitsToNumber 8510 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(8000 500 10 0) math:sum 8510}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2335 a r:Inference;
    r:gives {
        159 :numberToDigits (0 1 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(159 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(159 1000) math:remainder 159}]
        [ a r:Fact; r:gives {(159 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(159 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2336 a r:Inference;
    r:gives {
        (0 1 5 9) :digitsToNumber 159 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 100 50 9) math:sum 159}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 159];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2337 a r:Inference;
    r:gives {
        (9 5 1 0) :digitsToNumber 9510 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(9000 500 10 0) math:sum 9510}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2338 a r:Inference;
    r:gives {
        160 :numberToDigits (0 1 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(160 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(160 1000) math:remainder 160}]
        [ a r:Fact; r:gives {(160 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(160 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 160];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 160];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2339 a r:Inference;
    r:gives {
        161 :numberToDigits (0 1 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(161 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(161 1000) math:remainder 161}]
        [ a r:Fact; r:gives {(161 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(161 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 161];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 161];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2340 a r:Inference;
    r:gives {
        162 :numberToDigits (0 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(162 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(162 1000) math:remainder 162}]
        [ a r:Fact; r:gives {(162 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(162 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 162];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 162];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2341 a r:Inference;
    r:gives {
        163 :numberToDigits (0 1 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(163 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(163 1000) math:remainder 163}]
        [ a r:Fact; r:gives {(163 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(163 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 163];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 163];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2342 a r:Inference;
    r:gives {
        164 :numberToDigits (0 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(164 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(164 1000) math:remainder 164}]
        [ a r:Fact; r:gives {(164 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(164 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 164];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 164];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2343 a r:Inference;
    r:gives {
        165 :numberToDigits (0 1 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(165 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(165 1000) math:remainder 165}]
        [ a r:Fact; r:gives {(165 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(165 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 165];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 165];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2344 a r:Inference;
    r:gives {
        166 :numberToDigits (0 1 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(166 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(166 1000) math:remainder 166}]
        [ a r:Fact; r:gives {(166 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(166 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 166];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 166];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2345 a r:Inference;
    r:gives {
        (0 1 6 6) :digitsToNumber 166 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 100 60 6) math:sum 166}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 166];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2346 a r:Inference;
    r:gives {
        (6 6 1 0) :digitsToNumber 6610 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(6000 600 10 0) math:sum 6610}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2347 a r:Inference;
    r:gives {
        167 :numberToDigits (0 1 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(167 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(167 1000) math:remainder 167}]
        [ a r:Fact; r:gives {(167 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(167 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2348 a r:Inference;
    r:gives {
        (0 1 6 7) :digitsToNumber 167 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 100 60 7) math:sum 167}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 167];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2349 a r:Inference;
    r:gives {
        (7 6 1 0) :digitsToNumber 7610 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(7000 600 10 0) math:sum 7610}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2350 a r:Inference;
    r:gives {
        168 :numberToDigits (0 1 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(168 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(168 1000) math:remainder 168}]
        [ a r:Fact; r:gives {(168 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(168 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2351 a r:Inference;
    r:gives {
        (0 1 6 8) :digitsToNumber 168 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 100 60 8) math:sum 168}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 168];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2352 a r:Inference;
    r:gives {
        (8 6 1 0) :digitsToNumber 8610 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(8000 600 10 0) math:sum 8610}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2353 a r:Inference;
    r:gives {
        169 :numberToDigits (0 1 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(169 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(169 1000) math:remainder 169}]
        [ a r:Fact; r:gives {(169 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(169 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2354 a r:Inference;
    r:gives {
        (0 1 6 9) :digitsToNumber 169 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 100 60 9) math:sum 169}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 169];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2355 a r:Inference;
    r:gives {
        (9 6 1 0) :digitsToNumber 9610 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(9000 600 10 0) math:sum 9610}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2356 a r:Inference;
    r:gives {
        170 :numberToDigits (0 1 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(170 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(170 1000) math:remainder 170}]
        [ a r:Fact; r:gives {(170 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(170 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 170];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 170];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2357 a r:Inference;
    r:gives {
        171 :numberToDigits (0 1 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(171 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(171 1000) math:remainder 171}]
        [ a r:Fact; r:gives {(171 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(171 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 171];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2358 a r:Inference;
    r:gives {
        172 :numberToDigits (0 1 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(172 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(172 1000) math:remainder 172}]
        [ a r:Fact; r:gives {(172 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(172 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 172];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2359 a r:Inference;
    r:gives {
        173 :numberToDigits (0 1 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(173 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(173 1000) math:remainder 173}]
        [ a r:Fact; r:gives {(173 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(173 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 173];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2360 a r:Inference;
    r:gives {
        174 :numberToDigits (0 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(174 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(174 1000) math:remainder 174}]
        [ a r:Fact; r:gives {(174 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(174 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 174];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2361 a r:Inference;
    r:gives {
        175 :numberToDigits (0 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(175 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(175 1000) math:remainder 175}]
        [ a r:Fact; r:gives {(175 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(175 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 175];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2362 a r:Inference;
    r:gives {
        176 :numberToDigits (0 1 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(176 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(176 1000) math:remainder 176}]
        [ a r:Fact; r:gives {(176 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(176 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 176];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2363 a r:Inference;
    r:gives {
        177 :numberToDigits (0 1 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(177 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(177 1000) math:remainder 177}]
        [ a r:Fact; r:gives {(177 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(177 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2364 a r:Inference;
    r:gives {
        (0 1 7 7) :digitsToNumber 177 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 100 70 7) math:sum 177}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 177];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2365 a r:Inference;
    r:gives {
        (7 7 1 0) :digitsToNumber 7710 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(7000 700 10 0) math:sum 7710}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2366 a r:Inference;
    r:gives {
        178 :numberToDigits (0 1 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(178 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(178 1000) math:remainder 178}]
        [ a r:Fact; r:gives {(178 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(178 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2367 a r:Inference;
    r:gives {
        (0 1 7 8) :digitsToNumber 178 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 100 70 8) math:sum 178}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 178];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2368 a r:Inference;
    r:gives {
        (8 7 1 0) :digitsToNumber 8710 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(8000 700 10 0) math:sum 8710}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2369 a r:Inference;
    r:gives {
        179 :numberToDigits (0 1 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(179 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(179 1000) math:remainder 179}]
        [ a r:Fact; r:gives {(179 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(179 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2370 a r:Inference;
    r:gives {
        (0 1 7 9) :digitsToNumber 179 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 100 70 9) math:sum 179}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 179];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2371 a r:Inference;
    r:gives {
        (9 7 1 0) :digitsToNumber 9710 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(9000 700 10 0) math:sum 9710}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2372 a r:Inference;
    r:gives {
        180 :numberToDigits (0 1 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(180 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(180 1000) math:remainder 180}]
        [ a r:Fact; r:gives {(180 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(180 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 180];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 180];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2373 a r:Inference;
    r:gives {
        181 :numberToDigits (0 1 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(181 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(181 1000) math:remainder 181}]
        [ a r:Fact; r:gives {(181 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(181 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 181];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 181];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2374 a r:Inference;
    r:gives {
        182 :numberToDigits (0 1 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(182 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(182 1000) math:remainder 182}]
        [ a r:Fact; r:gives {(182 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(182 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 182];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 182];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2375 a r:Inference;
    r:gives {
        183 :numberToDigits (0 1 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(183 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(183 1000) math:remainder 183}]
        [ a r:Fact; r:gives {(183 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(183 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 183];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 183];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2376 a r:Inference;
    r:gives {
        184 :numberToDigits (0 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(184 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(184 1000) math:remainder 184}]
        [ a r:Fact; r:gives {(184 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(184 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 184];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 184];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2377 a r:Inference;
    r:gives {
        185 :numberToDigits (0 1 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(185 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(185 1000) math:remainder 185}]
        [ a r:Fact; r:gives {(185 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(185 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 185];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 185];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2378 a r:Inference;
    r:gives {
        186 :numberToDigits (0 1 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(186 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(186 1000) math:remainder 186}]
        [ a r:Fact; r:gives {(186 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(186 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 186];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 186];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2379 a r:Inference;
    r:gives {
        187 :numberToDigits (0 1 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(187 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(187 1000) math:remainder 187}]
        [ a r:Fact; r:gives {(187 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(187 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 187];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 187];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2380 a r:Inference;
    r:gives {
        188 :numberToDigits (0 1 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(188 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(188 1000) math:remainder 188}]
        [ a r:Fact; r:gives {(188 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(188 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 188];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 188];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2381 a r:Inference;
    r:gives {
        (0 1 8 8) :digitsToNumber 188 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 100 80 8) math:sum 188}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 188];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2382 a r:Inference;
    r:gives {
        (8 8 1 0) :digitsToNumber 8810 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(8000 800 10 0) math:sum 8810}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2383 a r:Inference;
    r:gives {
        189 :numberToDigits (0 1 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(189 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(189 1000) math:remainder 189}]
        [ a r:Fact; r:gives {(189 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(189 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2384 a r:Inference;
    r:gives {
        (0 1 8 9) :digitsToNumber 189 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 100 80 9) math:sum 189}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 189];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2385 a r:Inference;
    r:gives {
        (9 8 1 0) :digitsToNumber 9810 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(9000 800 10 0) math:sum 9810}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2386 a r:Inference;
    r:gives {
        190 :numberToDigits (0 1 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(190 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(190 1000) math:remainder 190}]
        [ a r:Fact; r:gives {(190 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(190 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 190];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 190];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2387 a r:Inference;
    r:gives {
        191 :numberToDigits (0 1 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(191 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(191 1000) math:remainder 191}]
        [ a r:Fact; r:gives {(191 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(191 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 191];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 191];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2388 a r:Inference;
    r:gives {
        192 :numberToDigits (0 1 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(192 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(192 1000) math:remainder 192}]
        [ a r:Fact; r:gives {(192 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(192 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 192];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 192];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2389 a r:Inference;
    r:gives {
        193 :numberToDigits (0 1 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(193 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(193 1000) math:remainder 193}]
        [ a r:Fact; r:gives {(193 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(193 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 193];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 193];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2390 a r:Inference;
    r:gives {
        194 :numberToDigits (0 1 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(194 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(194 1000) math:remainder 194}]
        [ a r:Fact; r:gives {(194 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(194 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 194];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 194];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2391 a r:Inference;
    r:gives {
        195 :numberToDigits (0 1 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(195 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(195 1000) math:remainder 195}]
        [ a r:Fact; r:gives {(195 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(195 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 195];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 195];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2392 a r:Inference;
    r:gives {
        196 :numberToDigits (0 1 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(196 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(196 1000) math:remainder 196}]
        [ a r:Fact; r:gives {(196 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(196 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 196];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 196];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2393 a r:Inference;
    r:gives {
        197 :numberToDigits (0 1 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(197 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(197 1000) math:remainder 197}]
        [ a r:Fact; r:gives {(197 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(197 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 197];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 197];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2394 a r:Inference;
    r:gives {
        198 :numberToDigits (0 1 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(198 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(198 1000) math:remainder 198}]
        [ a r:Fact; r:gives {(198 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(198 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 198];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 198];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2395 a r:Inference;
    r:gives {
        199 :numberToDigits (0 1 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(199 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(199 1000) math:remainder 199}]
        [ a r:Fact; r:gives {(199 100) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(199 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 199];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 199];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2396 a r:Inference;
    r:gives {
        (0 1 9 9) :digitsToNumber 199 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(1 100) math:product 100}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 100 90 9) math:sum 199}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 100];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 199];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2397 a r:Inference;
    r:gives {
        (9 9 1 0) :digitsToNumber 9910 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(1 10) math:product 10}]
        [ a r:Fact; r:gives {(9000 900 10 0) math:sum 9910}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9910];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2398 a r:Inference;
    r:gives {
        200 :numberToDigits (0 2 0 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(200 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(200 1000) math:remainder 200}]
        [ a r:Fact; r:gives {(200 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(200 100) math:remainder 0}]
        [ a r:Fact; r:gives {(0 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(0 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2399 a r:Inference;
    r:gives {
        201 :numberToDigits (0 2 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(201 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(201 1000) math:remainder 201}]
        [ a r:Fact; r:gives {(201 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(201 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 201];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 201];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2400 a r:Inference;
    r:gives {
        202 :numberToDigits (0 2 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(202 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(202 1000) math:remainder 202}]
        [ a r:Fact; r:gives {(202 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(202 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 202];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 202];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2401 a r:Inference;
    r:gives {
        203 :numberToDigits (0 2 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(203 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(203 1000) math:remainder 203}]
        [ a r:Fact; r:gives {(203 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(203 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 203];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 203];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2402 a r:Inference;
    r:gives {
        204 :numberToDigits (0 2 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(204 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(204 1000) math:remainder 204}]
        [ a r:Fact; r:gives {(204 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(204 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 204];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 204];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2403 a r:Inference;
    r:gives {
        205 :numberToDigits (0 2 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(205 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(205 1000) math:remainder 205}]
        [ a r:Fact; r:gives {(205 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(205 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 205];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 205];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2404 a r:Inference;
    r:gives {
        206 :numberToDigits (0 2 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(206 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(206 1000) math:remainder 206}]
        [ a r:Fact; r:gives {(206 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(206 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 206];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 206];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2405 a r:Inference;
    r:gives {
        207 :numberToDigits (0 2 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(207 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(207 1000) math:remainder 207}]
        [ a r:Fact; r:gives {(207 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(207 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 207];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 207];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2406 a r:Inference;
    r:gives {
        208 :numberToDigits (0 2 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(208 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(208 1000) math:remainder 208}]
        [ a r:Fact; r:gives {(208 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(208 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 208];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 208];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2407 a r:Inference;
    r:gives {
        209 :numberToDigits (0 2 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(209 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(209 1000) math:remainder 209}]
        [ a r:Fact; r:gives {(209 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(209 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 209];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 209];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2408 a r:Inference;
    r:gives {
        210 :numberToDigits (0 2 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(210 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(210 1000) math:remainder 210}]
        [ a r:Fact; r:gives {(210 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(210 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 210];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2409 a r:Inference;
    r:gives {
        211 :numberToDigits (0 2 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(211 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(211 1000) math:remainder 211}]
        [ a r:Fact; r:gives {(211 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(211 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 211];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 211];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2410 a r:Inference;
    r:gives {
        212 :numberToDigits (0 2 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(212 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(212 1000) math:remainder 212}]
        [ a r:Fact; r:gives {(212 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(212 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 212];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 212];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2411 a r:Inference;
    r:gives {
        213 :numberToDigits (0 2 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(213 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(213 1000) math:remainder 213}]
        [ a r:Fact; r:gives {(213 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(213 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 213];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 213];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2412 a r:Inference;
    r:gives {
        214 :numberToDigits (0 2 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(214 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(214 1000) math:remainder 214}]
        [ a r:Fact; r:gives {(214 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(214 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 214];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 214];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2413 a r:Inference;
    r:gives {
        215 :numberToDigits (0 2 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(215 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(215 1000) math:remainder 215}]
        [ a r:Fact; r:gives {(215 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(215 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 215];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 215];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2414 a r:Inference;
    r:gives {
        216 :numberToDigits (0 2 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(216 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(216 1000) math:remainder 216}]
        [ a r:Fact; r:gives {(216 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(216 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 216];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 216];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2415 a r:Inference;
    r:gives {
        217 :numberToDigits (0 2 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(217 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(217 1000) math:remainder 217}]
        [ a r:Fact; r:gives {(217 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(217 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 217];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 217];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2416 a r:Inference;
    r:gives {
        218 :numberToDigits (0 2 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(218 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(218 1000) math:remainder 218}]
        [ a r:Fact; r:gives {(218 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(218 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 218];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 218];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2417 a r:Inference;
    r:gives {
        219 :numberToDigits (0 2 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(219 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(219 1000) math:remainder 219}]
        [ a r:Fact; r:gives {(219 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(219 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 219];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 219];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2418 a r:Inference;
    r:gives {
        220 :numberToDigits (0 2 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(220 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(220 1000) math:remainder 220}]
        [ a r:Fact; r:gives {(220 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(220 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2419 a r:Inference;
    r:gives {
        221 :numberToDigits (0 2 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(221 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(221 1000) math:remainder 221}]
        [ a r:Fact; r:gives {(221 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(221 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 221];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 221];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2420 a r:Inference;
    r:gives {
        222 :numberToDigits (0 2 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(222 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(222 1000) math:remainder 222}]
        [ a r:Fact; r:gives {(222 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(222 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 222];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 222];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2421 a r:Inference;
    r:gives {
        (0 2 2 2) :digitsToNumber 222 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 200 20 2) math:sum 222}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 222];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3439.

skolem:lemma2422 a r:Inference;
    r:gives {
        (2 2 2 0) :digitsToNumber 2220 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 1000) math:product 2000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(2000 200 20 0) math:sum 2220}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 2220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2423 a r:Inference;
    r:gives {
        223 :numberToDigits (0 2 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(223 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(223 1000) math:remainder 223}]
        [ a r:Fact; r:gives {(223 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(223 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 223];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 223];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2424 a r:Inference;
    r:gives {
        (0 2 2 3) :digitsToNumber 223 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 200 20 3) math:sum 223}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 223];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2425 a r:Inference;
    r:gives {
        (3 2 2 0) :digitsToNumber 3220 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(3000 200 20 0) math:sum 3220}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2426 a r:Inference;
    r:gives {
        224 :numberToDigits (0 2 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(224 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(224 1000) math:remainder 224}]
        [ a r:Fact; r:gives {(224 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(224 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 224];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 224];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2427 a r:Inference;
    r:gives {
        (0 2 2 4) :digitsToNumber 224 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 200 20 4) math:sum 224}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 224];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2428 a r:Inference;
    r:gives {
        (4 2 2 0) :digitsToNumber 4220 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(4000 200 20 0) math:sum 4220}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2429 a r:Inference;
    r:gives {
        225 :numberToDigits (0 2 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(225 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(225 1000) math:remainder 225}]
        [ a r:Fact; r:gives {(225 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(225 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 225];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 225];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2430 a r:Inference;
    r:gives {
        (0 2 2 5) :digitsToNumber 225 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 200 20 5) math:sum 225}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 225];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2431 a r:Inference;
    r:gives {
        (5 2 2 0) :digitsToNumber 5220 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(5000 200 20 0) math:sum 5220}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2432 a r:Inference;
    r:gives {
        226 :numberToDigits (0 2 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(226 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(226 1000) math:remainder 226}]
        [ a r:Fact; r:gives {(226 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(226 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 226];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 226];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2433 a r:Inference;
    r:gives {
        (0 2 2 6) :digitsToNumber 226 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 200 20 6) math:sum 226}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 226];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2434 a r:Inference;
    r:gives {
        (6 2 2 0) :digitsToNumber 6220 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(6000 200 20 0) math:sum 6220}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2435 a r:Inference;
    r:gives {
        227 :numberToDigits (0 2 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(227 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(227 1000) math:remainder 227}]
        [ a r:Fact; r:gives {(227 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(227 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 227];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 227];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2436 a r:Inference;
    r:gives {
        (0 2 2 7) :digitsToNumber 227 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 200 20 7) math:sum 227}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 227];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2437 a r:Inference;
    r:gives {
        (7 2 2 0) :digitsToNumber 7220 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(7000 200 20 0) math:sum 7220}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2438 a r:Inference;
    r:gives {
        228 :numberToDigits (0 2 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(228 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(228 1000) math:remainder 228}]
        [ a r:Fact; r:gives {(228 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(228 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 228];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 228];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2439 a r:Inference;
    r:gives {
        (0 2 2 8) :digitsToNumber 228 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 200 20 8) math:sum 228}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 228];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2440 a r:Inference;
    r:gives {
        (8 2 2 0) :digitsToNumber 8220 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(8000 200 20 0) math:sum 8220}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2441 a r:Inference;
    r:gives {
        229 :numberToDigits (0 2 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(229 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(229 1000) math:remainder 229}]
        [ a r:Fact; r:gives {(229 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(229 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 229];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 229];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2442 a r:Inference;
    r:gives {
        (0 2 2 9) :digitsToNumber 229 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(0 200 20 9) math:sum 229}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 229];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2443 a r:Inference;
    r:gives {
        (9 2 2 0) :digitsToNumber 9220 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(9000 200 20 0) math:sum 9220}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9220];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2444 a r:Inference;
    r:gives {
        230 :numberToDigits (0 2 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(230 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(230 1000) math:remainder 230}]
        [ a r:Fact; r:gives {(230 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(230 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 230];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 230];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2445 a r:Inference;
    r:gives {
        231 :numberToDigits (0 2 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(231 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(231 1000) math:remainder 231}]
        [ a r:Fact; r:gives {(231 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(231 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 231];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 231];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2446 a r:Inference;
    r:gives {
        232 :numberToDigits (0 2 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(232 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(232 1000) math:remainder 232}]
        [ a r:Fact; r:gives {(232 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(232 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 232];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 232];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2447 a r:Inference;
    r:gives {
        233 :numberToDigits (0 2 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(233 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(233 1000) math:remainder 233}]
        [ a r:Fact; r:gives {(233 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(233 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 233];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 233];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2448 a r:Inference;
    r:gives {
        (0 2 3 3) :digitsToNumber 233 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 200 30 3) math:sum 233}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 233];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2449 a r:Inference;
    r:gives {
        (3 3 2 0) :digitsToNumber 3320 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(3000 300 20 0) math:sum 3320}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2450 a r:Inference;
    r:gives {
        234 :numberToDigits (0 2 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(234 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(234 1000) math:remainder 234}]
        [ a r:Fact; r:gives {(234 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(234 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2451 a r:Inference;
    r:gives {
        (0 2 3 4) :digitsToNumber 234 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 200 30 4) math:sum 234}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 234];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2452 a r:Inference;
    r:gives {
        (4 3 2 0) :digitsToNumber 4320 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(4000 300 20 0) math:sum 4320}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2453 a r:Inference;
    r:gives {
        235 :numberToDigits (0 2 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(235 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(235 1000) math:remainder 235}]
        [ a r:Fact; r:gives {(235 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(235 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2454 a r:Inference;
    r:gives {
        (0 2 3 5) :digitsToNumber 235 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 200 30 5) math:sum 235}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 235];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2455 a r:Inference;
    r:gives {
        (5 3 2 0) :digitsToNumber 5320 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(5000 300 20 0) math:sum 5320}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2456 a r:Inference;
    r:gives {
        236 :numberToDigits (0 2 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(236 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(236 1000) math:remainder 236}]
        [ a r:Fact; r:gives {(236 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(236 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2457 a r:Inference;
    r:gives {
        (0 2 3 6) :digitsToNumber 236 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 200 30 6) math:sum 236}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 236];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2458 a r:Inference;
    r:gives {
        (6 3 2 0) :digitsToNumber 6320 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(6000 300 20 0) math:sum 6320}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2459 a r:Inference;
    r:gives {
        237 :numberToDigits (0 2 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(237 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(237 1000) math:remainder 237}]
        [ a r:Fact; r:gives {(237 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(237 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2460 a r:Inference;
    r:gives {
        (0 2 3 7) :digitsToNumber 237 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 200 30 7) math:sum 237}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 237];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2461 a r:Inference;
    r:gives {
        (7 3 2 0) :digitsToNumber 7320 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(7000 300 20 0) math:sum 7320}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2462 a r:Inference;
    r:gives {
        238 :numberToDigits (0 2 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(238 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(238 1000) math:remainder 238}]
        [ a r:Fact; r:gives {(238 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(238 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2463 a r:Inference;
    r:gives {
        (0 2 3 8) :digitsToNumber 238 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 200 30 8) math:sum 238}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 238];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2464 a r:Inference;
    r:gives {
        (8 3 2 0) :digitsToNumber 8320 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(8000 300 20 0) math:sum 8320}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2465 a r:Inference;
    r:gives {
        239 :numberToDigits (0 2 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(239 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(239 1000) math:remainder 239}]
        [ a r:Fact; r:gives {(239 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(239 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2466 a r:Inference;
    r:gives {
        (0 2 3 9) :digitsToNumber 239 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 200 30 9) math:sum 239}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 239];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2467 a r:Inference;
    r:gives {
        (9 3 2 0) :digitsToNumber 9320 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(9000 300 20 0) math:sum 9320}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2468 a r:Inference;
    r:gives {
        240 :numberToDigits (0 2 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(240 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(240 1000) math:remainder 240}]
        [ a r:Fact; r:gives {(240 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(240 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 240];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 240];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2469 a r:Inference;
    r:gives {
        241 :numberToDigits (0 2 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(241 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(241 1000) math:remainder 241}]
        [ a r:Fact; r:gives {(241 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(241 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 241];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 241];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2470 a r:Inference;
    r:gives {
        242 :numberToDigits (0 2 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(242 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(242 1000) math:remainder 242}]
        [ a r:Fact; r:gives {(242 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(242 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 242];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 242];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2471 a r:Inference;
    r:gives {
        243 :numberToDigits (0 2 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(243 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(243 1000) math:remainder 243}]
        [ a r:Fact; r:gives {(243 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(243 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 243];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 243];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2472 a r:Inference;
    r:gives {
        244 :numberToDigits (0 2 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(244 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(244 1000) math:remainder 244}]
        [ a r:Fact; r:gives {(244 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(244 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 244];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 244];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2473 a r:Inference;
    r:gives {
        (0 2 4 4) :digitsToNumber 244 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 200 40 4) math:sum 244}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 244];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2474 a r:Inference;
    r:gives {
        (4 4 2 0) :digitsToNumber 4420 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(4000 400 20 0) math:sum 4420}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2475 a r:Inference;
    r:gives {
        245 :numberToDigits (0 2 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(245 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(245 1000) math:remainder 245}]
        [ a r:Fact; r:gives {(245 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(245 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2476 a r:Inference;
    r:gives {
        (0 2 4 5) :digitsToNumber 245 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 200 40 5) math:sum 245}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 245];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2477 a r:Inference;
    r:gives {
        (5 4 2 0) :digitsToNumber 5420 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(5000 400 20 0) math:sum 5420}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2478 a r:Inference;
    r:gives {
        246 :numberToDigits (0 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(246 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(246 1000) math:remainder 246}]
        [ a r:Fact; r:gives {(246 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(246 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2479 a r:Inference;
    r:gives {
        (0 2 4 6) :digitsToNumber 246 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 200 40 6) math:sum 246}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 246];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2480 a r:Inference;
    r:gives {
        (6 4 2 0) :digitsToNumber 6420 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(6000 400 20 0) math:sum 6420}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2481 a r:Inference;
    r:gives {
        247 :numberToDigits (0 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(247 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(247 1000) math:remainder 247}]
        [ a r:Fact; r:gives {(247 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(247 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2482 a r:Inference;
    r:gives {
        (0 2 4 7) :digitsToNumber 247 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 200 40 7) math:sum 247}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 247];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2483 a r:Inference;
    r:gives {
        (7 4 2 0) :digitsToNumber 7420 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(7000 400 20 0) math:sum 7420}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2484 a r:Inference;
    r:gives {
        248 :numberToDigits (0 2 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(248 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(248 1000) math:remainder 248}]
        [ a r:Fact; r:gives {(248 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(248 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2485 a r:Inference;
    r:gives {
        (0 2 4 8) :digitsToNumber 248 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 200 40 8) math:sum 248}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 248];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2486 a r:Inference;
    r:gives {
        (8 4 2 0) :digitsToNumber 8420 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(8000 400 20 0) math:sum 8420}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2487 a r:Inference;
    r:gives {
        249 :numberToDigits (0 2 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(249 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(249 1000) math:remainder 249}]
        [ a r:Fact; r:gives {(249 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(249 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2488 a r:Inference;
    r:gives {
        (0 2 4 9) :digitsToNumber 249 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 200 40 9) math:sum 249}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 249];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2489 a r:Inference;
    r:gives {
        (9 4 2 0) :digitsToNumber 9420 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(9000 400 20 0) math:sum 9420}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2490 a r:Inference;
    r:gives {
        250 :numberToDigits (0 2 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(250 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(250 1000) math:remainder 250}]
        [ a r:Fact; r:gives {(250 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(250 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 250];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 250];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2491 a r:Inference;
    r:gives {
        251 :numberToDigits (0 2 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(251 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(251 1000) math:remainder 251}]
        [ a r:Fact; r:gives {(251 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(251 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 251];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 251];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2492 a r:Inference;
    r:gives {
        252 :numberToDigits (0 2 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(252 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(252 1000) math:remainder 252}]
        [ a r:Fact; r:gives {(252 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(252 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 252];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 252];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2493 a r:Inference;
    r:gives {
        253 :numberToDigits (0 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(253 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(253 1000) math:remainder 253}]
        [ a r:Fact; r:gives {(253 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(253 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 253];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 253];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2494 a r:Inference;
    r:gives {
        254 :numberToDigits (0 2 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(254 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(254 1000) math:remainder 254}]
        [ a r:Fact; r:gives {(254 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(254 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 254];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 254];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2495 a r:Inference;
    r:gives {
        255 :numberToDigits (0 2 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(255 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(255 1000) math:remainder 255}]
        [ a r:Fact; r:gives {(255 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(255 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 255];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 255];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2496 a r:Inference;
    r:gives {
        (0 2 5 5) :digitsToNumber 255 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 200 50 5) math:sum 255}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 255];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2497 a r:Inference;
    r:gives {
        (5 5 2 0) :digitsToNumber 5520 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(5000 500 20 0) math:sum 5520}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2498 a r:Inference;
    r:gives {
        256 :numberToDigits (0 2 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(256 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(256 1000) math:remainder 256}]
        [ a r:Fact; r:gives {(256 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(256 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2499 a r:Inference;
    r:gives {
        (0 2 5 6) :digitsToNumber 256 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 200 50 6) math:sum 256}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 256];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2500 a r:Inference;
    r:gives {
        (6 5 2 0) :digitsToNumber 6520 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(6000 500 20 0) math:sum 6520}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2501 a r:Inference;
    r:gives {
        257 :numberToDigits (0 2 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(257 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(257 1000) math:remainder 257}]
        [ a r:Fact; r:gives {(257 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(257 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2502 a r:Inference;
    r:gives {
        (0 2 5 7) :digitsToNumber 257 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 200 50 7) math:sum 257}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 257];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2503 a r:Inference;
    r:gives {
        (7 5 2 0) :digitsToNumber 7520 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(7000 500 20 0) math:sum 7520}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2504 a r:Inference;
    r:gives {
        258 :numberToDigits (0 2 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(258 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(258 1000) math:remainder 258}]
        [ a r:Fact; r:gives {(258 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(258 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2505 a r:Inference;
    r:gives {
        (0 2 5 8) :digitsToNumber 258 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 200 50 8) math:sum 258}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 258];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2506 a r:Inference;
    r:gives {
        (8 5 2 0) :digitsToNumber 8520 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(8000 500 20 0) math:sum 8520}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2507 a r:Inference;
    r:gives {
        259 :numberToDigits (0 2 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(259 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(259 1000) math:remainder 259}]
        [ a r:Fact; r:gives {(259 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(259 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2508 a r:Inference;
    r:gives {
        (0 2 5 9) :digitsToNumber 259 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 200 50 9) math:sum 259}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 259];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2509 a r:Inference;
    r:gives {
        (9 5 2 0) :digitsToNumber 9520 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(9000 500 20 0) math:sum 9520}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2510 a r:Inference;
    r:gives {
        260 :numberToDigits (0 2 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(260 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(260 1000) math:remainder 260}]
        [ a r:Fact; r:gives {(260 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(260 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 260];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 260];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2511 a r:Inference;
    r:gives {
        261 :numberToDigits (0 2 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(261 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(261 1000) math:remainder 261}]
        [ a r:Fact; r:gives {(261 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(261 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 261];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2512 a r:Inference;
    r:gives {
        262 :numberToDigits (0 2 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(262 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(262 1000) math:remainder 262}]
        [ a r:Fact; r:gives {(262 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(262 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 262];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2513 a r:Inference;
    r:gives {
        263 :numberToDigits (0 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(263 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(263 1000) math:remainder 263}]
        [ a r:Fact; r:gives {(263 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(263 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 263];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2514 a r:Inference;
    r:gives {
        264 :numberToDigits (0 2 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(264 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(264 1000) math:remainder 264}]
        [ a r:Fact; r:gives {(264 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(264 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 264];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2515 a r:Inference;
    r:gives {
        265 :numberToDigits (0 2 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(265 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(265 1000) math:remainder 265}]
        [ a r:Fact; r:gives {(265 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(265 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 265];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2516 a r:Inference;
    r:gives {
        266 :numberToDigits (0 2 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(266 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(266 1000) math:remainder 266}]
        [ a r:Fact; r:gives {(266 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(266 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2517 a r:Inference;
    r:gives {
        (0 2 6 6) :digitsToNumber 266 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 200 60 6) math:sum 266}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 266];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2518 a r:Inference;
    r:gives {
        (6 6 2 0) :digitsToNumber 6620 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(6000 600 20 0) math:sum 6620}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2519 a r:Inference;
    r:gives {
        267 :numberToDigits (0 2 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(267 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(267 1000) math:remainder 267}]
        [ a r:Fact; r:gives {(267 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(267 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2520 a r:Inference;
    r:gives {
        (0 2 6 7) :digitsToNumber 267 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 200 60 7) math:sum 267}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 267];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2521 a r:Inference;
    r:gives {
        (7 6 2 0) :digitsToNumber 7620 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(7000 600 20 0) math:sum 7620}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2522 a r:Inference;
    r:gives {
        268 :numberToDigits (0 2 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(268 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(268 1000) math:remainder 268}]
        [ a r:Fact; r:gives {(268 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(268 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2523 a r:Inference;
    r:gives {
        (0 2 6 8) :digitsToNumber 268 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 200 60 8) math:sum 268}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 268];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2524 a r:Inference;
    r:gives {
        (8 6 2 0) :digitsToNumber 8620 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(8000 600 20 0) math:sum 8620}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2525 a r:Inference;
    r:gives {
        269 :numberToDigits (0 2 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(269 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(269 1000) math:remainder 269}]
        [ a r:Fact; r:gives {(269 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(269 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2526 a r:Inference;
    r:gives {
        (0 2 6 9) :digitsToNumber 269 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 200 60 9) math:sum 269}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 269];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2527 a r:Inference;
    r:gives {
        (9 6 2 0) :digitsToNumber 9620 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(9000 600 20 0) math:sum 9620}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2528 a r:Inference;
    r:gives {
        270 :numberToDigits (0 2 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(270 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(270 1000) math:remainder 270}]
        [ a r:Fact; r:gives {(270 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(270 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 270];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 270];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2529 a r:Inference;
    r:gives {
        271 :numberToDigits (0 2 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(271 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(271 1000) math:remainder 271}]
        [ a r:Fact; r:gives {(271 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(271 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 271];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 271];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2530 a r:Inference;
    r:gives {
        272 :numberToDigits (0 2 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(272 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(272 1000) math:remainder 272}]
        [ a r:Fact; r:gives {(272 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(272 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 272];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 272];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2531 a r:Inference;
    r:gives {
        273 :numberToDigits (0 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(273 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(273 1000) math:remainder 273}]
        [ a r:Fact; r:gives {(273 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(273 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 273];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 273];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2532 a r:Inference;
    r:gives {
        274 :numberToDigits (0 2 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(274 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(274 1000) math:remainder 274}]
        [ a r:Fact; r:gives {(274 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(274 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 274];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 274];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2533 a r:Inference;
    r:gives {
        275 :numberToDigits (0 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(275 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(275 1000) math:remainder 275}]
        [ a r:Fact; r:gives {(275 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(275 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 275];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 275];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2534 a r:Inference;
    r:gives {
        276 :numberToDigits (0 2 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(276 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(276 1000) math:remainder 276}]
        [ a r:Fact; r:gives {(276 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(276 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 276];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 276];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2535 a r:Inference;
    r:gives {
        277 :numberToDigits (0 2 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(277 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(277 1000) math:remainder 277}]
        [ a r:Fact; r:gives {(277 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(277 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 277];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 277];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2536 a r:Inference;
    r:gives {
        (0 2 7 7) :digitsToNumber 277 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 200 70 7) math:sum 277}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 277];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2537 a r:Inference;
    r:gives {
        (7 7 2 0) :digitsToNumber 7720 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(7000 700 20 0) math:sum 7720}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2538 a r:Inference;
    r:gives {
        278 :numberToDigits (0 2 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(278 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(278 1000) math:remainder 278}]
        [ a r:Fact; r:gives {(278 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(278 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2539 a r:Inference;
    r:gives {
        (0 2 7 8) :digitsToNumber 278 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 200 70 8) math:sum 278}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 278];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2540 a r:Inference;
    r:gives {
        (8 7 2 0) :digitsToNumber 8720 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(8000 700 20 0) math:sum 8720}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2541 a r:Inference;
    r:gives {
        279 :numberToDigits (0 2 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(279 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(279 1000) math:remainder 279}]
        [ a r:Fact; r:gives {(279 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(279 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2542 a r:Inference;
    r:gives {
        (0 2 7 9) :digitsToNumber 279 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 200 70 9) math:sum 279}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 279];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2543 a r:Inference;
    r:gives {
        (9 7 2 0) :digitsToNumber 9720 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(9000 700 20 0) math:sum 9720}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2544 a r:Inference;
    r:gives {
        280 :numberToDigits (0 2 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(280 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(280 1000) math:remainder 280}]
        [ a r:Fact; r:gives {(280 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(280 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 280];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 280];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2545 a r:Inference;
    r:gives {
        281 :numberToDigits (0 2 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(281 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(281 1000) math:remainder 281}]
        [ a r:Fact; r:gives {(281 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(281 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 281];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 281];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2546 a r:Inference;
    r:gives {
        282 :numberToDigits (0 2 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(282 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(282 1000) math:remainder 282}]
        [ a r:Fact; r:gives {(282 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(282 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 282];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 282];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2547 a r:Inference;
    r:gives {
        283 :numberToDigits (0 2 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(283 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(283 1000) math:remainder 283}]
        [ a r:Fact; r:gives {(283 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(283 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 283];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 283];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2548 a r:Inference;
    r:gives {
        284 :numberToDigits (0 2 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(284 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(284 1000) math:remainder 284}]
        [ a r:Fact; r:gives {(284 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(284 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 284];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 284];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2549 a r:Inference;
    r:gives {
        285 :numberToDigits (0 2 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(285 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(285 1000) math:remainder 285}]
        [ a r:Fact; r:gives {(285 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(285 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 285];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 285];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2550 a r:Inference;
    r:gives {
        286 :numberToDigits (0 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(286 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(286 1000) math:remainder 286}]
        [ a r:Fact; r:gives {(286 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(286 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 286];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 286];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2551 a r:Inference;
    r:gives {
        287 :numberToDigits (0 2 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(287 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(287 1000) math:remainder 287}]
        [ a r:Fact; r:gives {(287 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(287 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 287];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 287];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2552 a r:Inference;
    r:gives {
        288 :numberToDigits (0 2 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(288 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(288 1000) math:remainder 288}]
        [ a r:Fact; r:gives {(288 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(288 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 288];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 288];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2553 a r:Inference;
    r:gives {
        (0 2 8 8) :digitsToNumber 288 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 200 80 8) math:sum 288}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 288];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2554 a r:Inference;
    r:gives {
        (8 8 2 0) :digitsToNumber 8820 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(8000 800 20 0) math:sum 8820}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2555 a r:Inference;
    r:gives {
        289 :numberToDigits (0 2 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(289 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(289 1000) math:remainder 289}]
        [ a r:Fact; r:gives {(289 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(289 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2556 a r:Inference;
    r:gives {
        (0 2 8 9) :digitsToNumber 289 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 200 80 9) math:sum 289}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 289];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2557 a r:Inference;
    r:gives {
        (9 8 2 0) :digitsToNumber 9820 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(9000 800 20 0) math:sum 9820}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2558 a r:Inference;
    r:gives {
        290 :numberToDigits (0 2 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(290 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(290 1000) math:remainder 290}]
        [ a r:Fact; r:gives {(290 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(290 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 290];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 290];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2559 a r:Inference;
    r:gives {
        291 :numberToDigits (0 2 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(291 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(291 1000) math:remainder 291}]
        [ a r:Fact; r:gives {(291 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(291 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 291];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 291];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2560 a r:Inference;
    r:gives {
        292 :numberToDigits (0 2 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(292 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(292 1000) math:remainder 292}]
        [ a r:Fact; r:gives {(292 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(292 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 292];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 292];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2561 a r:Inference;
    r:gives {
        293 :numberToDigits (0 2 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(293 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(293 1000) math:remainder 293}]
        [ a r:Fact; r:gives {(293 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(293 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 293];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 293];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2562 a r:Inference;
    r:gives {
        294 :numberToDigits (0 2 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(294 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(294 1000) math:remainder 294}]
        [ a r:Fact; r:gives {(294 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(294 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 294];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 294];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2563 a r:Inference;
    r:gives {
        295 :numberToDigits (0 2 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(295 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(295 1000) math:remainder 295}]
        [ a r:Fact; r:gives {(295 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(295 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 295];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 295];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2564 a r:Inference;
    r:gives {
        296 :numberToDigits (0 2 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(296 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(296 1000) math:remainder 296}]
        [ a r:Fact; r:gives {(296 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(296 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 296];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 296];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2565 a r:Inference;
    r:gives {
        297 :numberToDigits (0 2 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(297 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(297 1000) math:remainder 297}]
        [ a r:Fact; r:gives {(297 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(297 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 297];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 297];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2566 a r:Inference;
    r:gives {
        298 :numberToDigits (0 2 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(298 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(298 1000) math:remainder 298}]
        [ a r:Fact; r:gives {(298 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(298 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 298];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 298];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2567 a r:Inference;
    r:gives {
        299 :numberToDigits (0 2 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(299 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(299 1000) math:remainder 299}]
        [ a r:Fact; r:gives {(299 100) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(299 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 299];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 299];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2568 a r:Inference;
    r:gives {
        (0 2 9 9) :digitsToNumber 299 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(2 100) math:product 200}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 200 90 9) math:sum 299}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 200];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 299];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2569 a r:Inference;
    r:gives {
        (9 9 2 0) :digitsToNumber 9920 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(2 10) math:product 20}]
        [ a r:Fact; r:gives {(9000 900 20 0) math:sum 9920}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9920];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2570 a r:Inference;
    r:gives {
        300 :numberToDigits (0 3 0 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(300 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(300 1000) math:remainder 300}]
        [ a r:Fact; r:gives {(300 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(300 100) math:remainder 0}]
        [ a r:Fact; r:gives {(0 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(0 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2571 a r:Inference;
    r:gives {
        301 :numberToDigits (0 3 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(301 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(301 1000) math:remainder 301}]
        [ a r:Fact; r:gives {(301 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(301 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 301];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 301];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2572 a r:Inference;
    r:gives {
        302 :numberToDigits (0 3 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(302 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(302 1000) math:remainder 302}]
        [ a r:Fact; r:gives {(302 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(302 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 302];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 302];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2573 a r:Inference;
    r:gives {
        303 :numberToDigits (0 3 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(303 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(303 1000) math:remainder 303}]
        [ a r:Fact; r:gives {(303 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(303 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 303];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 303];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2574 a r:Inference;
    r:gives {
        304 :numberToDigits (0 3 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(304 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(304 1000) math:remainder 304}]
        [ a r:Fact; r:gives {(304 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(304 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 304];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 304];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2575 a r:Inference;
    r:gives {
        305 :numberToDigits (0 3 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(305 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(305 1000) math:remainder 305}]
        [ a r:Fact; r:gives {(305 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(305 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 305];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 305];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2576 a r:Inference;
    r:gives {
        306 :numberToDigits (0 3 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(306 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(306 1000) math:remainder 306}]
        [ a r:Fact; r:gives {(306 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(306 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 306];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 306];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2577 a r:Inference;
    r:gives {
        307 :numberToDigits (0 3 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(307 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(307 1000) math:remainder 307}]
        [ a r:Fact; r:gives {(307 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(307 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 307];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 307];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2578 a r:Inference;
    r:gives {
        308 :numberToDigits (0 3 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(308 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(308 1000) math:remainder 308}]
        [ a r:Fact; r:gives {(308 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(308 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 308];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 308];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2579 a r:Inference;
    r:gives {
        309 :numberToDigits (0 3 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(309 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(309 1000) math:remainder 309}]
        [ a r:Fact; r:gives {(309 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(309 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 309];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 309];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2580 a r:Inference;
    r:gives {
        310 :numberToDigits (0 3 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(310 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(310 1000) math:remainder 310}]
        [ a r:Fact; r:gives {(310 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(310 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 310];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2581 a r:Inference;
    r:gives {
        311 :numberToDigits (0 3 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(311 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(311 1000) math:remainder 311}]
        [ a r:Fact; r:gives {(311 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(311 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 311];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 311];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2582 a r:Inference;
    r:gives {
        312 :numberToDigits (0 3 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(312 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(312 1000) math:remainder 312}]
        [ a r:Fact; r:gives {(312 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(312 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 312];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 312];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2583 a r:Inference;
    r:gives {
        313 :numberToDigits (0 3 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(313 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(313 1000) math:remainder 313}]
        [ a r:Fact; r:gives {(313 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(313 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 313];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 313];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2584 a r:Inference;
    r:gives {
        314 :numberToDigits (0 3 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(314 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(314 1000) math:remainder 314}]
        [ a r:Fact; r:gives {(314 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(314 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 314];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 314];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2585 a r:Inference;
    r:gives {
        315 :numberToDigits (0 3 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(315 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(315 1000) math:remainder 315}]
        [ a r:Fact; r:gives {(315 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(315 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 315];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 315];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2586 a r:Inference;
    r:gives {
        316 :numberToDigits (0 3 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(316 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(316 1000) math:remainder 316}]
        [ a r:Fact; r:gives {(316 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(316 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 316];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 316];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2587 a r:Inference;
    r:gives {
        317 :numberToDigits (0 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(317 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(317 1000) math:remainder 317}]
        [ a r:Fact; r:gives {(317 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(317 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 317];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 317];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2588 a r:Inference;
    r:gives {
        318 :numberToDigits (0 3 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(318 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(318 1000) math:remainder 318}]
        [ a r:Fact; r:gives {(318 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(318 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 318];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 318];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2589 a r:Inference;
    r:gives {
        319 :numberToDigits (0 3 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(319 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(319 1000) math:remainder 319}]
        [ a r:Fact; r:gives {(319 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(319 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 319];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 319];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2590 a r:Inference;
    r:gives {
        320 :numberToDigits (0 3 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(320 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(320 1000) math:remainder 320}]
        [ a r:Fact; r:gives {(320 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(320 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 320];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2591 a r:Inference;
    r:gives {
        321 :numberToDigits (0 3 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(321 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(321 1000) math:remainder 321}]
        [ a r:Fact; r:gives {(321 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(321 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 321];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 321];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2592 a r:Inference;
    r:gives {
        322 :numberToDigits (0 3 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(322 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(322 1000) math:remainder 322}]
        [ a r:Fact; r:gives {(322 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(322 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 322];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 322];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2593 a r:Inference;
    r:gives {
        323 :numberToDigits (0 3 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(323 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(323 1000) math:remainder 323}]
        [ a r:Fact; r:gives {(323 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(323 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 323];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 323];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2594 a r:Inference;
    r:gives {
        324 :numberToDigits (0 3 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(324 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(324 1000) math:remainder 324}]
        [ a r:Fact; r:gives {(324 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(324 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 324];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 324];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2595 a r:Inference;
    r:gives {
        325 :numberToDigits (0 3 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(325 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(325 1000) math:remainder 325}]
        [ a r:Fact; r:gives {(325 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(325 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 325];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 325];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2596 a r:Inference;
    r:gives {
        326 :numberToDigits (0 3 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(326 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(326 1000) math:remainder 326}]
        [ a r:Fact; r:gives {(326 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(326 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 326];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 326];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2597 a r:Inference;
    r:gives {
        327 :numberToDigits (0 3 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(327 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(327 1000) math:remainder 327}]
        [ a r:Fact; r:gives {(327 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(327 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 327];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 327];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2598 a r:Inference;
    r:gives {
        328 :numberToDigits (0 3 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(328 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(328 1000) math:remainder 328}]
        [ a r:Fact; r:gives {(328 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(328 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 328];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 328];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2599 a r:Inference;
    r:gives {
        329 :numberToDigits (0 3 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(329 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(329 1000) math:remainder 329}]
        [ a r:Fact; r:gives {(329 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(329 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 329];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 329];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2600 a r:Inference;
    r:gives {
        330 :numberToDigits (0 3 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(330 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(330 1000) math:remainder 330}]
        [ a r:Fact; r:gives {(330 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(330 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2601 a r:Inference;
    r:gives {
        331 :numberToDigits (0 3 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(331 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(331 1000) math:remainder 331}]
        [ a r:Fact; r:gives {(331 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(331 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 331];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 331];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2602 a r:Inference;
    r:gives {
        332 :numberToDigits (0 3 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(332 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(332 1000) math:remainder 332}]
        [ a r:Fact; r:gives {(332 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(332 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 332];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 332];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2603 a r:Inference;
    r:gives {
        333 :numberToDigits (0 3 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(333 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(333 1000) math:remainder 333}]
        [ a r:Fact; r:gives {(333 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(333 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 333];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 333];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2604 a r:Inference;
    r:gives {
        (0 3 3 3) :digitsToNumber 333 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 300 30 3) math:sum 333}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 333];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3439.

skolem:lemma2605 a r:Inference;
    r:gives {
        (3 3 3 0) :digitsToNumber 3330 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 1000) math:product 3000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(3000 300 30 0) math:sum 3330}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 3330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2606 a r:Inference;
    r:gives {
        334 :numberToDigits (0 3 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(334 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(334 1000) math:remainder 334}]
        [ a r:Fact; r:gives {(334 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(334 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 334];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 334];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2607 a r:Inference;
    r:gives {
        (0 3 3 4) :digitsToNumber 334 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 300 30 4) math:sum 334}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 334];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2608 a r:Inference;
    r:gives {
        (4 3 3 0) :digitsToNumber 4330 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(4000 300 30 0) math:sum 4330}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2609 a r:Inference;
    r:gives {
        335 :numberToDigits (0 3 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(335 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(335 1000) math:remainder 335}]
        [ a r:Fact; r:gives {(335 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(335 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 335];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 335];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2610 a r:Inference;
    r:gives {
        (0 3 3 5) :digitsToNumber 335 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 300 30 5) math:sum 335}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 335];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2611 a r:Inference;
    r:gives {
        (5 3 3 0) :digitsToNumber 5330 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(5000 300 30 0) math:sum 5330}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2612 a r:Inference;
    r:gives {
        336 :numberToDigits (0 3 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(336 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(336 1000) math:remainder 336}]
        [ a r:Fact; r:gives {(336 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(336 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 336];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 336];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2613 a r:Inference;
    r:gives {
        (0 3 3 6) :digitsToNumber 336 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 300 30 6) math:sum 336}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 336];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2614 a r:Inference;
    r:gives {
        (6 3 3 0) :digitsToNumber 6330 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(6000 300 30 0) math:sum 6330}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2615 a r:Inference;
    r:gives {
        337 :numberToDigits (0 3 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(337 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(337 1000) math:remainder 337}]
        [ a r:Fact; r:gives {(337 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(337 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 337];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 337];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2616 a r:Inference;
    r:gives {
        (0 3 3 7) :digitsToNumber 337 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 300 30 7) math:sum 337}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 337];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2617 a r:Inference;
    r:gives {
        (7 3 3 0) :digitsToNumber 7330 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(7000 300 30 0) math:sum 7330}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2618 a r:Inference;
    r:gives {
        338 :numberToDigits (0 3 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(338 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(338 1000) math:remainder 338}]
        [ a r:Fact; r:gives {(338 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(338 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 338];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 338];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2619 a r:Inference;
    r:gives {
        (0 3 3 8) :digitsToNumber 338 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 300 30 8) math:sum 338}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 338];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2620 a r:Inference;
    r:gives {
        (8 3 3 0) :digitsToNumber 8330 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(8000 300 30 0) math:sum 8330}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2621 a r:Inference;
    r:gives {
        339 :numberToDigits (0 3 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(339 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(339 1000) math:remainder 339}]
        [ a r:Fact; r:gives {(339 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(339 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 339];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 339];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2622 a r:Inference;
    r:gives {
        (0 3 3 9) :digitsToNumber 339 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(0 300 30 9) math:sum 339}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 339];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2623 a r:Inference;
    r:gives {
        (9 3 3 0) :digitsToNumber 9330 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(9000 300 30 0) math:sum 9330}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9330];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2624 a r:Inference;
    r:gives {
        340 :numberToDigits (0 3 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(340 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(340 1000) math:remainder 340}]
        [ a r:Fact; r:gives {(340 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(340 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 340];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 340];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2625 a r:Inference;
    r:gives {
        341 :numberToDigits (0 3 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(341 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(341 1000) math:remainder 341}]
        [ a r:Fact; r:gives {(341 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(341 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 341];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 341];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2626 a r:Inference;
    r:gives {
        342 :numberToDigits (0 3 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(342 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(342 1000) math:remainder 342}]
        [ a r:Fact; r:gives {(342 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(342 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 342];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 342];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2627 a r:Inference;
    r:gives {
        343 :numberToDigits (0 3 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(343 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(343 1000) math:remainder 343}]
        [ a r:Fact; r:gives {(343 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(343 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 343];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 343];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2628 a r:Inference;
    r:gives {
        344 :numberToDigits (0 3 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(344 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(344 1000) math:remainder 344}]
        [ a r:Fact; r:gives {(344 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(344 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 344];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 344];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2629 a r:Inference;
    r:gives {
        (0 3 4 4) :digitsToNumber 344 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 300 40 4) math:sum 344}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 344];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2630 a r:Inference;
    r:gives {
        (4 4 3 0) :digitsToNumber 4430 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(4000 400 30 0) math:sum 4430}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2631 a r:Inference;
    r:gives {
        345 :numberToDigits (0 3 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(345 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(345 1000) math:remainder 345}]
        [ a r:Fact; r:gives {(345 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(345 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2632 a r:Inference;
    r:gives {
        (0 3 4 5) :digitsToNumber 345 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 300 40 5) math:sum 345}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 345];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2633 a r:Inference;
    r:gives {
        (5 4 3 0) :digitsToNumber 5430 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(5000 400 30 0) math:sum 5430}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2634 a r:Inference;
    r:gives {
        346 :numberToDigits (0 3 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(346 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(346 1000) math:remainder 346}]
        [ a r:Fact; r:gives {(346 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(346 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2635 a r:Inference;
    r:gives {
        (0 3 4 6) :digitsToNumber 346 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 300 40 6) math:sum 346}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 346];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2636 a r:Inference;
    r:gives {
        (6 4 3 0) :digitsToNumber 6430 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(6000 400 30 0) math:sum 6430}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2637 a r:Inference;
    r:gives {
        347 :numberToDigits (0 3 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(347 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(347 1000) math:remainder 347}]
        [ a r:Fact; r:gives {(347 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(347 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2638 a r:Inference;
    r:gives {
        (0 3 4 7) :digitsToNumber 347 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 300 40 7) math:sum 347}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 347];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2639 a r:Inference;
    r:gives {
        (7 4 3 0) :digitsToNumber 7430 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(7000 400 30 0) math:sum 7430}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2640 a r:Inference;
    r:gives {
        348 :numberToDigits (0 3 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(348 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(348 1000) math:remainder 348}]
        [ a r:Fact; r:gives {(348 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(348 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2641 a r:Inference;
    r:gives {
        (0 3 4 8) :digitsToNumber 348 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 300 40 8) math:sum 348}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 348];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2642 a r:Inference;
    r:gives {
        (8 4 3 0) :digitsToNumber 8430 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(8000 400 30 0) math:sum 8430}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2643 a r:Inference;
    r:gives {
        349 :numberToDigits (0 3 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(349 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(349 1000) math:remainder 349}]
        [ a r:Fact; r:gives {(349 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(349 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2644 a r:Inference;
    r:gives {
        (0 3 4 9) :digitsToNumber 349 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 300 40 9) math:sum 349}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 349];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2645 a r:Inference;
    r:gives {
        (9 4 3 0) :digitsToNumber 9430 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(9000 400 30 0) math:sum 9430}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2646 a r:Inference;
    r:gives {
        350 :numberToDigits (0 3 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(350 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(350 1000) math:remainder 350}]
        [ a r:Fact; r:gives {(350 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(350 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 350];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 350];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2647 a r:Inference;
    r:gives {
        351 :numberToDigits (0 3 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(351 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(351 1000) math:remainder 351}]
        [ a r:Fact; r:gives {(351 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(351 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 351];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2648 a r:Inference;
    r:gives {
        352 :numberToDigits (0 3 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(352 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(352 1000) math:remainder 352}]
        [ a r:Fact; r:gives {(352 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(352 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 352];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2649 a r:Inference;
    r:gives {
        353 :numberToDigits (0 3 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(353 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(353 1000) math:remainder 353}]
        [ a r:Fact; r:gives {(353 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(353 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 353];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2650 a r:Inference;
    r:gives {
        354 :numberToDigits (0 3 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(354 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(354 1000) math:remainder 354}]
        [ a r:Fact; r:gives {(354 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(354 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 354];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2651 a r:Inference;
    r:gives {
        355 :numberToDigits (0 3 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(355 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(355 1000) math:remainder 355}]
        [ a r:Fact; r:gives {(355 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(355 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2652 a r:Inference;
    r:gives {
        (0 3 5 5) :digitsToNumber 355 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 300 50 5) math:sum 355}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 355];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2653 a r:Inference;
    r:gives {
        (5 5 3 0) :digitsToNumber 5530 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(5000 500 30 0) math:sum 5530}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2654 a r:Inference;
    r:gives {
        356 :numberToDigits (0 3 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(356 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(356 1000) math:remainder 356}]
        [ a r:Fact; r:gives {(356 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(356 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2655 a r:Inference;
    r:gives {
        (0 3 5 6) :digitsToNumber 356 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 300 50 6) math:sum 356}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 356];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2656 a r:Inference;
    r:gives {
        (6 5 3 0) :digitsToNumber 6530 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(6000 500 30 0) math:sum 6530}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2657 a r:Inference;
    r:gives {
        357 :numberToDigits (0 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(357 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(357 1000) math:remainder 357}]
        [ a r:Fact; r:gives {(357 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(357 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2658 a r:Inference;
    r:gives {
        (0 3 5 7) :digitsToNumber 357 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 300 50 7) math:sum 357}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 357];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2659 a r:Inference;
    r:gives {
        (7 5 3 0) :digitsToNumber 7530 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(7000 500 30 0) math:sum 7530}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2660 a r:Inference;
    r:gives {
        358 :numberToDigits (0 3 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(358 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(358 1000) math:remainder 358}]
        [ a r:Fact; r:gives {(358 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(358 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2661 a r:Inference;
    r:gives {
        (0 3 5 8) :digitsToNumber 358 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 300 50 8) math:sum 358}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 358];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2662 a r:Inference;
    r:gives {
        (8 5 3 0) :digitsToNumber 8530 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(8000 500 30 0) math:sum 8530}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2663 a r:Inference;
    r:gives {
        359 :numberToDigits (0 3 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(359 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(359 1000) math:remainder 359}]
        [ a r:Fact; r:gives {(359 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(359 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2664 a r:Inference;
    r:gives {
        (0 3 5 9) :digitsToNumber 359 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 300 50 9) math:sum 359}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 359];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2665 a r:Inference;
    r:gives {
        (9 5 3 0) :digitsToNumber 9530 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(9000 500 30 0) math:sum 9530}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2666 a r:Inference;
    r:gives {
        360 :numberToDigits (0 3 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(360 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(360 1000) math:remainder 360}]
        [ a r:Fact; r:gives {(360 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(360 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 360];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 360];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2667 a r:Inference;
    r:gives {
        361 :numberToDigits (0 3 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(361 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(361 1000) math:remainder 361}]
        [ a r:Fact; r:gives {(361 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(361 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 361];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 361];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2668 a r:Inference;
    r:gives {
        362 :numberToDigits (0 3 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(362 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(362 1000) math:remainder 362}]
        [ a r:Fact; r:gives {(362 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(362 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 362];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 362];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2669 a r:Inference;
    r:gives {
        363 :numberToDigits (0 3 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(363 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(363 1000) math:remainder 363}]
        [ a r:Fact; r:gives {(363 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(363 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 363];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 363];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2670 a r:Inference;
    r:gives {
        364 :numberToDigits (0 3 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(364 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(364 1000) math:remainder 364}]
        [ a r:Fact; r:gives {(364 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(364 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 364];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 364];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2671 a r:Inference;
    r:gives {
        365 :numberToDigits (0 3 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(365 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(365 1000) math:remainder 365}]
        [ a r:Fact; r:gives {(365 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(365 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 365];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 365];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2672 a r:Inference;
    r:gives {
        366 :numberToDigits (0 3 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(366 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(366 1000) math:remainder 366}]
        [ a r:Fact; r:gives {(366 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(366 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 366];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 366];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2673 a r:Inference;
    r:gives {
        (0 3 6 6) :digitsToNumber 366 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 300 60 6) math:sum 366}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 366];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2674 a r:Inference;
    r:gives {
        (6 6 3 0) :digitsToNumber 6630 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(6000 600 30 0) math:sum 6630}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2675 a r:Inference;
    r:gives {
        367 :numberToDigits (0 3 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(367 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(367 1000) math:remainder 367}]
        [ a r:Fact; r:gives {(367 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(367 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2676 a r:Inference;
    r:gives {
        (0 3 6 7) :digitsToNumber 367 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 300 60 7) math:sum 367}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 367];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2677 a r:Inference;
    r:gives {
        (7 6 3 0) :digitsToNumber 7630 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(7000 600 30 0) math:sum 7630}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2678 a r:Inference;
    r:gives {
        368 :numberToDigits (0 3 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(368 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(368 1000) math:remainder 368}]
        [ a r:Fact; r:gives {(368 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(368 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2679 a r:Inference;
    r:gives {
        (0 3 6 8) :digitsToNumber 368 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 300 60 8) math:sum 368}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 368];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2680 a r:Inference;
    r:gives {
        (8 6 3 0) :digitsToNumber 8630 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(8000 600 30 0) math:sum 8630}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2681 a r:Inference;
    r:gives {
        369 :numberToDigits (0 3 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(369 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(369 1000) math:remainder 369}]
        [ a r:Fact; r:gives {(369 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(369 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2682 a r:Inference;
    r:gives {
        (0 3 6 9) :digitsToNumber 369 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 300 60 9) math:sum 369}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 369];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2683 a r:Inference;
    r:gives {
        (9 6 3 0) :digitsToNumber 9630 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(9000 600 30 0) math:sum 9630}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2684 a r:Inference;
    r:gives {
        370 :numberToDigits (0 3 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(370 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(370 1000) math:remainder 370}]
        [ a r:Fact; r:gives {(370 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(370 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 370];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 370];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2685 a r:Inference;
    r:gives {
        371 :numberToDigits (0 3 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(371 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(371 1000) math:remainder 371}]
        [ a r:Fact; r:gives {(371 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(371 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 371];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 371];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2686 a r:Inference;
    r:gives {
        372 :numberToDigits (0 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(372 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(372 1000) math:remainder 372}]
        [ a r:Fact; r:gives {(372 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(372 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 372];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 372];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2687 a r:Inference;
    r:gives {
        373 :numberToDigits (0 3 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(373 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(373 1000) math:remainder 373}]
        [ a r:Fact; r:gives {(373 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(373 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 373];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 373];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2688 a r:Inference;
    r:gives {
        374 :numberToDigits (0 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(374 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(374 1000) math:remainder 374}]
        [ a r:Fact; r:gives {(374 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(374 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 374];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 374];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2689 a r:Inference;
    r:gives {
        375 :numberToDigits (0 3 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(375 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(375 1000) math:remainder 375}]
        [ a r:Fact; r:gives {(375 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(375 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 375];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 375];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2690 a r:Inference;
    r:gives {
        376 :numberToDigits (0 3 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(376 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(376 1000) math:remainder 376}]
        [ a r:Fact; r:gives {(376 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(376 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 376];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 376];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2691 a r:Inference;
    r:gives {
        377 :numberToDigits (0 3 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(377 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(377 1000) math:remainder 377}]
        [ a r:Fact; r:gives {(377 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(377 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 377];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 377];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2692 a r:Inference;
    r:gives {
        (0 3 7 7) :digitsToNumber 377 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 300 70 7) math:sum 377}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 377];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2693 a r:Inference;
    r:gives {
        (7 7 3 0) :digitsToNumber 7730 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(7000 700 30 0) math:sum 7730}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2694 a r:Inference;
    r:gives {
        378 :numberToDigits (0 3 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(378 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(378 1000) math:remainder 378}]
        [ a r:Fact; r:gives {(378 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(378 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2695 a r:Inference;
    r:gives {
        (0 3 7 8) :digitsToNumber 378 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 300 70 8) math:sum 378}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 378];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2696 a r:Inference;
    r:gives {
        (8 7 3 0) :digitsToNumber 8730 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(8000 700 30 0) math:sum 8730}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2697 a r:Inference;
    r:gives {
        379 :numberToDigits (0 3 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(379 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(379 1000) math:remainder 379}]
        [ a r:Fact; r:gives {(379 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(379 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2698 a r:Inference;
    r:gives {
        (0 3 7 9) :digitsToNumber 379 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 300 70 9) math:sum 379}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 379];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2699 a r:Inference;
    r:gives {
        (9 7 3 0) :digitsToNumber 9730 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(9000 700 30 0) math:sum 9730}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2700 a r:Inference;
    r:gives {
        380 :numberToDigits (0 3 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(380 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(380 1000) math:remainder 380}]
        [ a r:Fact; r:gives {(380 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(380 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 380];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 380];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2701 a r:Inference;
    r:gives {
        381 :numberToDigits (0 3 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(381 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(381 1000) math:remainder 381}]
        [ a r:Fact; r:gives {(381 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(381 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 381];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 381];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2702 a r:Inference;
    r:gives {
        382 :numberToDigits (0 3 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(382 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(382 1000) math:remainder 382}]
        [ a r:Fact; r:gives {(382 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(382 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 382];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 382];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2703 a r:Inference;
    r:gives {
        383 :numberToDigits (0 3 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(383 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(383 1000) math:remainder 383}]
        [ a r:Fact; r:gives {(383 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(383 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 383];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 383];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2704 a r:Inference;
    r:gives {
        384 :numberToDigits (0 3 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(384 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(384 1000) math:remainder 384}]
        [ a r:Fact; r:gives {(384 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(384 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 384];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 384];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2705 a r:Inference;
    r:gives {
        385 :numberToDigits (0 3 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(385 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(385 1000) math:remainder 385}]
        [ a r:Fact; r:gives {(385 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(385 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 385];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 385];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2706 a r:Inference;
    r:gives {
        386 :numberToDigits (0 3 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(386 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(386 1000) math:remainder 386}]
        [ a r:Fact; r:gives {(386 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(386 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 386];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 386];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2707 a r:Inference;
    r:gives {
        387 :numberToDigits (0 3 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(387 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(387 1000) math:remainder 387}]
        [ a r:Fact; r:gives {(387 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(387 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 387];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 387];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2708 a r:Inference;
    r:gives {
        388 :numberToDigits (0 3 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(388 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(388 1000) math:remainder 388}]
        [ a r:Fact; r:gives {(388 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(388 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 388];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 388];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2709 a r:Inference;
    r:gives {
        (0 3 8 8) :digitsToNumber 388 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 300 80 8) math:sum 388}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 388];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2710 a r:Inference;
    r:gives {
        (8 8 3 0) :digitsToNumber 8830 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(8000 800 30 0) math:sum 8830}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2711 a r:Inference;
    r:gives {
        389 :numberToDigits (0 3 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(389 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(389 1000) math:remainder 389}]
        [ a r:Fact; r:gives {(389 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(389 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2712 a r:Inference;
    r:gives {
        (0 3 8 9) :digitsToNumber 389 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 300 80 9) math:sum 389}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 389];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2713 a r:Inference;
    r:gives {
        (9 8 3 0) :digitsToNumber 9830 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(9000 800 30 0) math:sum 9830}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2714 a r:Inference;
    r:gives {
        390 :numberToDigits (0 3 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(390 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(390 1000) math:remainder 390}]
        [ a r:Fact; r:gives {(390 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(390 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 390];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 390];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2715 a r:Inference;
    r:gives {
        391 :numberToDigits (0 3 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(391 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(391 1000) math:remainder 391}]
        [ a r:Fact; r:gives {(391 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(391 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 391];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 391];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2716 a r:Inference;
    r:gives {
        392 :numberToDigits (0 3 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(392 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(392 1000) math:remainder 392}]
        [ a r:Fact; r:gives {(392 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(392 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 392];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 392];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2717 a r:Inference;
    r:gives {
        393 :numberToDigits (0 3 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(393 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(393 1000) math:remainder 393}]
        [ a r:Fact; r:gives {(393 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(393 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 393];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 393];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2718 a r:Inference;
    r:gives {
        394 :numberToDigits (0 3 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(394 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(394 1000) math:remainder 394}]
        [ a r:Fact; r:gives {(394 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(394 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 394];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 394];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2719 a r:Inference;
    r:gives {
        395 :numberToDigits (0 3 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(395 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(395 1000) math:remainder 395}]
        [ a r:Fact; r:gives {(395 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(395 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 395];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 395];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2720 a r:Inference;
    r:gives {
        396 :numberToDigits (0 3 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(396 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(396 1000) math:remainder 396}]
        [ a r:Fact; r:gives {(396 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(396 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 396];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 396];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2721 a r:Inference;
    r:gives {
        397 :numberToDigits (0 3 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(397 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(397 1000) math:remainder 397}]
        [ a r:Fact; r:gives {(397 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(397 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 397];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 397];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2722 a r:Inference;
    r:gives {
        398 :numberToDigits (0 3 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(398 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(398 1000) math:remainder 398}]
        [ a r:Fact; r:gives {(398 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(398 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 398];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 398];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2723 a r:Inference;
    r:gives {
        399 :numberToDigits (0 3 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(399 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(399 1000) math:remainder 399}]
        [ a r:Fact; r:gives {(399 100) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(399 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 399];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 399];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2724 a r:Inference;
    r:gives {
        (0 3 9 9) :digitsToNumber 399 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(3 100) math:product 300}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 300 90 9) math:sum 399}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 300];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 399];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2725 a r:Inference;
    r:gives {
        (9 9 3 0) :digitsToNumber 9930 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(3 10) math:product 30}]
        [ a r:Fact; r:gives {(9000 900 30 0) math:sum 9930}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9930];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2726 a r:Inference;
    r:gives {
        400 :numberToDigits (0 4 0 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(400 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(400 1000) math:remainder 400}]
        [ a r:Fact; r:gives {(400 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(400 100) math:remainder 0}]
        [ a r:Fact; r:gives {(0 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(0 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2727 a r:Inference;
    r:gives {
        401 :numberToDigits (0 4 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(401 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(401 1000) math:remainder 401}]
        [ a r:Fact; r:gives {(401 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(401 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 401];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 401];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2728 a r:Inference;
    r:gives {
        402 :numberToDigits (0 4 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(402 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(402 1000) math:remainder 402}]
        [ a r:Fact; r:gives {(402 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(402 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 402];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 402];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2729 a r:Inference;
    r:gives {
        403 :numberToDigits (0 4 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(403 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(403 1000) math:remainder 403}]
        [ a r:Fact; r:gives {(403 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(403 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 403];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 403];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2730 a r:Inference;
    r:gives {
        404 :numberToDigits (0 4 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(404 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(404 1000) math:remainder 404}]
        [ a r:Fact; r:gives {(404 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(404 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 404];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 404];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2731 a r:Inference;
    r:gives {
        405 :numberToDigits (0 4 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(405 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(405 1000) math:remainder 405}]
        [ a r:Fact; r:gives {(405 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(405 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 405];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 405];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2732 a r:Inference;
    r:gives {
        406 :numberToDigits (0 4 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(406 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(406 1000) math:remainder 406}]
        [ a r:Fact; r:gives {(406 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(406 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 406];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 406];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2733 a r:Inference;
    r:gives {
        407 :numberToDigits (0 4 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(407 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(407 1000) math:remainder 407}]
        [ a r:Fact; r:gives {(407 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(407 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 407];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 407];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2734 a r:Inference;
    r:gives {
        408 :numberToDigits (0 4 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(408 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(408 1000) math:remainder 408}]
        [ a r:Fact; r:gives {(408 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(408 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 408];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 408];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2735 a r:Inference;
    r:gives {
        409 :numberToDigits (0 4 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(409 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(409 1000) math:remainder 409}]
        [ a r:Fact; r:gives {(409 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(409 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 409];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 409];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2736 a r:Inference;
    r:gives {
        410 :numberToDigits (0 4 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(410 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(410 1000) math:remainder 410}]
        [ a r:Fact; r:gives {(410 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(410 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 410];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2737 a r:Inference;
    r:gives {
        411 :numberToDigits (0 4 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(411 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(411 1000) math:remainder 411}]
        [ a r:Fact; r:gives {(411 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(411 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 411];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 411];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2738 a r:Inference;
    r:gives {
        412 :numberToDigits (0 4 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(412 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(412 1000) math:remainder 412}]
        [ a r:Fact; r:gives {(412 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(412 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 412];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 412];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2739 a r:Inference;
    r:gives {
        413 :numberToDigits (0 4 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(413 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(413 1000) math:remainder 413}]
        [ a r:Fact; r:gives {(413 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(413 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 413];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 413];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2740 a r:Inference;
    r:gives {
        414 :numberToDigits (0 4 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(414 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(414 1000) math:remainder 414}]
        [ a r:Fact; r:gives {(414 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(414 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 414];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 414];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2741 a r:Inference;
    r:gives {
        415 :numberToDigits (0 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(415 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(415 1000) math:remainder 415}]
        [ a r:Fact; r:gives {(415 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(415 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 415];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 415];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2742 a r:Inference;
    r:gives {
        416 :numberToDigits (0 4 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(416 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(416 1000) math:remainder 416}]
        [ a r:Fact; r:gives {(416 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(416 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 416];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 416];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2743 a r:Inference;
    r:gives {
        417 :numberToDigits (0 4 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(417 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(417 1000) math:remainder 417}]
        [ a r:Fact; r:gives {(417 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(417 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 417];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 417];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2744 a r:Inference;
    r:gives {
        418 :numberToDigits (0 4 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(418 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(418 1000) math:remainder 418}]
        [ a r:Fact; r:gives {(418 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(418 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 418];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 418];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2745 a r:Inference;
    r:gives {
        419 :numberToDigits (0 4 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(419 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(419 1000) math:remainder 419}]
        [ a r:Fact; r:gives {(419 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(419 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 419];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 419];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2746 a r:Inference;
    r:gives {
        420 :numberToDigits (0 4 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(420 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(420 1000) math:remainder 420}]
        [ a r:Fact; r:gives {(420 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(420 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 420];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2747 a r:Inference;
    r:gives {
        421 :numberToDigits (0 4 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(421 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(421 1000) math:remainder 421}]
        [ a r:Fact; r:gives {(421 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(421 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 421];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 421];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2748 a r:Inference;
    r:gives {
        422 :numberToDigits (0 4 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(422 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(422 1000) math:remainder 422}]
        [ a r:Fact; r:gives {(422 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(422 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 422];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 422];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2749 a r:Inference;
    r:gives {
        423 :numberToDigits (0 4 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(423 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(423 1000) math:remainder 423}]
        [ a r:Fact; r:gives {(423 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(423 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 423];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 423];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2750 a r:Inference;
    r:gives {
        424 :numberToDigits (0 4 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(424 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(424 1000) math:remainder 424}]
        [ a r:Fact; r:gives {(424 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(424 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 424];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 424];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2751 a r:Inference;
    r:gives {
        425 :numberToDigits (0 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(425 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(425 1000) math:remainder 425}]
        [ a r:Fact; r:gives {(425 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(425 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 425];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 425];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2752 a r:Inference;
    r:gives {
        426 :numberToDigits (0 4 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(426 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(426 1000) math:remainder 426}]
        [ a r:Fact; r:gives {(426 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(426 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 426];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 426];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2753 a r:Inference;
    r:gives {
        427 :numberToDigits (0 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(427 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(427 1000) math:remainder 427}]
        [ a r:Fact; r:gives {(427 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(427 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 427];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 427];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2754 a r:Inference;
    r:gives {
        428 :numberToDigits (0 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(428 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(428 1000) math:remainder 428}]
        [ a r:Fact; r:gives {(428 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(428 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 428];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 428];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2755 a r:Inference;
    r:gives {
        429 :numberToDigits (0 4 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(429 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(429 1000) math:remainder 429}]
        [ a r:Fact; r:gives {(429 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(429 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 429];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 429];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2756 a r:Inference;
    r:gives {
        430 :numberToDigits (0 4 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(430 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(430 1000) math:remainder 430}]
        [ a r:Fact; r:gives {(430 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(430 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 430];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2757 a r:Inference;
    r:gives {
        431 :numberToDigits (0 4 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(431 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(431 1000) math:remainder 431}]
        [ a r:Fact; r:gives {(431 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(431 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 431];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 431];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2758 a r:Inference;
    r:gives {
        432 :numberToDigits (0 4 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(432 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(432 1000) math:remainder 432}]
        [ a r:Fact; r:gives {(432 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(432 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 432];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 432];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2759 a r:Inference;
    r:gives {
        433 :numberToDigits (0 4 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(433 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(433 1000) math:remainder 433}]
        [ a r:Fact; r:gives {(433 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(433 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 433];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 433];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2760 a r:Inference;
    r:gives {
        434 :numberToDigits (0 4 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(434 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(434 1000) math:remainder 434}]
        [ a r:Fact; r:gives {(434 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(434 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 434];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 434];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2761 a r:Inference;
    r:gives {
        435 :numberToDigits (0 4 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(435 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(435 1000) math:remainder 435}]
        [ a r:Fact; r:gives {(435 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(435 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 435];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 435];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2762 a r:Inference;
    r:gives {
        436 :numberToDigits (0 4 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(436 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(436 1000) math:remainder 436}]
        [ a r:Fact; r:gives {(436 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(436 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 436];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 436];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2763 a r:Inference;
    r:gives {
        437 :numberToDigits (0 4 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(437 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(437 1000) math:remainder 437}]
        [ a r:Fact; r:gives {(437 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(437 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 437];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 437];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2764 a r:Inference;
    r:gives {
        438 :numberToDigits (0 4 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(438 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(438 1000) math:remainder 438}]
        [ a r:Fact; r:gives {(438 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(438 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 438];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 438];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2765 a r:Inference;
    r:gives {
        439 :numberToDigits (0 4 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(439 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(439 1000) math:remainder 439}]
        [ a r:Fact; r:gives {(439 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(439 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 439];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 439];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2766 a r:Inference;
    r:gives {
        440 :numberToDigits (0 4 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(440 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(440 1000) math:remainder 440}]
        [ a r:Fact; r:gives {(440 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(440 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2767 a r:Inference;
    r:gives {
        441 :numberToDigits (0 4 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(441 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(441 1000) math:remainder 441}]
        [ a r:Fact; r:gives {(441 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(441 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 441];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2768 a r:Inference;
    r:gives {
        442 :numberToDigits (0 4 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(442 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(442 1000) math:remainder 442}]
        [ a r:Fact; r:gives {(442 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(442 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 442];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2769 a r:Inference;
    r:gives {
        443 :numberToDigits (0 4 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(443 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(443 1000) math:remainder 443}]
        [ a r:Fact; r:gives {(443 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(443 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 443];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2770 a r:Inference;
    r:gives {
        444 :numberToDigits (0 4 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(444 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(444 1000) math:remainder 444}]
        [ a r:Fact; r:gives {(444 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(444 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2771 a r:Inference;
    r:gives {
        (0 4 4 4) :digitsToNumber 444 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 400 40 4) math:sum 444}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 444];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3439.

skolem:lemma2772 a r:Inference;
    r:gives {
        (4 4 4 0) :digitsToNumber 4440 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 1000) math:product 4000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(4000 400 40 0) math:sum 4440}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 4440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2773 a r:Inference;
    r:gives {
        445 :numberToDigits (0 4 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(445 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(445 1000) math:remainder 445}]
        [ a r:Fact; r:gives {(445 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(445 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2774 a r:Inference;
    r:gives {
        (0 4 4 5) :digitsToNumber 445 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 400 40 5) math:sum 445}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 445];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2775 a r:Inference;
    r:gives {
        (5 4 4 0) :digitsToNumber 5440 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(5000 400 40 0) math:sum 5440}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2776 a r:Inference;
    r:gives {
        446 :numberToDigits (0 4 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(446 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(446 1000) math:remainder 446}]
        [ a r:Fact; r:gives {(446 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(446 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 446];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 446];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2777 a r:Inference;
    r:gives {
        (0 4 4 6) :digitsToNumber 446 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 400 40 6) math:sum 446}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 446];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2778 a r:Inference;
    r:gives {
        (6 4 4 0) :digitsToNumber 6440 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(6000 400 40 0) math:sum 6440}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2779 a r:Inference;
    r:gives {
        447 :numberToDigits (0 4 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(447 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(447 1000) math:remainder 447}]
        [ a r:Fact; r:gives {(447 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(447 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 447];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 447];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2780 a r:Inference;
    r:gives {
        (0 4 4 7) :digitsToNumber 447 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 400 40 7) math:sum 447}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 447];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2781 a r:Inference;
    r:gives {
        (7 4 4 0) :digitsToNumber 7440 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(7000 400 40 0) math:sum 7440}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2782 a r:Inference;
    r:gives {
        448 :numberToDigits (0 4 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(448 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(448 1000) math:remainder 448}]
        [ a r:Fact; r:gives {(448 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(448 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 448];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 448];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2783 a r:Inference;
    r:gives {
        (0 4 4 8) :digitsToNumber 448 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 400 40 8) math:sum 448}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 448];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2784 a r:Inference;
    r:gives {
        (8 4 4 0) :digitsToNumber 8440 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(8000 400 40 0) math:sum 8440}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2785 a r:Inference;
    r:gives {
        449 :numberToDigits (0 4 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(449 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(449 1000) math:remainder 449}]
        [ a r:Fact; r:gives {(449 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(449 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 449];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 449];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2786 a r:Inference;
    r:gives {
        (0 4 4 9) :digitsToNumber 449 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(0 400 40 9) math:sum 449}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 449];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2787 a r:Inference;
    r:gives {
        (9 4 4 0) :digitsToNumber 9440 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(9000 400 40 0) math:sum 9440}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9440];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2788 a r:Inference;
    r:gives {
        450 :numberToDigits (0 4 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(450 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(450 1000) math:remainder 450}]
        [ a r:Fact; r:gives {(450 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(450 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 450];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 450];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2789 a r:Inference;
    r:gives {
        451 :numberToDigits (0 4 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(451 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(451 1000) math:remainder 451}]
        [ a r:Fact; r:gives {(451 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(451 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 451];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 451];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2790 a r:Inference;
    r:gives {
        452 :numberToDigits (0 4 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(452 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(452 1000) math:remainder 452}]
        [ a r:Fact; r:gives {(452 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(452 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 452];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 452];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2791 a r:Inference;
    r:gives {
        453 :numberToDigits (0 4 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(453 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(453 1000) math:remainder 453}]
        [ a r:Fact; r:gives {(453 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(453 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 453];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 453];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2792 a r:Inference;
    r:gives {
        454 :numberToDigits (0 4 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(454 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(454 1000) math:remainder 454}]
        [ a r:Fact; r:gives {(454 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(454 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 454];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 454];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2793 a r:Inference;
    r:gives {
        455 :numberToDigits (0 4 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(455 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(455 1000) math:remainder 455}]
        [ a r:Fact; r:gives {(455 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(455 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 455];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 455];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2794 a r:Inference;
    r:gives {
        (0 4 5 5) :digitsToNumber 455 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 400 50 5) math:sum 455}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 455];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2795 a r:Inference;
    r:gives {
        (5 5 4 0) :digitsToNumber 5540 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(5000 500 40 0) math:sum 5540}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2796 a r:Inference;
    r:gives {
        456 :numberToDigits (0 4 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(456 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(456 1000) math:remainder 456}]
        [ a r:Fact; r:gives {(456 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(456 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2797 a r:Inference;
    r:gives {
        (0 4 5 6) :digitsToNumber 456 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 400 50 6) math:sum 456}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 456];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2798 a r:Inference;
    r:gives {
        (6 5 4 0) :digitsToNumber 6540 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(6000 500 40 0) math:sum 6540}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2799 a r:Inference;
    r:gives {
        457 :numberToDigits (0 4 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(457 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(457 1000) math:remainder 457}]
        [ a r:Fact; r:gives {(457 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(457 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2800 a r:Inference;
    r:gives {
        (0 4 5 7) :digitsToNumber 457 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 400 50 7) math:sum 457}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 457];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2801 a r:Inference;
    r:gives {
        (7 5 4 0) :digitsToNumber 7540 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(7000 500 40 0) math:sum 7540}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2802 a r:Inference;
    r:gives {
        458 :numberToDigits (0 4 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(458 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(458 1000) math:remainder 458}]
        [ a r:Fact; r:gives {(458 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(458 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2803 a r:Inference;
    r:gives {
        (0 4 5 8) :digitsToNumber 458 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 400 50 8) math:sum 458}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 458];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2804 a r:Inference;
    r:gives {
        (8 5 4 0) :digitsToNumber 8540 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(8000 500 40 0) math:sum 8540}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2805 a r:Inference;
    r:gives {
        459 :numberToDigits (0 4 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(459 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(459 1000) math:remainder 459}]
        [ a r:Fact; r:gives {(459 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(459 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2806 a r:Inference;
    r:gives {
        (0 4 5 9) :digitsToNumber 459 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 400 50 9) math:sum 459}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 459];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2807 a r:Inference;
    r:gives {
        (9 5 4 0) :digitsToNumber 9540 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(9000 500 40 0) math:sum 9540}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2808 a r:Inference;
    r:gives {
        460 :numberToDigits (0 4 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(460 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(460 1000) math:remainder 460}]
        [ a r:Fact; r:gives {(460 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(460 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 460];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 460];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2809 a r:Inference;
    r:gives {
        461 :numberToDigits (0 4 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(461 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(461 1000) math:remainder 461}]
        [ a r:Fact; r:gives {(461 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(461 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 461];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 461];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2810 a r:Inference;
    r:gives {
        462 :numberToDigits (0 4 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(462 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(462 1000) math:remainder 462}]
        [ a r:Fact; r:gives {(462 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(462 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 462];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 462];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2811 a r:Inference;
    r:gives {
        463 :numberToDigits (0 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(463 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(463 1000) math:remainder 463}]
        [ a r:Fact; r:gives {(463 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(463 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 463];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 463];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2812 a r:Inference;
    r:gives {
        464 :numberToDigits (0 4 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(464 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(464 1000) math:remainder 464}]
        [ a r:Fact; r:gives {(464 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(464 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 464];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 464];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2813 a r:Inference;
    r:gives {
        465 :numberToDigits (0 4 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(465 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(465 1000) math:remainder 465}]
        [ a r:Fact; r:gives {(465 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(465 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 465];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 465];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2814 a r:Inference;
    r:gives {
        466 :numberToDigits (0 4 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(466 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(466 1000) math:remainder 466}]
        [ a r:Fact; r:gives {(466 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(466 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 466];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 466];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2815 a r:Inference;
    r:gives {
        (0 4 6 6) :digitsToNumber 466 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 400 60 6) math:sum 466}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 466];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2816 a r:Inference;
    r:gives {
        (6 6 4 0) :digitsToNumber 6640 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(6000 600 40 0) math:sum 6640}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2817 a r:Inference;
    r:gives {
        467 :numberToDigits (0 4 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(467 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(467 1000) math:remainder 467}]
        [ a r:Fact; r:gives {(467 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(467 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2818 a r:Inference;
    r:gives {
        (0 4 6 7) :digitsToNumber 467 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 400 60 7) math:sum 467}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 467];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2819 a r:Inference;
    r:gives {
        (7 6 4 0) :digitsToNumber 7640 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(7000 600 40 0) math:sum 7640}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2820 a r:Inference;
    r:gives {
        468 :numberToDigits (0 4 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(468 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(468 1000) math:remainder 468}]
        [ a r:Fact; r:gives {(468 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(468 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2821 a r:Inference;
    r:gives {
        (0 4 6 8) :digitsToNumber 468 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 400 60 8) math:sum 468}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 468];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2822 a r:Inference;
    r:gives {
        (8 6 4 0) :digitsToNumber 8640 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(8000 600 40 0) math:sum 8640}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2823 a r:Inference;
    r:gives {
        469 :numberToDigits (0 4 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(469 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(469 1000) math:remainder 469}]
        [ a r:Fact; r:gives {(469 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(469 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2824 a r:Inference;
    r:gives {
        (0 4 6 9) :digitsToNumber 469 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 400 60 9) math:sum 469}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 469];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2825 a r:Inference;
    r:gives {
        (9 6 4 0) :digitsToNumber 9640 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(9000 600 40 0) math:sum 9640}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2826 a r:Inference;
    r:gives {
        470 :numberToDigits (0 4 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(470 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(470 1000) math:remainder 470}]
        [ a r:Fact; r:gives {(470 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(470 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 470];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 470];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2827 a r:Inference;
    r:gives {
        471 :numberToDigits (0 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(471 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(471 1000) math:remainder 471}]
        [ a r:Fact; r:gives {(471 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(471 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 471];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 471];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2828 a r:Inference;
    r:gives {
        472 :numberToDigits (0 4 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(472 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(472 1000) math:remainder 472}]
        [ a r:Fact; r:gives {(472 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(472 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 472];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 472];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2829 a r:Inference;
    r:gives {
        473 :numberToDigits (0 4 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(473 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(473 1000) math:remainder 473}]
        [ a r:Fact; r:gives {(473 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(473 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 473];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 473];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2830 a r:Inference;
    r:gives {
        474 :numberToDigits (0 4 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(474 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(474 1000) math:remainder 474}]
        [ a r:Fact; r:gives {(474 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(474 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 474];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 474];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2831 a r:Inference;
    r:gives {
        475 :numberToDigits (0 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(475 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(475 1000) math:remainder 475}]
        [ a r:Fact; r:gives {(475 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(475 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 475];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 475];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2832 a r:Inference;
    r:gives {
        476 :numberToDigits (0 4 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(476 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(476 1000) math:remainder 476}]
        [ a r:Fact; r:gives {(476 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(476 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 476];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 476];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2833 a r:Inference;
    r:gives {
        477 :numberToDigits (0 4 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(477 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(477 1000) math:remainder 477}]
        [ a r:Fact; r:gives {(477 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(477 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 477];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 477];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2834 a r:Inference;
    r:gives {
        (0 4 7 7) :digitsToNumber 477 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 400 70 7) math:sum 477}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 477];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2835 a r:Inference;
    r:gives {
        (7 7 4 0) :digitsToNumber 7740 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(7000 700 40 0) math:sum 7740}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2836 a r:Inference;
    r:gives {
        478 :numberToDigits (0 4 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(478 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(478 1000) math:remainder 478}]
        [ a r:Fact; r:gives {(478 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(478 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2837 a r:Inference;
    r:gives {
        (0 4 7 8) :digitsToNumber 478 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 400 70 8) math:sum 478}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 478];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2838 a r:Inference;
    r:gives {
        (8 7 4 0) :digitsToNumber 8740 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(8000 700 40 0) math:sum 8740}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2839 a r:Inference;
    r:gives {
        479 :numberToDigits (0 4 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(479 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(479 1000) math:remainder 479}]
        [ a r:Fact; r:gives {(479 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(479 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2840 a r:Inference;
    r:gives {
        (0 4 7 9) :digitsToNumber 479 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 400 70 9) math:sum 479}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 479];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2841 a r:Inference;
    r:gives {
        (9 7 4 0) :digitsToNumber 9740 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(9000 700 40 0) math:sum 9740}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2842 a r:Inference;
    r:gives {
        480 :numberToDigits (0 4 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(480 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(480 1000) math:remainder 480}]
        [ a r:Fact; r:gives {(480 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(480 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 480];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 480];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2843 a r:Inference;
    r:gives {
        481 :numberToDigits (0 4 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(481 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(481 1000) math:remainder 481}]
        [ a r:Fact; r:gives {(481 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(481 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 481];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 481];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2844 a r:Inference;
    r:gives {
        482 :numberToDigits (0 4 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(482 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(482 1000) math:remainder 482}]
        [ a r:Fact; r:gives {(482 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(482 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 482];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 482];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2845 a r:Inference;
    r:gives {
        483 :numberToDigits (0 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(483 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(483 1000) math:remainder 483}]
        [ a r:Fact; r:gives {(483 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(483 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 483];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 483];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2846 a r:Inference;
    r:gives {
        484 :numberToDigits (0 4 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(484 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(484 1000) math:remainder 484}]
        [ a r:Fact; r:gives {(484 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(484 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 484];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 484];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2847 a r:Inference;
    r:gives {
        485 :numberToDigits (0 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(485 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(485 1000) math:remainder 485}]
        [ a r:Fact; r:gives {(485 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(485 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 485];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 485];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2848 a r:Inference;
    r:gives {
        486 :numberToDigits (0 4 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(486 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(486 1000) math:remainder 486}]
        [ a r:Fact; r:gives {(486 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(486 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 486];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 486];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2849 a r:Inference;
    r:gives {
        487 :numberToDigits (0 4 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(487 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(487 1000) math:remainder 487}]
        [ a r:Fact; r:gives {(487 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(487 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 487];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 487];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2850 a r:Inference;
    r:gives {
        488 :numberToDigits (0 4 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(488 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(488 1000) math:remainder 488}]
        [ a r:Fact; r:gives {(488 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(488 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 488];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 488];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2851 a r:Inference;
    r:gives {
        (0 4 8 8) :digitsToNumber 488 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 400 80 8) math:sum 488}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 488];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2852 a r:Inference;
    r:gives {
        (8 8 4 0) :digitsToNumber 8840 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(8000 800 40 0) math:sum 8840}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2853 a r:Inference;
    r:gives {
        489 :numberToDigits (0 4 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(489 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(489 1000) math:remainder 489}]
        [ a r:Fact; r:gives {(489 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(489 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2854 a r:Inference;
    r:gives {
        (0 4 8 9) :digitsToNumber 489 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 400 80 9) math:sum 489}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 489];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2855 a r:Inference;
    r:gives {
        (9 8 4 0) :digitsToNumber 9840 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(9000 800 40 0) math:sum 9840}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2856 a r:Inference;
    r:gives {
        490 :numberToDigits (0 4 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(490 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(490 1000) math:remainder 490}]
        [ a r:Fact; r:gives {(490 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(490 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 490];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 490];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2857 a r:Inference;
    r:gives {
        491 :numberToDigits (0 4 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(491 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(491 1000) math:remainder 491}]
        [ a r:Fact; r:gives {(491 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(491 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 491];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 491];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2858 a r:Inference;
    r:gives {
        492 :numberToDigits (0 4 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(492 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(492 1000) math:remainder 492}]
        [ a r:Fact; r:gives {(492 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(492 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 492];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 492];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2859 a r:Inference;
    r:gives {
        493 :numberToDigits (0 4 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(493 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(493 1000) math:remainder 493}]
        [ a r:Fact; r:gives {(493 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(493 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 493];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 493];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2860 a r:Inference;
    r:gives {
        494 :numberToDigits (0 4 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(494 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(494 1000) math:remainder 494}]
        [ a r:Fact; r:gives {(494 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(494 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 494];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 494];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2861 a r:Inference;
    r:gives {
        495 :numberToDigits (0 4 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(495 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(495 1000) math:remainder 495}]
        [ a r:Fact; r:gives {(495 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(495 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 495];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 495];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2862 a r:Inference;
    r:gives {
        496 :numberToDigits (0 4 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(496 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(496 1000) math:remainder 496}]
        [ a r:Fact; r:gives {(496 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(496 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 496];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 496];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2863 a r:Inference;
    r:gives {
        497 :numberToDigits (0 4 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(497 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(497 1000) math:remainder 497}]
        [ a r:Fact; r:gives {(497 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(497 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 497];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 497];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2864 a r:Inference;
    r:gives {
        498 :numberToDigits (0 4 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(498 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(498 1000) math:remainder 498}]
        [ a r:Fact; r:gives {(498 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(498 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 498];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 498];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2865 a r:Inference;
    r:gives {
        499 :numberToDigits (0 4 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(499 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(499 1000) math:remainder 499}]
        [ a r:Fact; r:gives {(499 100) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(499 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 499];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 499];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2866 a r:Inference;
    r:gives {
        (0 4 9 9) :digitsToNumber 499 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(4 100) math:product 400}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 400 90 9) math:sum 499}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 400];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 499];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2867 a r:Inference;
    r:gives {
        (9 9 4 0) :digitsToNumber 9940 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(4 10) math:product 40}]
        [ a r:Fact; r:gives {(9000 900 40 0) math:sum 9940}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9940];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2868 a r:Inference;
    r:gives {
        500 :numberToDigits (0 5 0 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(500 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(500 1000) math:remainder 500}]
        [ a r:Fact; r:gives {(500 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(500 100) math:remainder 0}]
        [ a r:Fact; r:gives {(0 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(0 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2869 a r:Inference;
    r:gives {
        501 :numberToDigits (0 5 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(501 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(501 1000) math:remainder 501}]
        [ a r:Fact; r:gives {(501 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(501 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 501];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 501];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2870 a r:Inference;
    r:gives {
        502 :numberToDigits (0 5 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(502 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(502 1000) math:remainder 502}]
        [ a r:Fact; r:gives {(502 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(502 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 502];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 502];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2871 a r:Inference;
    r:gives {
        503 :numberToDigits (0 5 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(503 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(503 1000) math:remainder 503}]
        [ a r:Fact; r:gives {(503 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(503 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 503];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 503];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2872 a r:Inference;
    r:gives {
        504 :numberToDigits (0 5 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(504 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(504 1000) math:remainder 504}]
        [ a r:Fact; r:gives {(504 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(504 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 504];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 504];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2873 a r:Inference;
    r:gives {
        505 :numberToDigits (0 5 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(505 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(505 1000) math:remainder 505}]
        [ a r:Fact; r:gives {(505 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(505 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 505];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 505];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2874 a r:Inference;
    r:gives {
        506 :numberToDigits (0 5 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(506 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(506 1000) math:remainder 506}]
        [ a r:Fact; r:gives {(506 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(506 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 506];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 506];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2875 a r:Inference;
    r:gives {
        507 :numberToDigits (0 5 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(507 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(507 1000) math:remainder 507}]
        [ a r:Fact; r:gives {(507 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(507 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 507];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 507];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2876 a r:Inference;
    r:gives {
        508 :numberToDigits (0 5 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(508 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(508 1000) math:remainder 508}]
        [ a r:Fact; r:gives {(508 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(508 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 508];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 508];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2877 a r:Inference;
    r:gives {
        509 :numberToDigits (0 5 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(509 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(509 1000) math:remainder 509}]
        [ a r:Fact; r:gives {(509 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(509 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 509];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 509];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2878 a r:Inference;
    r:gives {
        510 :numberToDigits (0 5 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(510 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(510 1000) math:remainder 510}]
        [ a r:Fact; r:gives {(510 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(510 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 510];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2879 a r:Inference;
    r:gives {
        511 :numberToDigits (0 5 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(511 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(511 1000) math:remainder 511}]
        [ a r:Fact; r:gives {(511 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(511 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 511];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 511];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2880 a r:Inference;
    r:gives {
        512 :numberToDigits (0 5 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(512 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(512 1000) math:remainder 512}]
        [ a r:Fact; r:gives {(512 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(512 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 512];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 512];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2881 a r:Inference;
    r:gives {
        513 :numberToDigits (0 5 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(513 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(513 1000) math:remainder 513}]
        [ a r:Fact; r:gives {(513 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(513 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 513];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 513];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2882 a r:Inference;
    r:gives {
        514 :numberToDigits (0 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(514 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(514 1000) math:remainder 514}]
        [ a r:Fact; r:gives {(514 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(514 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 514];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 514];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2883 a r:Inference;
    r:gives {
        515 :numberToDigits (0 5 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(515 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(515 1000) math:remainder 515}]
        [ a r:Fact; r:gives {(515 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(515 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 515];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 515];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2884 a r:Inference;
    r:gives {
        516 :numberToDigits (0 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(516 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(516 1000) math:remainder 516}]
        [ a r:Fact; r:gives {(516 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(516 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 516];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 516];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2885 a r:Inference;
    r:gives {
        517 :numberToDigits (0 5 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(517 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(517 1000) math:remainder 517}]
        [ a r:Fact; r:gives {(517 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(517 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 517];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 517];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2886 a r:Inference;
    r:gives {
        518 :numberToDigits (0 5 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(518 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(518 1000) math:remainder 518}]
        [ a r:Fact; r:gives {(518 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(518 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 518];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 518];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2887 a r:Inference;
    r:gives {
        519 :numberToDigits (0 5 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(519 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(519 1000) math:remainder 519}]
        [ a r:Fact; r:gives {(519 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(519 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 519];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 519];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2888 a r:Inference;
    r:gives {
        520 :numberToDigits (0 5 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(520 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(520 1000) math:remainder 520}]
        [ a r:Fact; r:gives {(520 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(520 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 520];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2889 a r:Inference;
    r:gives {
        521 :numberToDigits (0 5 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(521 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(521 1000) math:remainder 521}]
        [ a r:Fact; r:gives {(521 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(521 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 521];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 521];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2890 a r:Inference;
    r:gives {
        522 :numberToDigits (0 5 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(522 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(522 1000) math:remainder 522}]
        [ a r:Fact; r:gives {(522 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(522 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 522];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 522];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2891 a r:Inference;
    r:gives {
        523 :numberToDigits (0 5 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(523 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(523 1000) math:remainder 523}]
        [ a r:Fact; r:gives {(523 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(523 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 523];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 523];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2892 a r:Inference;
    r:gives {
        524 :numberToDigits (0 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(524 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(524 1000) math:remainder 524}]
        [ a r:Fact; r:gives {(524 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(524 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 524];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 524];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2893 a r:Inference;
    r:gives {
        525 :numberToDigits (0 5 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(525 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(525 1000) math:remainder 525}]
        [ a r:Fact; r:gives {(525 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(525 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 525];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 525];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2894 a r:Inference;
    r:gives {
        526 :numberToDigits (0 5 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(526 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(526 1000) math:remainder 526}]
        [ a r:Fact; r:gives {(526 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(526 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 526];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 526];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2895 a r:Inference;
    r:gives {
        527 :numberToDigits (0 5 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(527 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(527 1000) math:remainder 527}]
        [ a r:Fact; r:gives {(527 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(527 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 527];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 527];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2896 a r:Inference;
    r:gives {
        528 :numberToDigits (0 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(528 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(528 1000) math:remainder 528}]
        [ a r:Fact; r:gives {(528 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(528 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 528];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 528];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2897 a r:Inference;
    r:gives {
        529 :numberToDigits (0 5 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(529 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(529 1000) math:remainder 529}]
        [ a r:Fact; r:gives {(529 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(529 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 529];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 529];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2898 a r:Inference;
    r:gives {
        530 :numberToDigits (0 5 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(530 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(530 1000) math:remainder 530}]
        [ a r:Fact; r:gives {(530 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(530 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 530];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2899 a r:Inference;
    r:gives {
        531 :numberToDigits (0 5 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(531 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(531 1000) math:remainder 531}]
        [ a r:Fact; r:gives {(531 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(531 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 531];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2900 a r:Inference;
    r:gives {
        532 :numberToDigits (0 5 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(532 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(532 1000) math:remainder 532}]
        [ a r:Fact; r:gives {(532 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(532 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 532];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2901 a r:Inference;
    r:gives {
        533 :numberToDigits (0 5 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(533 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(533 1000) math:remainder 533}]
        [ a r:Fact; r:gives {(533 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(533 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 533];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2902 a r:Inference;
    r:gives {
        534 :numberToDigits (0 5 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(534 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(534 1000) math:remainder 534}]
        [ a r:Fact; r:gives {(534 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(534 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 534];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 534];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2903 a r:Inference;
    r:gives {
        535 :numberToDigits (0 5 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(535 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(535 1000) math:remainder 535}]
        [ a r:Fact; r:gives {(535 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(535 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 535];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 535];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2904 a r:Inference;
    r:gives {
        536 :numberToDigits (0 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(536 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(536 1000) math:remainder 536}]
        [ a r:Fact; r:gives {(536 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(536 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 536];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 536];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2905 a r:Inference;
    r:gives {
        537 :numberToDigits (0 5 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(537 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(537 1000) math:remainder 537}]
        [ a r:Fact; r:gives {(537 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(537 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 537];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 537];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2906 a r:Inference;
    r:gives {
        538 :numberToDigits (0 5 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(538 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(538 1000) math:remainder 538}]
        [ a r:Fact; r:gives {(538 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(538 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 538];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 538];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2907 a r:Inference;
    r:gives {
        539 :numberToDigits (0 5 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(539 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(539 1000) math:remainder 539}]
        [ a r:Fact; r:gives {(539 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(539 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 539];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 539];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2908 a r:Inference;
    r:gives {
        540 :numberToDigits (0 5 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(540 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(540 1000) math:remainder 540}]
        [ a r:Fact; r:gives {(540 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(540 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 540];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2909 a r:Inference;
    r:gives {
        541 :numberToDigits (0 5 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(541 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(541 1000) math:remainder 541}]
        [ a r:Fact; r:gives {(541 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(541 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 541];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 541];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2910 a r:Inference;
    r:gives {
        542 :numberToDigits (0 5 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(542 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(542 1000) math:remainder 542}]
        [ a r:Fact; r:gives {(542 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(542 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 542];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 542];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2911 a r:Inference;
    r:gives {
        543 :numberToDigits (0 5 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(543 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(543 1000) math:remainder 543}]
        [ a r:Fact; r:gives {(543 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(543 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 543];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 543];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2912 a r:Inference;
    r:gives {
        544 :numberToDigits (0 5 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(544 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(544 1000) math:remainder 544}]
        [ a r:Fact; r:gives {(544 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(544 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 544];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 544];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2913 a r:Inference;
    r:gives {
        545 :numberToDigits (0 5 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(545 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(545 1000) math:remainder 545}]
        [ a r:Fact; r:gives {(545 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(545 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 545];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 545];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2914 a r:Inference;
    r:gives {
        546 :numberToDigits (0 5 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(546 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(546 1000) math:remainder 546}]
        [ a r:Fact; r:gives {(546 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(546 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 546];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 546];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2915 a r:Inference;
    r:gives {
        547 :numberToDigits (0 5 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(547 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(547 1000) math:remainder 547}]
        [ a r:Fact; r:gives {(547 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(547 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 547];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 547];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2916 a r:Inference;
    r:gives {
        548 :numberToDigits (0 5 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(548 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(548 1000) math:remainder 548}]
        [ a r:Fact; r:gives {(548 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(548 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 548];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 548];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2917 a r:Inference;
    r:gives {
        549 :numberToDigits (0 5 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(549 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(549 1000) math:remainder 549}]
        [ a r:Fact; r:gives {(549 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(549 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 549];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 549];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2918 a r:Inference;
    r:gives {
        550 :numberToDigits (0 5 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(550 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(550 1000) math:remainder 550}]
        [ a r:Fact; r:gives {(550 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(550 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2919 a r:Inference;
    r:gives {
        551 :numberToDigits (0 5 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(551 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(551 1000) math:remainder 551}]
        [ a r:Fact; r:gives {(551 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(551 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 551];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 551];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2920 a r:Inference;
    r:gives {
        552 :numberToDigits (0 5 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(552 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(552 1000) math:remainder 552}]
        [ a r:Fact; r:gives {(552 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(552 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 552];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 552];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2921 a r:Inference;
    r:gives {
        553 :numberToDigits (0 5 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(553 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(553 1000) math:remainder 553}]
        [ a r:Fact; r:gives {(553 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(553 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 553];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 553];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2922 a r:Inference;
    r:gives {
        554 :numberToDigits (0 5 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(554 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(554 1000) math:remainder 554}]
        [ a r:Fact; r:gives {(554 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(554 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 554];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 554];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2923 a r:Inference;
    r:gives {
        555 :numberToDigits (0 5 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(555 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(555 1000) math:remainder 555}]
        [ a r:Fact; r:gives {(555 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(555 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 555];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 555];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2924 a r:Inference;
    r:gives {
        (0 5 5 5) :digitsToNumber 555 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 500 50 5) math:sum 555}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 555];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3439.

skolem:lemma2925 a r:Inference;
    r:gives {
        (5 5 5 0) :digitsToNumber 5550 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 1000) math:product 5000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(5000 500 50 0) math:sum 5550}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 5550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2926 a r:Inference;
    r:gives {
        556 :numberToDigits (0 5 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(556 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(556 1000) math:remainder 556}]
        [ a r:Fact; r:gives {(556 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(556 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 556];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 556];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2927 a r:Inference;
    r:gives {
        (0 5 5 6) :digitsToNumber 556 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 500 50 6) math:sum 556}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 556];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2928 a r:Inference;
    r:gives {
        (6 5 5 0) :digitsToNumber 6550 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(6000 500 50 0) math:sum 6550}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2929 a r:Inference;
    r:gives {
        557 :numberToDigits (0 5 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(557 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(557 1000) math:remainder 557}]
        [ a r:Fact; r:gives {(557 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(557 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 557];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 557];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2930 a r:Inference;
    r:gives {
        (0 5 5 7) :digitsToNumber 557 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 500 50 7) math:sum 557}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 557];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2931 a r:Inference;
    r:gives {
        (7 5 5 0) :digitsToNumber 7550 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(7000 500 50 0) math:sum 7550}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2932 a r:Inference;
    r:gives {
        558 :numberToDigits (0 5 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(558 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(558 1000) math:remainder 558}]
        [ a r:Fact; r:gives {(558 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(558 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 558];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 558];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2933 a r:Inference;
    r:gives {
        (0 5 5 8) :digitsToNumber 558 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 500 50 8) math:sum 558}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 558];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2934 a r:Inference;
    r:gives {
        (8 5 5 0) :digitsToNumber 8550 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(8000 500 50 0) math:sum 8550}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2935 a r:Inference;
    r:gives {
        559 :numberToDigits (0 5 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(559 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(559 1000) math:remainder 559}]
        [ a r:Fact; r:gives {(559 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(559 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 559];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 559];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2936 a r:Inference;
    r:gives {
        (0 5 5 9) :digitsToNumber 559 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(0 500 50 9) math:sum 559}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 559];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2937 a r:Inference;
    r:gives {
        (9 5 5 0) :digitsToNumber 9550 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(9000 500 50 0) math:sum 9550}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9550];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2938 a r:Inference;
    r:gives {
        560 :numberToDigits (0 5 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(560 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(560 1000) math:remainder 560}]
        [ a r:Fact; r:gives {(560 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(560 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 560];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 560];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2939 a r:Inference;
    r:gives {
        561 :numberToDigits (0 5 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(561 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(561 1000) math:remainder 561}]
        [ a r:Fact; r:gives {(561 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(561 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 561];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 561];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2940 a r:Inference;
    r:gives {
        562 :numberToDigits (0 5 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(562 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(562 1000) math:remainder 562}]
        [ a r:Fact; r:gives {(562 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(562 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 562];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 562];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2941 a r:Inference;
    r:gives {
        563 :numberToDigits (0 5 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(563 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(563 1000) math:remainder 563}]
        [ a r:Fact; r:gives {(563 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(563 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 563];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 563];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2942 a r:Inference;
    r:gives {
        564 :numberToDigits (0 5 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(564 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(564 1000) math:remainder 564}]
        [ a r:Fact; r:gives {(564 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(564 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 564];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 564];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2943 a r:Inference;
    r:gives {
        565 :numberToDigits (0 5 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(565 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(565 1000) math:remainder 565}]
        [ a r:Fact; r:gives {(565 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(565 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 565];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 565];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2944 a r:Inference;
    r:gives {
        566 :numberToDigits (0 5 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(566 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(566 1000) math:remainder 566}]
        [ a r:Fact; r:gives {(566 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(566 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 566];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 566];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2945 a r:Inference;
    r:gives {
        (0 5 6 6) :digitsToNumber 566 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 500 60 6) math:sum 566}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 566];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma2946 a r:Inference;
    r:gives {
        (6 6 5 0) :digitsToNumber 6650 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(6000 600 50 0) math:sum 6650}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2947 a r:Inference;
    r:gives {
        567 :numberToDigits (0 5 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(567 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(567 1000) math:remainder 567}]
        [ a r:Fact; r:gives {(567 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(567 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2948 a r:Inference;
    r:gives {
        (0 5 6 7) :digitsToNumber 567 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 500 60 7) math:sum 567}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 567];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2949 a r:Inference;
    r:gives {
        (7 6 5 0) :digitsToNumber 7650 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(7000 600 50 0) math:sum 7650}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2950 a r:Inference;
    r:gives {
        568 :numberToDigits (0 5 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(568 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(568 1000) math:remainder 568}]
        [ a r:Fact; r:gives {(568 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(568 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2951 a r:Inference;
    r:gives {
        (0 5 6 8) :digitsToNumber 568 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 500 60 8) math:sum 568}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 568];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2952 a r:Inference;
    r:gives {
        (8 6 5 0) :digitsToNumber 8650 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(8000 600 50 0) math:sum 8650}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2953 a r:Inference;
    r:gives {
        569 :numberToDigits (0 5 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(569 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(569 1000) math:remainder 569}]
        [ a r:Fact; r:gives {(569 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(569 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2954 a r:Inference;
    r:gives {
        (0 5 6 9) :digitsToNumber 569 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 500 60 9) math:sum 569}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 569];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2955 a r:Inference;
    r:gives {
        (9 6 5 0) :digitsToNumber 9650 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(9000 600 50 0) math:sum 9650}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2956 a r:Inference;
    r:gives {
        570 :numberToDigits (0 5 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(570 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(570 1000) math:remainder 570}]
        [ a r:Fact; r:gives {(570 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(570 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 570];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 570];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2957 a r:Inference;
    r:gives {
        571 :numberToDigits (0 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(571 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(571 1000) math:remainder 571}]
        [ a r:Fact; r:gives {(571 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(571 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 571];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 571];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2958 a r:Inference;
    r:gives {
        572 :numberToDigits (0 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(572 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(572 1000) math:remainder 572}]
        [ a r:Fact; r:gives {(572 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(572 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 572];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 572];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2959 a r:Inference;
    r:gives {
        573 :numberToDigits (0 5 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(573 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(573 1000) math:remainder 573}]
        [ a r:Fact; r:gives {(573 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(573 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 573];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 573];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2960 a r:Inference;
    r:gives {
        574 :numberToDigits (0 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(574 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(574 1000) math:remainder 574}]
        [ a r:Fact; r:gives {(574 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(574 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 574];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 574];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2961 a r:Inference;
    r:gives {
        575 :numberToDigits (0 5 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(575 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(575 1000) math:remainder 575}]
        [ a r:Fact; r:gives {(575 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(575 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 575];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 575];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2962 a r:Inference;
    r:gives {
        576 :numberToDigits (0 5 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(576 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(576 1000) math:remainder 576}]
        [ a r:Fact; r:gives {(576 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(576 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 576];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 576];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2963 a r:Inference;
    r:gives {
        577 :numberToDigits (0 5 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(577 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(577 1000) math:remainder 577}]
        [ a r:Fact; r:gives {(577 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(577 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 577];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 577];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2964 a r:Inference;
    r:gives {
        (0 5 7 7) :digitsToNumber 577 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 500 70 7) math:sum 577}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 577];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma2965 a r:Inference;
    r:gives {
        (7 7 5 0) :digitsToNumber 7750 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(7000 700 50 0) math:sum 7750}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2966 a r:Inference;
    r:gives {
        578 :numberToDigits (0 5 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(578 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(578 1000) math:remainder 578}]
        [ a r:Fact; r:gives {(578 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(578 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2967 a r:Inference;
    r:gives {
        (0 5 7 8) :digitsToNumber 578 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 500 70 8) math:sum 578}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 578];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2968 a r:Inference;
    r:gives {
        (8 7 5 0) :digitsToNumber 8750 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(8000 700 50 0) math:sum 8750}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2969 a r:Inference;
    r:gives {
        579 :numberToDigits (0 5 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(579 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(579 1000) math:remainder 579}]
        [ a r:Fact; r:gives {(579 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(579 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2970 a r:Inference;
    r:gives {
        (0 5 7 9) :digitsToNumber 579 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 500 70 9) math:sum 579}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 579];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2971 a r:Inference;
    r:gives {
        (9 7 5 0) :digitsToNumber 9750 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(9000 700 50 0) math:sum 9750}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2972 a r:Inference;
    r:gives {
        580 :numberToDigits (0 5 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(580 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(580 1000) math:remainder 580}]
        [ a r:Fact; r:gives {(580 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(580 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 580];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 580];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2973 a r:Inference;
    r:gives {
        581 :numberToDigits (0 5 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(581 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(581 1000) math:remainder 581}]
        [ a r:Fact; r:gives {(581 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(581 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 581];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 581];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2974 a r:Inference;
    r:gives {
        582 :numberToDigits (0 5 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(582 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(582 1000) math:remainder 582}]
        [ a r:Fact; r:gives {(582 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(582 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 582];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 582];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2975 a r:Inference;
    r:gives {
        583 :numberToDigits (0 5 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(583 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(583 1000) math:remainder 583}]
        [ a r:Fact; r:gives {(583 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(583 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 583];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 583];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2976 a r:Inference;
    r:gives {
        584 :numberToDigits (0 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(584 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(584 1000) math:remainder 584}]
        [ a r:Fact; r:gives {(584 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(584 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 584];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 584];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2977 a r:Inference;
    r:gives {
        585 :numberToDigits (0 5 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(585 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(585 1000) math:remainder 585}]
        [ a r:Fact; r:gives {(585 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(585 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 585];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 585];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2978 a r:Inference;
    r:gives {
        586 :numberToDigits (0 5 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(586 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(586 1000) math:remainder 586}]
        [ a r:Fact; r:gives {(586 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(586 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 586];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 586];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2979 a r:Inference;
    r:gives {
        587 :numberToDigits (0 5 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(587 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(587 1000) math:remainder 587}]
        [ a r:Fact; r:gives {(587 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(587 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 587];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 587];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2980 a r:Inference;
    r:gives {
        588 :numberToDigits (0 5 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(588 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(588 1000) math:remainder 588}]
        [ a r:Fact; r:gives {(588 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(588 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 588];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 588];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2981 a r:Inference;
    r:gives {
        (0 5 8 8) :digitsToNumber 588 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 500 80 8) math:sum 588}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 588];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma2982 a r:Inference;
    r:gives {
        (8 8 5 0) :digitsToNumber 8850 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(8000 800 50 0) math:sum 8850}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2983 a r:Inference;
    r:gives {
        589 :numberToDigits (0 5 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(589 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(589 1000) math:remainder 589}]
        [ a r:Fact; r:gives {(589 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(589 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2984 a r:Inference;
    r:gives {
        (0 5 8 9) :digitsToNumber 589 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 500 80 9) math:sum 589}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 589];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2985 a r:Inference;
    r:gives {
        (9 8 5 0) :digitsToNumber 9850 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(9000 800 50 0) math:sum 9850}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2986 a r:Inference;
    r:gives {
        590 :numberToDigits (0 5 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(590 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(590 1000) math:remainder 590}]
        [ a r:Fact; r:gives {(590 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(590 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 590];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 590];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2987 a r:Inference;
    r:gives {
        591 :numberToDigits (0 5 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(591 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(591 1000) math:remainder 591}]
        [ a r:Fact; r:gives {(591 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(591 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 591];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 591];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma2988 a r:Inference;
    r:gives {
        592 :numberToDigits (0 5 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(592 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(592 1000) math:remainder 592}]
        [ a r:Fact; r:gives {(592 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(592 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 592];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 592];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma2989 a r:Inference;
    r:gives {
        593 :numberToDigits (0 5 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(593 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(593 1000) math:remainder 593}]
        [ a r:Fact; r:gives {(593 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(593 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 593];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 593];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma2990 a r:Inference;
    r:gives {
        594 :numberToDigits (0 5 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(594 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(594 1000) math:remainder 594}]
        [ a r:Fact; r:gives {(594 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(594 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 594];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 594];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma2991 a r:Inference;
    r:gives {
        595 :numberToDigits (0 5 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(595 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(595 1000) math:remainder 595}]
        [ a r:Fact; r:gives {(595 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(595 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 595];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 595];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma2992 a r:Inference;
    r:gives {
        596 :numberToDigits (0 5 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(596 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(596 1000) math:remainder 596}]
        [ a r:Fact; r:gives {(596 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(596 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 596];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 596];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma2993 a r:Inference;
    r:gives {
        597 :numberToDigits (0 5 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(597 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(597 1000) math:remainder 597}]
        [ a r:Fact; r:gives {(597 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(597 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 597];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 597];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma2994 a r:Inference;
    r:gives {
        598 :numberToDigits (0 5 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(598 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(598 1000) math:remainder 598}]
        [ a r:Fact; r:gives {(598 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(598 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 598];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 598];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma2995 a r:Inference;
    r:gives {
        599 :numberToDigits (0 5 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(599 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(599 1000) math:remainder 599}]
        [ a r:Fact; r:gives {(599 100) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(599 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 599];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 599];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma2996 a r:Inference;
    r:gives {
        (0 5 9 9) :digitsToNumber 599 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(5 100) math:product 500}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 500 90 9) math:sum 599}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 500];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 599];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma2997 a r:Inference;
    r:gives {
        (9 9 5 0) :digitsToNumber 9950 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(5 10) math:product 50}]
        [ a r:Fact; r:gives {(9000 900 50 0) math:sum 9950}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9950];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma2998 a r:Inference;
    r:gives {
        600 :numberToDigits (0 6 0 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(600 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(600 1000) math:remainder 600}]
        [ a r:Fact; r:gives {(600 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(600 100) math:remainder 0}]
        [ a r:Fact; r:gives {(0 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(0 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma2999 a r:Inference;
    r:gives {
        601 :numberToDigits (0 6 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(601 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(601 1000) math:remainder 601}]
        [ a r:Fact; r:gives {(601 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(601 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 601];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 601];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3000 a r:Inference;
    r:gives {
        602 :numberToDigits (0 6 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(602 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(602 1000) math:remainder 602}]
        [ a r:Fact; r:gives {(602 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(602 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 602];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 602];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3001 a r:Inference;
    r:gives {
        603 :numberToDigits (0 6 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(603 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(603 1000) math:remainder 603}]
        [ a r:Fact; r:gives {(603 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(603 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 603];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 603];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3002 a r:Inference;
    r:gives {
        604 :numberToDigits (0 6 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(604 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(604 1000) math:remainder 604}]
        [ a r:Fact; r:gives {(604 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(604 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 604];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 604];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3003 a r:Inference;
    r:gives {
        605 :numberToDigits (0 6 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(605 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(605 1000) math:remainder 605}]
        [ a r:Fact; r:gives {(605 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(605 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 605];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 605];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3004 a r:Inference;
    r:gives {
        606 :numberToDigits (0 6 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(606 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(606 1000) math:remainder 606}]
        [ a r:Fact; r:gives {(606 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(606 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 606];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 606];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3005 a r:Inference;
    r:gives {
        607 :numberToDigits (0 6 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(607 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(607 1000) math:remainder 607}]
        [ a r:Fact; r:gives {(607 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(607 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 607];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 607];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3006 a r:Inference;
    r:gives {
        608 :numberToDigits (0 6 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(608 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(608 1000) math:remainder 608}]
        [ a r:Fact; r:gives {(608 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(608 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 608];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 608];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3007 a r:Inference;
    r:gives {
        609 :numberToDigits (0 6 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(609 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(609 1000) math:remainder 609}]
        [ a r:Fact; r:gives {(609 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(609 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 609];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 609];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3008 a r:Inference;
    r:gives {
        610 :numberToDigits (0 6 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(610 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(610 1000) math:remainder 610}]
        [ a r:Fact; r:gives {(610 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(610 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 610];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3009 a r:Inference;
    r:gives {
        611 :numberToDigits (0 6 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(611 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(611 1000) math:remainder 611}]
        [ a r:Fact; r:gives {(611 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(611 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 611];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 611];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3010 a r:Inference;
    r:gives {
        612 :numberToDigits (0 6 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(612 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(612 1000) math:remainder 612}]
        [ a r:Fact; r:gives {(612 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(612 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 612];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 612];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3011 a r:Inference;
    r:gives {
        613 :numberToDigits (0 6 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(613 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(613 1000) math:remainder 613}]
        [ a r:Fact; r:gives {(613 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(613 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 613];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 613];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3012 a r:Inference;
    r:gives {
        614 :numberToDigits (0 6 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(614 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(614 1000) math:remainder 614}]
        [ a r:Fact; r:gives {(614 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(614 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 614];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 614];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3013 a r:Inference;
    r:gives {
        615 :numberToDigits (0 6 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(615 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(615 1000) math:remainder 615}]
        [ a r:Fact; r:gives {(615 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(615 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 615];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 615];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3014 a r:Inference;
    r:gives {
        616 :numberToDigits (0 6 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(616 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(616 1000) math:remainder 616}]
        [ a r:Fact; r:gives {(616 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(616 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 616];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 616];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3015 a r:Inference;
    r:gives {
        617 :numberToDigits (0 6 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(617 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(617 1000) math:remainder 617}]
        [ a r:Fact; r:gives {(617 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(617 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 617];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 617];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3016 a r:Inference;
    r:gives {
        618 :numberToDigits (0 6 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(618 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(618 1000) math:remainder 618}]
        [ a r:Fact; r:gives {(618 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(618 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 618];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 618];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3017 a r:Inference;
    r:gives {
        619 :numberToDigits (0 6 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(619 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(619 1000) math:remainder 619}]
        [ a r:Fact; r:gives {(619 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(619 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 619];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 619];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3018 a r:Inference;
    r:gives {
        620 :numberToDigits (0 6 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(620 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(620 1000) math:remainder 620}]
        [ a r:Fact; r:gives {(620 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(620 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 620];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3019 a r:Inference;
    r:gives {
        621 :numberToDigits (0 6 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(621 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(621 1000) math:remainder 621}]
        [ a r:Fact; r:gives {(621 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(621 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 621];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3020 a r:Inference;
    r:gives {
        622 :numberToDigits (0 6 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(622 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(622 1000) math:remainder 622}]
        [ a r:Fact; r:gives {(622 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(622 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 622];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3021 a r:Inference;
    r:gives {
        623 :numberToDigits (0 6 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(623 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(623 1000) math:remainder 623}]
        [ a r:Fact; r:gives {(623 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(623 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 623];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 623];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3022 a r:Inference;
    r:gives {
        624 :numberToDigits (0 6 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(624 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(624 1000) math:remainder 624}]
        [ a r:Fact; r:gives {(624 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(624 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 624];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 624];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3023 a r:Inference;
    r:gives {
        625 :numberToDigits (0 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(625 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(625 1000) math:remainder 625}]
        [ a r:Fact; r:gives {(625 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(625 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 625];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 625];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3024 a r:Inference;
    r:gives {
        626 :numberToDigits (0 6 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(626 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(626 1000) math:remainder 626}]
        [ a r:Fact; r:gives {(626 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(626 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 626];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 626];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3025 a r:Inference;
    r:gives {
        627 :numberToDigits (0 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(627 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(627 1000) math:remainder 627}]
        [ a r:Fact; r:gives {(627 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(627 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 627];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 627];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3026 a r:Inference;
    r:gives {
        628 :numberToDigits (0 6 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(628 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(628 1000) math:remainder 628}]
        [ a r:Fact; r:gives {(628 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(628 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 628];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 628];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3027 a r:Inference;
    r:gives {
        629 :numberToDigits (0 6 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(629 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(629 1000) math:remainder 629}]
        [ a r:Fact; r:gives {(629 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(629 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 629];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 629];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3028 a r:Inference;
    r:gives {
        630 :numberToDigits (0 6 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(630 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(630 1000) math:remainder 630}]
        [ a r:Fact; r:gives {(630 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(630 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 630];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3029 a r:Inference;
    r:gives {
        631 :numberToDigits (0 6 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(631 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(631 1000) math:remainder 631}]
        [ a r:Fact; r:gives {(631 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(631 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 631];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 631];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3030 a r:Inference;
    r:gives {
        632 :numberToDigits (0 6 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(632 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(632 1000) math:remainder 632}]
        [ a r:Fact; r:gives {(632 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(632 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 632];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 632];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3031 a r:Inference;
    r:gives {
        633 :numberToDigits (0 6 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(633 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(633 1000) math:remainder 633}]
        [ a r:Fact; r:gives {(633 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(633 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 633];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 633];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3032 a r:Inference;
    r:gives {
        634 :numberToDigits (0 6 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(634 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(634 1000) math:remainder 634}]
        [ a r:Fact; r:gives {(634 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(634 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 634];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 634];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3033 a r:Inference;
    r:gives {
        635 :numberToDigits (0 6 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(635 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(635 1000) math:remainder 635}]
        [ a r:Fact; r:gives {(635 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(635 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 635];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 635];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3034 a r:Inference;
    r:gives {
        636 :numberToDigits (0 6 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(636 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(636 1000) math:remainder 636}]
        [ a r:Fact; r:gives {(636 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(636 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 636];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 636];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3035 a r:Inference;
    r:gives {
        637 :numberToDigits (0 6 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(637 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(637 1000) math:remainder 637}]
        [ a r:Fact; r:gives {(637 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(637 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 637];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 637];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3036 a r:Inference;
    r:gives {
        638 :numberToDigits (0 6 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(638 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(638 1000) math:remainder 638}]
        [ a r:Fact; r:gives {(638 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(638 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 638];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 638];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3037 a r:Inference;
    r:gives {
        639 :numberToDigits (0 6 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(639 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(639 1000) math:remainder 639}]
        [ a r:Fact; r:gives {(639 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(639 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 639];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 639];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3038 a r:Inference;
    r:gives {
        640 :numberToDigits (0 6 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(640 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(640 1000) math:remainder 640}]
        [ a r:Fact; r:gives {(640 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(640 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 640];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3039 a r:Inference;
    r:gives {
        641 :numberToDigits (0 6 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(641 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(641 1000) math:remainder 641}]
        [ a r:Fact; r:gives {(641 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(641 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 641];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 641];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3040 a r:Inference;
    r:gives {
        642 :numberToDigits (0 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(642 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(642 1000) math:remainder 642}]
        [ a r:Fact; r:gives {(642 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(642 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 642];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 642];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3041 a r:Inference;
    r:gives {
        643 :numberToDigits (0 6 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(643 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(643 1000) math:remainder 643}]
        [ a r:Fact; r:gives {(643 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(643 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 643];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 643];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3042 a r:Inference;
    r:gives {
        644 :numberToDigits (0 6 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(644 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(644 1000) math:remainder 644}]
        [ a r:Fact; r:gives {(644 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(644 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 644];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 644];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3043 a r:Inference;
    r:gives {
        645 :numberToDigits (0 6 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(645 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(645 1000) math:remainder 645}]
        [ a r:Fact; r:gives {(645 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(645 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 645];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 645];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3044 a r:Inference;
    r:gives {
        646 :numberToDigits (0 6 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(646 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(646 1000) math:remainder 646}]
        [ a r:Fact; r:gives {(646 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(646 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 646];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 646];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3045 a r:Inference;
    r:gives {
        647 :numberToDigits (0 6 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(647 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(647 1000) math:remainder 647}]
        [ a r:Fact; r:gives {(647 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(647 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 647];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 647];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3046 a r:Inference;
    r:gives {
        648 :numberToDigits (0 6 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(648 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(648 1000) math:remainder 648}]
        [ a r:Fact; r:gives {(648 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(648 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 648];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 648];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3047 a r:Inference;
    r:gives {
        649 :numberToDigits (0 6 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(649 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(649 1000) math:remainder 649}]
        [ a r:Fact; r:gives {(649 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(649 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 649];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 649];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3048 a r:Inference;
    r:gives {
        650 :numberToDigits (0 6 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(650 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(650 1000) math:remainder 650}]
        [ a r:Fact; r:gives {(650 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(650 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 650];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3049 a r:Inference;
    r:gives {
        651 :numberToDigits (0 6 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(651 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(651 1000) math:remainder 651}]
        [ a r:Fact; r:gives {(651 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(651 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 651];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 651];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3050 a r:Inference;
    r:gives {
        652 :numberToDigits (0 6 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(652 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(652 1000) math:remainder 652}]
        [ a r:Fact; r:gives {(652 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(652 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 652];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 652];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3051 a r:Inference;
    r:gives {
        653 :numberToDigits (0 6 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(653 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(653 1000) math:remainder 653}]
        [ a r:Fact; r:gives {(653 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(653 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 653];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 653];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3052 a r:Inference;
    r:gives {
        654 :numberToDigits (0 6 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(654 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(654 1000) math:remainder 654}]
        [ a r:Fact; r:gives {(654 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(654 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 654];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 654];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3053 a r:Inference;
    r:gives {
        655 :numberToDigits (0 6 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(655 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(655 1000) math:remainder 655}]
        [ a r:Fact; r:gives {(655 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(655 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 655];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 655];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3054 a r:Inference;
    r:gives {
        656 :numberToDigits (0 6 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(656 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(656 1000) math:remainder 656}]
        [ a r:Fact; r:gives {(656 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(656 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 656];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 656];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3055 a r:Inference;
    r:gives {
        657 :numberToDigits (0 6 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(657 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(657 1000) math:remainder 657}]
        [ a r:Fact; r:gives {(657 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(657 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 657];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 657];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3056 a r:Inference;
    r:gives {
        658 :numberToDigits (0 6 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(658 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(658 1000) math:remainder 658}]
        [ a r:Fact; r:gives {(658 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(658 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 658];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 658];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3057 a r:Inference;
    r:gives {
        659 :numberToDigits (0 6 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(659 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(659 1000) math:remainder 659}]
        [ a r:Fact; r:gives {(659 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(659 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 659];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 659];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3058 a r:Inference;
    r:gives {
        660 :numberToDigits (0 6 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(660 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(660 1000) math:remainder 660}]
        [ a r:Fact; r:gives {(660 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(660 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3059 a r:Inference;
    r:gives {
        661 :numberToDigits (0 6 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(661 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(661 1000) math:remainder 661}]
        [ a r:Fact; r:gives {(661 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(661 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 661];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 661];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3060 a r:Inference;
    r:gives {
        662 :numberToDigits (0 6 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(662 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(662 1000) math:remainder 662}]
        [ a r:Fact; r:gives {(662 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(662 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 662];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 662];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3061 a r:Inference;
    r:gives {
        663 :numberToDigits (0 6 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(663 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(663 1000) math:remainder 663}]
        [ a r:Fact; r:gives {(663 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(663 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 663];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 663];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3062 a r:Inference;
    r:gives {
        664 :numberToDigits (0 6 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(664 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(664 1000) math:remainder 664}]
        [ a r:Fact; r:gives {(664 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(664 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 664];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 664];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3063 a r:Inference;
    r:gives {
        665 :numberToDigits (0 6 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(665 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(665 1000) math:remainder 665}]
        [ a r:Fact; r:gives {(665 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(665 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 665];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 665];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3064 a r:Inference;
    r:gives {
        666 :numberToDigits (0 6 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(666 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(666 1000) math:remainder 666}]
        [ a r:Fact; r:gives {(666 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(666 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 666];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 666];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3065 a r:Inference;
    r:gives {
        (0 6 6 6) :digitsToNumber 666 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 600 60 6) math:sum 666}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 666];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3439.

skolem:lemma3066 a r:Inference;
    r:gives {
        (6 6 6 0) :digitsToNumber 6660 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 1000) math:product 6000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(6000 600 60 0) math:sum 6660}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 6660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3067 a r:Inference;
    r:gives {
        667 :numberToDigits (0 6 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(667 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(667 1000) math:remainder 667}]
        [ a r:Fact; r:gives {(667 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(667 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 667];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 667];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3068 a r:Inference;
    r:gives {
        (0 6 6 7) :digitsToNumber 667 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 600 60 7) math:sum 667}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 667];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma3069 a r:Inference;
    r:gives {
        (7 6 6 0) :digitsToNumber 7660 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(7000 600 60 0) math:sum 7660}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3070 a r:Inference;
    r:gives {
        668 :numberToDigits (0 6 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(668 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(668 1000) math:remainder 668}]
        [ a r:Fact; r:gives {(668 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(668 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 668];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 668];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3071 a r:Inference;
    r:gives {
        (0 6 6 8) :digitsToNumber 668 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 600 60 8) math:sum 668}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 668];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma3072 a r:Inference;
    r:gives {
        (8 6 6 0) :digitsToNumber 8660 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(8000 600 60 0) math:sum 8660}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3073 a r:Inference;
    r:gives {
        669 :numberToDigits (0 6 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(669 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(669 1000) math:remainder 669}]
        [ a r:Fact; r:gives {(669 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(669 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 669];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 669];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3074 a r:Inference;
    r:gives {
        (0 6 6 9) :digitsToNumber 669 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(0 600 60 9) math:sum 669}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 669];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3075 a r:Inference;
    r:gives {
        (9 6 6 0) :digitsToNumber 9660 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(9000 600 60 0) math:sum 9660}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9660];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3076 a r:Inference;
    r:gives {
        670 :numberToDigits (0 6 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(670 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(670 1000) math:remainder 670}]
        [ a r:Fact; r:gives {(670 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(670 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 670];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 670];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3077 a r:Inference;
    r:gives {
        671 :numberToDigits (0 6 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(671 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(671 1000) math:remainder 671}]
        [ a r:Fact; r:gives {(671 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(671 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 671];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 671];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3078 a r:Inference;
    r:gives {
        672 :numberToDigits (0 6 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(672 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(672 1000) math:remainder 672}]
        [ a r:Fact; r:gives {(672 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(672 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 672];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 672];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3079 a r:Inference;
    r:gives {
        673 :numberToDigits (0 6 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(673 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(673 1000) math:remainder 673}]
        [ a r:Fact; r:gives {(673 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(673 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 673];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 673];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3080 a r:Inference;
    r:gives {
        674 :numberToDigits (0 6 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(674 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(674 1000) math:remainder 674}]
        [ a r:Fact; r:gives {(674 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(674 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 674];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 674];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3081 a r:Inference;
    r:gives {
        675 :numberToDigits (0 6 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(675 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(675 1000) math:remainder 675}]
        [ a r:Fact; r:gives {(675 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(675 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 675];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 675];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3082 a r:Inference;
    r:gives {
        676 :numberToDigits (0 6 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(676 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(676 1000) math:remainder 676}]
        [ a r:Fact; r:gives {(676 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(676 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 676];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 676];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3083 a r:Inference;
    r:gives {
        677 :numberToDigits (0 6 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(677 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(677 1000) math:remainder 677}]
        [ a r:Fact; r:gives {(677 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(677 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 677];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 677];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3084 a r:Inference;
    r:gives {
        (0 6 7 7) :digitsToNumber 677 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 600 70 7) math:sum 677}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 677];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma3085 a r:Inference;
    r:gives {
        (7 7 6 0) :digitsToNumber 7760 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(7000 700 60 0) math:sum 7760}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3086 a r:Inference;
    r:gives {
        678 :numberToDigits (0 6 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(678 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(678 1000) math:remainder 678}]
        [ a r:Fact; r:gives {(678 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(678 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3087 a r:Inference;
    r:gives {
        (0 6 7 8) :digitsToNumber 678 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 600 70 8) math:sum 678}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 678];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma3088 a r:Inference;
    r:gives {
        (8 7 6 0) :digitsToNumber 8760 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(8000 700 60 0) math:sum 8760}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3089 a r:Inference;
    r:gives {
        679 :numberToDigits (0 6 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(679 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(679 1000) math:remainder 679}]
        [ a r:Fact; r:gives {(679 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(679 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3090 a r:Inference;
    r:gives {
        (0 6 7 9) :digitsToNumber 679 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 600 70 9) math:sum 679}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 679];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3091 a r:Inference;
    r:gives {
        (9 7 6 0) :digitsToNumber 9760 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(9000 700 60 0) math:sum 9760}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3092 a r:Inference;
    r:gives {
        680 :numberToDigits (0 6 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(680 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(680 1000) math:remainder 680}]
        [ a r:Fact; r:gives {(680 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(680 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 680];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 680];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3093 a r:Inference;
    r:gives {
        681 :numberToDigits (0 6 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(681 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(681 1000) math:remainder 681}]
        [ a r:Fact; r:gives {(681 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(681 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 681];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 681];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3094 a r:Inference;
    r:gives {
        682 :numberToDigits (0 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(682 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(682 1000) math:remainder 682}]
        [ a r:Fact; r:gives {(682 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(682 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 682];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 682];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3095 a r:Inference;
    r:gives {
        683 :numberToDigits (0 6 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(683 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(683 1000) math:remainder 683}]
        [ a r:Fact; r:gives {(683 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(683 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 683];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 683];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3096 a r:Inference;
    r:gives {
        684 :numberToDigits (0 6 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(684 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(684 1000) math:remainder 684}]
        [ a r:Fact; r:gives {(684 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(684 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 684];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 684];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3097 a r:Inference;
    r:gives {
        685 :numberToDigits (0 6 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(685 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(685 1000) math:remainder 685}]
        [ a r:Fact; r:gives {(685 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(685 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 685];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 685];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3098 a r:Inference;
    r:gives {
        686 :numberToDigits (0 6 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(686 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(686 1000) math:remainder 686}]
        [ a r:Fact; r:gives {(686 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(686 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 686];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 686];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3099 a r:Inference;
    r:gives {
        687 :numberToDigits (0 6 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(687 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(687 1000) math:remainder 687}]
        [ a r:Fact; r:gives {(687 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(687 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 687];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 687];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3100 a r:Inference;
    r:gives {
        688 :numberToDigits (0 6 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(688 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(688 1000) math:remainder 688}]
        [ a r:Fact; r:gives {(688 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(688 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 688];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 688];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3101 a r:Inference;
    r:gives {
        (0 6 8 8) :digitsToNumber 688 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 600 80 8) math:sum 688}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 688];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma3102 a r:Inference;
    r:gives {
        (8 8 6 0) :digitsToNumber 8860 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(8000 800 60 0) math:sum 8860}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3103 a r:Inference;
    r:gives {
        689 :numberToDigits (0 6 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(689 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(689 1000) math:remainder 689}]
        [ a r:Fact; r:gives {(689 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(689 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3104 a r:Inference;
    r:gives {
        (0 6 8 9) :digitsToNumber 689 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 600 80 9) math:sum 689}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 689];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3105 a r:Inference;
    r:gives {
        (9 8 6 0) :digitsToNumber 9860 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(9000 800 60 0) math:sum 9860}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3106 a r:Inference;
    r:gives {
        690 :numberToDigits (0 6 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(690 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(690 1000) math:remainder 690}]
        [ a r:Fact; r:gives {(690 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(690 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 690];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 690];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3107 a r:Inference;
    r:gives {
        691 :numberToDigits (0 6 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(691 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(691 1000) math:remainder 691}]
        [ a r:Fact; r:gives {(691 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(691 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 691];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 691];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3108 a r:Inference;
    r:gives {
        692 :numberToDigits (0 6 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(692 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(692 1000) math:remainder 692}]
        [ a r:Fact; r:gives {(692 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(692 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 692];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 692];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3109 a r:Inference;
    r:gives {
        693 :numberToDigits (0 6 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(693 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(693 1000) math:remainder 693}]
        [ a r:Fact; r:gives {(693 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(693 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 693];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 693];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3110 a r:Inference;
    r:gives {
        694 :numberToDigits (0 6 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(694 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(694 1000) math:remainder 694}]
        [ a r:Fact; r:gives {(694 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(694 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 694];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 694];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3111 a r:Inference;
    r:gives {
        695 :numberToDigits (0 6 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(695 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(695 1000) math:remainder 695}]
        [ a r:Fact; r:gives {(695 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(695 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 695];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 695];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3112 a r:Inference;
    r:gives {
        696 :numberToDigits (0 6 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(696 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(696 1000) math:remainder 696}]
        [ a r:Fact; r:gives {(696 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(696 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 696];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 696];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3113 a r:Inference;
    r:gives {
        697 :numberToDigits (0 6 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(697 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(697 1000) math:remainder 697}]
        [ a r:Fact; r:gives {(697 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(697 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 697];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 697];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3114 a r:Inference;
    r:gives {
        698 :numberToDigits (0 6 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(698 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(698 1000) math:remainder 698}]
        [ a r:Fact; r:gives {(698 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(698 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 698];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 698];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3115 a r:Inference;
    r:gives {
        699 :numberToDigits (0 6 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(699 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(699 1000) math:remainder 699}]
        [ a r:Fact; r:gives {(699 100) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(699 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 699];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 699];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3116 a r:Inference;
    r:gives {
        (0 6 9 9) :digitsToNumber 699 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(6 100) math:product 600}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 600 90 9) math:sum 699}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 600];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 699];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3117 a r:Inference;
    r:gives {
        (9 9 6 0) :digitsToNumber 9960 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(6 10) math:product 60}]
        [ a r:Fact; r:gives {(9000 900 60 0) math:sum 9960}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9960];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3118 a r:Inference;
    r:gives {
        700 :numberToDigits (0 7 0 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(700 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(700 1000) math:remainder 700}]
        [ a r:Fact; r:gives {(700 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(700 100) math:remainder 0}]
        [ a r:Fact; r:gives {(0 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(0 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3119 a r:Inference;
    r:gives {
        701 :numberToDigits (0 7 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(701 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(701 1000) math:remainder 701}]
        [ a r:Fact; r:gives {(701 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(701 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 701];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 701];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3120 a r:Inference;
    r:gives {
        702 :numberToDigits (0 7 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(702 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(702 1000) math:remainder 702}]
        [ a r:Fact; r:gives {(702 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(702 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 702];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 702];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3121 a r:Inference;
    r:gives {
        703 :numberToDigits (0 7 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(703 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(703 1000) math:remainder 703}]
        [ a r:Fact; r:gives {(703 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(703 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 703];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 703];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3122 a r:Inference;
    r:gives {
        704 :numberToDigits (0 7 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(704 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(704 1000) math:remainder 704}]
        [ a r:Fact; r:gives {(704 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(704 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 704];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 704];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3123 a r:Inference;
    r:gives {
        705 :numberToDigits (0 7 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(705 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(705 1000) math:remainder 705}]
        [ a r:Fact; r:gives {(705 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(705 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 705];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 705];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3124 a r:Inference;
    r:gives {
        706 :numberToDigits (0 7 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(706 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(706 1000) math:remainder 706}]
        [ a r:Fact; r:gives {(706 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(706 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 706];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 706];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3125 a r:Inference;
    r:gives {
        707 :numberToDigits (0 7 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(707 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(707 1000) math:remainder 707}]
        [ a r:Fact; r:gives {(707 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(707 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 707];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 707];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3126 a r:Inference;
    r:gives {
        708 :numberToDigits (0 7 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(708 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(708 1000) math:remainder 708}]
        [ a r:Fact; r:gives {(708 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(708 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 708];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 708];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3127 a r:Inference;
    r:gives {
        709 :numberToDigits (0 7 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(709 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(709 1000) math:remainder 709}]
        [ a r:Fact; r:gives {(709 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(709 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 709];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 709];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3128 a r:Inference;
    r:gives {
        710 :numberToDigits (0 7 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(710 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(710 1000) math:remainder 710}]
        [ a r:Fact; r:gives {(710 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(710 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 710];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3129 a r:Inference;
    r:gives {
        711 :numberToDigits (0 7 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(711 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(711 1000) math:remainder 711}]
        [ a r:Fact; r:gives {(711 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(711 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 711];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3130 a r:Inference;
    r:gives {
        712 :numberToDigits (0 7 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(712 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(712 1000) math:remainder 712}]
        [ a r:Fact; r:gives {(712 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(712 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 712];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 712];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3131 a r:Inference;
    r:gives {
        713 :numberToDigits (0 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(713 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(713 1000) math:remainder 713}]
        [ a r:Fact; r:gives {(713 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(713 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 713];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 713];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3132 a r:Inference;
    r:gives {
        714 :numberToDigits (0 7 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(714 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(714 1000) math:remainder 714}]
        [ a r:Fact; r:gives {(714 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(714 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 714];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 714];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3133 a r:Inference;
    r:gives {
        715 :numberToDigits (0 7 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(715 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(715 1000) math:remainder 715}]
        [ a r:Fact; r:gives {(715 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(715 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 715];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 715];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3134 a r:Inference;
    r:gives {
        716 :numberToDigits (0 7 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(716 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(716 1000) math:remainder 716}]
        [ a r:Fact; r:gives {(716 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(716 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 716];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 716];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3135 a r:Inference;
    r:gives {
        717 :numberToDigits (0 7 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(717 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(717 1000) math:remainder 717}]
        [ a r:Fact; r:gives {(717 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(717 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 717];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 717];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3136 a r:Inference;
    r:gives {
        718 :numberToDigits (0 7 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(718 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(718 1000) math:remainder 718}]
        [ a r:Fact; r:gives {(718 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(718 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 718];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 718];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3137 a r:Inference;
    r:gives {
        719 :numberToDigits (0 7 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(719 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(719 1000) math:remainder 719}]
        [ a r:Fact; r:gives {(719 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(719 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 719];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 719];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3138 a r:Inference;
    r:gives {
        720 :numberToDigits (0 7 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(720 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(720 1000) math:remainder 720}]
        [ a r:Fact; r:gives {(720 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(720 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 720];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3139 a r:Inference;
    r:gives {
        721 :numberToDigits (0 7 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(721 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(721 1000) math:remainder 721}]
        [ a r:Fact; r:gives {(721 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(721 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 721];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 721];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3140 a r:Inference;
    r:gives {
        722 :numberToDigits (0 7 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(722 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(722 1000) math:remainder 722}]
        [ a r:Fact; r:gives {(722 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(722 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 722];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 722];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3141 a r:Inference;
    r:gives {
        723 :numberToDigits (0 7 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(723 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(723 1000) math:remainder 723}]
        [ a r:Fact; r:gives {(723 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(723 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 723];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 723];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3142 a r:Inference;
    r:gives {
        724 :numberToDigits (0 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(724 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(724 1000) math:remainder 724}]
        [ a r:Fact; r:gives {(724 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(724 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 724];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 724];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3143 a r:Inference;
    r:gives {
        725 :numberToDigits (0 7 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(725 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(725 1000) math:remainder 725}]
        [ a r:Fact; r:gives {(725 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(725 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 725];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 725];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3144 a r:Inference;
    r:gives {
        726 :numberToDigits (0 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(726 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(726 1000) math:remainder 726}]
        [ a r:Fact; r:gives {(726 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(726 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 726];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 726];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3145 a r:Inference;
    r:gives {
        727 :numberToDigits (0 7 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(727 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(727 1000) math:remainder 727}]
        [ a r:Fact; r:gives {(727 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(727 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 727];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 727];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3146 a r:Inference;
    r:gives {
        728 :numberToDigits (0 7 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(728 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(728 1000) math:remainder 728}]
        [ a r:Fact; r:gives {(728 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(728 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 728];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 728];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3147 a r:Inference;
    r:gives {
        729 :numberToDigits (0 7 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(729 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(729 1000) math:remainder 729}]
        [ a r:Fact; r:gives {(729 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(729 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 729];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 729];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3148 a r:Inference;
    r:gives {
        730 :numberToDigits (0 7 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(730 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(730 1000) math:remainder 730}]
        [ a r:Fact; r:gives {(730 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(730 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 730];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3149 a r:Inference;
    r:gives {
        731 :numberToDigits (0 7 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(731 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(731 1000) math:remainder 731}]
        [ a r:Fact; r:gives {(731 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(731 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 731];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 731];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3150 a r:Inference;
    r:gives {
        732 :numberToDigits (0 7 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(732 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(732 1000) math:remainder 732}]
        [ a r:Fact; r:gives {(732 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(732 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 732];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 732];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3151 a r:Inference;
    r:gives {
        733 :numberToDigits (0 7 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(733 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(733 1000) math:remainder 733}]
        [ a r:Fact; r:gives {(733 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(733 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 733];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 733];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3152 a r:Inference;
    r:gives {
        734 :numberToDigits (0 7 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(734 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(734 1000) math:remainder 734}]
        [ a r:Fact; r:gives {(734 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(734 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 734];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 734];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3153 a r:Inference;
    r:gives {
        735 :numberToDigits (0 7 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(735 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(735 1000) math:remainder 735}]
        [ a r:Fact; r:gives {(735 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(735 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 735];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 735];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3154 a r:Inference;
    r:gives {
        736 :numberToDigits (0 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(736 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(736 1000) math:remainder 736}]
        [ a r:Fact; r:gives {(736 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(736 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 736];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 736];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3155 a r:Inference;
    r:gives {
        737 :numberToDigits (0 7 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(737 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(737 1000) math:remainder 737}]
        [ a r:Fact; r:gives {(737 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(737 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 737];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 737];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3156 a r:Inference;
    r:gives {
        738 :numberToDigits (0 7 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(738 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(738 1000) math:remainder 738}]
        [ a r:Fact; r:gives {(738 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(738 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 738];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 738];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3157 a r:Inference;
    r:gives {
        739 :numberToDigits (0 7 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(739 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(739 1000) math:remainder 739}]
        [ a r:Fact; r:gives {(739 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(739 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 739];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 739];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3158 a r:Inference;
    r:gives {
        740 :numberToDigits (0 7 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(740 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(740 1000) math:remainder 740}]
        [ a r:Fact; r:gives {(740 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(740 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 740];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3159 a r:Inference;
    r:gives {
        741 :numberToDigits (0 7 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(741 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(741 1000) math:remainder 741}]
        [ a r:Fact; r:gives {(741 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(741 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 741];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 741];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3160 a r:Inference;
    r:gives {
        742 :numberToDigits (0 7 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(742 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(742 1000) math:remainder 742}]
        [ a r:Fact; r:gives {(742 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(742 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 742];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 742];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3161 a r:Inference;
    r:gives {
        743 :numberToDigits (0 7 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(743 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(743 1000) math:remainder 743}]
        [ a r:Fact; r:gives {(743 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(743 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 743];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 743];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3162 a r:Inference;
    r:gives {
        744 :numberToDigits (0 7 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(744 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(744 1000) math:remainder 744}]
        [ a r:Fact; r:gives {(744 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(744 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 744];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 744];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3163 a r:Inference;
    r:gives {
        745 :numberToDigits (0 7 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(745 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(745 1000) math:remainder 745}]
        [ a r:Fact; r:gives {(745 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(745 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 745];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 745];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3164 a r:Inference;
    r:gives {
        746 :numberToDigits (0 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(746 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(746 1000) math:remainder 746}]
        [ a r:Fact; r:gives {(746 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(746 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 746];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 746];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3165 a r:Inference;
    r:gives {
        747 :numberToDigits (0 7 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(747 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(747 1000) math:remainder 747}]
        [ a r:Fact; r:gives {(747 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(747 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 747];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 747];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3166 a r:Inference;
    r:gives {
        748 :numberToDigits (0 7 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(748 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(748 1000) math:remainder 748}]
        [ a r:Fact; r:gives {(748 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(748 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 748];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 748];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3167 a r:Inference;
    r:gives {
        749 :numberToDigits (0 7 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(749 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(749 1000) math:remainder 749}]
        [ a r:Fact; r:gives {(749 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(749 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 749];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 749];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3168 a r:Inference;
    r:gives {
        750 :numberToDigits (0 7 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(750 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(750 1000) math:remainder 750}]
        [ a r:Fact; r:gives {(750 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(750 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 750];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3169 a r:Inference;
    r:gives {
        751 :numberToDigits (0 7 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(751 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(751 1000) math:remainder 751}]
        [ a r:Fact; r:gives {(751 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(751 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 751];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 751];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3170 a r:Inference;
    r:gives {
        752 :numberToDigits (0 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(752 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(752 1000) math:remainder 752}]
        [ a r:Fact; r:gives {(752 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(752 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 752];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 752];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3171 a r:Inference;
    r:gives {
        753 :numberToDigits (0 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(753 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(753 1000) math:remainder 753}]
        [ a r:Fact; r:gives {(753 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(753 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 753];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 753];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3172 a r:Inference;
    r:gives {
        754 :numberToDigits (0 7 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(754 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(754 1000) math:remainder 754}]
        [ a r:Fact; r:gives {(754 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(754 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 754];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 754];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3173 a r:Inference;
    r:gives {
        755 :numberToDigits (0 7 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(755 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(755 1000) math:remainder 755}]
        [ a r:Fact; r:gives {(755 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(755 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 755];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 755];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3174 a r:Inference;
    r:gives {
        756 :numberToDigits (0 7 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(756 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(756 1000) math:remainder 756}]
        [ a r:Fact; r:gives {(756 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(756 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 756];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 756];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3175 a r:Inference;
    r:gives {
        757 :numberToDigits (0 7 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(757 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(757 1000) math:remainder 757}]
        [ a r:Fact; r:gives {(757 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(757 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 757];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 757];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3176 a r:Inference;
    r:gives {
        758 :numberToDigits (0 7 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(758 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(758 1000) math:remainder 758}]
        [ a r:Fact; r:gives {(758 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(758 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 758];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 758];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3177 a r:Inference;
    r:gives {
        759 :numberToDigits (0 7 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(759 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(759 1000) math:remainder 759}]
        [ a r:Fact; r:gives {(759 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(759 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 759];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 759];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3178 a r:Inference;
    r:gives {
        760 :numberToDigits (0 7 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(760 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(760 1000) math:remainder 760}]
        [ a r:Fact; r:gives {(760 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(760 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 760];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3179 a r:Inference;
    r:gives {
        761 :numberToDigits (0 7 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(761 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(761 1000) math:remainder 761}]
        [ a r:Fact; r:gives {(761 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(761 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 761];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 761];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3180 a r:Inference;
    r:gives {
        762 :numberToDigits (0 7 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(762 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(762 1000) math:remainder 762}]
        [ a r:Fact; r:gives {(762 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(762 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 762];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 762];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3181 a r:Inference;
    r:gives {
        763 :numberToDigits (0 7 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(763 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(763 1000) math:remainder 763}]
        [ a r:Fact; r:gives {(763 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(763 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 763];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 763];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3182 a r:Inference;
    r:gives {
        764 :numberToDigits (0 7 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(764 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(764 1000) math:remainder 764}]
        [ a r:Fact; r:gives {(764 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(764 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 764];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 764];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3183 a r:Inference;
    r:gives {
        765 :numberToDigits (0 7 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(765 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(765 1000) math:remainder 765}]
        [ a r:Fact; r:gives {(765 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(765 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 765];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 765];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3184 a r:Inference;
    r:gives {
        766 :numberToDigits (0 7 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(766 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(766 1000) math:remainder 766}]
        [ a r:Fact; r:gives {(766 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(766 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 766];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 766];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3185 a r:Inference;
    r:gives {
        767 :numberToDigits (0 7 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(767 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(767 1000) math:remainder 767}]
        [ a r:Fact; r:gives {(767 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(767 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 767];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 767];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3186 a r:Inference;
    r:gives {
        768 :numberToDigits (0 7 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(768 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(768 1000) math:remainder 768}]
        [ a r:Fact; r:gives {(768 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(768 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 768];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 768];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3187 a r:Inference;
    r:gives {
        769 :numberToDigits (0 7 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(769 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(769 1000) math:remainder 769}]
        [ a r:Fact; r:gives {(769 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(769 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 769];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 769];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3188 a r:Inference;
    r:gives {
        770 :numberToDigits (0 7 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(770 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(770 1000) math:remainder 770}]
        [ a r:Fact; r:gives {(770 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(770 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3189 a r:Inference;
    r:gives {
        771 :numberToDigits (0 7 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(771 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(771 1000) math:remainder 771}]
        [ a r:Fact; r:gives {(771 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(771 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 771];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 771];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3190 a r:Inference;
    r:gives {
        772 :numberToDigits (0 7 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(772 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(772 1000) math:remainder 772}]
        [ a r:Fact; r:gives {(772 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(772 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 772];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 772];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3191 a r:Inference;
    r:gives {
        773 :numberToDigits (0 7 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(773 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(773 1000) math:remainder 773}]
        [ a r:Fact; r:gives {(773 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(773 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 773];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 773];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3192 a r:Inference;
    r:gives {
        774 :numberToDigits (0 7 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(774 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(774 1000) math:remainder 774}]
        [ a r:Fact; r:gives {(774 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(774 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 774];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 774];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3193 a r:Inference;
    r:gives {
        775 :numberToDigits (0 7 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(775 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(775 1000) math:remainder 775}]
        [ a r:Fact; r:gives {(775 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(775 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 775];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 775];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3194 a r:Inference;
    r:gives {
        776 :numberToDigits (0 7 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(776 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(776 1000) math:remainder 776}]
        [ a r:Fact; r:gives {(776 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(776 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 776];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 776];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3195 a r:Inference;
    r:gives {
        777 :numberToDigits (0 7 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(777 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(777 1000) math:remainder 777}]
        [ a r:Fact; r:gives {(777 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(777 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 777];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 777];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3196 a r:Inference;
    r:gives {
        (0 7 7 7) :digitsToNumber 777 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 700 70 7) math:sum 777}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 777];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3439.

skolem:lemma3197 a r:Inference;
    r:gives {
        (7 7 7 0) :digitsToNumber 7770 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 1000) math:product 7000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(7000 700 70 0) math:sum 7770}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 7770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3198 a r:Inference;
    r:gives {
        778 :numberToDigits (0 7 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(778 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(778 1000) math:remainder 778}]
        [ a r:Fact; r:gives {(778 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(778 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 778];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 778];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3199 a r:Inference;
    r:gives {
        (0 7 7 8) :digitsToNumber 778 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 700 70 8) math:sum 778}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 778];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma3200 a r:Inference;
    r:gives {
        (8 7 7 0) :digitsToNumber 8770 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(8000 700 70 0) math:sum 8770}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3201 a r:Inference;
    r:gives {
        779 :numberToDigits (0 7 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(779 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(779 1000) math:remainder 779}]
        [ a r:Fact; r:gives {(779 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(779 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 779];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 779];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3202 a r:Inference;
    r:gives {
        (0 7 7 9) :digitsToNumber 779 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(0 700 70 9) math:sum 779}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 779];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3203 a r:Inference;
    r:gives {
        (9 7 7 0) :digitsToNumber 9770 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(9000 700 70 0) math:sum 9770}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9770];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3204 a r:Inference;
    r:gives {
        780 :numberToDigits (0 7 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(780 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(780 1000) math:remainder 780}]
        [ a r:Fact; r:gives {(780 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(780 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 780];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 780];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3205 a r:Inference;
    r:gives {
        781 :numberToDigits (0 7 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(781 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(781 1000) math:remainder 781}]
        [ a r:Fact; r:gives {(781 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(781 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 781];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 781];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3206 a r:Inference;
    r:gives {
        782 :numberToDigits (0 7 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(782 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(782 1000) math:remainder 782}]
        [ a r:Fact; r:gives {(782 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(782 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 782];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 782];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3207 a r:Inference;
    r:gives {
        783 :numberToDigits (0 7 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(783 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(783 1000) math:remainder 783}]
        [ a r:Fact; r:gives {(783 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(783 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 783];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 783];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3208 a r:Inference;
    r:gives {
        784 :numberToDigits (0 7 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(784 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(784 1000) math:remainder 784}]
        [ a r:Fact; r:gives {(784 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(784 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 784];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 784];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3209 a r:Inference;
    r:gives {
        785 :numberToDigits (0 7 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(785 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(785 1000) math:remainder 785}]
        [ a r:Fact; r:gives {(785 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(785 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 785];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 785];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3210 a r:Inference;
    r:gives {
        786 :numberToDigits (0 7 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(786 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(786 1000) math:remainder 786}]
        [ a r:Fact; r:gives {(786 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(786 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 786];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 786];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3211 a r:Inference;
    r:gives {
        787 :numberToDigits (0 7 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(787 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(787 1000) math:remainder 787}]
        [ a r:Fact; r:gives {(787 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(787 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 787];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 787];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3212 a r:Inference;
    r:gives {
        788 :numberToDigits (0 7 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(788 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(788 1000) math:remainder 788}]
        [ a r:Fact; r:gives {(788 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(788 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 788];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 788];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3213 a r:Inference;
    r:gives {
        (0 7 8 8) :digitsToNumber 788 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 700 80 8) math:sum 788}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 788];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma3214 a r:Inference;
    r:gives {
        (8 8 7 0) :digitsToNumber 8870 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(8000 800 70 0) math:sum 8870}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3215 a r:Inference;
    r:gives {
        789 :numberToDigits (0 7 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(789 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(789 1000) math:remainder 789}]
        [ a r:Fact; r:gives {(789 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(789 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3216 a r:Inference;
    r:gives {
        (0 7 8 9) :digitsToNumber 789 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 700 80 9) math:sum 789}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 789];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3217 a r:Inference;
    r:gives {
        (9 8 7 0) :digitsToNumber 9870 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(9000 800 70 0) math:sum 9870}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3218 a r:Inference;
    r:gives {
        790 :numberToDigits (0 7 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(790 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(790 1000) math:remainder 790}]
        [ a r:Fact; r:gives {(790 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(790 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 790];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 790];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3219 a r:Inference;
    r:gives {
        791 :numberToDigits (0 7 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(791 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(791 1000) math:remainder 791}]
        [ a r:Fact; r:gives {(791 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(791 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 791];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 791];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3220 a r:Inference;
    r:gives {
        792 :numberToDigits (0 7 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(792 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(792 1000) math:remainder 792}]
        [ a r:Fact; r:gives {(792 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(792 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 792];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 792];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3221 a r:Inference;
    r:gives {
        793 :numberToDigits (0 7 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(793 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(793 1000) math:remainder 793}]
        [ a r:Fact; r:gives {(793 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(793 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 793];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 793];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3222 a r:Inference;
    r:gives {
        794 :numberToDigits (0 7 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(794 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(794 1000) math:remainder 794}]
        [ a r:Fact; r:gives {(794 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(794 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 794];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 794];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3223 a r:Inference;
    r:gives {
        795 :numberToDigits (0 7 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(795 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(795 1000) math:remainder 795}]
        [ a r:Fact; r:gives {(795 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(795 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 795];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 795];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3224 a r:Inference;
    r:gives {
        796 :numberToDigits (0 7 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(796 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(796 1000) math:remainder 796}]
        [ a r:Fact; r:gives {(796 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(796 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 796];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 796];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3225 a r:Inference;
    r:gives {
        797 :numberToDigits (0 7 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(797 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(797 1000) math:remainder 797}]
        [ a r:Fact; r:gives {(797 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(797 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 797];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 797];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3226 a r:Inference;
    r:gives {
        798 :numberToDigits (0 7 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(798 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(798 1000) math:remainder 798}]
        [ a r:Fact; r:gives {(798 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(798 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 798];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 798];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3227 a r:Inference;
    r:gives {
        799 :numberToDigits (0 7 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(799 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(799 1000) math:remainder 799}]
        [ a r:Fact; r:gives {(799 100) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(799 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 799];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 799];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3228 a r:Inference;
    r:gives {
        (0 7 9 9) :digitsToNumber 799 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(7 100) math:product 700}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 700 90 9) math:sum 799}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 700];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 799];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3229 a r:Inference;
    r:gives {
        (9 9 7 0) :digitsToNumber 9970 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(7 10) math:product 70}]
        [ a r:Fact; r:gives {(9000 900 70 0) math:sum 9970}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9970];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3230 a r:Inference;
    r:gives {
        800 :numberToDigits (0 8 0 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(800 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(800 1000) math:remainder 800}]
        [ a r:Fact; r:gives {(800 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(800 100) math:remainder 0}]
        [ a r:Fact; r:gives {(0 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(0 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3231 a r:Inference;
    r:gives {
        801 :numberToDigits (0 8 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(801 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(801 1000) math:remainder 801}]
        [ a r:Fact; r:gives {(801 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(801 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 801];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 801];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3232 a r:Inference;
    r:gives {
        802 :numberToDigits (0 8 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(802 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(802 1000) math:remainder 802}]
        [ a r:Fact; r:gives {(802 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(802 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 802];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 802];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3233 a r:Inference;
    r:gives {
        803 :numberToDigits (0 8 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(803 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(803 1000) math:remainder 803}]
        [ a r:Fact; r:gives {(803 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(803 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 803];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 803];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3234 a r:Inference;
    r:gives {
        804 :numberToDigits (0 8 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(804 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(804 1000) math:remainder 804}]
        [ a r:Fact; r:gives {(804 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(804 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 804];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 804];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3235 a r:Inference;
    r:gives {
        805 :numberToDigits (0 8 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(805 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(805 1000) math:remainder 805}]
        [ a r:Fact; r:gives {(805 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(805 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 805];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 805];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3236 a r:Inference;
    r:gives {
        806 :numberToDigits (0 8 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(806 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(806 1000) math:remainder 806}]
        [ a r:Fact; r:gives {(806 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(806 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 806];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 806];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3237 a r:Inference;
    r:gives {
        807 :numberToDigits (0 8 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(807 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(807 1000) math:remainder 807}]
        [ a r:Fact; r:gives {(807 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(807 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 807];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 807];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3238 a r:Inference;
    r:gives {
        808 :numberToDigits (0 8 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(808 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(808 1000) math:remainder 808}]
        [ a r:Fact; r:gives {(808 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(808 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 808];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 808];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3239 a r:Inference;
    r:gives {
        809 :numberToDigits (0 8 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(809 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(809 1000) math:remainder 809}]
        [ a r:Fact; r:gives {(809 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(809 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 809];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 809];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3240 a r:Inference;
    r:gives {
        810 :numberToDigits (0 8 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(810 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(810 1000) math:remainder 810}]
        [ a r:Fact; r:gives {(810 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(810 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 810];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3241 a r:Inference;
    r:gives {
        811 :numberToDigits (0 8 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(811 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(811 1000) math:remainder 811}]
        [ a r:Fact; r:gives {(811 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(811 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 811];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 811];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3242 a r:Inference;
    r:gives {
        812 :numberToDigits (0 8 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(812 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(812 1000) math:remainder 812}]
        [ a r:Fact; r:gives {(812 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(812 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 812];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 812];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3243 a r:Inference;
    r:gives {
        813 :numberToDigits (0 8 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(813 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(813 1000) math:remainder 813}]
        [ a r:Fact; r:gives {(813 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(813 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 813];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 813];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3244 a r:Inference;
    r:gives {
        814 :numberToDigits (0 8 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(814 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(814 1000) math:remainder 814}]
        [ a r:Fact; r:gives {(814 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(814 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 814];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 814];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3245 a r:Inference;
    r:gives {
        815 :numberToDigits (0 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(815 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(815 1000) math:remainder 815}]
        [ a r:Fact; r:gives {(815 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(815 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 815];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 815];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3246 a r:Inference;
    r:gives {
        816 :numberToDigits (0 8 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(816 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(816 1000) math:remainder 816}]
        [ a r:Fact; r:gives {(816 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(816 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 816];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 816];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3247 a r:Inference;
    r:gives {
        817 :numberToDigits (0 8 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(817 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(817 1000) math:remainder 817}]
        [ a r:Fact; r:gives {(817 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(817 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 817];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 817];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3248 a r:Inference;
    r:gives {
        818 :numberToDigits (0 8 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(818 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(818 1000) math:remainder 818}]
        [ a r:Fact; r:gives {(818 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(818 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 818];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 818];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3249 a r:Inference;
    r:gives {
        819 :numberToDigits (0 8 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(819 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(819 1000) math:remainder 819}]
        [ a r:Fact; r:gives {(819 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(819 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 819];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 819];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3250 a r:Inference;
    r:gives {
        820 :numberToDigits (0 8 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(820 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(820 1000) math:remainder 820}]
        [ a r:Fact; r:gives {(820 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(820 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 820];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3251 a r:Inference;
    r:gives {
        821 :numberToDigits (0 8 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(821 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(821 1000) math:remainder 821}]
        [ a r:Fact; r:gives {(821 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(821 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 821];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 821];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3252 a r:Inference;
    r:gives {
        822 :numberToDigits (0 8 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(822 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(822 1000) math:remainder 822}]
        [ a r:Fact; r:gives {(822 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(822 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 822];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 822];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3253 a r:Inference;
    r:gives {
        823 :numberToDigits (0 8 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(823 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(823 1000) math:remainder 823}]
        [ a r:Fact; r:gives {(823 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(823 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 823];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 823];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3254 a r:Inference;
    r:gives {
        824 :numberToDigits (0 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(824 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(824 1000) math:remainder 824}]
        [ a r:Fact; r:gives {(824 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(824 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 824];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 824];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3255 a r:Inference;
    r:gives {
        825 :numberToDigits (0 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(825 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(825 1000) math:remainder 825}]
        [ a r:Fact; r:gives {(825 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(825 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 825];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 825];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3256 a r:Inference;
    r:gives {
        826 :numberToDigits (0 8 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(826 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(826 1000) math:remainder 826}]
        [ a r:Fact; r:gives {(826 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(826 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 826];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 826];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3257 a r:Inference;
    r:gives {
        827 :numberToDigits (0 8 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(827 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(827 1000) math:remainder 827}]
        [ a r:Fact; r:gives {(827 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(827 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 827];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 827];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3258 a r:Inference;
    r:gives {
        828 :numberToDigits (0 8 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(828 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(828 1000) math:remainder 828}]
        [ a r:Fact; r:gives {(828 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(828 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 828];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 828];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3259 a r:Inference;
    r:gives {
        829 :numberToDigits (0 8 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(829 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(829 1000) math:remainder 829}]
        [ a r:Fact; r:gives {(829 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(829 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 829];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 829];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3260 a r:Inference;
    r:gives {
        830 :numberToDigits (0 8 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(830 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(830 1000) math:remainder 830}]
        [ a r:Fact; r:gives {(830 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(830 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 830];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3261 a r:Inference;
    r:gives {
        831 :numberToDigits (0 8 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(831 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(831 1000) math:remainder 831}]
        [ a r:Fact; r:gives {(831 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(831 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 831];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 831];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3262 a r:Inference;
    r:gives {
        832 :numberToDigits (0 8 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(832 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(832 1000) math:remainder 832}]
        [ a r:Fact; r:gives {(832 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(832 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 832];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 832];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3263 a r:Inference;
    r:gives {
        833 :numberToDigits (0 8 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(833 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(833 1000) math:remainder 833}]
        [ a r:Fact; r:gives {(833 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(833 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 833];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 833];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3264 a r:Inference;
    r:gives {
        834 :numberToDigits (0 8 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(834 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(834 1000) math:remainder 834}]
        [ a r:Fact; r:gives {(834 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(834 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 834];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 834];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3265 a r:Inference;
    r:gives {
        835 :numberToDigits (0 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(835 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(835 1000) math:remainder 835}]
        [ a r:Fact; r:gives {(835 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(835 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 835];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 835];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3266 a r:Inference;
    r:gives {
        836 :numberToDigits (0 8 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(836 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(836 1000) math:remainder 836}]
        [ a r:Fact; r:gives {(836 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(836 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 836];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 836];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3267 a r:Inference;
    r:gives {
        837 :numberToDigits (0 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(837 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(837 1000) math:remainder 837}]
        [ a r:Fact; r:gives {(837 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(837 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 837];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 837];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3268 a r:Inference;
    r:gives {
        838 :numberToDigits (0 8 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(838 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(838 1000) math:remainder 838}]
        [ a r:Fact; r:gives {(838 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(838 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 838];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 838];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3269 a r:Inference;
    r:gives {
        839 :numberToDigits (0 8 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(839 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(839 1000) math:remainder 839}]
        [ a r:Fact; r:gives {(839 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(839 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 839];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 839];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3270 a r:Inference;
    r:gives {
        840 :numberToDigits (0 8 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(840 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(840 1000) math:remainder 840}]
        [ a r:Fact; r:gives {(840 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(840 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 840];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3271 a r:Inference;
    r:gives {
        841 :numberToDigits (0 8 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(841 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(841 1000) math:remainder 841}]
        [ a r:Fact; r:gives {(841 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(841 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 841];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 841];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3272 a r:Inference;
    r:gives {
        842 :numberToDigits (0 8 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(842 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(842 1000) math:remainder 842}]
        [ a r:Fact; r:gives {(842 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(842 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 842];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 842];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3273 a r:Inference;
    r:gives {
        843 :numberToDigits (0 8 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(843 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(843 1000) math:remainder 843}]
        [ a r:Fact; r:gives {(843 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(843 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 843];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 843];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3274 a r:Inference;
    r:gives {
        844 :numberToDigits (0 8 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(844 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(844 1000) math:remainder 844}]
        [ a r:Fact; r:gives {(844 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(844 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 844];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 844];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3275 a r:Inference;
    r:gives {
        845 :numberToDigits (0 8 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(845 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(845 1000) math:remainder 845}]
        [ a r:Fact; r:gives {(845 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(845 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 845];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 845];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3276 a r:Inference;
    r:gives {
        846 :numberToDigits (0 8 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(846 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(846 1000) math:remainder 846}]
        [ a r:Fact; r:gives {(846 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(846 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 846];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 846];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3277 a r:Inference;
    r:gives {
        847 :numberToDigits (0 8 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(847 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(847 1000) math:remainder 847}]
        [ a r:Fact; r:gives {(847 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(847 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 847];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 847];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3278 a r:Inference;
    r:gives {
        848 :numberToDigits (0 8 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(848 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(848 1000) math:remainder 848}]
        [ a r:Fact; r:gives {(848 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(848 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 848];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 848];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3279 a r:Inference;
    r:gives {
        849 :numberToDigits (0 8 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(849 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(849 1000) math:remainder 849}]
        [ a r:Fact; r:gives {(849 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(849 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 849];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 849];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3280 a r:Inference;
    r:gives {
        850 :numberToDigits (0 8 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(850 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(850 1000) math:remainder 850}]
        [ a r:Fact; r:gives {(850 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(850 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 850];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3281 a r:Inference;
    r:gives {
        851 :numberToDigits (0 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(851 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(851 1000) math:remainder 851}]
        [ a r:Fact; r:gives {(851 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(851 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 851];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 851];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3282 a r:Inference;
    r:gives {
        852 :numberToDigits (0 8 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(852 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(852 1000) math:remainder 852}]
        [ a r:Fact; r:gives {(852 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(852 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 852];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 852];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3283 a r:Inference;
    r:gives {
        853 :numberToDigits (0 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(853 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(853 1000) math:remainder 853}]
        [ a r:Fact; r:gives {(853 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(853 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 853];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 853];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3284 a r:Inference;
    r:gives {
        854 :numberToDigits (0 8 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(854 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(854 1000) math:remainder 854}]
        [ a r:Fact; r:gives {(854 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(854 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 854];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 854];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3285 a r:Inference;
    r:gives {
        855 :numberToDigits (0 8 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(855 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(855 1000) math:remainder 855}]
        [ a r:Fact; r:gives {(855 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(855 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 855];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 855];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3286 a r:Inference;
    r:gives {
        856 :numberToDigits (0 8 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(856 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(856 1000) math:remainder 856}]
        [ a r:Fact; r:gives {(856 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(856 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 856];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 856];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3287 a r:Inference;
    r:gives {
        857 :numberToDigits (0 8 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(857 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(857 1000) math:remainder 857}]
        [ a r:Fact; r:gives {(857 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(857 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 857];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 857];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3288 a r:Inference;
    r:gives {
        858 :numberToDigits (0 8 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(858 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(858 1000) math:remainder 858}]
        [ a r:Fact; r:gives {(858 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(858 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 858];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 858];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3289 a r:Inference;
    r:gives {
        859 :numberToDigits (0 8 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(859 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(859 1000) math:remainder 859}]
        [ a r:Fact; r:gives {(859 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(859 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 859];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 859];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3290 a r:Inference;
    r:gives {
        860 :numberToDigits (0 8 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(860 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(860 1000) math:remainder 860}]
        [ a r:Fact; r:gives {(860 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(860 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 860];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3291 a r:Inference;
    r:gives {
        861 :numberToDigits (0 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(861 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(861 1000) math:remainder 861}]
        [ a r:Fact; r:gives {(861 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(861 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 861];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 861];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3292 a r:Inference;
    r:gives {
        862 :numberToDigits (0 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(862 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(862 1000) math:remainder 862}]
        [ a r:Fact; r:gives {(862 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(862 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 862];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 862];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3293 a r:Inference;
    r:gives {
        863 :numberToDigits (0 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(863 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(863 1000) math:remainder 863}]
        [ a r:Fact; r:gives {(863 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(863 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 863];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 863];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3294 a r:Inference;
    r:gives {
        864 :numberToDigits (0 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(864 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(864 1000) math:remainder 864}]
        [ a r:Fact; r:gives {(864 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(864 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 864];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 864];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3295 a r:Inference;
    r:gives {
        865 :numberToDigits (0 8 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(865 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(865 1000) math:remainder 865}]
        [ a r:Fact; r:gives {(865 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(865 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 865];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 865];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3296 a r:Inference;
    r:gives {
        866 :numberToDigits (0 8 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(866 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(866 1000) math:remainder 866}]
        [ a r:Fact; r:gives {(866 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(866 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 866];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 866];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3297 a r:Inference;
    r:gives {
        867 :numberToDigits (0 8 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(867 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(867 1000) math:remainder 867}]
        [ a r:Fact; r:gives {(867 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(867 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 867];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 867];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3298 a r:Inference;
    r:gives {
        868 :numberToDigits (0 8 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(868 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(868 1000) math:remainder 868}]
        [ a r:Fact; r:gives {(868 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(868 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 868];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 868];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3299 a r:Inference;
    r:gives {
        869 :numberToDigits (0 8 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(869 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(869 1000) math:remainder 869}]
        [ a r:Fact; r:gives {(869 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(869 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 869];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 869];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3300 a r:Inference;
    r:gives {
        870 :numberToDigits (0 8 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(870 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(870 1000) math:remainder 870}]
        [ a r:Fact; r:gives {(870 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(870 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 870];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3301 a r:Inference;
    r:gives {
        871 :numberToDigits (0 8 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(871 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(871 1000) math:remainder 871}]
        [ a r:Fact; r:gives {(871 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(871 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 871];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 871];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3302 a r:Inference;
    r:gives {
        872 :numberToDigits (0 8 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(872 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(872 1000) math:remainder 872}]
        [ a r:Fact; r:gives {(872 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(872 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 872];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 872];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3303 a r:Inference;
    r:gives {
        873 :numberToDigits (0 8 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(873 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(873 1000) math:remainder 873}]
        [ a r:Fact; r:gives {(873 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(873 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 873];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 873];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3304 a r:Inference;
    r:gives {
        874 :numberToDigits (0 8 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(874 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(874 1000) math:remainder 874}]
        [ a r:Fact; r:gives {(874 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(874 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 874];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 874];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3305 a r:Inference;
    r:gives {
        875 :numberToDigits (0 8 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(875 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(875 1000) math:remainder 875}]
        [ a r:Fact; r:gives {(875 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(875 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 875];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 875];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3306 a r:Inference;
    r:gives {
        876 :numberToDigits (0 8 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(876 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(876 1000) math:remainder 876}]
        [ a r:Fact; r:gives {(876 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(876 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 876];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 876];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3307 a r:Inference;
    r:gives {
        877 :numberToDigits (0 8 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(877 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(877 1000) math:remainder 877}]
        [ a r:Fact; r:gives {(877 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(877 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 877];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 877];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3308 a r:Inference;
    r:gives {
        878 :numberToDigits (0 8 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(878 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(878 1000) math:remainder 878}]
        [ a r:Fact; r:gives {(878 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(878 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 878];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 878];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3309 a r:Inference;
    r:gives {
        879 :numberToDigits (0 8 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(879 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(879 1000) math:remainder 879}]
        [ a r:Fact; r:gives {(879 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(879 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 879];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 879];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3310 a r:Inference;
    r:gives {
        880 :numberToDigits (0 8 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(880 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(880 1000) math:remainder 880}]
        [ a r:Fact; r:gives {(880 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(880 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3311 a r:Inference;
    r:gives {
        881 :numberToDigits (0 8 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(881 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(881 1000) math:remainder 881}]
        [ a r:Fact; r:gives {(881 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(881 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 881];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 881];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3312 a r:Inference;
    r:gives {
        882 :numberToDigits (0 8 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(882 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(882 1000) math:remainder 882}]
        [ a r:Fact; r:gives {(882 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(882 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 882];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 882];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3313 a r:Inference;
    r:gives {
        883 :numberToDigits (0 8 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(883 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(883 1000) math:remainder 883}]
        [ a r:Fact; r:gives {(883 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(883 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 883];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 883];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3314 a r:Inference;
    r:gives {
        884 :numberToDigits (0 8 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(884 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(884 1000) math:remainder 884}]
        [ a r:Fact; r:gives {(884 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(884 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 884];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 884];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3315 a r:Inference;
    r:gives {
        885 :numberToDigits (0 8 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(885 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(885 1000) math:remainder 885}]
        [ a r:Fact; r:gives {(885 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(885 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 885];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 885];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3316 a r:Inference;
    r:gives {
        886 :numberToDigits (0 8 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(886 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(886 1000) math:remainder 886}]
        [ a r:Fact; r:gives {(886 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(886 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 886];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 886];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3317 a r:Inference;
    r:gives {
        887 :numberToDigits (0 8 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(887 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(887 1000) math:remainder 887}]
        [ a r:Fact; r:gives {(887 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(887 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 887];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 887];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3318 a r:Inference;
    r:gives {
        888 :numberToDigits (0 8 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(888 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(888 1000) math:remainder 888}]
        [ a r:Fact; r:gives {(888 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(888 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 888];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 888];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3319 a r:Inference;
    r:gives {
        (0 8 8 8) :digitsToNumber 888 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 800 80 8) math:sum 888}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 888];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3439.

skolem:lemma3320 a r:Inference;
    r:gives {
        (8 8 8 0) :digitsToNumber 8880 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(8 1000) math:product 8000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(8000 800 80 0) math:sum 8880}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 8880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3321 a r:Inference;
    r:gives {
        889 :numberToDigits (0 8 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(889 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(889 1000) math:remainder 889}]
        [ a r:Fact; r:gives {(889 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(889 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 889];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 889];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3322 a r:Inference;
    r:gives {
        (0 8 8 9) :digitsToNumber 889 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(0 800 80 9) math:sum 889}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 889];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3323 a r:Inference;
    r:gives {
        (9 8 8 0) :digitsToNumber 9880 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(9000 800 80 0) math:sum 9880}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9880];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3324 a r:Inference;
    r:gives {
        890 :numberToDigits (0 8 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(890 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(890 1000) math:remainder 890}]
        [ a r:Fact; r:gives {(890 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(890 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 890];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 890];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3325 a r:Inference;
    r:gives {
        891 :numberToDigits (0 8 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(891 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(891 1000) math:remainder 891}]
        [ a r:Fact; r:gives {(891 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(891 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 891];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 891];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3326 a r:Inference;
    r:gives {
        892 :numberToDigits (0 8 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(892 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(892 1000) math:remainder 892}]
        [ a r:Fact; r:gives {(892 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(892 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 892];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 892];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3327 a r:Inference;
    r:gives {
        893 :numberToDigits (0 8 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(893 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(893 1000) math:remainder 893}]
        [ a r:Fact; r:gives {(893 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(893 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 893];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 893];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3328 a r:Inference;
    r:gives {
        894 :numberToDigits (0 8 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(894 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(894 1000) math:remainder 894}]
        [ a r:Fact; r:gives {(894 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(894 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 894];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 894];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3329 a r:Inference;
    r:gives {
        895 :numberToDigits (0 8 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(895 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(895 1000) math:remainder 895}]
        [ a r:Fact; r:gives {(895 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(895 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 895];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 895];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3330 a r:Inference;
    r:gives {
        896 :numberToDigits (0 8 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(896 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(896 1000) math:remainder 896}]
        [ a r:Fact; r:gives {(896 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(896 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 896];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 896];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3331 a r:Inference;
    r:gives {
        897 :numberToDigits (0 8 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(897 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(897 1000) math:remainder 897}]
        [ a r:Fact; r:gives {(897 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(897 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 897];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 897];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3332 a r:Inference;
    r:gives {
        898 :numberToDigits (0 8 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(898 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(898 1000) math:remainder 898}]
        [ a r:Fact; r:gives {(898 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(898 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 898];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 898];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3333 a r:Inference;
    r:gives {
        899 :numberToDigits (0 8 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(899 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(899 1000) math:remainder 899}]
        [ a r:Fact; r:gives {(899 100) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(899 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 899];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 899];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3334 a r:Inference;
    r:gives {
        (0 8 9 9) :digitsToNumber 899 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(8 100) math:product 800}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 800 90 9) math:sum 899}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 800];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 899];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3335 a r:Inference;
    r:gives {
        (9 9 8 0) :digitsToNumber 9980 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(8 10) math:product 80}]
        [ a r:Fact; r:gives {(9000 900 80 0) math:sum 9980}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9980];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3336 a r:Inference;
    r:gives {
        900 :numberToDigits (0 9 0 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(900 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(900 1000) math:remainder 900}]
        [ a r:Fact; r:gives {(900 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(900 100) math:remainder 0}]
        [ a r:Fact; r:gives {(0 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(0 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3337 a r:Inference;
    r:gives {
        901 :numberToDigits (0 9 0 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(901 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(901 1000) math:remainder 901}]
        [ a r:Fact; r:gives {(901 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(901 100) math:remainder 1}]
        [ a r:Fact; r:gives {(1 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(1 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 901];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 901];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3338 a r:Inference;
    r:gives {
        902 :numberToDigits (0 9 0 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(902 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(902 1000) math:remainder 902}]
        [ a r:Fact; r:gives {(902 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(902 100) math:remainder 2}]
        [ a r:Fact; r:gives {(2 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(2 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 902];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 902];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3339 a r:Inference;
    r:gives {
        903 :numberToDigits (0 9 0 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(903 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(903 1000) math:remainder 903}]
        [ a r:Fact; r:gives {(903 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(903 100) math:remainder 3}]
        [ a r:Fact; r:gives {(3 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(3 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 903];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 903];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3340 a r:Inference;
    r:gives {
        904 :numberToDigits (0 9 0 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(904 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(904 1000) math:remainder 904}]
        [ a r:Fact; r:gives {(904 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(904 100) math:remainder 4}]
        [ a r:Fact; r:gives {(4 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(4 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 904];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 904];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3341 a r:Inference;
    r:gives {
        905 :numberToDigits (0 9 0 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(905 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(905 1000) math:remainder 905}]
        [ a r:Fact; r:gives {(905 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(905 100) math:remainder 5}]
        [ a r:Fact; r:gives {(5 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(5 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 905];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 905];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3342 a r:Inference;
    r:gives {
        906 :numberToDigits (0 9 0 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(906 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(906 1000) math:remainder 906}]
        [ a r:Fact; r:gives {(906 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(906 100) math:remainder 6}]
        [ a r:Fact; r:gives {(6 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(6 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 906];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 906];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3343 a r:Inference;
    r:gives {
        907 :numberToDigits (0 9 0 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(907 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(907 1000) math:remainder 907}]
        [ a r:Fact; r:gives {(907 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(907 100) math:remainder 7}]
        [ a r:Fact; r:gives {(7 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(7 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 907];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 907];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3344 a r:Inference;
    r:gives {
        908 :numberToDigits (0 9 0 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(908 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(908 1000) math:remainder 908}]
        [ a r:Fact; r:gives {(908 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(908 100) math:remainder 8}]
        [ a r:Fact; r:gives {(8 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(8 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 908];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 908];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3345 a r:Inference;
    r:gives {
        909 :numberToDigits (0 9 0 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(909 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(909 1000) math:remainder 909}]
        [ a r:Fact; r:gives {(909 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(909 100) math:remainder 9}]
        [ a r:Fact; r:gives {(9 10) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(9 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 909];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 909];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3346 a r:Inference;
    r:gives {
        910 :numberToDigits (0 9 1 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(910 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(910 1000) math:remainder 910}]
        [ a r:Fact; r:gives {(910 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(910 100) math:remainder 10}]
        [ a r:Fact; r:gives {(10 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(10 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 910];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 910];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 10];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3347 a r:Inference;
    r:gives {
        911 :numberToDigits (0 9 1 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(911 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(911 1000) math:remainder 911}]
        [ a r:Fact; r:gives {(911 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(911 100) math:remainder 11}]
        [ a r:Fact; r:gives {(11 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(11 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 911];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 911];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 11];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3348 a r:Inference;
    r:gives {
        912 :numberToDigits (0 9 1 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(912 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(912 1000) math:remainder 912}]
        [ a r:Fact; r:gives {(912 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(912 100) math:remainder 12}]
        [ a r:Fact; r:gives {(12 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(12 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 912];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 912];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 12];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3349 a r:Inference;
    r:gives {
        913 :numberToDigits (0 9 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(913 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(913 1000) math:remainder 913}]
        [ a r:Fact; r:gives {(913 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(913 100) math:remainder 13}]
        [ a r:Fact; r:gives {(13 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(13 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 913];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 913];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 13];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3350 a r:Inference;
    r:gives {
        914 :numberToDigits (0 9 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(914 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(914 1000) math:remainder 914}]
        [ a r:Fact; r:gives {(914 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(914 100) math:remainder 14}]
        [ a r:Fact; r:gives {(14 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(14 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 914];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 914];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 14];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3351 a r:Inference;
    r:gives {
        915 :numberToDigits (0 9 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(915 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(915 1000) math:remainder 915}]
        [ a r:Fact; r:gives {(915 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(915 100) math:remainder 15}]
        [ a r:Fact; r:gives {(15 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(15 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 915];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 915];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 15];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3352 a r:Inference;
    r:gives {
        916 :numberToDigits (0 9 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(916 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(916 1000) math:remainder 916}]
        [ a r:Fact; r:gives {(916 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(916 100) math:remainder 16}]
        [ a r:Fact; r:gives {(16 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(16 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 916];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 916];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 16];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3353 a r:Inference;
    r:gives {
        917 :numberToDigits (0 9 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(917 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(917 1000) math:remainder 917}]
        [ a r:Fact; r:gives {(917 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(917 100) math:remainder 17}]
        [ a r:Fact; r:gives {(17 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(17 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 917];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 917];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 17];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3354 a r:Inference;
    r:gives {
        918 :numberToDigits (0 9 1 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(918 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(918 1000) math:remainder 918}]
        [ a r:Fact; r:gives {(918 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(918 100) math:remainder 18}]
        [ a r:Fact; r:gives {(18 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(18 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 918];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 918];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 18];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3355 a r:Inference;
    r:gives {
        919 :numberToDigits (0 9 1 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(919 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(919 1000) math:remainder 919}]
        [ a r:Fact; r:gives {(919 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(919 100) math:remainder 19}]
        [ a r:Fact; r:gives {(19 10) math:integerQuotient 1}]
        [ a r:Fact; r:gives {(19 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 919];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 919];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 19];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3356 a r:Inference;
    r:gives {
        920 :numberToDigits (0 9 2 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(920 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(920 1000) math:remainder 920}]
        [ a r:Fact; r:gives {(920 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(920 100) math:remainder 20}]
        [ a r:Fact; r:gives {(20 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(20 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 920];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 920];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 20];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3357 a r:Inference;
    r:gives {
        921 :numberToDigits (0 9 2 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(921 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(921 1000) math:remainder 921}]
        [ a r:Fact; r:gives {(921 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(921 100) math:remainder 21}]
        [ a r:Fact; r:gives {(21 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(21 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 921];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 921];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 21];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3358 a r:Inference;
    r:gives {
        922 :numberToDigits (0 9 2 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(922 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(922 1000) math:remainder 922}]
        [ a r:Fact; r:gives {(922 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(922 100) math:remainder 22}]
        [ a r:Fact; r:gives {(22 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(22 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 922];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 922];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 22];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3359 a r:Inference;
    r:gives {
        923 :numberToDigits (0 9 2 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(923 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(923 1000) math:remainder 923}]
        [ a r:Fact; r:gives {(923 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(923 100) math:remainder 23}]
        [ a r:Fact; r:gives {(23 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(23 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 923];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 923];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 23];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3360 a r:Inference;
    r:gives {
        924 :numberToDigits (0 9 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(924 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(924 1000) math:remainder 924}]
        [ a r:Fact; r:gives {(924 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(924 100) math:remainder 24}]
        [ a r:Fact; r:gives {(24 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(24 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 924];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 924];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 24];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3361 a r:Inference;
    r:gives {
        925 :numberToDigits (0 9 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(925 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(925 1000) math:remainder 925}]
        [ a r:Fact; r:gives {(925 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(925 100) math:remainder 25}]
        [ a r:Fact; r:gives {(25 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(25 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 925];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 925];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 25];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3362 a r:Inference;
    r:gives {
        926 :numberToDigits (0 9 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(926 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(926 1000) math:remainder 926}]
        [ a r:Fact; r:gives {(926 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(926 100) math:remainder 26}]
        [ a r:Fact; r:gives {(26 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(26 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 926];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 926];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 26];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3363 a r:Inference;
    r:gives {
        927 :numberToDigits (0 9 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(927 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(927 1000) math:remainder 927}]
        [ a r:Fact; r:gives {(927 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(927 100) math:remainder 27}]
        [ a r:Fact; r:gives {(27 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(27 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 927];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 927];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 27];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3364 a r:Inference;
    r:gives {
        928 :numberToDigits (0 9 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(928 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(928 1000) math:remainder 928}]
        [ a r:Fact; r:gives {(928 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(928 100) math:remainder 28}]
        [ a r:Fact; r:gives {(28 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(28 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 928];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 928];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 28];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3365 a r:Inference;
    r:gives {
        929 :numberToDigits (0 9 2 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(929 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(929 1000) math:remainder 929}]
        [ a r:Fact; r:gives {(929 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(929 100) math:remainder 29}]
        [ a r:Fact; r:gives {(29 10) math:integerQuotient 2}]
        [ a r:Fact; r:gives {(29 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 929];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 929];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 29];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3366 a r:Inference;
    r:gives {
        930 :numberToDigits (0 9 3 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(930 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(930 1000) math:remainder 930}]
        [ a r:Fact; r:gives {(930 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(930 100) math:remainder 30}]
        [ a r:Fact; r:gives {(30 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(30 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 930];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 930];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 30];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3367 a r:Inference;
    r:gives {
        931 :numberToDigits (0 9 3 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(931 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(931 1000) math:remainder 931}]
        [ a r:Fact; r:gives {(931 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(931 100) math:remainder 31}]
        [ a r:Fact; r:gives {(31 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(31 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 931];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 931];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 31];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3368 a r:Inference;
    r:gives {
        932 :numberToDigits (0 9 3 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(932 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(932 1000) math:remainder 932}]
        [ a r:Fact; r:gives {(932 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(932 100) math:remainder 32}]
        [ a r:Fact; r:gives {(32 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(32 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 932];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 932];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 32];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3369 a r:Inference;
    r:gives {
        933 :numberToDigits (0 9 3 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(933 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(933 1000) math:remainder 933}]
        [ a r:Fact; r:gives {(933 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(933 100) math:remainder 33}]
        [ a r:Fact; r:gives {(33 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(33 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 933];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 933];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 33];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3370 a r:Inference;
    r:gives {
        934 :numberToDigits (0 9 3 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(934 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(934 1000) math:remainder 934}]
        [ a r:Fact; r:gives {(934 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(934 100) math:remainder 34}]
        [ a r:Fact; r:gives {(34 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(34 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 934];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 934];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 34];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3371 a r:Inference;
    r:gives {
        935 :numberToDigits (0 9 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(935 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(935 1000) math:remainder 935}]
        [ a r:Fact; r:gives {(935 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(935 100) math:remainder 35}]
        [ a r:Fact; r:gives {(35 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(35 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 935];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 935];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 35];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3372 a r:Inference;
    r:gives {
        936 :numberToDigits (0 9 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(936 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(936 1000) math:remainder 936}]
        [ a r:Fact; r:gives {(936 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(936 100) math:remainder 36}]
        [ a r:Fact; r:gives {(36 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(36 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 936];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 936];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 36];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3373 a r:Inference;
    r:gives {
        937 :numberToDigits (0 9 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(937 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(937 1000) math:remainder 937}]
        [ a r:Fact; r:gives {(937 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(937 100) math:remainder 37}]
        [ a r:Fact; r:gives {(37 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(37 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 937];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 937];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 37];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3374 a r:Inference;
    r:gives {
        938 :numberToDigits (0 9 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(938 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(938 1000) math:remainder 938}]
        [ a r:Fact; r:gives {(938 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(938 100) math:remainder 38}]
        [ a r:Fact; r:gives {(38 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(38 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 938];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 938];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 38];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3375 a r:Inference;
    r:gives {
        939 :numberToDigits (0 9 3 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(939 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(939 1000) math:remainder 939}]
        [ a r:Fact; r:gives {(939 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(939 100) math:remainder 39}]
        [ a r:Fact; r:gives {(39 10) math:integerQuotient 3}]
        [ a r:Fact; r:gives {(39 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 939];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 939];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 39];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3376 a r:Inference;
    r:gives {
        940 :numberToDigits (0 9 4 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(940 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(940 1000) math:remainder 940}]
        [ a r:Fact; r:gives {(940 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(940 100) math:remainder 40}]
        [ a r:Fact; r:gives {(40 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(40 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 940];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 940];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 40];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3377 a r:Inference;
    r:gives {
        941 :numberToDigits (0 9 4 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(941 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(941 1000) math:remainder 941}]
        [ a r:Fact; r:gives {(941 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(941 100) math:remainder 41}]
        [ a r:Fact; r:gives {(41 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(41 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 941];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 941];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 41];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3378 a r:Inference;
    r:gives {
        942 :numberToDigits (0 9 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(942 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(942 1000) math:remainder 942}]
        [ a r:Fact; r:gives {(942 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(942 100) math:remainder 42}]
        [ a r:Fact; r:gives {(42 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(42 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 942];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 942];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 42];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3379 a r:Inference;
    r:gives {
        943 :numberToDigits (0 9 4 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(943 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(943 1000) math:remainder 943}]
        [ a r:Fact; r:gives {(943 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(943 100) math:remainder 43}]
        [ a r:Fact; r:gives {(43 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(43 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 943];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 943];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 43];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3380 a r:Inference;
    r:gives {
        944 :numberToDigits (0 9 4 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(944 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(944 1000) math:remainder 944}]
        [ a r:Fact; r:gives {(944 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(944 100) math:remainder 44}]
        [ a r:Fact; r:gives {(44 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(44 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 944];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 944];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 44];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3381 a r:Inference;
    r:gives {
        945 :numberToDigits (0 9 4 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(945 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(945 1000) math:remainder 945}]
        [ a r:Fact; r:gives {(945 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(945 100) math:remainder 45}]
        [ a r:Fact; r:gives {(45 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(45 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 945];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 945];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 45];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3382 a r:Inference;
    r:gives {
        946 :numberToDigits (0 9 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(946 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(946 1000) math:remainder 946}]
        [ a r:Fact; r:gives {(946 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(946 100) math:remainder 46}]
        [ a r:Fact; r:gives {(46 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(46 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 946];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 946];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 46];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3383 a r:Inference;
    r:gives {
        947 :numberToDigits (0 9 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(947 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(947 1000) math:remainder 947}]
        [ a r:Fact; r:gives {(947 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(947 100) math:remainder 47}]
        [ a r:Fact; r:gives {(47 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(47 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 947];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 947];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 47];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3384 a r:Inference;
    r:gives {
        948 :numberToDigits (0 9 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(948 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(948 1000) math:remainder 948}]
        [ a r:Fact; r:gives {(948 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(948 100) math:remainder 48}]
        [ a r:Fact; r:gives {(48 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(48 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 948];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 948];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 48];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3385 a r:Inference;
    r:gives {
        949 :numberToDigits (0 9 4 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(949 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(949 1000) math:remainder 949}]
        [ a r:Fact; r:gives {(949 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(949 100) math:remainder 49}]
        [ a r:Fact; r:gives {(49 10) math:integerQuotient 4}]
        [ a r:Fact; r:gives {(49 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 949];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 949];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 49];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3386 a r:Inference;
    r:gives {
        950 :numberToDigits (0 9 5 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(950 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(950 1000) math:remainder 950}]
        [ a r:Fact; r:gives {(950 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(950 100) math:remainder 50}]
        [ a r:Fact; r:gives {(50 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(50 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 950];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 950];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 50];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3387 a r:Inference;
    r:gives {
        951 :numberToDigits (0 9 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(951 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(951 1000) math:remainder 951}]
        [ a r:Fact; r:gives {(951 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(951 100) math:remainder 51}]
        [ a r:Fact; r:gives {(51 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(51 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 951];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 951];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 51];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3388 a r:Inference;
    r:gives {
        952 :numberToDigits (0 9 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(952 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(952 1000) math:remainder 952}]
        [ a r:Fact; r:gives {(952 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(952 100) math:remainder 52}]
        [ a r:Fact; r:gives {(52 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(52 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 952];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 952];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 52];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3389 a r:Inference;
    r:gives {
        953 :numberToDigits (0 9 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(953 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(953 1000) math:remainder 953}]
        [ a r:Fact; r:gives {(953 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(953 100) math:remainder 53}]
        [ a r:Fact; r:gives {(53 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(53 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 953];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 953];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 53];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3390 a r:Inference;
    r:gives {
        954 :numberToDigits (0 9 5 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(954 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(954 1000) math:remainder 954}]
        [ a r:Fact; r:gives {(954 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(954 100) math:remainder 54}]
        [ a r:Fact; r:gives {(54 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(54 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 954];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 954];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 54];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3391 a r:Inference;
    r:gives {
        955 :numberToDigits (0 9 5 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(955 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(955 1000) math:remainder 955}]
        [ a r:Fact; r:gives {(955 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(955 100) math:remainder 55}]
        [ a r:Fact; r:gives {(55 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(55 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 955];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 955];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 55];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3392 a r:Inference;
    r:gives {
        956 :numberToDigits (0 9 5 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(956 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(956 1000) math:remainder 956}]
        [ a r:Fact; r:gives {(956 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(956 100) math:remainder 56}]
        [ a r:Fact; r:gives {(56 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(56 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 956];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 956];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 56];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3393 a r:Inference;
    r:gives {
        957 :numberToDigits (0 9 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(957 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(957 1000) math:remainder 957}]
        [ a r:Fact; r:gives {(957 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(957 100) math:remainder 57}]
        [ a r:Fact; r:gives {(57 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(57 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 957];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 957];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 57];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3394 a r:Inference;
    r:gives {
        958 :numberToDigits (0 9 5 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(958 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(958 1000) math:remainder 958}]
        [ a r:Fact; r:gives {(958 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(958 100) math:remainder 58}]
        [ a r:Fact; r:gives {(58 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(58 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 958];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 958];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 58];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3395 a r:Inference;
    r:gives {
        959 :numberToDigits (0 9 5 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(959 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(959 1000) math:remainder 959}]
        [ a r:Fact; r:gives {(959 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(959 100) math:remainder 59}]
        [ a r:Fact; r:gives {(59 10) math:integerQuotient 5}]
        [ a r:Fact; r:gives {(59 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 959];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 959];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 59];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3396 a r:Inference;
    r:gives {
        960 :numberToDigits (0 9 6 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(960 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(960 1000) math:remainder 960}]
        [ a r:Fact; r:gives {(960 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(960 100) math:remainder 60}]
        [ a r:Fact; r:gives {(60 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(60 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 960];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 960];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 60];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3397 a r:Inference;
    r:gives {
        961 :numberToDigits (0 9 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(961 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(961 1000) math:remainder 961}]
        [ a r:Fact; r:gives {(961 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(961 100) math:remainder 61}]
        [ a r:Fact; r:gives {(61 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(61 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 961];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 961];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 61];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3398 a r:Inference;
    r:gives {
        962 :numberToDigits (0 9 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(962 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(962 1000) math:remainder 962}]
        [ a r:Fact; r:gives {(962 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(962 100) math:remainder 62}]
        [ a r:Fact; r:gives {(62 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(62 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 962];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 962];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 62];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3399 a r:Inference;
    r:gives {
        963 :numberToDigits (0 9 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(963 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(963 1000) math:remainder 963}]
        [ a r:Fact; r:gives {(963 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(963 100) math:remainder 63}]
        [ a r:Fact; r:gives {(63 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(63 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 963];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 963];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 63];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3400 a r:Inference;
    r:gives {
        964 :numberToDigits (0 9 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(964 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(964 1000) math:remainder 964}]
        [ a r:Fact; r:gives {(964 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(964 100) math:remainder 64}]
        [ a r:Fact; r:gives {(64 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(64 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 964];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 964];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 64];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3401 a r:Inference;
    r:gives {
        965 :numberToDigits (0 9 6 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(965 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(965 1000) math:remainder 965}]
        [ a r:Fact; r:gives {(965 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(965 100) math:remainder 65}]
        [ a r:Fact; r:gives {(65 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(65 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 965];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 965];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 65];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3402 a r:Inference;
    r:gives {
        966 :numberToDigits (0 9 6 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(966 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(966 1000) math:remainder 966}]
        [ a r:Fact; r:gives {(966 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(966 100) math:remainder 66}]
        [ a r:Fact; r:gives {(66 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(66 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 966];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 966];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 66];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3403 a r:Inference;
    r:gives {
        967 :numberToDigits (0 9 6 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(967 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(967 1000) math:remainder 967}]
        [ a r:Fact; r:gives {(967 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(967 100) math:remainder 67}]
        [ a r:Fact; r:gives {(67 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(67 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 967];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 967];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 67];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3404 a r:Inference;
    r:gives {
        968 :numberToDigits (0 9 6 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(968 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(968 1000) math:remainder 968}]
        [ a r:Fact; r:gives {(968 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(968 100) math:remainder 68}]
        [ a r:Fact; r:gives {(68 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(68 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 968];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 968];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 68];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3405 a r:Inference;
    r:gives {
        969 :numberToDigits (0 9 6 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(969 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(969 1000) math:remainder 969}]
        [ a r:Fact; r:gives {(969 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(969 100) math:remainder 69}]
        [ a r:Fact; r:gives {(69 10) math:integerQuotient 6}]
        [ a r:Fact; r:gives {(69 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 969];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 969];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 69];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3406 a r:Inference;
    r:gives {
        970 :numberToDigits (0 9 7 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(970 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(970 1000) math:remainder 970}]
        [ a r:Fact; r:gives {(970 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(970 100) math:remainder 70}]
        [ a r:Fact; r:gives {(70 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(70 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 970];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 970];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 70];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3407 a r:Inference;
    r:gives {
        971 :numberToDigits (0 9 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(971 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(971 1000) math:remainder 971}]
        [ a r:Fact; r:gives {(971 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(971 100) math:remainder 71}]
        [ a r:Fact; r:gives {(71 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(71 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 971];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 971];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 71];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3408 a r:Inference;
    r:gives {
        972 :numberToDigits (0 9 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(972 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(972 1000) math:remainder 972}]
        [ a r:Fact; r:gives {(972 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(972 100) math:remainder 72}]
        [ a r:Fact; r:gives {(72 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(72 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 972];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 972];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 72];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3409 a r:Inference;
    r:gives {
        973 :numberToDigits (0 9 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(973 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(973 1000) math:remainder 973}]
        [ a r:Fact; r:gives {(973 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(973 100) math:remainder 73}]
        [ a r:Fact; r:gives {(73 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(73 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 973];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 973];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 73];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3410 a r:Inference;
    r:gives {
        974 :numberToDigits (0 9 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(974 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(974 1000) math:remainder 974}]
        [ a r:Fact; r:gives {(974 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(974 100) math:remainder 74}]
        [ a r:Fact; r:gives {(74 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(74 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 974];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 974];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 74];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3411 a r:Inference;
    r:gives {
        975 :numberToDigits (0 9 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(975 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(975 1000) math:remainder 975}]
        [ a r:Fact; r:gives {(975 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(975 100) math:remainder 75}]
        [ a r:Fact; r:gives {(75 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(75 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 975];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 975];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 75];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3412 a r:Inference;
    r:gives {
        976 :numberToDigits (0 9 7 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(976 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(976 1000) math:remainder 976}]
        [ a r:Fact; r:gives {(976 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(976 100) math:remainder 76}]
        [ a r:Fact; r:gives {(76 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(76 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 976];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 976];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 76];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3413 a r:Inference;
    r:gives {
        977 :numberToDigits (0 9 7 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(977 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(977 1000) math:remainder 977}]
        [ a r:Fact; r:gives {(977 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(977 100) math:remainder 77}]
        [ a r:Fact; r:gives {(77 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(77 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 977];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 977];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 77];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3414 a r:Inference;
    r:gives {
        978 :numberToDigits (0 9 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(978 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(978 1000) math:remainder 978}]
        [ a r:Fact; r:gives {(978 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(978 100) math:remainder 78}]
        [ a r:Fact; r:gives {(78 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(78 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 978];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 978];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 78];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3415 a r:Inference;
    r:gives {
        979 :numberToDigits (0 9 7 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(979 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(979 1000) math:remainder 979}]
        [ a r:Fact; r:gives {(979 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(979 100) math:remainder 79}]
        [ a r:Fact; r:gives {(79 10) math:integerQuotient 7}]
        [ a r:Fact; r:gives {(79 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 979];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 979];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 79];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3416 a r:Inference;
    r:gives {
        980 :numberToDigits (0 9 8 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(980 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(980 1000) math:remainder 980}]
        [ a r:Fact; r:gives {(980 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(980 100) math:remainder 80}]
        [ a r:Fact; r:gives {(80 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(80 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 980];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 980];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 80];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3417 a r:Inference;
    r:gives {
        981 :numberToDigits (0 9 8 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(981 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(981 1000) math:remainder 981}]
        [ a r:Fact; r:gives {(981 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(981 100) math:remainder 81}]
        [ a r:Fact; r:gives {(81 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(81 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 981];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 981];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 81];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3418 a r:Inference;
    r:gives {
        982 :numberToDigits (0 9 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(982 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(982 1000) math:remainder 982}]
        [ a r:Fact; r:gives {(982 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(982 100) math:remainder 82}]
        [ a r:Fact; r:gives {(82 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(82 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 982];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 982];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 82];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3419 a r:Inference;
    r:gives {
        983 :numberToDigits (0 9 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(983 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(983 1000) math:remainder 983}]
        [ a r:Fact; r:gives {(983 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(983 100) math:remainder 83}]
        [ a r:Fact; r:gives {(83 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(83 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 983];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 983];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 83];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3420 a r:Inference;
    r:gives {
        984 :numberToDigits (0 9 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(984 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(984 1000) math:remainder 984}]
        [ a r:Fact; r:gives {(984 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(984 100) math:remainder 84}]
        [ a r:Fact; r:gives {(84 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(84 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 984];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 984];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 84];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3421 a r:Inference;
    r:gives {
        985 :numberToDigits (0 9 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(985 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(985 1000) math:remainder 985}]
        [ a r:Fact; r:gives {(985 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(985 100) math:remainder 85}]
        [ a r:Fact; r:gives {(85 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(85 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 985];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 985];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 85];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3422 a r:Inference;
    r:gives {
        986 :numberToDigits (0 9 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(986 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(986 1000) math:remainder 986}]
        [ a r:Fact; r:gives {(986 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(986 100) math:remainder 86}]
        [ a r:Fact; r:gives {(86 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(86 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 986];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 986];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 86];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3423 a r:Inference;
    r:gives {
        987 :numberToDigits (0 9 8 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(987 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(987 1000) math:remainder 987}]
        [ a r:Fact; r:gives {(987 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(987 100) math:remainder 87}]
        [ a r:Fact; r:gives {(87 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(87 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 987];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 987];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 87];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3424 a r:Inference;
    r:gives {
        988 :numberToDigits (0 9 8 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(988 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(988 1000) math:remainder 988}]
        [ a r:Fact; r:gives {(988 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(988 100) math:remainder 88}]
        [ a r:Fact; r:gives {(88 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(88 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 988];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 988];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 88];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3425 a r:Inference;
    r:gives {
        989 :numberToDigits (0 9 8 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(989 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(989 1000) math:remainder 989}]
        [ a r:Fact; r:gives {(989 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(989 100) math:remainder 89}]
        [ a r:Fact; r:gives {(89 10) math:integerQuotient 8}]
        [ a r:Fact; r:gives {(89 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 989];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 989];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 89];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3426 a r:Inference;
    r:gives {
        990 :numberToDigits (0 9 9 0).
    };
    r:evidence (
        [ a r:Fact; r:gives {(990 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(990 1000) math:remainder 990}]
        [ a r:Fact; r:gives {(990 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(990 100) math:remainder 90}]
        [ a r:Fact; r:gives {(90 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(90 10) math:remainder 0}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 990];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 990];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3438.

skolem:lemma3427 a r:Inference;
    r:gives {
        991 :numberToDigits (0 9 9 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(991 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(991 1000) math:remainder 991}]
        [ a r:Fact; r:gives {(991 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(991 100) math:remainder 91}]
        [ a r:Fact; r:gives {(91 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(91 10) math:remainder 1}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 991];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 91];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 1];
    r:rule skolem:lemma3438.

skolem:lemma3428 a r:Inference;
    r:gives {
        992 :numberToDigits (0 9 9 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(992 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(992 1000) math:remainder 992}]
        [ a r:Fact; r:gives {(992 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(992 100) math:remainder 92}]
        [ a r:Fact; r:gives {(92 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(92 10) math:remainder 2}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 992];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 92];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 2];
    r:rule skolem:lemma3438.

skolem:lemma3429 a r:Inference;
    r:gives {
        993 :numberToDigits (0 9 9 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(993 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(993 1000) math:remainder 993}]
        [ a r:Fact; r:gives {(993 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(993 100) math:remainder 93}]
        [ a r:Fact; r:gives {(93 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(93 10) math:remainder 3}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 993];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 93];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 3];
    r:rule skolem:lemma3438.

skolem:lemma3430 a r:Inference;
    r:gives {
        994 :numberToDigits (0 9 9 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(994 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(994 1000) math:remainder 994}]
        [ a r:Fact; r:gives {(994 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(994 100) math:remainder 94}]
        [ a r:Fact; r:gives {(94 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(94 10) math:remainder 4}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 994];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 94];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 4];
    r:rule skolem:lemma3438.

skolem:lemma3431 a r:Inference;
    r:gives {
        995 :numberToDigits (0 9 9 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(995 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(995 1000) math:remainder 995}]
        [ a r:Fact; r:gives {(995 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(995 100) math:remainder 95}]
        [ a r:Fact; r:gives {(95 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(95 10) math:remainder 5}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 995];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 95];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 5];
    r:rule skolem:lemma3438.

skolem:lemma3432 a r:Inference;
    r:gives {
        996 :numberToDigits (0 9 9 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(996 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(996 1000) math:remainder 996}]
        [ a r:Fact; r:gives {(996 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(996 100) math:remainder 96}]
        [ a r:Fact; r:gives {(96 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(96 10) math:remainder 6}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 996];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 96];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 6];
    r:rule skolem:lemma3438.

skolem:lemma3433 a r:Inference;
    r:gives {
        997 :numberToDigits (0 9 9 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(997 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(997 1000) math:remainder 997}]
        [ a r:Fact; r:gives {(997 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(997 100) math:remainder 97}]
        [ a r:Fact; r:gives {(97 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(97 10) math:remainder 7}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 997];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 97];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 7];
    r:rule skolem:lemma3438.

skolem:lemma3434 a r:Inference;
    r:gives {
        998 :numberToDigits (0 9 9 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(998 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(998 1000) math:remainder 998}]
        [ a r:Fact; r:gives {(998 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(998 100) math:remainder 98}]
        [ a r:Fact; r:gives {(98 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(98 10) math:remainder 8}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 998];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 98];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 8];
    r:rule skolem:lemma3438.

skolem:lemma3435 a r:Inference;
    r:gives {
        999 :numberToDigits (0 9 9 9).
    };
    r:evidence (
        [ a r:Fact; r:gives {(999 1000) math:integerQuotient 0}]
        [ a r:Fact; r:gives {(999 1000) math:remainder 999}]
        [ a r:Fact; r:gives {(999 100) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(999 100) math:remainder 99}]
        [ a r:Fact; r:gives {(99 10) math:integerQuotient 9}]
        [ a r:Fact; r:gives {(99 10) math:remainder 9}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3438.

skolem:lemma3436 a r:Inference;
    r:gives {
        (0 9 9 9) :digitsToNumber 999 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(0 1000) math:product 0}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(0 900 90 9) math:sum 999}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 999];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 9];
    r:rule skolem:lemma3439.

skolem:lemma3437 a r:Inference;
    r:gives {
        (9 9 9 0) :digitsToNumber 9990 .
    };
    r:evidence (
        [ a r:Fact; r:gives {(9 1000) math:product 9000}]
        [ a r:Fact; r:gives {(9 100) math:product 900}]
        [ a r:Fact; r:gives {(9 10) math:product 90}]
        [ a r:Fact; r:gives {(9000 900 90 0) math:sum 9990}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 9000];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 900];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo 90];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 9];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo 9990];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo 0];
    r:rule skolem:lemma3439.

skolem:lemma3438 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6. {
            var:x_0 :numberToDigits (var:x_1 var:x_3 var:x_5 var:x_6).
        } <= {
            (var:x_0 1000) math:integerQuotient var:x_1.
            (var:x_0 1000) math:remainder var:x_2.
            (var:x_2 100) math:integerQuotient var:x_3.
            (var:x_2 100) math:remainder var:x_4.
            (var:x_4 10) math:integerQuotient var:x_5.
            (var:x_4 10) math:remainder var:x_6.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>].

skolem:lemma3439 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6, var:x_7. {
            (var:x_0 var:x_2 var:x_4 var:x_6) :digitsToNumber var:x_7.
        } <= {
            (var:x_0 1000) math:product var:x_1.
            (var:x_2 100) math:product var:x_3.
            (var:x_4 10) math:product var:x_5.
            (var:x_1 var:x_3 var:x_5 var:x_6) math:sum var:x_7.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/proof-by-induction/example2.n3>].

