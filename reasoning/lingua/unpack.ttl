@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix lingua: <http://www.w3.org/2000/10/swap/lingua#>.
@prefix : <http://example.org/ns#>.

# sample data from RubenD
_:b1 :data (
    _:b2 :package (
        _:b3 :content (
            :a :b _:c
            _:b4 :package (
                _:b5 :content (
                    :u :v _:w
                    _:b6 :package (
                        _:b7 :content (
                            :x :y _:z
                        )
                        _:b7 :usable_until :yesterday
                    )
                    _:b6 :tag :invalid
                )
                _:b5 :usable_until :tomorrow
                _:b5 :p :o
            )
            _:b4 :tag :valid
        )
        _:b3 :usable_until :next_week
    )
    _:b2 :tag :valid
).

# the logic for unpack using backward rules
:unpack_rule1 a lingua:BackwardRule;
    lingua:conclusion (
        () :unpackl ()
    );
    lingua:premise ();
    lingua:varCount 0.

:unpack_rule2 a lingua:BackwardRule;
    lingua:conclusion (
        _:g :unpackl _:h
    );
    lingua:premise (
        _:g list:firstRest (_:f _:r)
        _:f :unpack _:a
        _:r :unpackl _:b
        (_:a _:b) list:append _:h
    );
    lingua:varCount 6.

:unpack_rule3 a lingua:BackwardRule;
    lingua:conclusion (
        (_:b :package _:p) :unpack _:f
    );
    lingua:premise (
        _:p list:lott _:l
        _:l list:member (_:a :content _:c)
        _:l list:member (_:a :usable_until _:t)
        (:tomorrow :next_week) list:member _:t
        _:c list:lott _:d
        _:d :unpackl _:f
    );
    lingua:varCount 8.

:unpack_rule4 a lingua:BackwardRule;
    lingua:conclusion (
        (_:b :package _:p) :unpack ()
    );
    lingua:premise (
        _:p list:lott _:l
        _:l list:member (_:a :content _:c)
        _:l list:member (_:a :usable_until _:t)
        (:yesterday :last_week) list:member _:t
    );
    lingua:varCount 6.

:unpack_rule5 a lingua:BackwardRule;
    lingua:conclusion (
        (_:b :tag _:p) :unpack ()
    );
    lingua:premise ();
    lingua:varCount 2.

:unpack_rule6 a lingua:BackwardRule;
    lingua:conclusion (
        _:g :unpack (_:g)
    );
    lingua:premise (
        (_:g) list:notMember (_:a :package _:p)
        (_:g) list:notMember (_:b :tag _:q)
    );
    lingua:varCount 5.

# unpack the triples that are usable in the future
:unpack_query a lingua:QueryRule;
    lingua:premise (
        _:b :data _:g
        _:g list:lott _:l
        _:l :unpackl _:m
        _:u list:lott _:m
    );
    lingua:conclusion _:u;
    lingua:varCount 5.
