@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix lingua: <http://www.w3.org/2000/10/swap/lingua#>.
@prefix : <http://example.org/ns#>.

# input
:input1 :measurement1 (6 11).
:input2 :measurement2 true.
:input3 :measurement3 56967.

# disturbance
:disturbance1 :measurement3 35766.
:disturbance2 :measurement1 (45 39).

# state
:state1 :observation1 80.
:state2 :observation2 false.
:state3 :observation3 22.

# output
:output2 :measurement4 24.
:output2 :target2 29.

# forward rules
:control_rule1 a lingua:ForwardRule;
    lingua:premise (
        :input1 :measurement10 _:M1
        :input2 :measurement2 true
        :disturbance1 :measurement3 _:D1
        (_:M1 19.6) math:product _:C1           # proportial part
        (10 _:C2) math:exponentiation _:D1      # compensation part
        (_:C1 _:C2) math:difference _:C         # simple feedforward control
    );
    lingua:conclusion (
        :actuator1 :control1 _:C
    ).

:control_rule2 a lingua:ForwardRule;
    lingua:premise (
        :input3 :measurement3 _:M3
        :state3 :observation3 _:P3
        :output2 :measurement4 _:M4
        :output2 :target2 _:T2
        (_:T2 _:M4) math:difference _:E         # error
        (_:P3 _:M4) math:difference _:D         # differential error
        (5.8 _:E) math:product _:C1             # proportial part
        (7.3 _:E) math:quotient _:N             # nonlinear factor
        (_:N _:D) math:product _:C2             # nonlinear differential part
        (_:C1 _:C2) math:sum _:C                # PND feedback control
    );
    lingua:conclusion (
        :actuator2 :control1 _:C
    ).

# backward rules
:control_rule3 a lingua:BackwardRule;
    lingua:conclusion (
        _:I :measurement10 _:M
    );
    lingua:premise (
        _:I :measurement1 (_:M1 _:M2)
        _:M1 math:lessThan _:M2
        (_:M2 _:M1) math:difference _:M3
        (_:M3 0.5) math:exponentiation _:M
    ).

:control_rule4 a lingua:BackwardRule;
    lingua:conclusion (
        _:I :measurement10 _:M1
    );
    lingua:premise (
        _:I :measurement1 (_:M1 _:M2)
        _:M1 math:notLessThan _:M2
    ).

# query
:control_query a lingua:QueryRule;
    lingua:premise (
        _:O :control1 _:C
    );
    lingua:conclusion (
        _:O :control1 _:C
    ).
