@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix : <urn:example:>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:component skolem:lemma4;
    r:component skolem:lemma5;
    r:component skolem:lemma6;
    r:component skolem:lemma7;
    r:component skolem:lemma8;
    r:component skolem:lemma9;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w1.
        (log:pos :p2) log:isPermittedIn :w1.
        (log:pos :p1) log:isPermittedIn :w2.
        (log:pos :p2) log:isPermittedIn :w2.
        (log:pos :p1) log:isObligatoryIn :w1.
        (log:pos :p2) log:isObligatoryIn :w1.
        (log:pos :p1) log:isObligatoryIn :w2.
        (log:pos :p2) log:isObligatoryIn :w2.
        (log:pos :p3) log:isForbiddenIn :w2.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w1.
    };
    r:evidence (
        skolem:lemma10
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma2 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w1.
    };
    r:evidence (
        skolem:lemma11
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma3 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w2.
    };
    r:evidence (
        skolem:lemma12
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma4 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w2.
    };
    r:evidence (
        skolem:lemma13
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma5 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w1.
    };
    r:evidence (
        skolem:lemma14
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma6 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w1.
    };
    r:evidence (
        skolem:lemma15
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma7 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w2.
    };
    r:evidence (
        skolem:lemma16
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma8 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w2.
    };
    r:evidence (
        skolem:lemma17
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma9 a r:Inference;
    r:gives {
        (log:pos :p3) log:isForbiddenIn :w2.
    };
    r:evidence (
        skolem:lemma18
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isForbiddenIn var:x_1.
    } => {
        var:x_0 log:isForbiddenIn var:x_1.
    }}].

skolem:lemma10 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w1.
    };
    r:evidence (
        skolem:lemma19
        skolem:lemma20
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma11 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w1.
    };
    r:evidence (
        skolem:lemma19
        skolem:lemma21
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma12 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w2.
    };
    r:evidence (
        skolem:lemma22
        skolem:lemma23
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma13 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w2.
    };
    r:evidence (
        skolem:lemma22
        skolem:lemma24
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma14 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w1.
    };
    r:evidence (
        skolem:lemma25
        skolem:lemma26
        [ a r:Fact; r:gives {({
            :w1 log:hasAccessTo _:sk_34.
        } {
            (log:pos :p1) log:holdsIn _:sk_34.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_34"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma15 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w1.
    };
    r:evidence (
        skolem:lemma25
        skolem:lemma27
        [ a r:Fact; r:gives {({
            :w1 log:hasAccessTo _:sk_35.
        } {
            (log:pos :p2) log:holdsIn _:sk_35.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_35"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma16 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w2.
    };
    r:evidence (
        skolem:lemma28
        skolem:lemma20
        [ a r:Fact; r:gives {({
            :w2 log:hasAccessTo _:sk_36.
        } {
            (log:pos :p1) log:holdsIn _:sk_36.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_36"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma17 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w2.
    };
    r:evidence (
        skolem:lemma28
        skolem:lemma21
        [ a r:Fact; r:gives {({
            :w2 log:hasAccessTo _:sk_37.
        } {
            (log:pos :p2) log:holdsIn _:sk_37.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_37"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma18 a r:Inference;
    r:gives {
        (log:pos :p3) log:isForbiddenIn :w2.
    };
    r:evidence (
        skolem:lemma28
        skolem:lemma29
        [ a r:Fact; r:gives {({
            :w2 log:hasAccessTo _:sk_38.
        } {
            (log:neg :p3) log:holdsIn _:sk_38.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_38"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:neg var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:neg var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isForbiddenIn var:x_0.
    }}].

skolem:lemma19 a r:Extraction;
    r:gives {
        :w1 log:hasAccessTo :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma20 a r:Extraction;
    r:gives {
        (log:pos :p1) log:holdsIn :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma21 a r:Extraction;
    r:gives {
        (log:pos :p2) log:holdsIn :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma22 a r:Extraction;
    r:gives {
        :w2 log:hasAccessTo :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma23 a r:Extraction;
    r:gives {
        (log:pos :p1) log:holdsIn :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma24 a r:Extraction;
    r:gives {
        (log:pos :p2) log:holdsIn :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma25 a r:Extraction;
    r:gives {
        :w1 a log:PossibleWorld.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma26 a r:Extraction;
    r:gives {
        (log:pos :p1) log:holdsIn :w1.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma27 a r:Extraction;
    r:gives {
        (log:pos :p2) log:holdsIn :w1.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma28 a r:Extraction;
    r:gives {
        :w2 a log:PossibleWorld.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma29 a r:Extraction;
    r:gives {
        (log:neg :p3) log:holdsIn :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

