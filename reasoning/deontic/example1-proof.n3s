@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix : <urn:example:>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:component skolem:lemma4;
    r:component skolem:lemma5;
    r:component skolem:lemma6;
    r:component skolem:lemma7;
    r:component skolem:lemma8;
    r:component skolem:lemma9;
    r:component skolem:lemma10;
    r:component skolem:lemma11;
    r:component skolem:lemma12;
    r:component skolem:lemma13;
    r:component skolem:lemma14;
    r:component skolem:lemma15;
    r:component skolem:lemma16;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w1.
        (log:pos :p2) log:isPermittedIn :w1.
        (log:pos :p1) log:isPermittedIn :w2.
        (log:pos :p2) log:isPermittedIn :w2.
        (log:pos :p3) log:isPermittedIn :w1.
        (log:pos :p1) log:isPermittedIn :w3.
        (log:pos :p2) log:isPermittedIn :w3.
        (log:pos :p1) log:isObligatoryIn :w1.
        (log:pos :p2) log:isObligatoryIn :w1.
        (log:pos :p1) log:isObligatoryIn :w2.
        (log:pos :p2) log:isObligatoryIn :w2.
        (log:pos :p1) log:isObligatoryIn :w3.
        (log:pos :p2) log:isObligatoryIn :w3.
        (log:pos :p4) log:isObligatoryIn :w3.
        (log:pos :p3) log:isForbiddenIn :w2.
        (log:pos :p3) log:isForbiddenIn :w3.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w1.
    };
    r:evidence (
        skolem:lemma17
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma2 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w1.
    };
    r:evidence (
        skolem:lemma18
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma3 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w2.
    };
    r:evidence (
        skolem:lemma19
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma4 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w2.
    };
    r:evidence (
        skolem:lemma20
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma5 a r:Inference;
    r:gives {
        (log:pos :p3) log:isPermittedIn :w1.
    };
    r:evidence (
        skolem:lemma21
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma6 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w3.
    };
    r:evidence (
        skolem:lemma22
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma7 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w3.
    };
    r:evidence (
        skolem:lemma23
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isPermittedIn var:x_1.
    } => {
        var:x_0 log:isPermittedIn var:x_1.
    }}].

skolem:lemma8 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w1.
    };
    r:evidence (
        skolem:lemma24
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma9 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w1.
    };
    r:evidence (
        skolem:lemma25
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma10 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w2.
    };
    r:evidence (
        skolem:lemma26
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma11 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w2.
    };
    r:evidence (
        skolem:lemma27
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma12 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w3.
    };
    r:evidence (
        skolem:lemma28
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma13 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w3.
    };
    r:evidence (
        skolem:lemma29
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma14 a r:Inference;
    r:gives {
        (log:pos :p4) log:isObligatoryIn :w3.
    };
    r:evidence (
        skolem:lemma30
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isObligatoryIn var:x_1.
    } => {
        var:x_0 log:isObligatoryIn var:x_1.
    }}].

skolem:lemma15 a r:Inference;
    r:gives {
        (log:pos :p3) log:isForbiddenIn :w2.
    };
    r:evidence (
        skolem:lemma31
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isForbiddenIn var:x_1.
    } => {
        var:x_0 log:isForbiddenIn var:x_1.
    }}].

skolem:lemma16 a r:Inference;
    r:gives {
        (log:pos :p3) log:isForbiddenIn :w3.
    };
    r:evidence (
        skolem:lemma32
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (log:pos :p3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 log:isForbiddenIn var:x_1.
    } => {
        var:x_0 log:isForbiddenIn var:x_1.
    }}].

skolem:lemma17 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w1.
    };
    r:evidence (
        skolem:lemma33
        skolem:lemma34
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma18 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w1.
    };
    r:evidence (
        skolem:lemma33
        skolem:lemma35
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma19 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w2.
    };
    r:evidence (
        skolem:lemma36
        skolem:lemma37
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma20 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w2.
    };
    r:evidence (
        skolem:lemma36
        skolem:lemma38
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma21 a r:Inference;
    r:gives {
        (log:pos :p3) log:isPermittedIn :w1.
    };
    r:evidence (
        [ a r:Fact; r:gives {:w1 log:hasAccessTo :w1}]
        skolem:lemma39
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p3"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma22 a r:Inference;
    r:gives {
        (log:pos :p1) log:isPermittedIn :w3.
    };
    r:evidence (
        [ a r:Fact; r:gives {:w3 log:hasAccessTo :w3}]
        skolem:lemma37
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma23 a r:Inference;
    r:gives {
        (log:pos :p2) log:isPermittedIn :w3.
    };
    r:evidence (
        [ a r:Fact; r:gives {:w3 log:hasAccessTo :w3}]
        skolem:lemma38
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        var:x_0 log:hasAccessTo var:x_1.
        (log:pos var:x_2) log:holdsIn var:x_1.
    } => {
        (log:pos var:x_2) log:isPermittedIn var:x_0.
    }}].

skolem:lemma24 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w1.
    };
    r:evidence (
        skolem:lemma40
        skolem:lemma41
        [ a r:Fact; r:gives {({
            :w1 log:hasAccessTo _:sk_40.
        } {
            (log:pos :p1) log:holdsIn _:sk_40.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_40"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma25 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w1.
    };
    r:evidence (
        skolem:lemma40
        skolem:lemma42
        [ a r:Fact; r:gives {({
            :w1 log:hasAccessTo _:sk_41.
        } {
            (log:pos :p2) log:holdsIn _:sk_41.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_41"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma26 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w2.
    };
    r:evidence (
        skolem:lemma43
        skolem:lemma34
        [ a r:Fact; r:gives {({
            :w2 log:hasAccessTo _:sk_42.
        } {
            (log:pos :p1) log:holdsIn _:sk_42.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_42"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma27 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w2.
    };
    r:evidence (
        skolem:lemma43
        skolem:lemma35
        [ a r:Fact; r:gives {({
            :w2 log:hasAccessTo _:sk_43.
        } {
            (log:pos :p2) log:holdsIn _:sk_43.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_43"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma28 a r:Inference;
    r:gives {
        (log:pos :p1) log:isObligatoryIn :w3.
    };
    r:evidence (
        skolem:lemma44
        skolem:lemma37
        [ a r:Fact; r:gives {({
            :w3 log:hasAccessTo _:sk_44.
        } {
            (log:pos :p1) log:holdsIn _:sk_44.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_44"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma29 a r:Inference;
    r:gives {
        (log:pos :p2) log:isObligatoryIn :w3.
    };
    r:evidence (
        skolem:lemma44
        skolem:lemma38
        [ a r:Fact; r:gives {({
            :w3 log:hasAccessTo _:sk_45.
        } {
            (log:pos :p2) log:holdsIn _:sk_45.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_45"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:pos var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:pos var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_0.
    }}].

skolem:lemma30 a r:Inference;
    r:gives {
        (log:pos :p4) log:isObligatoryIn :w3.
    };
    r:evidence (
        skolem:lemma45
        skolem:lemma28
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:p1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p4"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. {
        (log:imp (log:pos var:x_0) (log:pos var:x_1)) log:holdsIn var:x_2.
        (log:pos var:x_0) log:isObligatoryIn var:x_2.
    } => {
        (log:pos var:x_1) log:isObligatoryIn var:x_2.
    }}].

skolem:lemma31 a r:Inference;
    r:gives {
        (log:pos :p3) log:isForbiddenIn :w2.
    };
    r:evidence (
        skolem:lemma43
        skolem:lemma46
        [ a r:Fact; r:gives {({
            :w2 log:hasAccessTo _:sk_46.
        } {
            (log:neg :p3) log:holdsIn _:sk_46.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w2"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_46"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:neg var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:neg var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isForbiddenIn var:x_0.
    }}].

skolem:lemma32 a r:Inference;
    r:gives {
        (log:pos :p3) log:isForbiddenIn :w3.
    };
    r:evidence (
        skolem:lemma44
        skolem:lemma47
        [ a r:Fact; r:gives {({
            :w3 log:hasAccessTo _:sk_47.
        } {
            (log:neg :p3) log:holdsIn _:sk_47.
        }) log:forAllIn ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:w3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:p3"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_47"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2, var:x_3. {
        var:x_0 a log:PossibleWorld.
        (log:neg var:x_1) log:holdsIn var:x_0.
        ({
            var:x_0 log:hasAccessTo var:x_2.
        } {
            (log:neg var:x_1) log:holdsIn var:x_2.
        }) log:forAllIn var:x_3.
    } => {
        (log:pos var:x_1) log:isForbiddenIn var:x_0.
    }}].

skolem:lemma33 a r:Extraction;
    r:gives {
        :w1 log:hasAccessTo :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma34 a r:Extraction;
    r:gives {
        (log:pos :p1) log:holdsIn :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma35 a r:Extraction;
    r:gives {
        (log:pos :p2) log:holdsIn :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma36 a r:Extraction;
    r:gives {
        :w2 log:hasAccessTo :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma37 a r:Extraction;
    r:gives {
        (log:pos :p1) log:holdsIn :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma38 a r:Extraction;
    r:gives {
        (log:pos :p2) log:holdsIn :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma39 a r:Extraction;
    r:gives {
        (log:pos :p3) log:holdsIn :w1.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma40 a r:Extraction;
    r:gives {
        :w1 a log:PossibleWorld.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma41 a r:Extraction;
    r:gives {
        (log:pos :p1) log:holdsIn :w1.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma42 a r:Extraction;
    r:gives {
        (log:pos :p2) log:holdsIn :w1.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma43 a r:Extraction;
    r:gives {
        :w2 a log:PossibleWorld.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma44 a r:Extraction;
    r:gives {
        :w3 a log:PossibleWorld.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma45 a r:Extraction;
    r:gives {
        (log:imp (log:pos :p1) (log:pos :p4)) log:holdsIn :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma46 a r:Extraction;
    r:gives {
        (log:neg :p3) log:holdsIn :w2.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

skolem:lemma47 a r:Extraction;
    r:gives {
        (log:neg :p3) log:holdsIn :w3.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/deontic/example1.n3s>].

