@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix : <urn:example:>.

# ackermann(0, y)
{
    (0 ?Y) :ackermann ?A.
} <= {
    (?Y 1) math:sum ?A.
}.

# ackermann(1, y)
{
    (1 ?Y) :ackermann ?A.
} <= {
    (?Y 3) math:sum ?B.
    (2 ?B) math:sum ?C.
    (?C 3) math:difference ?A.
}.

# ackermann(2, y)
{
    (2 ?Y) :ackermann ?A.
} <= {
    (?Y 3) math:sum ?B.
    (2 ?B) math:product ?C.
    (?C 3) math:difference ?A.
}.

# ackermann(3, y)
{
    (3 ?Y) :ackermann ?A.
} <= {
    (?Y 3) math:sum ?B.
    (2 ?B) math:exponentiation ?C.
    (?C 3) math:difference ?A.
}.

# ackermann(4, y)
{
    (4 ?Y) :ackermann ?A.
} <= {
    (?Y 3) math:sum ?B.
    (2 ?B) :tetration ?C.
    (?C 3) math:difference ?A.
}.

# ackermann(5, y)
{
    (5 ?Y) :ackermann ?A.
} <= {
    (?Y 3) math:sum ?B.
    (2 ?B) :pentation ?C.
    (?C 3) math:difference ?A.
}.

# tetration
{
    (?A 0) :tetration 1.
} <= {
    true log:callWithCut true.
}.

{
    (?A ?N) :tetration ?B.
} <= {
    (?N 1) math:difference ?M.
    (?A ?M) :tetration ?C.
    (?A ?C) math:exponentiation ?B.
}.

# pentation
{
    (?A 0) :pentation 1.
} <= {
    true log:callWithCut true.
}.

{
    (?A ?N) :pentation ?B.
} <= {
    (?N 1) math:difference ?M.
    (?A ?M) :pentation ?C.
    (?A ?C) :tetration ?B.
}.

# query
{
    (0 0) :ackermann ?A0.
    (0 6) :ackermann ?A1.
    (1 2) :ackermann ?A2.
    (1 7) :ackermann ?A3.
    (2 2) :ackermann ?A4.
    (2 9) :ackermann ?A5.
    (3 4) :ackermann ?A6.
    (3 14) :ackermann ?A7.
    (4 0) :ackermann ?A8.
    (4 1) :ackermann ?A9.
    (4 2) :ackermann ?A10.
    (5 0) :ackermann ?A11.
} log:answer {
    (0 0) :ackermann ?A0.
    (0 6) :ackermann ?A1.
    (1 2) :ackermann ?A2.
    (1 7) :ackermann ?A3.
    (2 2) :ackermann ?A4.
    (2 9) :ackermann ?A5.
    (3 4) :ackermann ?A6.
    (3 14) :ackermann ?A7.
    (4 0) :ackermann ?A8.
    (4 1) :ackermann ?A9.
    (4 2) :ackermann ?A10.
    (5 0) :ackermann ?A11.
}.
