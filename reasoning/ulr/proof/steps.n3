@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix : <http://example.org/#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:gives {
        :model :is ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        }).
        :model :is ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        }).
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        :model :is ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        }).
    };
    r:evidence (
        skolem:lemma3
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "http://example.org/#Pat"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :E.
    })];
    r:rule skolem:lemma4.

skolem:lemma2 a r:Inference;
    r:gives {
        :model :is ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        }).
    };
    r:evidence (
        skolem:lemma5
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "http://example.org/#Pat"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :D.
    } {
        :Pat :canDo :E.
    })];
    r:rule skolem:lemma4.

skolem:lemma3 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (() () ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        })).
    };
    r:evidence (
        [ a r:Fact; r:gives {{
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        })}]
        [ a r:Fact; r:gives {({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }) list:member {
            :Pat :canDo :A.
        }}]
        skolem:lemma6
        [ a r:Fact; r:gives {() list:notMember {
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }}]
        [ a r:Fact; r:gives {(() ({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        })) list:append ({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        })}]
        [ a r:Fact; r:gives {(() ({
            :Pat :canDo :A.
        })) list:append ({
            :Pat :canDo :A.
        })}]
        [ a r:Fact; r:gives {true log:becomes {
            :Pat :canDo :A.
        }}]
        skolem:lemma7
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :Pat a vcard:Individual.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :B.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo {
        :Pat :canDo :A.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo ({
        :Pat :canDo :A.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :E.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :E.
    })];
    r:rule skolem:lemma8.

skolem:lemma4 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1. {
            {
                var:x_0 a vcard:Individual.
                var:x_0 :canDo :E.
            } :findModel (() () var:x_1).
        } => {
            :model :is var:x_1.
        }.
    };
    r:because [ a r:Parsing; r:source <file:///home/jdroo/github.com/eyereasoner/eye/reasoning/ulr/steps.n3>].

skolem:lemma5 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (() () ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        })).
    };
    r:evidence (
        [ a r:Fact; r:gives {{
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        })}]
        [ a r:Fact; r:gives {({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }) list:member {
            :Pat :canDo :A.
        }}]
        skolem:lemma6
        [ a r:Fact; r:gives {() list:notMember {
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }}]
        [ a r:Fact; r:gives {(() ({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        })) list:append ({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        })}]
        [ a r:Fact; r:gives {(() ({
            :Pat :canDo :A.
        })) list:append ({
            :Pat :canDo :A.
        })}]
        [ a r:Fact; r:gives {true log:becomes {
            :Pat :canDo :A.
        }}]
        skolem:lemma9
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :Pat a vcard:Individual.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :B.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo {
        :Pat :canDo :A.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo ({
        :Pat :canDo :A.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :E.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :D.
    } {
        :Pat :canDo :E.
    })];
    r:rule skolem:lemma8.

skolem:lemma6 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
        } log:call true.
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:rule [ a r:Fact; r:gives {true => {
        {
            :Pat a vcard:Individual.
        } log:call true.
    }}].

skolem:lemma7 a r:Inference;
    r:gives {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            }) ({
                :Pat :canDo :A.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :A.
            } log:becomes true.
        }.
    };
    r:evidence (
        skolem:lemma10
        [ a r:Fact; r:gives {{
            :Pat :canDo :A.
        } log:becomes true}]
    );
    r:rule [ a r:Fact; r:gives {{
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }) ({
            :Pat :canDo :A.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        })).
        {
            :Pat :canDo :A.
        } log:becomes true.
    } => {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            }) ({
                :Pat :canDo :A.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :A.
            } log:becomes true.
        }.
    }}].

skolem:lemma8 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6, var:x_7, var:x_8. {
            var:x_7 :findModel (var:x_3 var:x_5 var:x_8).
        } <= {
            var:x_0 => var:x_1.
            var:x_1 list:member var:x_2.
            var:x_0 log:call true.
            var:x_3 list:notMember {
                var:x_0 => var:x_1.
            }.
            (var:x_3 ({
                var:x_0 => var:x_1.
            })) list:append var:x_4.
            (var:x_5 (var:x_2)) list:append var:x_6.
            true log:becomes var:x_2.
            {
                var:x_7 :findModel (var:x_4 var:x_6 var:x_8).
            } log:callWithCleanup {
                var:x_2 log:becomes true.
            }.
        }.
    };
    r:because [ a r:Parsing; r:source <file:///home/jdroo/github.com/eyereasoner/eye/reasoning/ulr/steps.n3>].

skolem:lemma9 a r:Inference;
    r:gives {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            }) ({
                :Pat :canDo :A.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :A.
            } log:becomes true.
        }.
    };
    r:evidence (
        skolem:lemma11
        [ a r:Fact; r:gives {{
            :Pat :canDo :A.
        } log:becomes true}]
    );
    r:rule [ a r:Fact; r:gives {{
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }) ({
            :Pat :canDo :A.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        })).
        {
            :Pat :canDo :A.
        } log:becomes true.
    } => {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            }) ({
                :Pat :canDo :A.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :A.
            } log:becomes true.
        }.
    }}].

skolem:lemma10 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }) ({
            :Pat :canDo :A.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        })).
    };
    r:evidence (
        [ a r:Fact; r:gives {{
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        })}]
        [ a r:Fact; r:gives {({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        }) list:member {
            :Pat :canDo :E.
        }}]
        skolem:lemma12
        [ a r:Fact; r:gives {({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }) list:notMember {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        }}]
        [ a r:Fact; r:gives {(({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }) ({
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        })) list:append ({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        })}]
        [ a r:Fact; r:gives {(({
            :Pat :canDo :A.
        }) ({
            :Pat :canDo :E.
        })) list:append ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        })}]
        [ a r:Fact; r:gives {true log:becomes {
            :Pat :canDo :E.
        }}]
        skolem:lemma13
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :A.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo ({
        :Pat :canDo :E.
    } {
        :Pat :canDo :D.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo {
        :Pat :canDo :E.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    } {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :E.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo ({
        :Pat :canDo :A.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :E.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :E.
    })];
    r:rule skolem:lemma8.

skolem:lemma11 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }) ({
            :Pat :canDo :A.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        })).
    };
    r:evidence (
        [ a r:Fact; r:gives {{
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        })}]
        [ a r:Fact; r:gives {({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        }) list:member {
            :Pat :canDo :D.
        }}]
        skolem:lemma12
        [ a r:Fact; r:gives {({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }) list:notMember {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        }}]
        [ a r:Fact; r:gives {(({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        }) ({
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        })) list:append ({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        })}]
        [ a r:Fact; r:gives {(({
            :Pat :canDo :A.
        }) ({
            :Pat :canDo :D.
        })) list:append ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        })}]
        [ a r:Fact; r:gives {true log:becomes {
            :Pat :canDo :D.
        }}]
        skolem:lemma14
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :A.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo ({
        :Pat :canDo :E.
    } {
        :Pat :canDo :D.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo {
        :Pat :canDo :D.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    } {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :D.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo ({
        :Pat :canDo :A.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :E.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :D.
    } {
        :Pat :canDo :E.
    })];
    r:rule skolem:lemma8.

skolem:lemma12 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } log:call true.
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:rule [ a r:Fact; r:gives {true => {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } log:call true.
    }}].

skolem:lemma13 a r:Inference;
    r:gives {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            } {
                {
                    :Pat a vcard:Individual.
                    :Pat :canDo :A.
                } => ({
                    :Pat :canDo :E.
                } {
                    :Pat :canDo :D.
                }).
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :E.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :E.
            } log:becomes true.
        }.
    };
    r:evidence (
        skolem:lemma15
        [ a r:Fact; r:gives {{
            :Pat :canDo :E.
        } log:becomes true}]
    );
    r:rule [ a r:Fact; r:gives {{
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        })).
        {
            :Pat :canDo :E.
        } log:becomes true.
    } => {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            } {
                {
                    :Pat a vcard:Individual.
                    :Pat :canDo :A.
                } => ({
                    :Pat :canDo :E.
                } {
                    :Pat :canDo :D.
                }).
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :E.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :E.
            } log:becomes true.
        }.
    }}].

skolem:lemma14 a r:Inference;
    r:gives {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            } {
                {
                    :Pat a vcard:Individual.
                    :Pat :canDo :A.
                } => ({
                    :Pat :canDo :E.
                } {
                    :Pat :canDo :D.
                }).
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :D.
            } log:becomes true.
        }.
    };
    r:evidence (
        skolem:lemma16
        [ a r:Fact; r:gives {{
            :Pat :canDo :D.
        } log:becomes true}]
    );
    r:rule [ a r:Fact; r:gives {{
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        })).
        {
            :Pat :canDo :D.
        } log:becomes true.
    } => {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            } {
                {
                    :Pat a vcard:Individual.
                    :Pat :canDo :A.
                } => ({
                    :Pat :canDo :E.
                } {
                    :Pat :canDo :D.
                }).
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :D.
            } log:becomes true.
        }.
    }}].

skolem:lemma15 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :E.
        })).
    };
    r:evidence (
        skolem:lemma17
        [ a r:Fact; r:gives {:Pat :canDo :E}]
        [ a r:Fact; r:gives {true log:callWithCut true}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :E.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    } {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :E.
    })];
    r:rule skolem:lemma18.

skolem:lemma16 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        })).
    };
    r:evidence (
        [ a r:Fact; r:gives {{
            :Pat a vcard:Individual.
            :Pat :canDo :D.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :F.
        })}]
        [ a r:Fact; r:gives {({
            :Pat :canDo :E.
        } {
            :Pat :canDo :F.
        }) list:member {
            :Pat :canDo :E.
        }}]
        skolem:lemma19
        [ a r:Fact; r:gives {({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        }) list:notMember {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :D.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :F.
            }).
        }}]
        [ a r:Fact; r:gives {(({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        }) ({
            {
                :Pat a vcard:Individual.
                :Pat :canDo :D.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :F.
            }).
        })) list:append ({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :D.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :F.
            }).
        })}]
        [ a r:Fact; r:gives {(({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        }) ({
            :Pat :canDo :E.
        })) list:append ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        })}]
        [ a r:Fact; r:gives {true log:becomes {
            :Pat :canDo :E.
        }}]
        skolem:lemma20
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :D.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo ({
        :Pat :canDo :E.
    } {
        :Pat :canDo :F.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo {
        :Pat :canDo :E.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    } {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    } {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        }).
    } {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :D.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :F.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :D.
    } {
        :Pat :canDo :E.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :D.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :E.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :D.
    } {
        :Pat :canDo :E.
    })];
    r:rule skolem:lemma8.

skolem:lemma17 a r:Extraction;
    r:gives {
        :Pat a vcard:Individual.
    };
    r:because [ a r:Parsing; r:source <file:///home/jdroo/github.com/eyereasoner/eye/reasoning/ulr/steps.n3>].

skolem:lemma18 a r:Extraction;
    r:gives {
        @forAll var:x_0. @forSome var:x_1, var:x_2. {
            (var:x_0 {
                true log:callWithCut true.
            }) log:conjunction true.
        } => {
            var:x_0 :findModel (var:x_1 var:x_2 var:x_2).
        }.
    };
    r:because [ a r:Parsing; r:source <file:///home/jdroo/github.com/eyereasoner/eye/reasoning/ulr/steps.n3>].

skolem:lemma19 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :D.
        } log:call true.
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:rule [ a r:Fact; r:gives {true => {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :D.
        } log:call true.
    }}].

skolem:lemma20 a r:Inference;
    r:gives {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            } {
                {
                    :Pat a vcard:Individual.
                    :Pat :canDo :A.
                } => ({
                    :Pat :canDo :E.
                } {
                    :Pat :canDo :D.
                }).
            } {
                {
                    :Pat a vcard:Individual.
                    :Pat :canDo :D.
                } => ({
                    :Pat :canDo :E.
                } {
                    :Pat :canDo :F.
                }).
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            } {
                :Pat :canDo :E.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :E.
            } log:becomes true.
        }.
    };
    r:evidence (
        skolem:lemma21
        [ a r:Fact; r:gives {{
            :Pat :canDo :E.
        } log:becomes true}]
    );
    r:rule [ a r:Fact; r:gives {{
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :D.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :F.
            }).
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        })).
        {
            :Pat :canDo :E.
        } log:becomes true.
    } => {
        {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :E.
            } :findModel (({
                {
                    :Pat a vcard:Individual.
                } => ({
                    :Pat :canDo :A.
                } {
                    :Pat :canDo :B.
                }).
            } {
                {
                    :Pat a vcard:Individual.
                    :Pat :canDo :A.
                } => ({
                    :Pat :canDo :E.
                } {
                    :Pat :canDo :D.
                }).
            } {
                {
                    :Pat a vcard:Individual.
                    :Pat :canDo :D.
                } => ({
                    :Pat :canDo :E.
                } {
                    :Pat :canDo :F.
                }).
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            } {
                :Pat :canDo :E.
            }) ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :D.
            } {
                :Pat :canDo :E.
            })).
        } log:callWithCleanup {
            {
                :Pat :canDo :E.
            } log:becomes true.
        }.
    }}].

skolem:lemma21 a r:Inference;
    r:gives {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :E.
        } :findModel (({
            {
                :Pat a vcard:Individual.
            } => ({
                :Pat :canDo :A.
            } {
                :Pat :canDo :B.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :A.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :D.
            }).
        } {
            {
                :Pat a vcard:Individual.
                :Pat :canDo :D.
            } => ({
                :Pat :canDo :E.
            } {
                :Pat :canDo :F.
            }).
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        }) ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :D.
        } {
            :Pat :canDo :E.
        })).
    };
    r:evidence (
        skolem:lemma17
        [ a r:Fact; r:gives {:Pat :canDo :E}]
        [ a r:Fact; r:gives {true log:callWithCut true}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :Pat a vcard:Individual.
        :Pat :canDo :E.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo ({
        {
            :Pat a vcard:Individual.
        } => ({
            :Pat :canDo :A.
        } {
            :Pat :canDo :B.
        }).
    } {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :A.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :D.
        }).
    } {
        {
            :Pat a vcard:Individual.
            :Pat :canDo :D.
        } => ({
            :Pat :canDo :E.
        } {
            :Pat :canDo :F.
        }).
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ({
        :Pat :canDo :A.
    } {
        :Pat :canDo :D.
    } {
        :Pat :canDo :E.
    })];
    r:rule skolem:lemma18.

