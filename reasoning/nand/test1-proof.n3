@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix : <urn:example:>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:gives {
        :P a :Test.
        :test :is true.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        :P a :Test.
    };
    r:evidence (
        skolem:lemma3
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "http://www.w3.org/1999/02/22-rdf-syntax-ns#type"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:P"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "urn:example:Test"]];
    r:rule skolem:lemma4.

skolem:lemma2 a r:Inference;
    r:gives {
        :test :is true.
    };
    r:evidence (
        skolem:lemma5
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "urn:example:is"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "urn:example:test"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo true];
    r:rule skolem:lemma4.

skolem:lemma3 a r:Inference;
    r:gives {
        :P a :Test.
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:rule skolem:lemma6.

skolem:lemma4 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2. {
            var:x_1 var:x_0 var:x_2.
        } => {
            var:x_1 var:x_0 var:x_2.
        }.
    };
    r:because [ a r:Parsing; r:source <http://eulersharp.sourceforge.net/2003/03swap/pass>].

skolem:lemma5 a r:Inference;
    r:gives {
        :test :is true.
    };
    r:evidence (
        skolem:lemma3
    );
    r:rule skolem:lemma7.

skolem:lemma6 a r:Inference;
    r:gives {
        true => {
            :P a :Test.
        }.
    };
    r:evidence (
        [ a r:Fact; r:gives {<https://eyereasoner.github.io/eye/reasoning/nand/nand.n3#nand> log:equalTo <https://eyereasoner.github.io/eye/reasoning/nand/nand.n3#nand>}]
        [ a r:Fact; r:gives {{
            {
                :P a :Test.
            } => false.
        } => false}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo {
        :P a :Test.
    }];
    r:rule skolem:lemma8.

skolem:lemma7 a r:Extraction;
    r:gives {
        {
            :P a :Test.
        } => {
            :test :is true.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/nand/test1.n3>].

skolem:lemma8 a r:Extraction;
    r:gives {
        @forAll var:x_0. {
            <https://eyereasoner.github.io/eye/reasoning/nand/nand.n3#nand> log:equalTo <https://eyereasoner.github.io/eye/reasoning/nand/nand.n3#nand>.
            {
                var:x_0 => false.
            } => false.
        } => {
            true => var:x_0.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/nand/nand.n3>].

