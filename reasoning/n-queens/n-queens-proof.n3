@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix : <http://eexample.org/#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:component skolem:lemma4;
    r:component skolem:lemma5;
    r:component skolem:lemma6;
    r:component skolem:lemma7;
    r:component skolem:lemma8;
    r:component skolem:lemma9;
    r:component skolem:lemma10;
    r:component skolem:lemma11;
    r:component skolem:lemma12;
    r:component skolem:lemma13;
    r:component skolem:lemma14;
    r:component skolem:lemma15;
    r:component skolem:lemma16;
    r:component skolem:lemma17;
    r:component skolem:lemma18;
    r:component skolem:lemma19;
    r:component skolem:lemma20;
    r:component skolem:lemma21;
    r:component skolem:lemma22;
    r:component skolem:lemma23;
    r:component skolem:lemma24;
    r:component skolem:lemma25;
    r:component skolem:lemma26;
    r:component skolem:lemma27;
    r:component skolem:lemma28;
    r:component skolem:lemma29;
    r:component skolem:lemma30;
    r:component skolem:lemma31;
    r:component skolem:lemma32;
    r:component skolem:lemma33;
    r:component skolem:lemma34;
    r:component skolem:lemma35;
    r:component skolem:lemma36;
    r:component skolem:lemma37;
    r:component skolem:lemma38;
    r:component skolem:lemma39;
    r:component skolem:lemma40;
    r:component skolem:lemma41;
    r:component skolem:lemma42;
    r:component skolem:lemma43;
    r:component skolem:lemma44;
    r:component skolem:lemma45;
    r:component skolem:lemma46;
    r:component skolem:lemma47;
    r:component skolem:lemma48;
    r:component skolem:lemma49;
    r:component skolem:lemma50;
    r:component skolem:lemma51;
    r:component skolem:lemma52;
    r:component skolem:lemma53;
    r:component skolem:lemma54;
    r:component skolem:lemma55;
    r:component skolem:lemma56;
    r:component skolem:lemma57;
    r:component skolem:lemma58;
    r:component skolem:lemma59;
    r:component skolem:lemma60;
    r:component skolem:lemma61;
    r:component skolem:lemma62;
    r:component skolem:lemma63;
    r:component skolem:lemma64;
    r:component skolem:lemma65;
    r:component skolem:lemma66;
    r:component skolem:lemma67;
    r:component skolem:lemma68;
    r:component skolem:lemma69;
    r:component skolem:lemma70;
    r:component skolem:lemma71;
    r:component skolem:lemma72;
    r:component skolem:lemma73;
    r:component skolem:lemma74;
    r:component skolem:lemma75;
    r:component skolem:lemma76;
    r:component skolem:lemma77;
    r:component skolem:lemma78;
    r:component skolem:lemma79;
    r:component skolem:lemma80;
    r:component skolem:lemma81;
    r:component skolem:lemma82;
    r:component skolem:lemma83;
    r:component skolem:lemma84;
    r:component skolem:lemma85;
    r:component skolem:lemma86;
    r:component skolem:lemma87;
    r:component skolem:lemma88;
    r:component skolem:lemma89;
    r:component skolem:lemma90;
    r:component skolem:lemma91;
    r:component skolem:lemma92;
    r:gives {
        8 :queens (4 2 7 3 6 8 5 1).
        8 :queens (5 2 4 7 3 8 6 1).
        8 :queens (3 5 2 8 6 4 7 1).
        8 :queens (3 6 4 2 8 5 7 1).
        8 :queens (5 7 1 3 8 6 4 2).
        8 :queens (4 6 8 3 1 7 5 2).
        8 :queens (3 6 8 1 4 7 5 2).
        8 :queens (5 3 8 4 7 1 6 2).
        8 :queens (5 7 4 1 3 8 6 2).
        8 :queens (4 1 5 8 6 3 7 2).
        8 :queens (3 6 4 1 8 5 7 2).
        8 :queens (4 7 5 3 1 6 8 2).
        8 :queens (6 4 2 8 5 7 1 3).
        8 :queens (6 4 7 1 8 2 5 3).
        8 :queens (1 7 4 6 8 2 5 3).
        8 :queens (6 8 2 4 1 7 5 3).
        8 :queens (6 2 7 1 4 8 5 3).
        8 :queens (4 7 1 8 5 2 6 3).
        8 :queens (5 8 4 1 7 2 6 3).
        8 :queens (4 8 1 5 7 2 6 3).
        8 :queens (2 7 5 8 1 4 6 3).
        8 :queens (1 7 5 8 2 4 6 3).
        8 :queens (2 5 7 4 1 8 6 3).
        8 :queens (4 2 7 5 1 8 6 3).
        8 :queens (5 7 1 4 2 8 6 3).
        8 :queens (6 4 1 5 8 2 7 3).
        8 :queens (5 1 4 6 8 2 7 3).
        8 :queens (5 2 6 1 7 4 8 3).
        8 :queens (6 3 7 2 8 5 1 4).
        8 :queens (2 7 3 6 8 5 1 4).
        8 :queens (7 3 1 6 8 5 2 4).
        8 :queens (5 1 8 6 3 7 2 4).
        8 :queens (1 5 8 6 3 7 2 4).
        8 :queens (3 6 8 1 5 7 2 4).
        8 :queens (6 3 1 7 5 8 2 4).
        8 :queens (7 5 3 1 6 8 2 4).
        8 :queens (7 3 8 2 5 1 6 4).
        8 :queens (5 3 1 7 2 8 6 4).
        8 :queens (2 5 7 1 3 8 6 4).
        8 :queens (3 6 2 5 8 1 7 4).
        8 :queens (6 1 5 2 8 3 7 4).
        8 :queens (8 3 1 6 2 5 7 4).
        8 :queens (2 8 6 1 3 5 7 4).
        8 :queens (5 7 2 6 3 1 8 4).
        8 :queens (3 6 2 7 5 1 8 4).
        8 :queens (6 2 7 1 3 5 8 4).
        8 :queens (3 7 2 8 6 4 1 5).
        8 :queens (6 3 7 2 4 8 1 5).
        8 :queens (4 2 7 3 6 8 1 5).
        8 :queens (7 1 3 8 6 4 2 5).
        8 :queens (1 6 8 3 7 4 2 5).
        8 :queens (3 8 4 7 1 6 2 5).
        8 :queens (6 3 7 4 1 8 2 5).
        8 :queens (7 4 2 8 6 1 3 5).
        8 :queens (4 6 8 2 7 1 3 5).
        8 :queens (2 6 1 7 4 8 3 5).
        8 :queens (2 4 6 8 3 1 7 5).
        8 :queens (3 6 8 2 4 1 7 5).
        8 :queens (6 3 1 8 4 2 7 5).
        8 :queens (8 4 1 3 6 2 7 5).
        8 :queens (4 8 1 3 6 2 7 5).
        8 :queens (2 6 8 3 1 4 7 5).
        8 :queens (7 2 6 3 1 4 8 5).
        8 :queens (3 6 2 7 1 4 8 5).
        8 :queens (4 7 3 8 2 5 1 6).
        8 :queens (4 8 5 3 1 7 2 6).
        8 :queens (3 5 8 4 1 7 2 6).
        8 :queens (4 2 8 5 7 1 3 6).
        8 :queens (5 7 2 4 8 1 3 6).
        8 :queens (7 4 2 5 8 1 3 6).
        8 :queens (8 2 4 1 7 5 3 6).
        8 :queens (7 2 4 1 8 5 3 6).
        8 :queens (5 1 8 4 2 7 3 6).
        8 :queens (4 1 5 8 2 7 3 6).
        8 :queens (5 2 8 1 4 7 3 6).
        8 :queens (3 7 2 8 5 1 4 6).
        8 :queens (3 1 7 5 8 2 4 6).
        8 :queens (8 2 5 3 1 7 4 6).
        8 :queens (3 5 2 8 1 7 4 6).
        8 :queens (3 5 7 1 4 2 8 6).
        8 :queens (5 2 4 6 8 3 1 7).
        8 :queens (6 3 5 8 1 4 2 7).
        8 :queens (5 8 4 1 3 6 2 7).
        8 :queens (4 2 5 8 6 1 3 7).
        8 :queens (4 6 1 5 2 8 3 7).
        8 :queens (6 3 1 8 5 2 4 7).
        8 :queens (5 3 1 6 8 2 4 7).
        8 :queens (4 2 8 6 1 3 5 7).
        8 :queens (6 3 5 7 1 4 2 8).
        8 :queens (6 4 7 1 3 5 2 8).
        8 :queens (4 7 5 2 6 1 3 8).
        8 :queens (5 7 2 6 3 1 4 8).
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        8 :queens (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        skolem:lemma93
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma2 a r:Inference;
    r:gives {
        8 :queens (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        skolem:lemma94
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma3 a r:Inference;
    r:gives {
        8 :queens (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        skolem:lemma95
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma4 a r:Inference;
    r:gives {
        8 :queens (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        skolem:lemma96
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma5 a r:Inference;
    r:gives {
        8 :queens (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        skolem:lemma97
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma6 a r:Inference;
    r:gives {
        8 :queens (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        skolem:lemma98
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma7 a r:Inference;
    r:gives {
        8 :queens (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        skolem:lemma99
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma8 a r:Inference;
    r:gives {
        8 :queens (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        skolem:lemma100
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma9 a r:Inference;
    r:gives {
        8 :queens (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        skolem:lemma101
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma10 a r:Inference;
    r:gives {
        8 :queens (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        skolem:lemma102
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma11 a r:Inference;
    r:gives {
        8 :queens (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        skolem:lemma103
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma12 a r:Inference;
    r:gives {
        8 :queens (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        skolem:lemma104
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma13 a r:Inference;
    r:gives {
        8 :queens (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        skolem:lemma105
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma14 a r:Inference;
    r:gives {
        8 :queens (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        skolem:lemma106
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma15 a r:Inference;
    r:gives {
        8 :queens (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        skolem:lemma107
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma16 a r:Inference;
    r:gives {
        8 :queens (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        skolem:lemma108
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma17 a r:Inference;
    r:gives {
        8 :queens (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        skolem:lemma109
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma18 a r:Inference;
    r:gives {
        8 :queens (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        skolem:lemma110
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma19 a r:Inference;
    r:gives {
        8 :queens (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        skolem:lemma111
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma20 a r:Inference;
    r:gives {
        8 :queens (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        skolem:lemma112
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma21 a r:Inference;
    r:gives {
        8 :queens (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        skolem:lemma113
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma22 a r:Inference;
    r:gives {
        8 :queens (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        skolem:lemma114
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma23 a r:Inference;
    r:gives {
        8 :queens (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        skolem:lemma115
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma24 a r:Inference;
    r:gives {
        8 :queens (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        skolem:lemma116
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma25 a r:Inference;
    r:gives {
        8 :queens (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        skolem:lemma117
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma26 a r:Inference;
    r:gives {
        8 :queens (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        skolem:lemma118
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma27 a r:Inference;
    r:gives {
        8 :queens (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        skolem:lemma119
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma28 a r:Inference;
    r:gives {
        8 :queens (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        skolem:lemma120
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma29 a r:Inference;
    r:gives {
        8 :queens (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        skolem:lemma121
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma30 a r:Inference;
    r:gives {
        8 :queens (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        skolem:lemma122
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma31 a r:Inference;
    r:gives {
        8 :queens (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        skolem:lemma123
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma32 a r:Inference;
    r:gives {
        8 :queens (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        skolem:lemma124
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma33 a r:Inference;
    r:gives {
        8 :queens (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        skolem:lemma125
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma34 a r:Inference;
    r:gives {
        8 :queens (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        skolem:lemma126
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma35 a r:Inference;
    r:gives {
        8 :queens (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        skolem:lemma127
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma36 a r:Inference;
    r:gives {
        8 :queens (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        skolem:lemma128
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma37 a r:Inference;
    r:gives {
        8 :queens (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        skolem:lemma129
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma38 a r:Inference;
    r:gives {
        8 :queens (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        skolem:lemma130
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma39 a r:Inference;
    r:gives {
        8 :queens (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        skolem:lemma131
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma40 a r:Inference;
    r:gives {
        8 :queens (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        skolem:lemma132
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma41 a r:Inference;
    r:gives {
        8 :queens (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        skolem:lemma133
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma42 a r:Inference;
    r:gives {
        8 :queens (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        skolem:lemma134
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma43 a r:Inference;
    r:gives {
        8 :queens (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        skolem:lemma135
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma44 a r:Inference;
    r:gives {
        8 :queens (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        skolem:lemma136
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma45 a r:Inference;
    r:gives {
        8 :queens (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        skolem:lemma137
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma46 a r:Inference;
    r:gives {
        8 :queens (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        skolem:lemma138
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma47 a r:Inference;
    r:gives {
        8 :queens (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        skolem:lemma139
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma48 a r:Inference;
    r:gives {
        8 :queens (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        skolem:lemma140
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma49 a r:Inference;
    r:gives {
        8 :queens (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        skolem:lemma141
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma50 a r:Inference;
    r:gives {
        8 :queens (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        skolem:lemma142
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma51 a r:Inference;
    r:gives {
        8 :queens (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        skolem:lemma143
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma52 a r:Inference;
    r:gives {
        8 :queens (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        skolem:lemma144
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma53 a r:Inference;
    r:gives {
        8 :queens (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        skolem:lemma145
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma54 a r:Inference;
    r:gives {
        8 :queens (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        skolem:lemma146
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma55 a r:Inference;
    r:gives {
        8 :queens (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        skolem:lemma147
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma56 a r:Inference;
    r:gives {
        8 :queens (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        skolem:lemma148
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma57 a r:Inference;
    r:gives {
        8 :queens (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        skolem:lemma149
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma58 a r:Inference;
    r:gives {
        8 :queens (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        skolem:lemma150
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma59 a r:Inference;
    r:gives {
        8 :queens (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        skolem:lemma151
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma60 a r:Inference;
    r:gives {
        8 :queens (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        skolem:lemma152
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma61 a r:Inference;
    r:gives {
        8 :queens (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        skolem:lemma153
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma62 a r:Inference;
    r:gives {
        8 :queens (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        skolem:lemma154
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma63 a r:Inference;
    r:gives {
        8 :queens (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        skolem:lemma155
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma64 a r:Inference;
    r:gives {
        8 :queens (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        skolem:lemma156
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma65 a r:Inference;
    r:gives {
        8 :queens (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        skolem:lemma157
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma66 a r:Inference;
    r:gives {
        8 :queens (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        skolem:lemma158
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma67 a r:Inference;
    r:gives {
        8 :queens (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        skolem:lemma159
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma68 a r:Inference;
    r:gives {
        8 :queens (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        skolem:lemma160
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma69 a r:Inference;
    r:gives {
        8 :queens (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        skolem:lemma161
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma70 a r:Inference;
    r:gives {
        8 :queens (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        skolem:lemma162
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma71 a r:Inference;
    r:gives {
        8 :queens (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        skolem:lemma163
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma72 a r:Inference;
    r:gives {
        8 :queens (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        skolem:lemma164
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma73 a r:Inference;
    r:gives {
        8 :queens (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        skolem:lemma165
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma74 a r:Inference;
    r:gives {
        8 :queens (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        skolem:lemma166
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma75 a r:Inference;
    r:gives {
        8 :queens (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        skolem:lemma167
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma76 a r:Inference;
    r:gives {
        8 :queens (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        skolem:lemma168
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma77 a r:Inference;
    r:gives {
        8 :queens (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        skolem:lemma169
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma78 a r:Inference;
    r:gives {
        8 :queens (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        skolem:lemma170
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma79 a r:Inference;
    r:gives {
        8 :queens (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        skolem:lemma171
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma80 a r:Inference;
    r:gives {
        8 :queens (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        skolem:lemma172
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma81 a r:Inference;
    r:gives {
        8 :queens (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        skolem:lemma173
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma82 a r:Inference;
    r:gives {
        8 :queens (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        skolem:lemma174
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma83 a r:Inference;
    r:gives {
        8 :queens (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        skolem:lemma175
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma84 a r:Inference;
    r:gives {
        8 :queens (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        skolem:lemma176
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma85 a r:Inference;
    r:gives {
        8 :queens (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        skolem:lemma177
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma86 a r:Inference;
    r:gives {
        8 :queens (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        skolem:lemma178
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma87 a r:Inference;
    r:gives {
        8 :queens (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        skolem:lemma179
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma88 a r:Inference;
    r:gives {
        8 :queens (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        skolem:lemma180
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma89 a r:Inference;
    r:gives {
        8 :queens (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        skolem:lemma181
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma90 a r:Inference;
    r:gives {
        8 :queens (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        skolem:lemma182
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma91 a r:Inference;
    r:gives {
        8 :queens (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        skolem:lemma183
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma92 a r:Inference;
    r:gives {
        8 :queens (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        skolem:lemma184
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0. {
        8 :queens var:x_0.
    } => {
        8 :queens var:x_0.
    }}].

skolem:lemma93 a r:Inference;
    r:gives {
        8 :queens (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma186
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma187.

skolem:lemma94 a r:Inference;
    r:gives {
        8 :queens (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma188
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma187.

skolem:lemma95 a r:Inference;
    r:gives {
        8 :queens (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma189
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma187.

skolem:lemma96 a r:Inference;
    r:gives {
        8 :queens (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma190
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma187.

skolem:lemma97 a r:Inference;
    r:gives {
        8 :queens (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma191
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma187.

skolem:lemma98 a r:Inference;
    r:gives {
        8 :queens (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma192
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma187.

skolem:lemma99 a r:Inference;
    r:gives {
        8 :queens (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma193
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma187.

skolem:lemma100 a r:Inference;
    r:gives {
        8 :queens (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma194
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma187.

skolem:lemma101 a r:Inference;
    r:gives {
        8 :queens (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma195
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma187.

skolem:lemma102 a r:Inference;
    r:gives {
        8 :queens (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma196
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma187.

skolem:lemma103 a r:Inference;
    r:gives {
        8 :queens (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma197
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma187.

skolem:lemma104 a r:Inference;
    r:gives {
        8 :queens (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma198
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma187.

skolem:lemma105 a r:Inference;
    r:gives {
        8 :queens (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma199
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma187.

skolem:lemma106 a r:Inference;
    r:gives {
        8 :queens (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma200
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma187.

skolem:lemma107 a r:Inference;
    r:gives {
        8 :queens (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma201
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma187.

skolem:lemma108 a r:Inference;
    r:gives {
        8 :queens (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma202
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma187.

skolem:lemma109 a r:Inference;
    r:gives {
        8 :queens (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma203
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma187.

skolem:lemma110 a r:Inference;
    r:gives {
        8 :queens (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma204
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma187.

skolem:lemma111 a r:Inference;
    r:gives {
        8 :queens (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma205
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma187.

skolem:lemma112 a r:Inference;
    r:gives {
        8 :queens (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma206
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma187.

skolem:lemma113 a r:Inference;
    r:gives {
        8 :queens (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma207
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma187.

skolem:lemma114 a r:Inference;
    r:gives {
        8 :queens (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma208
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma187.

skolem:lemma115 a r:Inference;
    r:gives {
        8 :queens (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma209
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma187.

skolem:lemma116 a r:Inference;
    r:gives {
        8 :queens (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma210
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma187.

skolem:lemma117 a r:Inference;
    r:gives {
        8 :queens (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma211
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma187.

skolem:lemma118 a r:Inference;
    r:gives {
        8 :queens (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma212
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma187.

skolem:lemma119 a r:Inference;
    r:gives {
        8 :queens (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma213
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma187.

skolem:lemma120 a r:Inference;
    r:gives {
        8 :queens (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma214
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma187.

skolem:lemma121 a r:Inference;
    r:gives {
        8 :queens (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma215
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma187.

skolem:lemma122 a r:Inference;
    r:gives {
        8 :queens (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma216
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma187.

skolem:lemma123 a r:Inference;
    r:gives {
        8 :queens (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma217
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma187.

skolem:lemma124 a r:Inference;
    r:gives {
        8 :queens (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma218
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma187.

skolem:lemma125 a r:Inference;
    r:gives {
        8 :queens (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma219
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma187.

skolem:lemma126 a r:Inference;
    r:gives {
        8 :queens (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma220
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma187.

skolem:lemma127 a r:Inference;
    r:gives {
        8 :queens (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma221
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma187.

skolem:lemma128 a r:Inference;
    r:gives {
        8 :queens (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma222
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma187.

skolem:lemma129 a r:Inference;
    r:gives {
        8 :queens (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma223
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma187.

skolem:lemma130 a r:Inference;
    r:gives {
        8 :queens (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma224
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma187.

skolem:lemma131 a r:Inference;
    r:gives {
        8 :queens (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma225
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma187.

skolem:lemma132 a r:Inference;
    r:gives {
        8 :queens (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma226
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma187.

skolem:lemma133 a r:Inference;
    r:gives {
        8 :queens (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma227
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma187.

skolem:lemma134 a r:Inference;
    r:gives {
        8 :queens (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma228
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma187.

skolem:lemma135 a r:Inference;
    r:gives {
        8 :queens (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma229
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma187.

skolem:lemma136 a r:Inference;
    r:gives {
        8 :queens (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma230
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma187.

skolem:lemma137 a r:Inference;
    r:gives {
        8 :queens (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma231
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma187.

skolem:lemma138 a r:Inference;
    r:gives {
        8 :queens (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma232
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma187.

skolem:lemma139 a r:Inference;
    r:gives {
        8 :queens (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma233
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma187.

skolem:lemma140 a r:Inference;
    r:gives {
        8 :queens (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma234
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma187.

skolem:lemma141 a r:Inference;
    r:gives {
        8 :queens (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma235
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma187.

skolem:lemma142 a r:Inference;
    r:gives {
        8 :queens (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma236
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma187.

skolem:lemma143 a r:Inference;
    r:gives {
        8 :queens (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma237
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma187.

skolem:lemma144 a r:Inference;
    r:gives {
        8 :queens (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma238
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma187.

skolem:lemma145 a r:Inference;
    r:gives {
        8 :queens (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma239
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma187.

skolem:lemma146 a r:Inference;
    r:gives {
        8 :queens (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma240
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma187.

skolem:lemma147 a r:Inference;
    r:gives {
        8 :queens (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma241
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma187.

skolem:lemma148 a r:Inference;
    r:gives {
        8 :queens (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma242
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma187.

skolem:lemma149 a r:Inference;
    r:gives {
        8 :queens (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma243
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma187.

skolem:lemma150 a r:Inference;
    r:gives {
        8 :queens (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma244
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma187.

skolem:lemma151 a r:Inference;
    r:gives {
        8 :queens (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma245
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma187.

skolem:lemma152 a r:Inference;
    r:gives {
        8 :queens (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma246
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma187.

skolem:lemma153 a r:Inference;
    r:gives {
        8 :queens (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma247
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma187.

skolem:lemma154 a r:Inference;
    r:gives {
        8 :queens (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma248
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma187.

skolem:lemma155 a r:Inference;
    r:gives {
        8 :queens (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma249
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma187.

skolem:lemma156 a r:Inference;
    r:gives {
        8 :queens (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma250
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma187.

skolem:lemma157 a r:Inference;
    r:gives {
        8 :queens (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma251
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma187.

skolem:lemma158 a r:Inference;
    r:gives {
        8 :queens (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma252
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma187.

skolem:lemma159 a r:Inference;
    r:gives {
        8 :queens (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma253
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma187.

skolem:lemma160 a r:Inference;
    r:gives {
        8 :queens (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma254
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma187.

skolem:lemma161 a r:Inference;
    r:gives {
        8 :queens (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma255
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma187.

skolem:lemma162 a r:Inference;
    r:gives {
        8 :queens (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma256
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma187.

skolem:lemma163 a r:Inference;
    r:gives {
        8 :queens (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma257
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma187.

skolem:lemma164 a r:Inference;
    r:gives {
        8 :queens (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma258
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma187.

skolem:lemma165 a r:Inference;
    r:gives {
        8 :queens (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma259
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma187.

skolem:lemma166 a r:Inference;
    r:gives {
        8 :queens (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma260
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma187.

skolem:lemma167 a r:Inference;
    r:gives {
        8 :queens (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma261
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma187.

skolem:lemma168 a r:Inference;
    r:gives {
        8 :queens (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma262
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma187.

skolem:lemma169 a r:Inference;
    r:gives {
        8 :queens (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma263
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma187.

skolem:lemma170 a r:Inference;
    r:gives {
        8 :queens (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma264
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma187.

skolem:lemma171 a r:Inference;
    r:gives {
        8 :queens (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma265
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma187.

skolem:lemma172 a r:Inference;
    r:gives {
        8 :queens (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma266
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma187.

skolem:lemma173 a r:Inference;
    r:gives {
        8 :queens (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma267
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma187.

skolem:lemma174 a r:Inference;
    r:gives {
        8 :queens (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma268
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma187.

skolem:lemma175 a r:Inference;
    r:gives {
        8 :queens (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma269
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma187.

skolem:lemma176 a r:Inference;
    r:gives {
        8 :queens (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma270
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma187.

skolem:lemma177 a r:Inference;
    r:gives {
        8 :queens (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma271
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma187.

skolem:lemma178 a r:Inference;
    r:gives {
        8 :queens (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma272
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma187.

skolem:lemma179 a r:Inference;
    r:gives {
        8 :queens (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma273
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma187.

skolem:lemma180 a r:Inference;
    r:gives {
        8 :queens (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma274
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma187.

skolem:lemma181 a r:Inference;
    r:gives {
        8 :queens (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma275
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma187.

skolem:lemma182 a r:Inference;
    r:gives {
        8 :queens (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma276
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma187.

skolem:lemma183 a r:Inference;
    r:gives {
        8 :queens (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma277
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma187.

skolem:lemma184 a r:Inference;
    r:gives {
        8 :queens (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        skolem:lemma185
        skolem:lemma278
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma187.

skolem:lemma185 a r:Inference;
    r:gives {
        (1 8) :range (1 2 3 4 5 6 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:firstRest (1 (2 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {1 math:lessThan 8}]
        [ a r:Fact; r:gives {(1 1) math:sum 2}]
        skolem:lemma279
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 2];
    r:rule skolem:lemma280.

skolem:lemma186 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (1 (2 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1) list:firstRest (1 ())}]
        skolem:lemma281
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma282.

skolem:lemma187 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2. {
            var:x_0 :queens var:x_2.
        } <= {
            (1 var:x_0) :range var:x_1.
            (var:x_1 ()) :queens3 var:x_2.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>].

skolem:lemma188 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (1 (2 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1) list:firstRest (1 ())}]
        skolem:lemma283
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma282.

skolem:lemma189 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (1 (2 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1) list:firstRest (1 ())}]
        skolem:lemma284
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma282.

skolem:lemma190 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (1 (2 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1) list:firstRest (1 ())}]
        skolem:lemma285
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma282.

skolem:lemma191 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (2 (1 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2) list:firstRest (2 ())}]
        skolem:lemma286
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma282.

skolem:lemma192 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (2 (1 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2) list:firstRest (2 ())}]
        skolem:lemma287
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma193 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (2 (1 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2) list:firstRest (2 ())}]
        skolem:lemma288
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma194 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (2 (1 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2) list:firstRest (2 ())}]
        skolem:lemma289
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma282.

skolem:lemma195 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (2 (1 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2) list:firstRest (2 ())}]
        skolem:lemma290
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma282.

skolem:lemma196 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (2 (1 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2) list:firstRest (2 ())}]
        skolem:lemma291
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma282.

skolem:lemma197 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (2 (1 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2) list:firstRest (2 ())}]
        skolem:lemma292
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma282.

skolem:lemma198 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (2 (1 3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2) list:firstRest (2 ())}]
        skolem:lemma293
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma282.

skolem:lemma199 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma294
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma282.

skolem:lemma200 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma295
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma201 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma296
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma202 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma297
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma282.

skolem:lemma203 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma298
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma282.

skolem:lemma204 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma299
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma205 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma300
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma206 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma301
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma207 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma302
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma208 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma303
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma209 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma304
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma210 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma305
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma211 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma306
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma212 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma307
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma213 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma308
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma214 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (3 (1 2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3) list:firstRest (3 ())}]
        skolem:lemma309
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma282.

skolem:lemma215 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma310
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma216 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma311
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma217 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma312
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma282.

skolem:lemma218 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma313
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma219 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma314
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma220 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma315
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma221 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma316
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma222 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma317
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma223 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma318
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma282.

skolem:lemma224 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma319
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma225 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma320
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma226 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma321
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma282.

skolem:lemma227 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma322
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma282.

skolem:lemma228 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma323
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma229 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma324
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma230 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma325
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma231 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma326
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma232 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (4 (1 2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4) list:firstRest (4 ())}]
        skolem:lemma327
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma282.

skolem:lemma233 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma328
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma282.

skolem:lemma234 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma329
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma235 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma330
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma236 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma331
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma237 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma332
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma238 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma333
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma282.

skolem:lemma239 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma334
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma282.

skolem:lemma240 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma335
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma241 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma336
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma242 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma337
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma282.

skolem:lemma243 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma338
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma244 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma339
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma245 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma340
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma246 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma341
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma247 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma342
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma248 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma343
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma282.

skolem:lemma249 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma344
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma250 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (5 (1 2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5) list:firstRest (5 ())}]
        skolem:lemma345
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma251 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma346
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma282.

skolem:lemma252 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma347
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma253 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma348
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma254 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma349
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma255 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma350
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma256 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma351
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma257 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma352
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma258 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma353
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma259 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma354
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma260 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma355
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma261 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma356
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma262 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma357
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma282.

skolem:lemma263 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma358
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma282.

skolem:lemma264 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma359
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma265 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma360
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma266 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (6 (1 2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6) list:firstRest (6 ())}]
        skolem:lemma361
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma282.

skolem:lemma267 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (7 (1 2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7) list:firstRest (7 ())}]
        skolem:lemma362
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma282.

skolem:lemma268 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (7 (1 2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7) list:firstRest (7 ())}]
        skolem:lemma363
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma282.

skolem:lemma269 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (7 (1 2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7) list:firstRest (7 ())}]
        skolem:lemma364
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma282.

skolem:lemma270 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (7 (1 2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7) list:firstRest (7 ())}]
        skolem:lemma365
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma282.

skolem:lemma271 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (7 (1 2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7) list:firstRest (7 ())}]
        skolem:lemma366
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma282.

skolem:lemma272 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (7 (1 2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7) list:firstRest (7 ())}]
        skolem:lemma367
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma273 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (7 (1 2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7) list:firstRest (7 ())}]
        skolem:lemma368
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma274 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (7 (1 2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7) list:firstRest (7 ())}]
        skolem:lemma369
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma282.

skolem:lemma275 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (8 (1 2 3 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8) list:firstRest (8 ())}]
        skolem:lemma370
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma282.

skolem:lemma276 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (8 (1 2 3 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8) list:firstRest (8 ())}]
        skolem:lemma371
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma282.

skolem:lemma277 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (8 (1 2 3 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8) list:firstRest (8 ())}]
        skolem:lemma372
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma282.

skolem:lemma278 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7 8) ()) :queens3 (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7 8) list:select (8 (1 2 3 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack ().
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8) list:firstRest (8 ())}]
        skolem:lemma373
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma282.

skolem:lemma279 a r:Inference;
    r:gives {
        (2 8) :range (2 3 4 5 6 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 6 7 8) list:firstRest (2 (3 4 5 6 7 8))}]
        [ a r:Fact; r:gives {2 math:lessThan 8}]
        [ a r:Fact; r:gives {(2 1) math:sum 3}]
        skolem:lemma374
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 3];
    r:rule skolem:lemma280.

skolem:lemma280 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4. {
            (var:x_1 var:x_3) :range var:x_0.
        } <= {
            var:x_0 list:firstRest (var:x_1 var:x_2).
            var:x_1 math:lessThan var:x_3.
            (var:x_1 1) math:sum var:x_4.
            (var:x_4 var:x_3) :range var:x_2.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>].

skolem:lemma281 a r:Inference;
    r:gives {
        ((2 3 4 5 6 7 8) (1)) :queens3 (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 6 7 8) list:select (5 (2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1) list:firstRest (5 (1))}]
        skolem:lemma375
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma282.

skolem:lemma282 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6. {
            (var:x_0 var:x_3) :queens3 var:x_6.
        } <= {
            var:x_0 list:select (var:x_1 var:x_2).
            ({
                var:x_1 :attack var:x_3.
            } false true) log:ifThenElseIn var:x_4.
            var:x_5 list:firstRest (var:x_1 var:x_3).
            (var:x_2 var:x_5) :queens3 var:x_6.
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>].

skolem:lemma283 a r:Inference;
    r:gives {
        ((2 3 4 5 6 7 8) (1)) :queens3 (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 6 7 8) list:select (6 (2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1) list:firstRest (6 (1))}]
        skolem:lemma376
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma282.

skolem:lemma284 a r:Inference;
    r:gives {
        ((2 3 4 5 6 7 8) (1)) :queens3 (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 6 7 8) list:select (7 (2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1) list:firstRest (7 (1))}]
        skolem:lemma377
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma282.

skolem:lemma285 a r:Inference;
    r:gives {
        ((2 3 4 5 6 7 8) (1)) :queens3 (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 6 7 8) list:select (7 (2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1) list:firstRest (7 (1))}]
        skolem:lemma378
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma282.

skolem:lemma286 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7 8) (2)) :queens3 (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7 8) list:select (4 (1 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2) list:firstRest (4 (2))}]
        skolem:lemma379
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma282.

skolem:lemma287 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7 8) (2)) :queens3 (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7 8) list:select (5 (1 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2) list:firstRest (5 (2))}]
        skolem:lemma380
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma288 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7 8) (2)) :queens3 (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7 8) list:select (5 (1 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2) list:firstRest (5 (2))}]
        skolem:lemma381
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma289 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7 8) (2)) :queens3 (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7 8) list:select (6 (1 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2) list:firstRest (6 (2))}]
        skolem:lemma382
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma282.

skolem:lemma290 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7 8) (2)) :queens3 (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7 8) list:select (6 (1 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2) list:firstRest (6 (2))}]
        skolem:lemma383
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma282.

skolem:lemma291 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7 8) (2)) :queens3 (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7 8) list:select (7 (1 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2) list:firstRest (7 (2))}]
        skolem:lemma384
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma282.

skolem:lemma292 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7 8) (2)) :queens3 (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7 8) list:select (7 (1 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2) list:firstRest (7 (2))}]
        skolem:lemma385
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma282.

skolem:lemma293 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7 8) (2)) :queens3 (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7 8) list:select (8 (1 3 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2) list:firstRest (8 (2))}]
        skolem:lemma386
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma282.

skolem:lemma294 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (1 (2 4 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3) list:firstRest (1 (3))}]
        skolem:lemma387
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma282.

skolem:lemma295 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (5 (1 2 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3) list:firstRest (5 (3))}]
        skolem:lemma388
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma296 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (5 (1 2 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3) list:firstRest (5 (3))}]
        skolem:lemma389
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma297 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (5 (1 2 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3) list:firstRest (5 (3))}]
        skolem:lemma390
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma282.

skolem:lemma298 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (5 (1 2 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3) list:firstRest (5 (3))}]
        skolem:lemma391
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma282.

skolem:lemma299 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (6 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3) list:firstRest (6 (3))}]
        skolem:lemma392
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma300 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (6 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3) list:firstRest (6 (3))}]
        skolem:lemma393
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma301 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (6 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3) list:firstRest (6 (3))}]
        skolem:lemma394
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma302 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (6 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3) list:firstRest (6 (3))}]
        skolem:lemma395
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma303 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (6 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3) list:firstRest (6 (3))}]
        skolem:lemma396
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma304 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (6 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3) list:firstRest (6 (3))}]
        skolem:lemma397
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma305 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (6 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3) list:firstRest (6 (3))}]
        skolem:lemma398
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma306 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (6 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3) list:firstRest (6 (3))}]
        skolem:lemma399
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma307 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (7 (1 2 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3) list:firstRest (7 (3))}]
        skolem:lemma400
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma308 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (7 (1 2 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3) list:firstRest (7 (3))}]
        skolem:lemma401
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma309 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7 8) (3)) :queens3 (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7 8) list:select (8 (1 2 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3) list:firstRest (8 (3))}]
        skolem:lemma402
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma282.

skolem:lemma310 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (1 (2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4) list:firstRest (1 (4))}]
        skolem:lemma403
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma311 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (1 (2 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4) list:firstRest (1 (4))}]
        skolem:lemma404
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma312 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (2 (1 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4) list:firstRest (2 (4))}]
        skolem:lemma405
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma282.

skolem:lemma313 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (2 (1 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4) list:firstRest (2 (4))}]
        skolem:lemma406
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma314 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (2 (1 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4) list:firstRest (2 (4))}]
        skolem:lemma407
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma315 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (2 (1 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4) list:firstRest (2 (4))}]
        skolem:lemma408
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma316 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (2 (1 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4) list:firstRest (2 (4))}]
        skolem:lemma409
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma317 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (2 (1 3 5 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4) list:firstRest (2 (4))}]
        skolem:lemma410
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma318 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (6 (1 2 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4) list:firstRest (6 (4))}]
        skolem:lemma411
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma282.

skolem:lemma319 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (6 (1 2 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4) list:firstRest (6 (4))}]
        skolem:lemma412
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma320 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (6 (1 2 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4) list:firstRest (6 (4))}]
        skolem:lemma413
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma321 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (7 (1 2 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4) list:firstRest (7 (4))}]
        skolem:lemma414
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma282.

skolem:lemma322 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (7 (1 2 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4) list:firstRest (7 (4))}]
        skolem:lemma415
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma282.

skolem:lemma323 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (7 (1 2 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4) list:firstRest (7 (4))}]
        skolem:lemma416
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma324 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (7 (1 2 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4) list:firstRest (7 (4))}]
        skolem:lemma417
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma325 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (8 (1 2 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4) list:firstRest (8 (4))}]
        skolem:lemma418
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma326 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (8 (1 2 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4) list:firstRest (8 (4))}]
        skolem:lemma419
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma327 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7 8) (4)) :queens3 (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7 8) list:select (8 (1 2 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4) list:firstRest (8 (4))}]
        skolem:lemma420
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma282.

skolem:lemma328 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (1 (2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5) list:firstRest (1 (5))}]
        skolem:lemma421
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma282.

skolem:lemma329 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (1 (2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5) list:firstRest (1 (5))}]
        skolem:lemma422
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma330 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (1 (2 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5) list:firstRest (1 (5))}]
        skolem:lemma423
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma331 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (2 (1 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5) list:firstRest (2 (5))}]
        skolem:lemma424
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma332 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (2 (1 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5) list:firstRest (2 (5))}]
        skolem:lemma425
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma333 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (2 (1 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5) list:firstRest (2 (5))}]
        skolem:lemma426
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma282.

skolem:lemma334 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (2 (1 3 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5) list:firstRest (2 (5))}]
        skolem:lemma427
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma282.

skolem:lemma335 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (3 (1 2 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5) list:firstRest (3 (5))}]
        skolem:lemma428
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma336 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (3 (1 2 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5) list:firstRest (3 (5))}]
        skolem:lemma429
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma337 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (3 (1 2 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5) list:firstRest (3 (5))}]
        skolem:lemma430
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma282.

skolem:lemma338 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (7 (1 2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5) list:firstRest (7 (5))}]
        skolem:lemma431
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma339 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (7 (1 2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5) list:firstRest (7 (5))}]
        skolem:lemma432
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma340 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (7 (1 2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5) list:firstRest (7 (5))}]
        skolem:lemma433
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma341 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (7 (1 2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5) list:firstRest (7 (5))}]
        skolem:lemma434
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma342 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (7 (1 2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5) list:firstRest (7 (5))}]
        skolem:lemma435
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma343 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (7 (1 2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5) list:firstRest (7 (5))}]
        skolem:lemma436
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma282.

skolem:lemma344 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (8 (1 2 3 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5) list:firstRest (8 (5))}]
        skolem:lemma437
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma345 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7 8) (5)) :queens3 (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7 8) list:select (8 (1 2 3 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5) list:firstRest (8 (5))}]
        skolem:lemma438
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma346 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (1 (2 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6) list:firstRest (1 (6))}]
        skolem:lemma439
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma282.

skolem:lemma347 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (2 (1 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6) list:firstRest (2 (6))}]
        skolem:lemma440
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma348 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (2 (1 3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6) list:firstRest (2 (6))}]
        skolem:lemma441
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma349 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (3 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6) list:firstRest (3 (6))}]
        skolem:lemma442
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma350 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (3 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6) list:firstRest (3 (6))}]
        skolem:lemma443
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma351 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (3 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6) list:firstRest (3 (6))}]
        skolem:lemma444
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma352 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (3 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6) list:firstRest (3 (6))}]
        skolem:lemma445
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma353 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (3 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6) list:firstRest (3 (6))}]
        skolem:lemma446
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma354 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (3 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6) list:firstRest (3 (6))}]
        skolem:lemma447
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma355 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (3 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6) list:firstRest (3 (6))}]
        skolem:lemma448
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma356 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (3 (1 2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6) list:firstRest (3 (6))}]
        skolem:lemma449
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma357 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (4 (1 2 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6) list:firstRest (4 (6))}]
        skolem:lemma450
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma282.

skolem:lemma358 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (4 (1 2 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6) list:firstRest (4 (6))}]
        skolem:lemma451
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma282.

skolem:lemma359 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (4 (1 2 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6) list:firstRest (4 (6))}]
        skolem:lemma452
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma360 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (4 (1 2 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6) list:firstRest (4 (6))}]
        skolem:lemma453
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma361 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7 8) (6)) :queens3 (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7 8) list:select (8 (1 2 3 4 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6) list:firstRest (8 (6))}]
        skolem:lemma454
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma282.

skolem:lemma362 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 8) (7)) :queens3 (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 8) list:select (1 (2 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7) list:firstRest (1 (7))}]
        skolem:lemma455
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma282.

skolem:lemma363 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 8) (7)) :queens3 (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 8) list:select (2 (1 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7) list:firstRest (2 (7))}]
        skolem:lemma456
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma282.

skolem:lemma364 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 8) (7)) :queens3 (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 8) list:select (2 (1 3 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7) list:firstRest (2 (7))}]
        skolem:lemma457
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma282.

skolem:lemma365 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 8) (7)) :queens3 (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 8) list:select (3 (1 2 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7) list:firstRest (3 (7))}]
        skolem:lemma458
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma282.

skolem:lemma366 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 8) (7)) :queens3 (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 8) list:select (3 (1 2 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7) list:firstRest (3 (7))}]
        skolem:lemma459
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma282.

skolem:lemma367 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 8) (7)) :queens3 (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 8) list:select (4 (1 2 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7) list:firstRest (4 (7))}]
        skolem:lemma460
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma368 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 8) (7)) :queens3 (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 8) list:select (4 (1 2 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7) list:firstRest (4 (7))}]
        skolem:lemma461
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma369 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 8) (7)) :queens3 (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 8) list:select (5 (1 2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7) list:firstRest (5 (7))}]
        skolem:lemma462
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma282.

skolem:lemma370 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7) (8)) :queens3 (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7) list:select (2 (1 3 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8) list:firstRest (2 (8))}]
        skolem:lemma463
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma282.

skolem:lemma371 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7) (8)) :queens3 (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7) list:select (2 (1 3 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8) list:firstRest (2 (8))}]
        skolem:lemma464
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma282.

skolem:lemma372 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7) (8)) :queens3 (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7) list:select (3 (1 2 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8) list:firstRest (3 (8))}]
        skolem:lemma465
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma282.

skolem:lemma373 a r:Inference;
    r:gives {
        ((1 2 3 4 5 6 7) (8)) :queens3 (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 6 7) list:select (4 (1 2 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8) list:firstRest (4 (8))}]
        skolem:lemma466
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma282.

skolem:lemma374 a r:Inference;
    r:gives {
        (3 8) :range (3 4 5 6 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 5 6 7 8) list:firstRest (3 (4 5 6 7 8))}]
        [ a r:Fact; r:gives {3 math:lessThan 8}]
        [ a r:Fact; r:gives {(3 1) math:sum 4}]
        skolem:lemma467
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 4];
    r:rule skolem:lemma280.

skolem:lemma375 a r:Inference;
    r:gives {
        ((2 3 4 6 7 8) (5 1)) :queens3 (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 7 8) list:select (8 (2 3 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 1) list:firstRest (8 (5 1))}]
        skolem:lemma468
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma282.

skolem:lemma376 a r:Inference;
    r:gives {
        ((2 3 4 5 7 8) (6 1)) :queens3 (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 7 8) list:select (8 (2 3 4 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 1) list:firstRest (8 (6 1))}]
        skolem:lemma469
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma282.

skolem:lemma377 a r:Inference;
    r:gives {
        ((2 3 4 5 6 8) (7 1)) :queens3 (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 6 8) list:select (4 (2 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 1) list:firstRest (4 (7 1))}]
        skolem:lemma470
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma282.

skolem:lemma378 a r:Inference;
    r:gives {
        ((2 3 4 5 6 8) (7 1)) :queens3 (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 6 8) list:select (5 (2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 1) list:firstRest (5 (7 1))}]
        skolem:lemma471
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma282.

skolem:lemma379 a r:Inference;
    r:gives {
        ((1 3 5 6 7 8) (4 2)) :queens3 (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7 8) list:select (6 (1 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (4 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 2) list:firstRest (6 (4 2))}]
        skolem:lemma472
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma282.

skolem:lemma380 a r:Inference;
    r:gives {
        ((1 3 4 6 7 8) (5 2)) :queens3 (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 7 8) list:select (7 (1 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 2) list:firstRest (7 (5 2))}]
        skolem:lemma473
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma381 a r:Inference;
    r:gives {
        ((1 3 4 6 7 8) (5 2)) :queens3 (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 7 8) list:select (7 (1 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 2) list:firstRest (7 (5 2))}]
        skolem:lemma474
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma382 a r:Inference;
    r:gives {
        ((1 3 4 5 7 8) (6 2)) :queens3 (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 7 8) list:select (1 (3 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6 2) list:firstRest (1 (6 2))}]
        skolem:lemma475
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma282.

skolem:lemma383 a r:Inference;
    r:gives {
        ((1 3 4 5 7 8) (6 2)) :queens3 (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 7 8) list:select (8 (1 3 4 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 2) list:firstRest (8 (6 2))}]
        skolem:lemma476
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma282.

skolem:lemma384 a r:Inference;
    r:gives {
        ((1 3 4 5 6 8) (7 2)) :queens3 (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 8) list:select (3 (1 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 2) list:firstRest (3 (7 2))}]
        skolem:lemma477
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma282.

skolem:lemma385 a r:Inference;
    r:gives {
        ((1 3 4 5 6 8) (7 2)) :queens3 (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 8) list:select (5 (1 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 2) list:firstRest (5 (7 2))}]
        skolem:lemma478
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma282.

skolem:lemma386 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7) (8 2)) :queens3 (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7) list:select (6 (1 3 4 5 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 2) list:firstRest (6 (8 2))}]
        skolem:lemma479
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma282.

skolem:lemma387 a r:Inference;
    r:gives {
        ((2 4 5 6 7 8) (1 3)) :queens3 (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 6 7 8) list:select (7 (2 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 3) list:firstRest (7 (1 3))}]
        skolem:lemma480
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma282.

skolem:lemma388 a r:Inference;
    r:gives {
        ((1 2 4 6 7 8) (5 3)) :queens3 (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 7 8) list:select (2 (1 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 3) list:firstRest (2 (5 3))}]
        skolem:lemma481
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma389 a r:Inference;
    r:gives {
        ((1 2 4 6 7 8) (5 3)) :queens3 (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 7 8) list:select (2 (1 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 3) list:firstRest (2 (5 3))}]
        skolem:lemma482
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma390 a r:Inference;
    r:gives {
        ((1 2 4 6 7 8) (5 3)) :queens3 (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 7 8) list:select (7 (1 2 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 3) list:firstRest (7 (5 3))}]
        skolem:lemma483
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma282.

skolem:lemma391 a r:Inference;
    r:gives {
        ((1 2 4 6 7 8) (5 3)) :queens3 (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 7 8) list:select (8 (1 2 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 3) list:firstRest (8 (5 3))}]
        skolem:lemma484
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma282.

skolem:lemma392 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (6 3)) :queens3 (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (2 (1 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 3) list:firstRest (2 (6 3))}]
        skolem:lemma485
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma393 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (6 3)) :queens3 (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (2 (1 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 3) list:firstRest (2 (6 3))}]
        skolem:lemma486
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma394 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (6 3)) :queens3 (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (2 (1 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 3) list:firstRest (2 (6 3))}]
        skolem:lemma487
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma395 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (6 3)) :queens3 (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (4 (1 2 5 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6 3) list:firstRest (4 (6 3))}]
        skolem:lemma488
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma396 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (6 3)) :queens3 (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (4 (1 2 5 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6 3) list:firstRest (4 (6 3))}]
        skolem:lemma489
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma397 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (6 3)) :queens3 (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (8 (1 2 4 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 3) list:firstRest (8 (6 3))}]
        skolem:lemma490
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma398 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (6 3)) :queens3 (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (8 (1 2 4 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 3) list:firstRest (8 (6 3))}]
        skolem:lemma491
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma399 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (6 3)) :queens3 (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (8 (1 2 4 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 3) list:firstRest (8 (6 3))}]
        skolem:lemma492
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma400 a r:Inference;
    r:gives {
        ((1 2 4 5 6 8) (7 3)) :queens3 (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 8) list:select (2 (1 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 3) list:firstRest (2 (7 3))}]
        skolem:lemma493
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma401 a r:Inference;
    r:gives {
        ((1 2 4 5 6 8) (7 3)) :queens3 (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 8) list:select (2 (1 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 3) list:firstRest (2 (7 3))}]
        skolem:lemma494
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma402 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7) (8 3)) :queens3 (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7) list:select (4 (1 2 5 6 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (8 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 3) list:firstRest (4 (8 3))}]
        skolem:lemma495
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma282.

skolem:lemma403 a r:Inference;
    r:gives {
        ((2 3 5 6 7 8) (1 4)) :queens3 (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 6 7 8) list:select (5 (2 3 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 4) list:firstRest (5 (1 4))}]
        skolem:lemma496
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma404 a r:Inference;
    r:gives {
        ((2 3 5 6 7 8) (1 4)) :queens3 (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 6 7 8) list:select (5 (2 3 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 4) list:firstRest (5 (1 4))}]
        skolem:lemma497
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma405 a r:Inference;
    r:gives {
        ((1 3 5 6 7 8) (2 4)) :queens3 (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7 8) list:select (5 (1 3 6 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 4) list:firstRest (5 (2 4))}]
        skolem:lemma498
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma282.

skolem:lemma406 a r:Inference;
    r:gives {
        ((1 3 5 6 7 8) (2 4)) :queens3 (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7 8) list:select (7 (1 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 4) list:firstRest (7 (2 4))}]
        skolem:lemma499
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma407 a r:Inference;
    r:gives {
        ((1 3 5 6 7 8) (2 4)) :queens3 (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7 8) list:select (7 (1 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 4) list:firstRest (7 (2 4))}]
        skolem:lemma500
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma408 a r:Inference;
    r:gives {
        ((1 3 5 6 7 8) (2 4)) :queens3 (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7 8) list:select (7 (1 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 4) list:firstRest (7 (2 4))}]
        skolem:lemma501
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma409 a r:Inference;
    r:gives {
        ((1 3 5 6 7 8) (2 4)) :queens3 (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7 8) list:select (8 (1 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 4) list:firstRest (8 (2 4))}]
        skolem:lemma502
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma410 a r:Inference;
    r:gives {
        ((1 3 5 6 7 8) (2 4)) :queens3 (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7 8) list:select (8 (1 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 4) list:firstRest (8 (2 4))}]
        skolem:lemma503
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma411 a r:Inference;
    r:gives {
        ((1 2 3 5 7 8) (6 4)) :queens3 (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 7 8) list:select (1 (2 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6 4) list:firstRest (1 (6 4))}]
        skolem:lemma504
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma282.

skolem:lemma412 a r:Inference;
    r:gives {
        ((1 2 3 5 7 8) (6 4)) :queens3 (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 7 8) list:select (8 (1 2 3 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 4) list:firstRest (8 (6 4))}]
        skolem:lemma505
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma413 a r:Inference;
    r:gives {
        ((1 2 3 5 7 8) (6 4)) :queens3 (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 7 8) list:select (8 (1 2 3 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 4) list:firstRest (8 (6 4))}]
        skolem:lemma506
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma414 a r:Inference;
    r:gives {
        ((1 2 3 5 6 8) (7 4)) :queens3 (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 8) list:select (1 (2 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 4) list:firstRest (1 (7 4))}]
        skolem:lemma507
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma282.

skolem:lemma415 a r:Inference;
    r:gives {
        ((1 2 3 5 6 8) (7 4)) :queens3 (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 8) list:select (3 (1 2 5 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 4) list:firstRest (3 (7 4))}]
        skolem:lemma508
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma282.

skolem:lemma416 a r:Inference;
    r:gives {
        ((1 2 3 5 6 8) (7 4)) :queens3 (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 8) list:select (5 (1 2 3 6 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 4) list:firstRest (5 (7 4))}]
        skolem:lemma509
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma417 a r:Inference;
    r:gives {
        ((1 2 3 5 6 8) (7 4)) :queens3 (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 8) list:select (5 (1 2 3 6 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 4) list:firstRest (5 (7 4))}]
        skolem:lemma510
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma418 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7) (8 4)) :queens3 (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7) list:select (1 (2 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 4) list:firstRest (1 (8 4))}]
        skolem:lemma511
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma419 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7) (8 4)) :queens3 (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7) list:select (1 (2 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 4) list:firstRest (1 (8 4))}]
        skolem:lemma512
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma420 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7) (8 4)) :queens3 (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7) list:select (5 (1 2 3 6 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 4) list:firstRest (5 (8 4))}]
        skolem:lemma513
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma282.

skolem:lemma421 a r:Inference;
    r:gives {
        ((2 3 4 6 7 8) (1 5)) :queens3 (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 7 8) list:select (4 (2 3 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 5) list:firstRest (4 (1 5))}]
        skolem:lemma514
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma282.

skolem:lemma422 a r:Inference;
    r:gives {
        ((2 3 4 6 7 8) (1 5)) :queens3 (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 7 8) list:select (8 (2 3 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 5) list:firstRest (8 (1 5))}]
        skolem:lemma515
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma423 a r:Inference;
    r:gives {
        ((2 3 4 6 7 8) (1 5)) :queens3 (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 7 8) list:select (8 (2 3 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 5) list:firstRest (8 (1 5))}]
        skolem:lemma516
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma424 a r:Inference;
    r:gives {
        ((1 3 4 6 7 8) (2 5)) :queens3 (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 7 8) list:select (4 (1 3 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 5) list:firstRest (4 (2 5))}]
        skolem:lemma517
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma425 a r:Inference;
    r:gives {
        ((1 3 4 6 7 8) (2 5)) :queens3 (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 7 8) list:select (4 (1 3 6 7 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 5) list:firstRest (4 (2 5))}]
        skolem:lemma518
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma426 a r:Inference;
    r:gives {
        ((1 3 4 6 7 8) (2 5)) :queens3 (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 7 8) list:select (6 (1 3 4 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 5) list:firstRest (6 (2 5))}]
        skolem:lemma519
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma282.

skolem:lemma427 a r:Inference;
    r:gives {
        ((1 3 4 6 7 8) (2 5)) :queens3 (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 7 8) list:select (8 (1 3 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 5) list:firstRest (8 (2 5))}]
        skolem:lemma520
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma282.

skolem:lemma428 a r:Inference;
    r:gives {
        ((1 2 4 6 7 8) (3 5)) :queens3 (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 7 8) list:select (1 (2 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 5) list:firstRest (1 (3 5))}]
        skolem:lemma521
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma429 a r:Inference;
    r:gives {
        ((1 2 4 6 7 8) (3 5)) :queens3 (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 7 8) list:select (1 (2 4 6 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 5) list:firstRest (1 (3 5))}]
        skolem:lemma522
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma430 a r:Inference;
    r:gives {
        ((1 2 4 6 7 8) (3 5)) :queens3 (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 7 8) list:select (8 (1 2 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3 5) list:firstRest (8 (3 5))}]
        skolem:lemma523
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma282.

skolem:lemma431 a r:Inference;
    r:gives {
        ((1 2 3 4 6 8) (7 5)) :queens3 (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 8) list:select (1 (2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 5) list:firstRest (1 (7 5))}]
        skolem:lemma524
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma432 a r:Inference;
    r:gives {
        ((1 2 3 4 6 8) (7 5)) :queens3 (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 8) list:select (1 (2 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 5) list:firstRest (1 (7 5))}]
        skolem:lemma525
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma433 a r:Inference;
    r:gives {
        ((1 2 3 4 6 8) (7 5)) :queens3 (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 8) list:select (2 (1 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 5) list:firstRest (2 (7 5))}]
        skolem:lemma526
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma434 a r:Inference;
    r:gives {
        ((1 2 3 4 6 8) (7 5)) :queens3 (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 8) list:select (2 (1 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 5) list:firstRest (2 (7 5))}]
        skolem:lemma527
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma435 a r:Inference;
    r:gives {
        ((1 2 3 4 6 8) (7 5)) :queens3 (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 8) list:select (2 (1 3 4 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 5) list:firstRest (2 (7 5))}]
        skolem:lemma528
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma436 a r:Inference;
    r:gives {
        ((1 2 3 4 6 8) (7 5)) :queens3 (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 8) list:select (4 (1 2 3 6 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 5) list:firstRest (4 (7 5))}]
        skolem:lemma529
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma282.

skolem:lemma437 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7) (8 5)) :queens3 (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7) list:select (4 (1 2 3 6 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 5) list:firstRest (4 (8 5))}]
        skolem:lemma530
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma438 a r:Inference;
    r:gives {
        ((1 2 3 4 6 7) (8 5)) :queens3 (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 7) list:select (4 (1 2 3 6 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 5) list:firstRest (4 (8 5))}]
        skolem:lemma531
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma439 a r:Inference;
    r:gives {
        ((2 3 4 5 7 8) (1 6)) :queens3 (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 7 8) list:select (5 (2 3 4 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (1 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 6) list:firstRest (5 (1 6))}]
        skolem:lemma532
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma282.

skolem:lemma440 a r:Inference;
    r:gives {
        ((1 3 4 5 7 8) (2 6)) :queens3 (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 7 8) list:select (7 (1 3 4 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 6) list:firstRest (7 (2 6))}]
        skolem:lemma533
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma441 a r:Inference;
    r:gives {
        ((1 3 4 5 7 8) (2 6)) :queens3 (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 7 8) list:select (7 (1 3 4 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 6) list:firstRest (7 (2 6))}]
        skolem:lemma534
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma442 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (3 6)) :queens3 (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (1 (2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 6) list:firstRest (1 (3 6))}]
        skolem:lemma535
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma443 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (3 6)) :queens3 (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (1 (2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 6) list:firstRest (1 (3 6))}]
        skolem:lemma536
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma444 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (3 6)) :queens3 (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (1 (2 4 5 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 6) list:firstRest (1 (3 6))}]
        skolem:lemma537
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma445 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (3 6)) :queens3 (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (5 (1 2 4 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3 6) list:firstRest (5 (3 6))}]
        skolem:lemma538
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma446 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (3 6)) :queens3 (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (5 (1 2 4 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3 6) list:firstRest (5 (3 6))}]
        skolem:lemma539
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma447 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (3 6)) :queens3 (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (7 (1 2 4 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 6) list:firstRest (7 (3 6))}]
        skolem:lemma540
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma448 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (3 6)) :queens3 (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (7 (1 2 4 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 6) list:firstRest (7 (3 6))}]
        skolem:lemma541
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma449 a r:Inference;
    r:gives {
        ((1 2 4 5 7 8) (3 6)) :queens3 (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7 8) list:select (7 (1 2 4 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 6) list:firstRest (7 (3 6))}]
        skolem:lemma542
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma450 a r:Inference;
    r:gives {
        ((1 2 3 5 7 8) (4 6)) :queens3 (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 7 8) list:select (1 (2 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 6) list:firstRest (1 (4 6))}]
        skolem:lemma543
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma282.

skolem:lemma451 a r:Inference;
    r:gives {
        ((1 2 3 5 7 8) (4 6)) :queens3 (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 7 8) list:select (2 (1 3 5 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 6) list:firstRest (2 (4 6))}]
        skolem:lemma544
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma282.

skolem:lemma452 a r:Inference;
    r:gives {
        ((1 2 3 5 7 8) (4 6)) :queens3 (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 7 8) list:select (7 (1 2 3 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 6) list:firstRest (7 (4 6))}]
        skolem:lemma545
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma453 a r:Inference;
    r:gives {
        ((1 2 3 5 7 8) (4 6)) :queens3 (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 7 8) list:select (7 (1 2 3 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 6) list:firstRest (7 (4 6))}]
        skolem:lemma546
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma454 a r:Inference;
    r:gives {
        ((1 2 3 4 5 7) (8 6)) :queens3 (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 5 7) list:select (2 (1 3 4 5 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 6) list:firstRest (2 (8 6))}]
        skolem:lemma547
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma282.

skolem:lemma455 a r:Inference;
    r:gives {
        ((2 3 4 5 6 8) (1 7)) :queens3 (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 6 8) list:select (3 (2 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 7) list:firstRest (3 (1 7))}]
        skolem:lemma548
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma282.

skolem:lemma456 a r:Inference;
    r:gives {
        ((1 3 4 5 6 8) (2 7)) :queens3 (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 8) list:select (4 (1 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 7) list:firstRest (4 (2 7))}]
        skolem:lemma549
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma282.

skolem:lemma457 a r:Inference;
    r:gives {
        ((1 3 4 5 6 8) (2 7)) :queens3 (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 8) list:select (6 (1 3 4 5 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 7) list:firstRest (6 (2 7))}]
        skolem:lemma550
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma282.

skolem:lemma458 a r:Inference;
    r:gives {
        ((1 2 4 5 6 8) (3 7)) :queens3 (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 8) list:select (1 (2 4 5 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 7) list:firstRest (1 (3 7))}]
        skolem:lemma551
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma282.

skolem:lemma459 a r:Inference;
    r:gives {
        ((1 2 4 5 6 8) (3 7)) :queens3 (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 8) list:select (8 (1 2 4 5 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3 7) list:firstRest (8 (3 7))}]
        skolem:lemma552
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma282.

skolem:lemma460 a r:Inference;
    r:gives {
        ((1 2 3 5 6 8) (4 7)) :queens3 (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 8) list:select (2 (1 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 7) list:firstRest (2 (4 7))}]
        skolem:lemma553
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma461 a r:Inference;
    r:gives {
        ((1 2 3 5 6 8) (4 7)) :queens3 (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 8) list:select (2 (1 3 5 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 7) list:firstRest (2 (4 7))}]
        skolem:lemma554
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma462 a r:Inference;
    r:gives {
        ((1 2 3 4 6 8) (5 7)) :queens3 (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 4 6 8) list:select (3 (1 2 4 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (5 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 7) list:firstRest (3 (5 7))}]
        skolem:lemma555
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma282.

skolem:lemma463 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7) (2 8)) :queens3 (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7) list:select (4 (1 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 8) list:firstRest (4 (2 8))}]
        skolem:lemma556
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma282.

skolem:lemma464 a r:Inference;
    r:gives {
        ((1 3 4 5 6 7) (2 8)) :queens3 (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 6 7) list:select (5 (1 3 4 6 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 8) list:firstRest (5 (2 8))}]
        skolem:lemma557
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma282.

skolem:lemma465 a r:Inference;
    r:gives {
        ((1 2 4 5 6 7) (3 8)) :queens3 (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6 7) list:select (1 (2 4 5 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 8) list:firstRest (1 (3 8))}]
        skolem:lemma558
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma282.

skolem:lemma466 a r:Inference;
    r:gives {
        ((1 2 3 5 6 7) (4 8)) :queens3 (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 6 7) list:select (1 (2 3 5 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 8) list:firstRest (1 (4 8))}]
        skolem:lemma559
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma282.

skolem:lemma467 a r:Inference;
    r:gives {
        (4 8) :range (4 5 6 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 5 6 7 8) list:firstRest (4 (5 6 7 8))}]
        [ a r:Fact; r:gives {4 math:lessThan 8}]
        [ a r:Fact; r:gives {(4 1) math:sum 5}]
        skolem:lemma560
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 5];
    r:rule skolem:lemma280.

skolem:lemma468 a r:Inference;
    r:gives {
        ((2 3 4 6 7) (8 5 1)) :queens3 (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 7) list:select (6 (2 3 4 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 5 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 5 1) list:firstRest (6 (8 5 1))}]
        skolem:lemma561
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma282.

skolem:lemma469 a r:Inference;
    r:gives {
        ((2 3 4 5 7) (8 6 1)) :queens3 (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 5 7) list:select (3 (2 4 5 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (8 6 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8 6 1) list:firstRest (3 (8 6 1))}]
        skolem:lemma562
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma282.

skolem:lemma470 a r:Inference;
    r:gives {
        ((2 3 5 6 8) (4 7 1)) :queens3 (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 6 8) list:select (6 (2 3 5 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (4 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 7 1) list:firstRest (6 (4 7 1))}]
        skolem:lemma563
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma282.

skolem:lemma471 a r:Inference;
    r:gives {
        ((2 3 4 6 8) (5 7 1)) :queens3 (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 8) list:select (8 (2 3 4 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 7 1) list:firstRest (8 (5 7 1))}]
        skolem:lemma564
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma282.

skolem:lemma472 a r:Inference;
    r:gives {
        ((1 3 5 7 8) (6 4 2)) :queens3 (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 7 8) list:select (8 (1 3 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 4 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 4 2) list:firstRest (8 (6 4 2))}]
        skolem:lemma565
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma282.

skolem:lemma473 a r:Inference;
    r:gives {
        ((1 3 4 6 8) (7 5 2)) :queens3 (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 8) list:select (1 (3 4 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 5 2) list:firstRest (1 (7 5 2))}]
        skolem:lemma566
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma474 a r:Inference;
    r:gives {
        ((1 3 4 6 8) (7 5 2)) :queens3 (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 8) list:select (4 (1 3 6 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 5 2) list:firstRest (4 (7 5 2))}]
        skolem:lemma567
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma475 a r:Inference;
    r:gives {
        ((3 4 5 7 8) (1 6 2)) :queens3 (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 5 7 8) list:select (7 (3 4 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 6 2) list:firstRest (7 (1 6 2))}]
        skolem:lemma568
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma282.

skolem:lemma476 a r:Inference;
    r:gives {
        ((1 3 4 5 7) (8 6 2)) :queens3 (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 7) list:select (3 (1 4 5 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (8 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8 6 2) list:firstRest (3 (8 6 2))}]
        skolem:lemma569
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma282.

skolem:lemma477 a r:Inference;
    r:gives {
        ((1 4 5 6 8) (3 7 2)) :queens3 (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 6 8) list:select (6 (1 4 5 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 7 2) list:firstRest (6 (3 7 2))}]
        skolem:lemma570
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma282.

skolem:lemma478 a r:Inference;
    r:gives {
        ((1 3 4 6 8) (5 7 2)) :queens3 (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 8) list:select (8 (1 3 4 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 7 2) list:firstRest (8 (5 7 2))}]
        skolem:lemma571
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma282.

skolem:lemma479 a r:Inference;
    r:gives {
        ((1 3 4 5 7) (6 8 2)) :queens3 (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 7) list:select (1 (3 4 5 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (6 8 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6 8 2) list:firstRest (1 (6 8 2))}]
        skolem:lemma572
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma282.

skolem:lemma480 a r:Inference;
    r:gives {
        ((2 4 5 6 8) (7 1 3)) :queens3 (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 6 8) list:select (5 (2 4 6 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 1 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 1 3) list:firstRest (5 (7 1 3))}]
        skolem:lemma573
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma282.

skolem:lemma481 a r:Inference;
    r:gives {
        ((1 4 6 7 8) (2 5 3)) :queens3 (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 6 7 8) list:select (8 (1 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 5 3) list:firstRest (8 (2 5 3))}]
        skolem:lemma574
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma482 a r:Inference;
    r:gives {
        ((1 4 6 7 8) (2 5 3)) :queens3 (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 6 7 8) list:select (8 (1 4 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 5 3) list:firstRest (8 (2 5 3))}]
        skolem:lemma575
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma483 a r:Inference;
    r:gives {
        ((1 2 4 6 8) (7 5 3)) :queens3 (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 8) list:select (1 (2 4 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 5 3) list:firstRest (1 (7 5 3))}]
        skolem:lemma576
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma282.

skolem:lemma484 a r:Inference;
    r:gives {
        ((1 2 4 6 7) (8 5 3)) :queens3 (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 7) list:select (4 (1 2 6 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (8 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 5 3) list:firstRest (4 (8 5 3))}]
        skolem:lemma577
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma282.

skolem:lemma485 a r:Inference;
    r:gives {
        ((1 4 5 7 8) (2 6 3)) :queens3 (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 7 8) list:select (5 (1 4 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 6 3) list:firstRest (5 (2 6 3))}]
        skolem:lemma578
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma486 a r:Inference;
    r:gives {
        ((1 4 5 7 8) (2 6 3)) :queens3 (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 7 8) list:select (7 (1 4 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 6 3) list:firstRest (7 (2 6 3))}]
        skolem:lemma579
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma487 a r:Inference;
    r:gives {
        ((1 4 5 7 8) (2 6 3)) :queens3 (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 7 8) list:select (7 (1 4 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 6 3) list:firstRest (7 (2 6 3))}]
        skolem:lemma580
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma488 a r:Inference;
    r:gives {
        ((1 2 5 7 8) (4 6 3)) :queens3 (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 5 7 8) list:select (1 (2 5 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 6 3) list:firstRest (1 (4 6 3))}]
        skolem:lemma581
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma489 a r:Inference;
    r:gives {
        ((1 2 5 7 8) (4 6 3)) :queens3 (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 5 7 8) list:select (2 (1 5 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 6 3) list:firstRest (2 (4 6 3))}]
        skolem:lemma582
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma490 a r:Inference;
    r:gives {
        ((1 2 4 5 7) (8 6 3)) :queens3 (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7) list:select (1 (2 4 5 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 6 3) list:firstRest (1 (8 6 3))}]
        skolem:lemma583
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma491 a r:Inference;
    r:gives {
        ((1 2 4 5 7) (8 6 3)) :queens3 (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7) list:select (1 (2 4 5 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 6 3) list:firstRest (1 (8 6 3))}]
        skolem:lemma584
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma492 a r:Inference;
    r:gives {
        ((1 2 4 5 7) (8 6 3)) :queens3 (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 7) list:select (2 (1 4 5 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 6 3) list:firstRest (2 (8 6 3))}]
        skolem:lemma585
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma493 a r:Inference;
    r:gives {
        ((1 4 5 6 8) (2 7 3)) :queens3 (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 6 8) list:select (8 (1 4 5 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 7 3) list:firstRest (8 (2 7 3))}]
        skolem:lemma586
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma494 a r:Inference;
    r:gives {
        ((1 4 5 6 8) (2 7 3)) :queens3 (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 6 8) list:select (8 (1 4 5 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 7 3) list:firstRest (8 (2 7 3))}]
        skolem:lemma587
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma495 a r:Inference;
    r:gives {
        ((1 2 5 6 7) (4 8 3)) :queens3 (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 5 6 7) list:select (7 (1 2 5 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (4 8 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 8 3) list:firstRest (7 (4 8 3))}]
        skolem:lemma588
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma282.

skolem:lemma496 a r:Inference;
    r:gives {
        ((2 3 6 7 8) (5 1 4)) :queens3 (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 7 8) list:select (8 (2 3 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 1 4) list:firstRest (8 (5 1 4))}]
        skolem:lemma589
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma497 a r:Inference;
    r:gives {
        ((2 3 6 7 8) (5 1 4)) :queens3 (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 7 8) list:select (8 (2 3 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 1 4) list:firstRest (8 (5 1 4))}]
        skolem:lemma590
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma498 a r:Inference;
    r:gives {
        ((1 3 6 7 8) (5 2 4)) :queens3 (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 7 8) list:select (8 (1 3 6 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 2 4) list:firstRest (8 (5 2 4))}]
        skolem:lemma591
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma282.

skolem:lemma499 a r:Inference;
    r:gives {
        ((1 3 5 6 8) (7 2 4)) :queens3 (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 8) list:select (3 (1 5 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 2 4) list:firstRest (3 (7 2 4))}]
        skolem:lemma592
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma500 a r:Inference;
    r:gives {
        ((1 3 5 6 8) (7 2 4)) :queens3 (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 8) list:select (3 (1 5 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 2 4) list:firstRest (3 (7 2 4))}]
        skolem:lemma593
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma501 a r:Inference;
    r:gives {
        ((1 3 5 6 8) (7 2 4)) :queens3 (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 8) list:select (5 (1 3 6 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 2 4) list:firstRest (5 (7 2 4))}]
        skolem:lemma594
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma502 a r:Inference;
    r:gives {
        ((1 3 5 6 7) (8 2 4)) :queens3 (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7) list:select (5 (1 3 6 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 2 4) list:firstRest (5 (8 2 4))}]
        skolem:lemma595
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma503 a r:Inference;
    r:gives {
        ((1 3 5 6 7) (8 2 4)) :queens3 (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7) list:select (6 (1 3 5 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 2 4) list:firstRest (6 (8 2 4))}]
        skolem:lemma596
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma504 a r:Inference;
    r:gives {
        ((2 3 5 7 8) (1 6 4)) :queens3 (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 7 8) list:select (5 (2 3 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (1 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 6 4) list:firstRest (5 (1 6 4))}]
        skolem:lemma597
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma282.

skolem:lemma505 a r:Inference;
    r:gives {
        ((1 2 3 5 7) (8 6 4)) :queens3 (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 7) list:select (2 (1 3 5 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 6 4) list:firstRest (2 (8 6 4))}]
        skolem:lemma598
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma506 a r:Inference;
    r:gives {
        ((1 2 3 5 7) (8 6 4)) :queens3 (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 7) list:select (3 (1 2 5 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8 6 4) list:firstRest (3 (8 6 4))}]
        skolem:lemma599
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma507 a r:Inference;
    r:gives {
        ((2 3 5 6 8) (1 7 4)) :queens3 (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 6 8) list:select (8 (2 3 5 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 7 4) list:firstRest (8 (1 7 4))}]
        skolem:lemma600
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma282.

skolem:lemma508 a r:Inference;
    r:gives {
        ((1 2 5 6 8) (3 7 4)) :queens3 (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 5 6 8) list:select (8 (1 2 5 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (3 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3 7 4) list:firstRest (8 (3 7 4))}]
        skolem:lemma601
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma282.

skolem:lemma509 a r:Inference;
    r:gives {
        ((1 2 3 6 8) (5 7 4)) :queens3 (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 6 8) list:select (2 (1 3 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 7 4) list:firstRest (2 (5 7 4))}]
        skolem:lemma602
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma510 a r:Inference;
    r:gives {
        ((1 2 3 6 8) (5 7 4)) :queens3 (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 6 8) list:select (3 (1 2 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 7 4) list:firstRest (3 (5 7 4))}]
        skolem:lemma603
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma511 a r:Inference;
    r:gives {
        ((2 3 5 6 7) (1 8 4)) :queens3 (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 6 7) list:select (3 (2 5 6 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 8 4) list:firstRest (3 (1 8 4))}]
        skolem:lemma604
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma512 a r:Inference;
    r:gives {
        ((2 3 5 6 7) (1 8 4)) :queens3 (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 6 7) list:select (5 (2 3 6 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 8 4) list:firstRest (5 (1 8 4))}]
        skolem:lemma605
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma513 a r:Inference;
    r:gives {
        ((1 2 3 6 7) (5 8 4)) :queens3 (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 6 7) list:select (3 (1 2 6 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (5 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 8 4) list:firstRest (3 (5 8 4))}]
        skolem:lemma606
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma282.

skolem:lemma514 a r:Inference;
    r:gives {
        ((2 3 6 7 8) (4 1 5)) :queens3 (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 7 8) list:select (6 (2 3 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (4 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 1 5) list:firstRest (6 (4 1 5))}]
        skolem:lemma607
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma282.

skolem:lemma515 a r:Inference;
    r:gives {
        ((2 3 4 6 7) (8 1 5)) :queens3 (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 7) list:select (4 (2 3 6 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 1 5) list:firstRest (4 (8 1 5))}]
        skolem:lemma608
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma516 a r:Inference;
    r:gives {
        ((2 3 4 6 7) (8 1 5)) :queens3 (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 7) list:select (6 (2 3 4 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 1 5) list:firstRest (6 (8 1 5))}]
        skolem:lemma609
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma517 a r:Inference;
    r:gives {
        ((1 3 6 7 8) (4 2 5)) :queens3 (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 7 8) list:select (6 (1 3 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 2 5) list:firstRest (6 (4 2 5))}]
        skolem:lemma610
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma518 a r:Inference;
    r:gives {
        ((1 3 6 7 8) (4 2 5)) :queens3 (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 7 8) list:select (7 (1 3 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 2 5) list:firstRest (7 (4 2 5))}]
        skolem:lemma611
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma519 a r:Inference;
    r:gives {
        ((1 3 4 7 8) (6 2 5)) :queens3 (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 7 8) list:select (1 (3 4 7 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (6 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6 2 5) list:firstRest (1 (6 2 5))}]
        skolem:lemma612
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma282.

skolem:lemma520 a r:Inference;
    r:gives {
        ((1 3 4 6 7) (8 2 5)) :queens3 (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 7) list:select (1 (3 4 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 2 5) list:firstRest (1 (8 2 5))}]
        skolem:lemma613
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma282.

skolem:lemma521 a r:Inference;
    r:gives {
        ((2 4 6 7 8) (1 3 5)) :queens3 (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 6 7 8) list:select (6 (2 4 7 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1 3 5) list:firstRest (6 (1 3 5))}]
        skolem:lemma614
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma522 a r:Inference;
    r:gives {
        ((2 4 6 7 8) (1 3 5)) :queens3 (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 6 7 8) list:select (7 (2 4 6 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 3 5) list:firstRest (7 (1 3 5))}]
        skolem:lemma615
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma523 a r:Inference;
    r:gives {
        ((1 2 4 6 7) (8 3 5)) :queens3 (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 7) list:select (4 (1 2 6 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (8 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 3 5) list:firstRest (4 (8 3 5))}]
        skolem:lemma616
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma282.

skolem:lemma524 a r:Inference;
    r:gives {
        ((2 3 4 6 8) (1 7 5)) :queens3 (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 8) list:select (3 (2 4 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 7 5) list:firstRest (3 (1 7 5))}]
        skolem:lemma617
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma525 a r:Inference;
    r:gives {
        ((2 3 4 6 8) (1 7 5)) :queens3 (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6 8) list:select (4 (2 3 6 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 7 5) list:firstRest (4 (1 7 5))}]
        skolem:lemma618
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma526 a r:Inference;
    r:gives {
        ((1 3 4 6 8) (2 7 5)) :queens3 (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 8) list:select (4 (1 3 6 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 7 5) list:firstRest (4 (2 7 5))}]
        skolem:lemma619
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma527 a r:Inference;
    r:gives {
        ((1 3 4 6 8) (2 7 5)) :queens3 (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 8) list:select (6 (1 3 4 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 7 5) list:firstRest (6 (2 7 5))}]
        skolem:lemma620
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma528 a r:Inference;
    r:gives {
        ((1 3 4 6 8) (2 7 5)) :queens3 (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 8) list:select (6 (1 3 4 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 7 5) list:firstRest (6 (2 7 5))}]
        skolem:lemma621
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma529 a r:Inference;
    r:gives {
        ((1 2 3 6 8) (4 7 5)) :queens3 (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 6 8) list:select (1 (2 3 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 7 5) list:firstRest (1 (4 7 5))}]
        skolem:lemma622
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma282.

skolem:lemma530 a r:Inference;
    r:gives {
        ((1 2 3 6 7) (4 8 5)) :queens3 (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 6 7) list:select (1 (2 3 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 8 5) list:firstRest (1 (4 8 5))}]
        skolem:lemma623
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma531 a r:Inference;
    r:gives {
        ((1 2 3 6 7) (4 8 5)) :queens3 (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 6 7) list:select (1 (2 3 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 8 5) list:firstRest (1 (4 8 5))}]
        skolem:lemma624
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma532 a r:Inference;
    r:gives {
        ((2 3 4 7 8) (5 1 6)) :queens3 (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 7 8) list:select (2 (3 4 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5 1 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 1 6) list:firstRest (2 (5 1 6))}]
        skolem:lemma625
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma282.

skolem:lemma533 a r:Inference;
    r:gives {
        ((1 3 4 5 8) (7 2 6)) :queens3 (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 8) list:select (1 (3 4 5 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 2 6) list:firstRest (1 (7 2 6))}]
        skolem:lemma626
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma534 a r:Inference;
    r:gives {
        ((1 3 4 5 8) (7 2 6)) :queens3 (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 8) list:select (1 (3 4 5 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 2 6) list:firstRest (1 (7 2 6))}]
        skolem:lemma627
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma535 a r:Inference;
    r:gives {
        ((2 4 5 7 8) (1 3 6)) :queens3 (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 7 8) list:select (7 (2 4 5 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 3 6) list:firstRest (7 (1 3 6))}]
        skolem:lemma628
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma536 a r:Inference;
    r:gives {
        ((2 4 5 7 8) (1 3 6)) :queens3 (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 7 8) list:select (8 (2 4 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 3 6) list:firstRest (8 (1 3 6))}]
        skolem:lemma629
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma537 a r:Inference;
    r:gives {
        ((2 4 5 7 8) (1 3 6)) :queens3 (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 7 8) list:select (8 (2 4 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 3 6) list:firstRest (8 (1 3 6))}]
        skolem:lemma630
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma538 a r:Inference;
    r:gives {
        ((1 2 4 7 8) (5 3 6)) :queens3 (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 7 8) list:select (7 (1 2 4 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 3 6) list:firstRest (7 (5 3 6))}]
        skolem:lemma631
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma539 a r:Inference;
    r:gives {
        ((1 2 4 7 8) (5 3 6)) :queens3 (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 7 8) list:select (8 (1 2 4 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 3 6) list:firstRest (8 (5 3 6))}]
        skolem:lemma632
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma540 a r:Inference;
    r:gives {
        ((1 2 4 5 8) (7 3 6)) :queens3 (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 8) list:select (2 (1 4 5 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 3 6) list:firstRest (2 (7 3 6))}]
        skolem:lemma633
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma541 a r:Inference;
    r:gives {
        ((1 2 4 5 8) (7 3 6)) :queens3 (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 8) list:select (2 (1 4 5 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 3 6) list:firstRest (2 (7 3 6))}]
        skolem:lemma634
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma542 a r:Inference;
    r:gives {
        ((1 2 4 5 8) (7 3 6)) :queens3 (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 8) list:select (4 (1 2 5 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 3 6) list:firstRest (4 (7 3 6))}]
        skolem:lemma635
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma543 a r:Inference;
    r:gives {
        ((2 3 5 7 8) (1 4 6)) :queens3 (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 7 8) list:select (5 (2 3 7 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (1 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 4 6) list:firstRest (5 (1 4 6))}]
        skolem:lemma636
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma282.

skolem:lemma544 a r:Inference;
    r:gives {
        ((1 3 5 7 8) (2 4 6)) :queens3 (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 7 8) list:select (8 (1 3 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 4 6) list:firstRest (8 (2 4 6))}]
        skolem:lemma637
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma282.

skolem:lemma545 a r:Inference;
    r:gives {
        ((1 2 3 5 8) (7 4 6)) :queens3 (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 8) list:select (1 (2 3 5 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 4 6) list:firstRest (1 (7 4 6))}]
        skolem:lemma638
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma546 a r:Inference;
    r:gives {
        ((1 2 3 5 8) (7 4 6)) :queens3 (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 3 5 8) list:select (1 (2 3 5 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 4 6) list:firstRest (1 (7 4 6))}]
        skolem:lemma639
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma547 a r:Inference;
    r:gives {
        ((1 3 4 5 7) (2 8 6)) :queens3 (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 7) list:select (4 (1 3 5 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 8 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 8 6) list:firstRest (4 (2 8 6))}]
        skolem:lemma640
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma282.

skolem:lemma548 a r:Inference;
    r:gives {
        ((2 4 5 6 8) (3 1 7)) :queens3 (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 6 8) list:select (8 (2 4 5 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (3 1 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3 1 7) list:firstRest (8 (3 1 7))}]
        skolem:lemma641
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma282.

skolem:lemma549 a r:Inference;
    r:gives {
        ((1 3 5 6 8) (4 2 7)) :queens3 (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 8) list:select (1 (3 5 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 2 7) list:firstRest (1 (4 2 7))}]
        skolem:lemma642
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma282.

skolem:lemma550 a r:Inference;
    r:gives {
        ((1 3 4 5 8) (6 2 7)) :queens3 (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 5 8) list:select (3 (1 4 5 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 2 7) list:firstRest (3 (6 2 7))}]
        skolem:lemma643
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma282.

skolem:lemma551 a r:Inference;
    r:gives {
        ((2 4 5 6 8) (1 3 7)) :queens3 (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 6 8) list:select (6 (2 4 5 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (1 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1 3 7) list:firstRest (6 (1 3 7))}]
        skolem:lemma644
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma282.

skolem:lemma552 a r:Inference;
    r:gives {
        ((1 2 4 5 6) (8 3 7)) :queens3 (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 5 6) list:select (2 (1 4 5 6))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 3 7) list:firstRest (2 (8 3 7))}]
        skolem:lemma645
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma282.

skolem:lemma553 a r:Inference;
    r:gives {
        ((1 3 5 6 8) (2 4 7)) :queens3 (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 8) list:select (5 (1 3 6 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 4 7) list:firstRest (5 (2 4 7))}]
        skolem:lemma646
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma554 a r:Inference;
    r:gives {
        ((1 3 5 6 8) (2 4 7)) :queens3 (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 8) list:select (8 (1 3 5 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 4 7) list:firstRest (8 (2 4 7))}]
        skolem:lemma647
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma555 a r:Inference;
    r:gives {
        ((1 2 4 6 8) (3 5 7)) :queens3 (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 6 8) list:select (1 (2 4 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 5 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 5 7) list:firstRest (1 (3 5 7))}]
        skolem:lemma648
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma282.

skolem:lemma556 a r:Inference;
    r:gives {
        ((1 3 5 6 7) (4 2 8)) :queens3 (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6 7) list:select (1 (3 5 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 2 8) list:firstRest (1 (4 2 8))}]
        skolem:lemma649
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma282.

skolem:lemma557 a r:Inference;
    r:gives {
        ((1 3 4 6 7) (5 2 8)) :queens3 (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6 7) list:select (3 (1 4 6 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (5 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 2 8) list:firstRest (3 (5 2 8))}]
        skolem:lemma650
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma282.

skolem:lemma558 a r:Inference;
    r:gives {
        ((2 4 5 6 7) (1 3 8)) :queens3 (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 6 7) list:select (6 (2 4 5 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (1 3 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1 3 8) list:firstRest (6 (1 3 8))}]
        skolem:lemma651
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma282.

skolem:lemma559 a r:Inference;
    r:gives {
        ((2 3 5 6 7) (1 4 8)) :queens3 (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 6 7) list:select (3 (2 5 6 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 4 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 4 8) list:firstRest (3 (1 4 8))}]
        skolem:lemma652
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma282.

skolem:lemma560 a r:Inference;
    r:gives {
        (5 8) :range (5 6 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 6 7 8) list:firstRest (5 (6 7 8))}]
        [ a r:Fact; r:gives {5 math:lessThan 8}]
        [ a r:Fact; r:gives {(5 1) math:sum 6}]
        skolem:lemma653
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 6];
    r:rule skolem:lemma280.

skolem:lemma561 a r:Inference;
    r:gives {
        ((2 3 4 7) (6 8 5 1)) :queens3 (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 7) list:select (3 (2 4 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (6 8 5 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 8 5 1) list:firstRest (3 (6 8 5 1))}]
        skolem:lemma654
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma282.

skolem:lemma562 a r:Inference;
    r:gives {
        ((2 4 5 7) (3 8 6 1)) :queens3 (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 7) list:select (7 (2 4 5))}]
        [ a r:Fact; r:gives {({
            7 :attack (3 8 6 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 8 6 1) list:firstRest (7 (3 8 6 1))}]
        skolem:lemma655
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma282.

skolem:lemma563 a r:Inference;
    r:gives {
        ((2 3 5 8) (6 4 7 1)) :queens3 (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 8) list:select (8 (2 3 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 4 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 4 7 1) list:firstRest (8 (6 4 7 1))}]
        skolem:lemma656
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma282.

skolem:lemma564 a r:Inference;
    r:gives {
        ((2 3 4 6) (8 5 7 1)) :queens3 (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 6) list:select (2 (3 4 6))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 5 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 5 7 1) list:firstRest (2 (8 5 7 1))}]
        skolem:lemma657
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma282.

skolem:lemma565 a r:Inference;
    r:gives {
        ((1 3 5 7) (8 6 4 2)) :queens3 (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 7) list:select (3 (1 5 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (8 6 4 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8 6 4 2) list:firstRest (3 (8 6 4 2))}]
        skolem:lemma658
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma282.

skolem:lemma566 a r:Inference;
    r:gives {
        ((3 4 6 8) (1 7 5 2)) :queens3 (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 6 8) list:select (3 (4 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 7 5 2) list:firstRest (3 (1 7 5 2))}]
        skolem:lemma659
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma567 a r:Inference;
    r:gives {
        ((1 3 6 8) (4 7 5 2)) :queens3 (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 8) list:select (1 (3 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 7 5 2) list:firstRest (1 (4 7 5 2))}]
        skolem:lemma660
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma568 a r:Inference;
    r:gives {
        ((3 4 5 8) (7 1 6 2)) :queens3 (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 5 8) list:select (4 (3 5 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (7 1 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 1 6 2) list:firstRest (4 (7 1 6 2))}]
        skolem:lemma661
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma282.

skolem:lemma569 a r:Inference;
    r:gives {
        ((1 4 5 7) (3 8 6 2)) :queens3 (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 7) list:select (1 (4 5 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 8 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 8 6 2) list:firstRest (1 (3 8 6 2))}]
        skolem:lemma662
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma282.

skolem:lemma570 a r:Inference;
    r:gives {
        ((1 4 5 8) (6 3 7 2)) :queens3 (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 8) list:select (8 (1 4 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 3 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 3 7 2) list:firstRest (8 (6 3 7 2))}]
        skolem:lemma663
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma282.

skolem:lemma571 a r:Inference;
    r:gives {
        ((1 3 4 6) (8 5 7 2)) :queens3 (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 6) list:select (1 (3 4 6))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 5 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 5 7 2) list:firstRest (1 (8 5 7 2))}]
        skolem:lemma664
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma282.

skolem:lemma572 a r:Inference;
    r:gives {
        ((3 4 5 7) (1 6 8 2)) :queens3 (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 5 7) list:select (3 (4 5 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 6 8 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 6 8 2) list:firstRest (3 (1 6 8 2))}]
        skolem:lemma665
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma282.

skolem:lemma573 a r:Inference;
    r:gives {
        ((2 4 6 8) (5 7 1 3)) :queens3 (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 6 8) list:select (8 (2 4 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 7 1 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 7 1 3) list:firstRest (8 (5 7 1 3))}]
        skolem:lemma666
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma282.

skolem:lemma574 a r:Inference;
    r:gives {
        ((1 4 6 7) (8 2 5 3)) :queens3 (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 6 7) list:select (1 (4 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 2 5 3) list:firstRest (1 (8 2 5 3))}]
        skolem:lemma667
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma575 a r:Inference;
    r:gives {
        ((1 4 6 7) (8 2 5 3)) :queens3 (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 6 7) list:select (6 (1 4 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 2 5 3) list:firstRest (6 (8 2 5 3))}]
        skolem:lemma668
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma576 a r:Inference;
    r:gives {
        ((2 4 6 8) (1 7 5 3)) :queens3 (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 6 8) list:select (4 (2 6 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 7 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 7 5 3) list:firstRest (4 (1 7 5 3))}]
        skolem:lemma669
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma282.

skolem:lemma577 a r:Inference;
    r:gives {
        ((1 2 6 7) (4 8 5 3)) :queens3 (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 6 7) list:select (1 (2 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 8 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 8 5 3) list:firstRest (1 (4 8 5 3))}]
        skolem:lemma670
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma282.

skolem:lemma578 a r:Inference;
    r:gives {
        ((1 4 7 8) (5 2 6 3)) :queens3 (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 7 8) list:select (8 (1 4 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 2 6 3) list:firstRest (8 (5 2 6 3))}]
        skolem:lemma671
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma579 a r:Inference;
    r:gives {
        ((1 4 5 8) (7 2 6 3)) :queens3 (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 8) list:select (1 (4 5 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 2 6 3) list:firstRest (1 (7 2 6 3))}]
        skolem:lemma672
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma580 a r:Inference;
    r:gives {
        ((1 4 5 8) (7 2 6 3)) :queens3 (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 8) list:select (5 (1 4 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 2 6 3) list:firstRest (5 (7 2 6 3))}]
        skolem:lemma673
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma581 a r:Inference;
    r:gives {
        ((2 5 7 8) (1 4 6 3)) :queens3 (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 7 8) list:select (8 (2 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 4 6 3) list:firstRest (8 (1 4 6 3))}]
        skolem:lemma674
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma582 a r:Inference;
    r:gives {
        ((1 5 7 8) (2 4 6 3)) :queens3 (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 7 8) list:select (8 (1 5 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 4 6 3) list:firstRest (8 (2 4 6 3))}]
        skolem:lemma675
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma583 a r:Inference;
    r:gives {
        ((2 4 5 7) (1 8 6 3)) :queens3 (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 7) list:select (4 (2 5 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 8 6 3) list:firstRest (4 (1 8 6 3))}]
        skolem:lemma676
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma584 a r:Inference;
    r:gives {
        ((2 4 5 7) (1 8 6 3)) :queens3 (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 7) list:select (5 (2 4 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (1 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 8 6 3) list:firstRest (5 (1 8 6 3))}]
        skolem:lemma677
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma585 a r:Inference;
    r:gives {
        ((1 4 5 7) (2 8 6 3)) :queens3 (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 7) list:select (4 (1 5 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 8 6 3) list:firstRest (4 (2 8 6 3))}]
        skolem:lemma678
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma586 a r:Inference;
    r:gives {
        ((1 4 5 6) (8 2 7 3)) :queens3 (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 6) list:select (5 (1 4 6))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 2 7 3) list:firstRest (5 (8 2 7 3))}]
        skolem:lemma679
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma587 a r:Inference;
    r:gives {
        ((1 4 5 6) (8 2 7 3)) :queens3 (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 6) list:select (6 (1 4 5))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 2 7 3) list:firstRest (6 (8 2 7 3))}]
        skolem:lemma680
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma588 a r:Inference;
    r:gives {
        ((1 2 5 6) (7 4 8 3)) :queens3 (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 5 6) list:select (1 (2 5 6))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 4 8 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 4 8 3) list:firstRest (1 (7 4 8 3))}]
        skolem:lemma681
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma282.

skolem:lemma589 a r:Inference;
    r:gives {
        ((2 3 6 7) (8 5 1 4)) :queens3 (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 7) list:select (2 (3 6 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 5 1 4) list:firstRest (2 (8 5 1 4))}]
        skolem:lemma682
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma590 a r:Inference;
    r:gives {
        ((2 3 6 7) (8 5 1 4)) :queens3 (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 7) list:select (6 (2 3 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 5 1 4) list:firstRest (6 (8 5 1 4))}]
        skolem:lemma683
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma591 a r:Inference;
    r:gives {
        ((1 3 6 7) (8 5 2 4)) :queens3 (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 7) list:select (6 (1 3 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 5 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 5 2 4) list:firstRest (6 (8 5 2 4))}]
        skolem:lemma684
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma282.

skolem:lemma592 a r:Inference;
    r:gives {
        ((1 5 6 8) (3 7 2 4)) :queens3 (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 6 8) list:select (6 (1 5 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 7 2 4) list:firstRest (6 (3 7 2 4))}]
        skolem:lemma685
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma593 a r:Inference;
    r:gives {
        ((1 5 6 8) (3 7 2 4)) :queens3 (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 6 8) list:select (6 (1 5 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (3 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 7 2 4) list:firstRest (6 (3 7 2 4))}]
        skolem:lemma686
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma594 a r:Inference;
    r:gives {
        ((1 3 6 8) (5 7 2 4)) :queens3 (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 8) list:select (1 (3 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (5 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5 7 2 4) list:firstRest (1 (5 7 2 4))}]
        skolem:lemma687
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma595 a r:Inference;
    r:gives {
        ((1 3 6 7) (5 8 2 4)) :queens3 (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 7) list:select (7 (1 3 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 8 2 4) list:firstRest (7 (5 8 2 4))}]
        skolem:lemma688
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma596 a r:Inference;
    r:gives {
        ((1 3 5 7) (6 8 2 4)) :queens3 (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 7) list:select (1 (3 5 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (6 8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6 8 2 4) list:firstRest (1 (6 8 2 4))}]
        skolem:lemma689
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma597 a r:Inference;
    r:gives {
        ((2 3 7 8) (5 1 6 4)) :queens3 (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 7 8) list:select (2 (3 7 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5 1 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 1 6 4) list:firstRest (2 (5 1 6 4))}]
        skolem:lemma690
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma282.

skolem:lemma598 a r:Inference;
    r:gives {
        ((1 3 5 7) (2 8 6 4)) :queens3 (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 7) list:select (7 (1 3 5))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 8 6 4) list:firstRest (7 (2 8 6 4))}]
        skolem:lemma691
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma599 a r:Inference;
    r:gives {
        ((1 2 5 7) (3 8 6 4)) :queens3 (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 5 7) list:select (1 (2 5 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 8 6 4) list:firstRest (1 (3 8 6 4))}]
        skolem:lemma692
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma600 a r:Inference;
    r:gives {
        ((2 3 5 6) (8 1 7 4)) :queens3 (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 6) list:select (5 (2 3 6))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 1 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 1 7 4) list:firstRest (5 (8 1 7 4))}]
        skolem:lemma693
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma282.

skolem:lemma601 a r:Inference;
    r:gives {
        ((1 2 5 6) (8 3 7 4)) :queens3 (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 5 6) list:select (2 (1 5 6))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 3 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 3 7 4) list:firstRest (2 (8 3 7 4))}]
        skolem:lemma694
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma282.

skolem:lemma602 a r:Inference;
    r:gives {
        ((1 3 6 8) (2 5 7 4)) :queens3 (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 8) list:select (6 (1 3 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (2 5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 5 7 4) list:firstRest (6 (2 5 7 4))}]
        skolem:lemma695
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma603 a r:Inference;
    r:gives {
        ((1 2 6 8) (3 5 7 4)) :queens3 (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 6 8) list:select (1 (2 6 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 5 7 4) list:firstRest (1 (3 5 7 4))}]
        skolem:lemma696
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma604 a r:Inference;
    r:gives {
        ((2 5 6 7) (3 1 8 4)) :queens3 (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 6 7) list:select (6 (2 5 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (3 1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 1 8 4) list:firstRest (6 (3 1 8 4))}]
        skolem:lemma697
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma605 a r:Inference;
    r:gives {
        ((2 3 6 7) (5 1 8 4)) :queens3 (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 7) list:select (7 (2 3 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 1 8 4) list:firstRest (7 (5 1 8 4))}]
        skolem:lemma698
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma606 a r:Inference;
    r:gives {
        ((1 2 6 7) (3 5 8 4)) :queens3 (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 6 7) list:select (1 (2 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 5 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 5 8 4) list:firstRest (1 (3 5 8 4))}]
        skolem:lemma699
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma282.

skolem:lemma607 a r:Inference;
    r:gives {
        ((2 3 7 8) (6 4 1 5)) :queens3 (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 7 8) list:select (8 (2 3 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 4 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 4 1 5) list:firstRest (8 (6 4 1 5))}]
        skolem:lemma700
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma282.

skolem:lemma608 a r:Inference;
    r:gives {
        ((2 3 6 7) (4 8 1 5)) :queens3 (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 7) list:select (2 (3 6 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 8 1 5) list:firstRest (2 (4 8 1 5))}]
        skolem:lemma701
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma609 a r:Inference;
    r:gives {
        ((2 3 4 7) (6 8 1 5)) :queens3 (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 4 7) list:select (3 (2 4 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (6 8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 8 1 5) list:firstRest (3 (6 8 1 5))}]
        skolem:lemma702
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma610 a r:Inference;
    r:gives {
        ((1 3 7 8) (6 4 2 5)) :queens3 (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 7 8) list:select (8 (1 3 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 4 2 5) list:firstRest (8 (6 4 2 5))}]
        skolem:lemma703
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma611 a r:Inference;
    r:gives {
        ((1 3 6 8) (7 4 2 5)) :queens3 (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 8) list:select (3 (1 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (7 4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 4 2 5) list:firstRest (3 (7 4 2 5))}]
        skolem:lemma704
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma612 a r:Inference;
    r:gives {
        ((3 4 7 8) (1 6 2 5)) :queens3 (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 7 8) list:select (7 (3 4 8))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 6 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 6 2 5) list:firstRest (7 (1 6 2 5))}]
        skolem:lemma705
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma282.

skolem:lemma613 a r:Inference;
    r:gives {
        ((3 4 6 7) (1 8 2 5)) :queens3 (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 6 7) list:select (4 (3 6 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 8 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 8 2 5) list:firstRest (4 (1 8 2 5))}]
        skolem:lemma706
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma282.

skolem:lemma614 a r:Inference;
    r:gives {
        ((2 4 7 8) (6 1 3 5)) :queens3 (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 7 8) list:select (8 (2 4 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 1 3 5) list:firstRest (8 (6 1 3 5))}]
        skolem:lemma707
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma615 a r:Inference;
    r:gives {
        ((2 4 6 8) (7 1 3 5)) :queens3 (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 6 8) list:select (2 (4 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 1 3 5) list:firstRest (2 (7 1 3 5))}]
        skolem:lemma708
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma616 a r:Inference;
    r:gives {
        ((1 2 6 7) (4 8 3 5)) :queens3 (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 6 7) list:select (7 (1 2 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (4 8 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 8 3 5) list:firstRest (7 (4 8 3 5))}]
        skolem:lemma709
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma282.

skolem:lemma617 a r:Inference;
    r:gives {
        ((2 4 6 8) (3 1 7 5)) :queens3 (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 6 8) list:select (8 (2 4 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (3 1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3 1 7 5) list:firstRest (8 (3 1 7 5))}]
        skolem:lemma710
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma618 a r:Inference;
    r:gives {
        ((2 3 6 8) (4 1 7 5)) :queens3 (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 8) list:select (2 (3 6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 1 7 5) list:firstRest (2 (4 1 7 5))}]
        skolem:lemma711
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma619 a r:Inference;
    r:gives {
        ((1 3 6 8) (4 2 7 5)) :queens3 (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 8) list:select (8 (1 3 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (4 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4 2 7 5) list:firstRest (8 (4 2 7 5))}]
        skolem:lemma712
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma620 a r:Inference;
    r:gives {
        ((1 3 4 8) (6 2 7 5)) :queens3 (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 8) list:select (3 (1 4 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 2 7 5) list:firstRest (3 (6 2 7 5))}]
        skolem:lemma713
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma621 a r:Inference;
    r:gives {
        ((1 3 4 8) (6 2 7 5)) :queens3 (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 4 8) list:select (3 (1 4 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (6 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 2 7 5) list:firstRest (3 (6 2 7 5))}]
        skolem:lemma714
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma622 a r:Inference;
    r:gives {
        ((2 3 6 8) (1 4 7 5)) :queens3 (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 8) list:select (3 (2 6 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 4 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 4 7 5) list:firstRest (3 (1 4 7 5))}]
        skolem:lemma715
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma282.

skolem:lemma623 a r:Inference;
    r:gives {
        ((2 3 6 7) (1 4 8 5)) :queens3 (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 7) list:select (3 (2 6 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 4 8 5) list:firstRest (3 (1 4 8 5))}]
        skolem:lemma716
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma624 a r:Inference;
    r:gives {
        ((2 3 6 7) (1 4 8 5)) :queens3 (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6 7) list:select (7 (2 3 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 4 8 5) list:firstRest (7 (1 4 8 5))}]
        skolem:lemma717
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma625 a r:Inference;
    r:gives {
        ((3 4 7 8) (2 5 1 6)) :queens3 (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 7 8) list:select (8 (3 4 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 5 1 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 5 1 6) list:firstRest (8 (2 5 1 6))}]
        skolem:lemma718
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma282.

skolem:lemma626 a r:Inference;
    r:gives {
        ((3 4 5 8) (1 7 2 6)) :queens3 (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 5 8) list:select (3 (4 5 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 7 2 6) list:firstRest (3 (1 7 2 6))}]
        skolem:lemma719
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma627 a r:Inference;
    r:gives {
        ((3 4 5 8) (1 7 2 6)) :queens3 (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 5 8) list:select (4 (3 5 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 7 2 6) list:firstRest (4 (1 7 2 6))}]
        skolem:lemma720
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma628 a r:Inference;
    r:gives {
        ((2 4 5 8) (7 1 3 6)) :queens3 (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 8) list:select (5 (2 4 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 1 3 6) list:firstRest (5 (7 1 3 6))}]
        skolem:lemma721
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma629 a r:Inference;
    r:gives {
        ((2 4 5 7) (8 1 3 6)) :queens3 (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 7) list:select (4 (2 5 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (8 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 1 3 6) list:firstRest (4 (8 1 3 6))}]
        skolem:lemma722
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma630 a r:Inference;
    r:gives {
        ((2 4 5 7) (8 1 3 6)) :queens3 (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 7) list:select (5 (2 4 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 1 3 6) list:firstRest (5 (8 1 3 6))}]
        skolem:lemma723
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma631 a r:Inference;
    r:gives {
        ((1 2 4 8) (7 5 3 6)) :queens3 (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 8) list:select (1 (2 4 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 5 3 6) list:firstRest (1 (7 5 3 6))}]
        skolem:lemma724
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma632 a r:Inference;
    r:gives {
        ((1 2 4 7) (8 5 3 6)) :queens3 (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 4 7) list:select (1 (2 4 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 5 3 6) list:firstRest (1 (8 5 3 6))}]
        skolem:lemma725
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma633 a r:Inference;
    r:gives {
        ((1 4 5 8) (2 7 3 6)) :queens3 (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 8) list:select (4 (1 5 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 7 3 6) list:firstRest (4 (2 7 3 6))}]
        skolem:lemma726
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma634 a r:Inference;
    r:gives {
        ((1 4 5 8) (2 7 3 6)) :queens3 (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 8) list:select (8 (1 4 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 7 3 6) list:firstRest (8 (2 7 3 6))}]
        skolem:lemma727
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma635 a r:Inference;
    r:gives {
        ((1 2 5 8) (4 7 3 6)) :queens3 (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 5 8) list:select (1 (2 5 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 7 3 6) list:firstRest (1 (4 7 3 6))}]
        skolem:lemma728
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma636 a r:Inference;
    r:gives {
        ((2 3 7 8) (5 1 4 6)) :queens3 (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 7 8) list:select (8 (2 3 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 1 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 1 4 6) list:firstRest (8 (5 1 4 6))}]
        skolem:lemma729
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma282.

skolem:lemma637 a r:Inference;
    r:gives {
        ((1 3 5 7) (8 2 4 6)) :queens3 (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 7) list:select (5 (1 3 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 2 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 2 4 6) list:firstRest (5 (8 2 4 6))}]
        skolem:lemma730
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma282.

skolem:lemma638 a r:Inference;
    r:gives {
        ((2 3 5 8) (1 7 4 6)) :queens3 (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 8) list:select (3 (2 5 8))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 7 4 6) list:firstRest (3 (1 7 4 6))}]
        skolem:lemma731
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma639 a r:Inference;
    r:gives {
        ((2 3 5 8) (1 7 4 6)) :queens3 (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5 8) list:select (8 (2 3 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 7 4 6) list:firstRest (8 (1 7 4 6))}]
        skolem:lemma732
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma640 a r:Inference;
    r:gives {
        ((1 3 5 7) (4 2 8 6)) :queens3 (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 7) list:select (1 (3 5 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 2 8 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 2 8 6) list:firstRest (1 (4 2 8 6))}]
        skolem:lemma733
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma282.

skolem:lemma641 a r:Inference;
    r:gives {
        ((2 4 5 6) (8 3 1 7)) :queens3 (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 6) list:select (6 (2 4 5))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 3 1 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 3 1 7) list:firstRest (6 (8 3 1 7))}]
        skolem:lemma734
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma282.

skolem:lemma642 a r:Inference;
    r:gives {
        ((3 5 6 8) (1 4 2 7)) :queens3 (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5 6 8) list:select (8 (3 5 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 4 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 4 2 7) list:firstRest (8 (1 4 2 7))}]
        skolem:lemma735
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma282.

skolem:lemma643 a r:Inference;
    r:gives {
        ((1 4 5 8) (3 6 2 7)) :queens3 (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 8) list:select (1 (4 5 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 6 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 6 2 7) list:firstRest (1 (3 6 2 7))}]
        skolem:lemma736
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma282.

skolem:lemma644 a r:Inference;
    r:gives {
        ((2 4 5 8) (6 1 3 7)) :queens3 (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 8) list:select (8 (2 4 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 1 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 1 3 7) list:firstRest (8 (6 1 3 7))}]
        skolem:lemma737
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma282.

skolem:lemma645 a r:Inference;
    r:gives {
        ((1 4 5 6) (2 8 3 7)) :queens3 (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5 6) list:select (5 (1 4 6))}]
        [ a r:Fact; r:gives {({
            5 :attack (2 8 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 8 3 7) list:firstRest (5 (2 8 3 7))}]
        skolem:lemma738
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma282.

skolem:lemma646 a r:Inference;
    r:gives {
        ((1 3 6 8) (5 2 4 7)) :queens3 (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6 8) list:select (8 (1 3 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 2 4 7) list:firstRest (8 (5 2 4 7))}]
        skolem:lemma739
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma647 a r:Inference;
    r:gives {
        ((1 3 5 6) (8 2 4 7)) :queens3 (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5 6) list:select (6 (1 3 5))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 2 4 7) list:firstRest (6 (8 2 4 7))}]
        skolem:lemma740
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma648 a r:Inference;
    r:gives {
        ((2 4 6 8) (1 3 5 7)) :queens3 (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 6 8) list:select (6 (2 4 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (1 3 5 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1 3 5 7) list:firstRest (6 (1 3 5 7))}]
        skolem:lemma741
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma282.

skolem:lemma649 a r:Inference;
    r:gives {
        ((3 5 6 7) (1 4 2 8)) :queens3 (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5 6 7) list:select (7 (3 5 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 4 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 4 2 8) list:firstRest (7 (1 4 2 8))}]
        skolem:lemma742
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma282.

skolem:lemma650 a r:Inference;
    r:gives {
        ((1 4 6 7) (3 5 2 8)) :queens3 (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 6 7) list:select (1 (4 6 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 5 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 5 2 8) list:firstRest (1 (3 5 2 8))}]
        skolem:lemma743
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma282.

skolem:lemma651 a r:Inference;
    r:gives {
        ((2 4 5 7) (6 1 3 8)) :queens3 (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5 7) list:select (2 (4 5 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (6 1 3 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 1 3 8) list:firstRest (2 (6 1 3 8))}]
        skolem:lemma744
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma282.

skolem:lemma652 a r:Inference;
    r:gives {
        ((2 5 6 7) (3 1 4 8)) :queens3 (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 6 7) list:select (6 (2 5 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (3 1 4 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 1 4 8) list:firstRest (6 (3 1 4 8))}]
        skolem:lemma745
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma282.

skolem:lemma653 a r:Inference;
    r:gives {
        (6 8) :range (6 7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 7 8) list:firstRest (6 (7 8))}]
        [ a r:Fact; r:gives {6 math:lessThan 8}]
        [ a r:Fact; r:gives {(6 1) math:sum 7}]
        skolem:lemma746
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 7];
    r:rule skolem:lemma280.

skolem:lemma654 a r:Inference;
    r:gives {
        ((2 4 7) (3 6 8 5 1)) :queens3 (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 7) list:select (7 (2 4))}]
        [ a r:Fact; r:gives {({
            7 :attack (3 6 8 5 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 6 8 5 1) list:firstRest (7 (3 6 8 5 1))}]
        skolem:lemma747
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 6 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma282.

skolem:lemma655 a r:Inference;
    r:gives {
        ((2 4 5) (7 3 8 6 1)) :queens3 (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5) list:select (4 (2 5))}]
        [ a r:Fact; r:gives {({
            4 :attack (7 3 8 6 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 3 8 6 1) list:firstRest (4 (7 3 8 6 1))}]
        skolem:lemma748
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 3 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma282.

skolem:lemma656 a r:Inference;
    r:gives {
        ((2 3 5) (8 6 4 7 1)) :queens3 (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5) list:select (2 (3 5))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 6 4 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 6 4 7 1) list:firstRest (2 (8 6 4 7 1))}]
        skolem:lemma749
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 6 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma282.

skolem:lemma657 a r:Inference;
    r:gives {
        ((3 4 6) (2 8 5 7 1)) :queens3 (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 6) list:select (4 (3 6))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 8 5 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 8 5 7 1) list:firstRest (4 (2 8 5 7 1))}]
        skolem:lemma750
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 8 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma282.

skolem:lemma658 a r:Inference;
    r:gives {
        ((1 5 7) (3 8 6 4 2)) :queens3 (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 7) list:select (1 (5 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 8 6 4 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 8 6 4 2) list:firstRest (1 (3 8 6 4 2))}]
        skolem:lemma751
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 8 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 8 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma282.

skolem:lemma659 a r:Inference;
    r:gives {
        ((4 6 8) (3 1 7 5 2)) :queens3 (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6 8) list:select (8 (4 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (3 1 7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3 1 7 5 2) list:firstRest (8 (3 1 7 5 2))}]
        skolem:lemma752
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3 1 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma660 a r:Inference;
    r:gives {
        ((3 6 8) (1 4 7 5 2)) :queens3 (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6 8) list:select (8 (3 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 4 7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 4 7 5 2) list:firstRest (8 (1 4 7 5 2))}]
        skolem:lemma753
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 4 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma661 a r:Inference;
    r:gives {
        ((3 5 8) (4 7 1 6 2)) :queens3 (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5 8) list:select (8 (3 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (4 7 1 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4 7 1 6 2) list:firstRest (8 (4 7 1 6 2))}]
        skolem:lemma754
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4 7 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma282.

skolem:lemma662 a r:Inference;
    r:gives {
        ((4 5 7) (1 3 8 6 2)) :queens3 (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 5 7) list:select (4 (5 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 3 8 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 3 8 6 2) list:firstRest (4 (1 3 8 6 2))}]
        skolem:lemma755
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 3 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma282.

skolem:lemma663 a r:Inference;
    r:gives {
        ((1 4 5) (8 6 3 7 2)) :queens3 (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5) list:select (5 (1 4))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 6 3 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 6 3 7 2) list:firstRest (5 (8 6 3 7 2))}]
        skolem:lemma756
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 6 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma282.

skolem:lemma664 a r:Inference;
    r:gives {
        ((3 4 6) (1 8 5 7 2)) :queens3 (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 6) list:select (4 (3 6))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 8 5 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 8 5 7 2) list:firstRest (4 (1 8 5 7 2))}]
        skolem:lemma757
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 8 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma282.

skolem:lemma665 a r:Inference;
    r:gives {
        ((4 5 7) (3 1 6 8 2)) :queens3 (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 5 7) list:select (5 (4 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (3 1 6 8 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3 1 6 8 2) list:firstRest (5 (3 1 6 8 2))}]
        skolem:lemma758
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3 1 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma282.

skolem:lemma666 a r:Inference;
    r:gives {
        ((2 4 6) (8 5 7 1 3)) :queens3 (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 6) list:select (2 (4 6))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 5 7 1 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 5 7 1 3) list:firstRest (2 (8 5 7 1 3))}]
        skolem:lemma759
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 5 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma282.

skolem:lemma667 a r:Inference;
    r:gives {
        ((4 6 7) (1 8 2 5 3)) :queens3 (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6 7) list:select (7 (4 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 8 2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 8 2 5 3) list:firstRest (7 (1 8 2 5 3))}]
        skolem:lemma760
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma668 a r:Inference;
    r:gives {
        ((1 4 7) (6 8 2 5 3)) :queens3 (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 7) list:select (4 (1 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (6 8 2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6 8 2 5 3) list:firstRest (4 (6 8 2 5 3))}]
        skolem:lemma761
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma669 a r:Inference;
    r:gives {
        ((2 6 8) (4 1 7 5 3)) :queens3 (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6 8) list:select (2 (6 8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 1 7 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 1 7 5 3) list:firstRest (2 (4 1 7 5 3))}]
        skolem:lemma762
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 1 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma282.

skolem:lemma670 a r:Inference;
    r:gives {
        ((2 6 7) (1 4 8 5 3)) :queens3 (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6 7) list:select (7 (2 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 4 8 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 4 8 5 3) list:firstRest (7 (1 4 8 5 3))}]
        skolem:lemma763
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 4 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma282.

skolem:lemma671 a r:Inference;
    r:gives {
        ((1 4 7) (8 5 2 6 3)) :queens3 (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 7) list:select (1 (4 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 5 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 5 2 6 3) list:firstRest (1 (8 5 2 6 3))}]
        skolem:lemma764
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 5 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma672 a r:Inference;
    r:gives {
        ((4 5 8) (1 7 2 6 3)) :queens3 (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 5 8) list:select (4 (5 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 7 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 7 2 6 3) list:firstRest (4 (1 7 2 6 3))}]
        skolem:lemma765
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma673 a r:Inference;
    r:gives {
        ((1 4 8) (5 7 2 6 3)) :queens3 (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 8) list:select (1 (4 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (5 7 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5 7 2 6 3) list:firstRest (1 (5 7 2 6 3))}]
        skolem:lemma766
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma674 a r:Inference;
    r:gives {
        ((2 5 7) (8 1 4 6 3)) :queens3 (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 7) list:select (5 (2 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 1 4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 1 4 6 3) list:firstRest (5 (8 1 4 6 3))}]
        skolem:lemma767
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 1 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma675 a r:Inference;
    r:gives {
        ((1 5 7) (8 2 4 6 3)) :queens3 (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 7) list:select (5 (1 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 2 4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 2 4 6 3) list:firstRest (5 (8 2 4 6 3))}]
        skolem:lemma768
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 2 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma676 a r:Inference;
    r:gives {
        ((2 5 7) (4 1 8 6 3)) :queens3 (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 7) list:select (7 (2 5))}]
        [ a r:Fact; r:gives {({
            7 :attack (4 1 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 1 8 6 3) list:firstRest (7 (4 1 8 6 3))}]
        skolem:lemma769
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma677 a r:Inference;
    r:gives {
        ((2 4 7) (5 1 8 6 3)) :queens3 (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 7) list:select (7 (2 4))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 1 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 1 8 6 3) list:firstRest (7 (5 1 8 6 3))}]
        skolem:lemma770
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma678 a r:Inference;
    r:gives {
        ((1 5 7) (4 2 8 6 3)) :queens3 (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 7) list:select (1 (5 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 2 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 2 8 6 3) list:firstRest (1 (4 2 8 6 3))}]
        skolem:lemma771
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 2 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma679 a r:Inference;
    r:gives {
        ((1 4 6) (5 8 2 7 3)) :queens3 (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 6) list:select (1 (4 6))}]
        [ a r:Fact; r:gives {({
            1 :attack (5 8 2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5 8 2 7 3) list:firstRest (1 (5 8 2 7 3))}]
        skolem:lemma772
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma680 a r:Inference;
    r:gives {
        ((1 4 5) (6 8 2 7 3)) :queens3 (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5) list:select (4 (1 5))}]
        [ a r:Fact; r:gives {({
            4 :attack (6 8 2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6 8 2 7 3) list:firstRest (4 (6 8 2 7 3))}]
        skolem:lemma773
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma681 a r:Inference;
    r:gives {
        ((2 5 6) (1 7 4 8 3)) :queens3 (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 6) list:select (6 (2 5))}]
        [ a r:Fact; r:gives {({
            6 :attack (1 7 4 8 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1 7 4 8 3) list:firstRest (6 (1 7 4 8 3))}]
        skolem:lemma774
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1 7 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma282.

skolem:lemma682 a r:Inference;
    r:gives {
        ((3 6 7) (2 8 5 1 4)) :queens3 (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6 7) list:select (7 (3 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 8 5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 8 5 1 4) list:firstRest (7 (2 8 5 1 4))}]
        skolem:lemma775
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma683 a r:Inference;
    r:gives {
        ((2 3 7) (6 8 5 1 4)) :queens3 (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 7) list:select (3 (2 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (6 8 5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 8 5 1 4) list:firstRest (3 (6 8 5 1 4))}]
        skolem:lemma776
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma684 a r:Inference;
    r:gives {
        ((1 3 7) (6 8 5 2 4)) :queens3 (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 7) list:select (1 (3 7))}]
        [ a r:Fact; r:gives {({
            1 :attack (6 8 5 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6 8 5 2 4) list:firstRest (1 (6 8 5 2 4))}]
        skolem:lemma777
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6 8 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma282.

skolem:lemma685 a r:Inference;
    r:gives {
        ((1 5 8) (6 3 7 2 4)) :queens3 (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 8) list:select (8 (1 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 3 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 3 7 2 4) list:firstRest (8 (6 3 7 2 4))}]
        skolem:lemma778
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma686 a r:Inference;
    r:gives {
        ((1 5 8) (6 3 7 2 4)) :queens3 (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 8) list:select (8 (1 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 3 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 3 7 2 4) list:firstRest (8 (6 3 7 2 4))}]
        skolem:lemma779
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma687 a r:Inference;
    r:gives {
        ((3 6 8) (1 5 7 2 4)) :queens3 (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6 8) list:select (8 (3 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 5 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 5 7 2 4) list:firstRest (8 (1 5 7 2 4))}]
        skolem:lemma780
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 5 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma688 a r:Inference;
    r:gives {
        ((1 3 6) (7 5 8 2 4)) :queens3 (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6) list:select (1 (3 6))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 5 8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 5 8 2 4) list:firstRest (1 (7 5 8 2 4))}]
        skolem:lemma781
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 5 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma689 a r:Inference;
    r:gives {
        ((3 5 7) (1 6 8 2 4)) :queens3 (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5 7) list:select (3 (5 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 6 8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 6 8 2 4) list:firstRest (3 (1 6 8 2 4))}]
        skolem:lemma782
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 6 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 6 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma690 a r:Inference;
    r:gives {
        ((3 7 8) (2 5 1 6 4)) :queens3 (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 7 8) list:select (8 (3 7))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 5 1 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 5 1 6 4) list:firstRest (8 (2 5 1 6 4))}]
        skolem:lemma783
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 5 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma282.

skolem:lemma691 a r:Inference;
    r:gives {
        ((1 3 5) (7 2 8 6 4)) :queens3 (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5) list:select (1 (3 5))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 2 8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 2 8 6 4) list:firstRest (1 (7 2 8 6 4))}]
        skolem:lemma784
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 2 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma692 a r:Inference;
    r:gives {
        ((2 5 7) (1 3 8 6 4)) :queens3 (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 7) list:select (7 (2 5))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 3 8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 3 8 6 4) list:firstRest (7 (1 3 8 6 4))}]
        skolem:lemma785
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 3 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma693 a r:Inference;
    r:gives {
        ((2 3 6) (5 8 1 7 4)) :queens3 (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6) list:select (2 (3 6))}]
        [ a r:Fact; r:gives {({
            2 :attack (5 8 1 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 8 1 7 4) list:firstRest (2 (5 8 1 7 4))}]
        skolem:lemma786
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 8 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma282.

skolem:lemma694 a r:Inference;
    r:gives {
        ((1 5 6) (2 8 3 7 4)) :queens3 (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 6) list:select (5 (1 6))}]
        [ a r:Fact; r:gives {({
            5 :attack (2 8 3 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 8 3 7 4) list:firstRest (5 (2 8 3 7 4))}]
        skolem:lemma787
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 8 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma282.

skolem:lemma695 a r:Inference;
    r:gives {
        ((1 3 8) (6 2 5 7 4)) :queens3 (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 8) list:select (1 (3 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (6 2 5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6 2 5 7 4) list:firstRest (1 (6 2 5 7 4))}]
        skolem:lemma788
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6 2 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma696 a r:Inference;
    r:gives {
        ((2 6 8) (1 3 5 7 4)) :queens3 (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6 8) list:select (6 (2 8))}]
        [ a r:Fact; r:gives {({
            6 :attack (1 3 5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1 3 5 7 4) list:firstRest (6 (1 3 5 7 4))}]
        skolem:lemma789
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1 3 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma697 a r:Inference;
    r:gives {
        ((2 5 7) (6 3 1 8 4)) :queens3 (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 7) list:select (2 (5 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (6 3 1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 3 1 8 4) list:firstRest (2 (6 3 1 8 4))}]
        skolem:lemma790
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 3 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma698 a r:Inference;
    r:gives {
        ((2 3 6) (7 5 1 8 4)) :queens3 (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6) list:select (2 (3 6))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 5 1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 5 1 8 4) list:firstRest (2 (7 5 1 8 4))}]
        skolem:lemma791
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 5 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma699 a r:Inference;
    r:gives {
        ((2 6 7) (1 3 5 8 4)) :queens3 (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6 7) list:select (7 (2 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 3 5 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 3 5 8 4) list:firstRest (7 (1 3 5 8 4))}]
        skolem:lemma792
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 3 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma282.

skolem:lemma700 a r:Inference;
    r:gives {
        ((2 3 7) (8 6 4 1 5)) :queens3 (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 7) list:select (2 (3 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 6 4 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 6 4 1 5) list:firstRest (2 (8 6 4 1 5))}]
        skolem:lemma793
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 6 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma282.

skolem:lemma701 a r:Inference;
    r:gives {
        ((3 6 7) (2 4 8 1 5)) :queens3 (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6 7) list:select (7 (3 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 4 8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 4 8 1 5) list:firstRest (7 (2 4 8 1 5))}]
        skolem:lemma794
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 4 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma702 a r:Inference;
    r:gives {
        ((2 4 7) (3 6 8 1 5)) :queens3 (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 7) list:select (7 (2 4))}]
        [ a r:Fact; r:gives {({
            7 :attack (3 6 8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 6 8 1 5) list:firstRest (7 (3 6 8 1 5))}]
        skolem:lemma795
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 6 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma703 a r:Inference;
    r:gives {
        ((1 3 7) (8 6 4 2 5)) :queens3 (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 7) list:select (3 (1 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (8 6 4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8 6 4 2 5) list:firstRest (3 (8 6 4 2 5))}]
        skolem:lemma796
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8 6 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma704 a r:Inference;
    r:gives {
        ((1 6 8) (3 7 4 2 5)) :queens3 (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 6 8) list:select (8 (1 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (3 7 4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3 7 4 2 5) list:firstRest (8 (3 7 4 2 5))}]
        skolem:lemma797
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3 7 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma705 a r:Inference;
    r:gives {
        ((3 4 8) (7 1 6 2 5)) :queens3 (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 8) list:select (4 (3 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (7 1 6 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 1 6 2 5) list:firstRest (4 (7 1 6 2 5))}]
        skolem:lemma798
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 1 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma282.

skolem:lemma706 a r:Inference;
    r:gives {
        ((3 6 7) (4 1 8 2 5)) :queens3 (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6 7) list:select (7 (3 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (4 1 8 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 1 8 2 5) list:firstRest (7 (4 1 8 2 5))}]
        skolem:lemma799
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 1 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma282.

skolem:lemma707 a r:Inference;
    r:gives {
        ((2 4 7) (8 6 1 3 5)) :queens3 (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 7) list:select (2 (4 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 6 1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 6 1 3 5) list:firstRest (2 (8 6 1 3 5))}]
        skolem:lemma800
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 6 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma708 a r:Inference;
    r:gives {
        ((4 6 8) (2 7 1 3 5)) :queens3 (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6 8) list:select (8 (4 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 7 1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 7 1 3 5) list:firstRest (8 (2 7 1 3 5))}]
        skolem:lemma801
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 7 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma709 a r:Inference;
    r:gives {
        ((1 2 6) (7 4 8 3 5)) :queens3 (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 2 6) list:select (1 (2 6))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 4 8 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 4 8 3 5) list:firstRest (1 (7 4 8 3 5))}]
        skolem:lemma802
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 4 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma282.

skolem:lemma710 a r:Inference;
    r:gives {
        ((2 4 6) (8 3 1 7 5)) :queens3 (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 6) list:select (6 (2 4))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 3 1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 3 1 7 5) list:firstRest (6 (8 3 1 7 5))}]
        skolem:lemma803
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 3 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma711 a r:Inference;
    r:gives {
        ((3 6 8) (2 4 1 7 5)) :queens3 (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6 8) list:select (8 (3 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 4 1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 4 1 7 5) list:firstRest (8 (2 4 1 7 5))}]
        skolem:lemma804
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 4 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma712 a r:Inference;
    r:gives {
        ((1 3 6) (8 4 2 7 5)) :queens3 (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6) list:select (1 (3 6))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 4 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 4 2 7 5) list:firstRest (1 (8 4 2 7 5))}]
        skolem:lemma805
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 4 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma713 a r:Inference;
    r:gives {
        ((1 4 8) (3 6 2 7 5)) :queens3 (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 8) list:select (1 (4 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 6 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 6 2 7 5) list:firstRest (1 (3 6 2 7 5))}]
        skolem:lemma806
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma714 a r:Inference;
    r:gives {
        ((1 4 8) (3 6 2 7 5)) :queens3 (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 8) list:select (1 (4 8))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 6 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 6 2 7 5) list:firstRest (1 (3 6 2 7 5))}]
        skolem:lemma807
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma715 a r:Inference;
    r:gives {
        ((2 6 8) (3 1 4 7 5)) :queens3 (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6 8) list:select (8 (2 6))}]
        [ a r:Fact; r:gives {({
            8 :attack (3 1 4 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3 1 4 7 5) list:firstRest (8 (3 1 4 7 5))}]
        skolem:lemma808
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3 1 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma282.

skolem:lemma716 a r:Inference;
    r:gives {
        ((2 6 7) (3 1 4 8 5)) :queens3 (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6 7) list:select (6 (2 7))}]
        [ a r:Fact; r:gives {({
            6 :attack (3 1 4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 1 4 8 5) list:firstRest (6 (3 1 4 8 5))}]
        skolem:lemma809
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma717 a r:Inference;
    r:gives {
        ((2 3 6) (7 1 4 8 5)) :queens3 (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 6) list:select (2 (3 6))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 1 4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 1 4 8 5) list:firstRest (2 (7 1 4 8 5))}]
        skolem:lemma810
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma718 a r:Inference;
    r:gives {
        ((3 4 7) (8 2 5 1 6)) :queens3 (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 4 7) list:select (3 (4 7))}]
        [ a r:Fact; r:gives {({
            3 :attack (8 2 5 1 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8 2 5 1 6) list:firstRest (3 (8 2 5 1 6))}]
        skolem:lemma811
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8 2 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma282.

skolem:lemma719 a r:Inference;
    r:gives {
        ((4 5 8) (3 1 7 2 6)) :queens3 (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 5 8) list:select (5 (4 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (3 1 7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3 1 7 2 6) list:firstRest (5 (3 1 7 2 6))}]
        skolem:lemma812
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma720 a r:Inference;
    r:gives {
        ((3 5 8) (4 1 7 2 6)) :queens3 (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5 8) list:select (8 (3 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (4 1 7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4 1 7 2 6) list:firstRest (8 (4 1 7 2 6))}]
        skolem:lemma813
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma721 a r:Inference;
    r:gives {
        ((2 4 8) (5 7 1 3 6)) :queens3 (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 8) list:select (8 (2 4))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 7 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 7 1 3 6) list:firstRest (8 (5 7 1 3 6))}]
        skolem:lemma814
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 7 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma722 a r:Inference;
    r:gives {
        ((2 5 7) (4 8 1 3 6)) :queens3 (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 7) list:select (2 (5 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 8 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 8 1 3 6) list:firstRest (2 (4 8 1 3 6))}]
        skolem:lemma815
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma723 a r:Inference;
    r:gives {
        ((2 4 7) (5 8 1 3 6)) :queens3 (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 7) list:select (2 (4 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (5 8 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 8 1 3 6) list:firstRest (2 (5 8 1 3 6))}]
        skolem:lemma816
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma724 a r:Inference;
    r:gives {
        ((2 4 8) (1 7 5 3 6)) :queens3 (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 8) list:select (4 (2 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 7 5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 7 5 3 6) list:firstRest (4 (1 7 5 3 6))}]
        skolem:lemma817
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 7 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma725 a r:Inference;
    r:gives {
        ((2 4 7) (1 8 5 3 6)) :queens3 (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 7) list:select (4 (2 7))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 8 5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 8 5 3 6) list:firstRest (4 (1 8 5 3 6))}]
        skolem:lemma818
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 8 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma726 a r:Inference;
    r:gives {
        ((1 5 8) (4 2 7 3 6)) :queens3 (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5 8) list:select (8 (1 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (4 2 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4 2 7 3 6) list:firstRest (8 (4 2 7 3 6))}]
        skolem:lemma819
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma727 a r:Inference;
    r:gives {
        ((1 4 5) (8 2 7 3 6)) :queens3 (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 5) list:select (5 (1 4))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 2 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 2 7 3 6) list:firstRest (5 (8 2 7 3 6))}]
        skolem:lemma820
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma728 a r:Inference;
    r:gives {
        ((2 5 8) (1 4 7 3 6)) :queens3 (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 8) list:select (8 (2 5))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 4 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 4 7 3 6) list:firstRest (8 (1 4 7 3 6))}]
        skolem:lemma821
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 4 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma729 a r:Inference;
    r:gives {
        ((2 3 7) (8 5 1 4 6)) :queens3 (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 7) list:select (2 (3 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 5 1 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 5 1 4 6) list:firstRest (2 (8 5 1 4 6))}]
        skolem:lemma822
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 5 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma282.

skolem:lemma730 a r:Inference;
    r:gives {
        ((1 3 7) (5 8 2 4 6)) :queens3 (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 7) list:select (7 (1 3))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 8 2 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 8 2 4 6) list:firstRest (7 (5 8 2 4 6))}]
        skolem:lemma823
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 8 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma282.

skolem:lemma731 a r:Inference;
    r:gives {
        ((2 5 8) (3 1 7 4 6)) :queens3 (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 8) list:select (5 (2 8))}]
        [ a r:Fact; r:gives {({
            5 :attack (3 1 7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3 1 7 4 6) list:firstRest (5 (3 1 7 4 6))}]
        skolem:lemma824
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma732 a r:Inference;
    r:gives {
        ((2 3 5) (8 1 7 4 6)) :queens3 (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 3 5) list:select (2 (3 5))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 1 7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 1 7 4 6) list:firstRest (2 (8 1 7 4 6))}]
        skolem:lemma825
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma733 a r:Inference;
    r:gives {
        ((3 5 7) (1 4 2 8 6)) :queens3 (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5 7) list:select (7 (3 5))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 4 2 8 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 4 2 8 6) list:firstRest (7 (1 4 2 8 6))}]
        skolem:lemma826
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 4 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma282.

skolem:lemma734 a r:Inference;
    r:gives {
        ((2 4 5) (6 8 3 1 7)) :queens3 (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5) list:select (4 (2 5))}]
        [ a r:Fact; r:gives {({
            4 :attack (6 8 3 1 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6 8 3 1 7) list:firstRest (4 (6 8 3 1 7))}]
        skolem:lemma827
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6 8 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma282.

skolem:lemma735 a r:Inference;
    r:gives {
        ((3 5 6) (8 1 4 2 7)) :queens3 (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5 6) list:select (5 (3 6))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 1 4 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 1 4 2 7) list:firstRest (5 (8 1 4 2 7))}]
        skolem:lemma828
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 1 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma282.

skolem:lemma736 a r:Inference;
    r:gives {
        ((4 5 8) (1 3 6 2 7)) :queens3 (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 5 8) list:select (4 (5 8))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 3 6 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 3 6 2 7) list:firstRest (4 (1 3 6 2 7))}]
        skolem:lemma829
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 3 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma282.

skolem:lemma737 a r:Inference;
    r:gives {
        ((2 4 5) (8 6 1 3 7)) :queens3 (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 5) list:select (5 (2 4))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 6 1 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 6 1 3 7) list:firstRest (5 (8 6 1 3 7))}]
        skolem:lemma830
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 6 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma282.

skolem:lemma738 a r:Inference;
    r:gives {
        ((1 4 6) (5 2 8 3 7)) :queens3 (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4 6) list:select (1 (4 6))}]
        [ a r:Fact; r:gives {({
            1 :attack (5 2 8 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5 2 8 3 7) list:firstRest (1 (5 2 8 3 7))}]
        skolem:lemma831
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5 2 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma282.

skolem:lemma739 a r:Inference;
    r:gives {
        ((1 3 6) (8 5 2 4 7)) :queens3 (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 6) list:select (1 (3 6))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 5 2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 5 2 4 7) list:firstRest (1 (8 5 2 4 7))}]
        skolem:lemma832
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 5 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma740 a r:Inference;
    r:gives {
        ((1 3 5) (6 8 2 4 7)) :queens3 (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3 5) list:select (1 (3 5))}]
        [ a r:Fact; r:gives {({
            1 :attack (6 8 2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6 8 2 4 7) list:firstRest (1 (6 8 2 4 7))}]
        skolem:lemma833
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6 8 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma741 a r:Inference;
    r:gives {
        ((2 4 8) (6 1 3 5 7)) :queens3 (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4 8) list:select (8 (2 4))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 1 3 5 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 1 3 5 7) list:firstRest (8 (6 1 3 5 7))}]
        skolem:lemma834
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma282.

skolem:lemma742 a r:Inference;
    r:gives {
        ((3 5 6) (7 1 4 2 8)) :queens3 (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5 6) list:select (5 (3 6))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 1 4 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 1 4 2 8) list:firstRest (5 (7 1 4 2 8))}]
        skolem:lemma835
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 1 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma282.

skolem:lemma743 a r:Inference;
    r:gives {
        ((4 6 7) (1 3 5 2 8)) :queens3 (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6 7) list:select (7 (4 6))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 3 5 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 3 5 2 8) list:firstRest (7 (1 3 5 2 8))}]
        skolem:lemma836
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 3 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma282.

skolem:lemma744 a r:Inference;
    r:gives {
        ((4 5 7) (2 6 1 3 8)) :queens3 (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 5 7) list:select (5 (4 7))}]
        [ a r:Fact; r:gives {({
            5 :attack (2 6 1 3 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 6 1 3 8) list:firstRest (5 (2 6 1 3 8))}]
        skolem:lemma837
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 6 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma282.

skolem:lemma745 a r:Inference;
    r:gives {
        ((2 5 7) (6 3 1 4 8)) :queens3 (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5 7) list:select (2 (5 7))}]
        [ a r:Fact; r:gives {({
            2 :attack (6 3 1 4 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 3 1 4 8) list:firstRest (2 (6 3 1 4 8))}]
        skolem:lemma838
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 3 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma282.

skolem:lemma746 a r:Inference;
    r:gives {
        (7 8) :range (7 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7 8) list:firstRest (7 (8))}]
        [ a r:Fact; r:gives {7 math:lessThan 8}]
        [ a r:Fact; r:gives {(7 1) math:sum 8}]
        skolem:lemma839
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 8];
    r:rule skolem:lemma280.

skolem:lemma747 a r:Inference;
    r:gives {
        ((2 4) (7 3 6 8 5 1)) :queens3 (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4) list:select (2 (4))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 3 6 8 5 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 3 6 8 5 1) list:firstRest (2 (7 3 6 8 5 1))}]
        skolem:lemma840
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 6 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 3 6 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma282.

skolem:lemma748 a r:Inference;
    r:gives {
        ((2 5) (4 7 3 8 6 1)) :queens3 (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5) list:select (2 (5))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 7 3 8 6 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 7 3 8 6 1) list:firstRest (2 (4 7 3 8 6 1))}]
        skolem:lemma841
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7 3 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 7 3 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma282.

skolem:lemma749 a r:Inference;
    r:gives {
        ((3 5) (2 8 6 4 7 1)) :queens3 (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5) list:select (5 (3))}]
        [ a r:Fact; r:gives {({
            5 :attack (2 8 6 4 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 8 6 4 7 1) list:firstRest (5 (2 8 6 4 7 1))}]
        skolem:lemma842
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 6 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 8 6 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma282.

skolem:lemma750 a r:Inference;
    r:gives {
        ((3 6) (4 2 8 5 7 1)) :queens3 (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (6 (3))}]
        [ a r:Fact; r:gives {({
            6 :attack (4 2 8 5 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 2 8 5 7 1) list:firstRest (6 (4 2 8 5 7 1))}]
        skolem:lemma843
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 8 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 2 8 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma282.

skolem:lemma751 a r:Inference;
    r:gives {
        ((5 7) (1 3 8 6 4 2)) :queens3 (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 7) list:select (7 (5))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 3 8 6 4 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 3 8 6 4 2) list:firstRest (7 (1 3 8 6 4 2))}]
        skolem:lemma844
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 8 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 3 8 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma282.

skolem:lemma752 a r:Inference;
    r:gives {
        ((4 6) (8 3 1 7 5 2)) :queens3 (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6) list:select (6 (4))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 3 1 7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 3 1 7 5 2) list:firstRest (6 (8 3 1 7 5 2))}]
        skolem:lemma845
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 3 1 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma753 a r:Inference;
    r:gives {
        ((3 6) (8 1 4 7 5 2)) :queens3 (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (6 (3))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 1 4 7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 1 4 7 5 2) list:firstRest (6 (8 1 4 7 5 2))}]
        skolem:lemma846
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 4 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 1 4 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma754 a r:Inference;
    r:gives {
        ((3 5) (8 4 7 1 6 2)) :queens3 (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5) list:select (3 (5))}]
        [ a r:Fact; r:gives {({
            3 :attack (8 4 7 1 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8 4 7 1 6 2) list:firstRest (3 (8 4 7 1 6 2))}]
        skolem:lemma847
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 7 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8 4 7 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma282.

skolem:lemma755 a r:Inference;
    r:gives {
        ((5 7) (4 1 3 8 6 2)) :queens3 (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 7) list:select (7 (5))}]
        [ a r:Fact; r:gives {({
            7 :attack (4 1 3 8 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 1 3 8 6 2) list:firstRest (7 (4 1 3 8 6 2))}]
        skolem:lemma848
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 3 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 1 3 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma282.

skolem:lemma756 a r:Inference;
    r:gives {
        ((1 4) (5 8 6 3 7 2)) :queens3 (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4) list:select (1 (4))}]
        [ a r:Fact; r:gives {({
            1 :attack (5 8 6 3 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5 8 6 3 7 2) list:firstRest (1 (5 8 6 3 7 2))}]
        skolem:lemma849
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 6 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5 8 6 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma282.

skolem:lemma757 a r:Inference;
    r:gives {
        ((3 6) (4 1 8 5 7 2)) :queens3 (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (6 (3))}]
        [ a r:Fact; r:gives {({
            6 :attack (4 1 8 5 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 1 8 5 7 2) list:firstRest (6 (4 1 8 5 7 2))}]
        skolem:lemma850
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 8 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 1 8 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma282.

skolem:lemma758 a r:Inference;
    r:gives {
        ((4 7) (5 3 1 6 8 2)) :queens3 (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 7) list:select (7 (4))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 3 1 6 8 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 3 1 6 8 2) list:firstRest (7 (5 3 1 6 8 2))}]
        skolem:lemma851
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 3 1 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma282.

skolem:lemma759 a r:Inference;
    r:gives {
        ((4 6) (2 8 5 7 1 3)) :queens3 (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6) list:select (4 (6))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 8 5 7 1 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 8 5 7 1 3) list:firstRest (4 (2 8 5 7 1 3))}]
        skolem:lemma852
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 5 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 8 5 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma282.

skolem:lemma760 a r:Inference;
    r:gives {
        ((4 6) (7 1 8 2 5 3)) :queens3 (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6) list:select (4 (6))}]
        [ a r:Fact; r:gives {({
            4 :attack (7 1 8 2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 1 8 2 5 3) list:firstRest (4 (7 1 8 2 5 3))}]
        skolem:lemma853
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 1 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma761 a r:Inference;
    r:gives {
        ((1 7) (4 6 8 2 5 3)) :queens3 (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 7) list:select (7 (1))}]
        [ a r:Fact; r:gives {({
            7 :attack (4 6 8 2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 6 8 2 5 3) list:firstRest (7 (4 6 8 2 5 3))}]
        skolem:lemma854
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 6 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma762 a r:Inference;
    r:gives {
        ((6 8) (2 4 1 7 5 3)) :queens3 (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6 8) list:select (8 (6))}]
        [ a r:Fact; r:gives {({
            8 :attack (2 4 1 7 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 4 1 7 5 3) list:firstRest (8 (2 4 1 7 5 3))}]
        skolem:lemma855
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 1 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 4 1 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma282.

skolem:lemma763 a r:Inference;
    r:gives {
        ((2 6) (7 1 4 8 5 3)) :queens3 (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6) list:select (2 (6))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 1 4 8 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 1 4 8 5 3) list:firstRest (2 (7 1 4 8 5 3))}]
        skolem:lemma856
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 4 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 1 4 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma282.

skolem:lemma764 a r:Inference;
    r:gives {
        ((4 7) (1 8 5 2 6 3)) :queens3 (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 7) list:select (7 (4))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 8 5 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 8 5 2 6 3) list:firstRest (7 (1 8 5 2 6 3))}]
        skolem:lemma857
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 5 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 8 5 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma765 a r:Inference;
    r:gives {
        ((5 8) (4 1 7 2 6 3)) :queens3 (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 8) list:select (8 (5))}]
        [ a r:Fact; r:gives {({
            8 :attack (4 1 7 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4 1 7 2 6 3) list:firstRest (8 (4 1 7 2 6 3))}]
        skolem:lemma858
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4 1 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma766 a r:Inference;
    r:gives {
        ((4 8) (1 5 7 2 6 3)) :queens3 (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 8) list:select (8 (4))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 5 7 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 5 7 2 6 3) list:firstRest (8 (1 5 7 2 6 3))}]
        skolem:lemma859
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 5 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma767 a r:Inference;
    r:gives {
        ((2 7) (5 8 1 4 6 3)) :queens3 (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 7) list:select (7 (2))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 8 1 4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 8 1 4 6 3) list:firstRest (7 (5 8 1 4 6 3))}]
        skolem:lemma860
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 1 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 8 1 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma768 a r:Inference;
    r:gives {
        ((1 7) (5 8 2 4 6 3)) :queens3 (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 7) list:select (7 (1))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 8 2 4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 8 2 4 6 3) list:firstRest (7 (5 8 2 4 6 3))}]
        skolem:lemma861
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 2 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 8 2 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma769 a r:Inference;
    r:gives {
        ((2 5) (7 4 1 8 6 3)) :queens3 (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5) list:select (5 (2))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 4 1 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 4 1 8 6 3) list:firstRest (5 (7 4 1 8 6 3))}]
        skolem:lemma862
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 4 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma770 a r:Inference;
    r:gives {
        ((2 4) (7 5 1 8 6 3)) :queens3 (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4) list:select (2 (4))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 5 1 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 5 1 8 6 3) list:firstRest (2 (7 5 1 8 6 3))}]
        skolem:lemma863
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 5 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma771 a r:Inference;
    r:gives {
        ((5 7) (1 4 2 8 6 3)) :queens3 (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 7) list:select (7 (5))}]
        [ a r:Fact; r:gives {({
            7 :attack (1 4 2 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 4 2 8 6 3) list:firstRest (7 (1 4 2 8 6 3))}]
        skolem:lemma864
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 2 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 4 2 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma772 a r:Inference;
    r:gives {
        ((4 6) (1 5 8 2 7 3)) :queens3 (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6) list:select (4 (6))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 5 8 2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 5 8 2 7 3) list:firstRest (4 (1 5 8 2 7 3))}]
        skolem:lemma865
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 5 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma773 a r:Inference;
    r:gives {
        ((1 5) (4 6 8 2 7 3)) :queens3 (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5) list:select (1 (5))}]
        [ a r:Fact; r:gives {({
            1 :attack (4 6 8 2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 4 6 8 2 7 3) list:firstRest (1 (4 6 8 2 7 3))}]
        skolem:lemma866
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 4 6 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma774 a r:Inference;
    r:gives {
        ((2 5) (6 1 7 4 8 3)) :queens3 (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5) list:select (2 (5))}]
        [ a r:Fact; r:gives {({
            2 :attack (6 1 7 4 8 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 1 7 4 8 3) list:firstRest (2 (6 1 7 4 8 3))}]
        skolem:lemma867
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 7 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 1 7 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma282.

skolem:lemma775 a r:Inference;
    r:gives {
        ((3 6) (7 2 8 5 1 4)) :queens3 (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (3 (6))}]
        [ a r:Fact; r:gives {({
            3 :attack (7 2 8 5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 2 8 5 1 4) list:firstRest (3 (7 2 8 5 1 4))}]
        skolem:lemma868
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 2 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma776 a r:Inference;
    r:gives {
        ((2 7) (3 6 8 5 1 4)) :queens3 (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 7) list:select (7 (2))}]
        [ a r:Fact; r:gives {({
            7 :attack (3 6 8 5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 6 8 5 1 4) list:firstRest (7 (3 6 8 5 1 4))}]
        skolem:lemma869
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 6 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 6 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma777 a r:Inference;
    r:gives {
        ((3 7) (1 6 8 5 2 4)) :queens3 (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 7) list:select (3 (7))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 6 8 5 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 6 8 5 2 4) list:firstRest (3 (1 6 8 5 2 4))}]
        skolem:lemma870
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 6 8 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 6 8 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma282.

skolem:lemma778 a r:Inference;
    r:gives {
        ((1 5) (8 6 3 7 2 4)) :queens3 (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5) list:select (1 (5))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 6 3 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 6 3 7 2 4) list:firstRest (1 (8 6 3 7 2 4))}]
        skolem:lemma871
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma779 a r:Inference;
    r:gives {
        ((1 5) (8 6 3 7 2 4)) :queens3 (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5) list:select (5 (1))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 6 3 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 6 3 7 2 4) list:firstRest (5 (8 6 3 7 2 4))}]
        skolem:lemma872
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma780 a r:Inference;
    r:gives {
        ((3 6) (8 1 5 7 2 4)) :queens3 (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (6 (3))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 1 5 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 1 5 7 2 4) list:firstRest (6 (8 1 5 7 2 4))}]
        skolem:lemma873
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 5 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 1 5 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma781 a r:Inference;
    r:gives {
        ((3 6) (1 7 5 8 2 4)) :queens3 (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (3 (6))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 7 5 8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 7 5 8 2 4) list:firstRest (3 (1 7 5 8 2 4))}]
        skolem:lemma874
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 5 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 7 5 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma782 a r:Inference;
    r:gives {
        ((5 7) (3 1 6 8 2 4)) :queens3 (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 7) list:select (5 (7))}]
        [ a r:Fact; r:gives {({
            5 :attack (3 1 6 8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3 1 6 8 2 4) list:firstRest (5 (3 1 6 8 2 4))}]
        skolem:lemma875
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 6 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3 1 6 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma783 a r:Inference;
    r:gives {
        ((3 7) (8 2 5 1 6 4)) :queens3 (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 7) list:select (3 (7))}]
        [ a r:Fact; r:gives {({
            3 :attack (8 2 5 1 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8 2 5 1 6 4) list:firstRest (3 (8 2 5 1 6 4))}]
        skolem:lemma876
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 5 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8 2 5 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma282.

skolem:lemma784 a r:Inference;
    r:gives {
        ((3 5) (1 7 2 8 6 4)) :queens3 (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5) list:select (3 (5))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 7 2 8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 7 2 8 6 4) list:firstRest (3 (1 7 2 8 6 4))}]
        skolem:lemma877
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 2 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 7 2 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma785 a r:Inference;
    r:gives {
        ((2 5) (7 1 3 8 6 4)) :queens3 (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5) list:select (5 (2))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 1 3 8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 1 3 8 6 4) list:firstRest (5 (7 1 3 8 6 4))}]
        skolem:lemma878
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 3 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 1 3 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma786 a r:Inference;
    r:gives {
        ((3 6) (2 5 8 1 7 4)) :queens3 (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (6 (3))}]
        [ a r:Fact; r:gives {({
            6 :attack (2 5 8 1 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 5 8 1 7 4) list:firstRest (6 (2 5 8 1 7 4))}]
        skolem:lemma879
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5 8 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 5 8 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma282.

skolem:lemma787 a r:Inference;
    r:gives {
        ((1 6) (5 2 8 3 7 4)) :queens3 (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 6) list:select (1 (6))}]
        [ a r:Fact; r:gives {({
            1 :attack (5 2 8 3 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5 2 8 3 7 4) list:firstRest (1 (5 2 8 3 7 4))}]
        skolem:lemma880
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 8 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5 2 8 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma282.

skolem:lemma788 a r:Inference;
    r:gives {
        ((3 8) (1 6 2 5 7 4)) :queens3 (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 8) list:select (3 (8))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 6 2 5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 6 2 5 7 4) list:firstRest (3 (1 6 2 5 7 4))}]
        skolem:lemma881
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 6 2 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 6 2 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma789 a r:Inference;
    r:gives {
        ((2 8) (6 1 3 5 7 4)) :queens3 (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 8) list:select (8 (2))}]
        [ a r:Fact; r:gives {({
            8 :attack (6 1 3 5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 6 1 3 5 7 4) list:firstRest (8 (6 1 3 5 7 4))}]
        skolem:lemma882
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 3 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 6 1 3 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma790 a r:Inference;
    r:gives {
        ((5 7) (2 6 3 1 8 4)) :queens3 (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 7) list:select (7 (5))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 6 3 1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 6 3 1 8 4) list:firstRest (7 (2 6 3 1 8 4))}]
        skolem:lemma883
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6 3 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 6 3 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma791 a r:Inference;
    r:gives {
        ((3 6) (2 7 5 1 8 4)) :queens3 (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (6 (3))}]
        [ a r:Fact; r:gives {({
            6 :attack (2 7 5 1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 7 5 1 8 4) list:firstRest (6 (2 7 5 1 8 4))}]
        skolem:lemma884
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 5 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 7 5 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma792 a r:Inference;
    r:gives {
        ((2 6) (7 1 3 5 8 4)) :queens3 (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6) list:select (2 (6))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 1 3 5 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 1 3 5 8 4) list:firstRest (2 (7 1 3 5 8 4))}]
        skolem:lemma885
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 3 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 1 3 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma282.

skolem:lemma793 a r:Inference;
    r:gives {
        ((3 7) (2 8 6 4 1 5)) :queens3 (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 7) list:select (7 (3))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 8 6 4 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 8 6 4 1 5) list:firstRest (7 (2 8 6 4 1 5))}]
        skolem:lemma886
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 6 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 8 6 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma282.

skolem:lemma794 a r:Inference;
    r:gives {
        ((3 6) (7 2 4 8 1 5)) :queens3 (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (3 (6))}]
        [ a r:Fact; r:gives {({
            3 :attack (7 2 4 8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 2 4 8 1 5) list:firstRest (3 (7 2 4 8 1 5))}]
        skolem:lemma887
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 4 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 2 4 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma795 a r:Inference;
    r:gives {
        ((2 4) (7 3 6 8 1 5)) :queens3 (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4) list:select (2 (4))}]
        [ a r:Fact; r:gives {({
            2 :attack (7 3 6 8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 3 6 8 1 5) list:firstRest (2 (7 3 6 8 1 5))}]
        skolem:lemma888
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 6 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 3 6 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma796 a r:Inference;
    r:gives {
        ((1 7) (3 8 6 4 2 5)) :queens3 (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 7) list:select (1 (7))}]
        [ a r:Fact; r:gives {({
            1 :attack (3 8 6 4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 3 8 6 4 2 5) list:firstRest (1 (3 8 6 4 2 5))}]
        skolem:lemma889
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 8 6 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 3 8 6 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma797 a r:Inference;
    r:gives {
        ((1 6) (8 3 7 4 2 5)) :queens3 (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 6) list:select (6 (1))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 3 7 4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 3 7 4 2 5) list:firstRest (6 (8 3 7 4 2 5))}]
        skolem:lemma890
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 7 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 3 7 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma798 a r:Inference;
    r:gives {
        ((3 8) (4 7 1 6 2 5)) :queens3 (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 8) list:select (8 (3))}]
        [ a r:Fact; r:gives {({
            8 :attack (4 7 1 6 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4 7 1 6 2 5) list:firstRest (8 (4 7 1 6 2 5))}]
        skolem:lemma891
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7 1 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4 7 1 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma282.

skolem:lemma799 a r:Inference;
    r:gives {
        ((3 6) (7 4 1 8 2 5)) :queens3 (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (3 (6))}]
        [ a r:Fact; r:gives {({
            3 :attack (7 4 1 8 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 4 1 8 2 5) list:firstRest (3 (7 4 1 8 2 5))}]
        skolem:lemma892
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 1 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 4 1 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma282.

skolem:lemma800 a r:Inference;
    r:gives {
        ((4 7) (2 8 6 1 3 5)) :queens3 (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 7) list:select (4 (7))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 8 6 1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 8 6 1 3 5) list:firstRest (4 (2 8 6 1 3 5))}]
        skolem:lemma893
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 6 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 8 6 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma801 a r:Inference;
    r:gives {
        ((4 6) (8 2 7 1 3 5)) :queens3 (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6) list:select (6 (4))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 2 7 1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 2 7 1 3 5) list:firstRest (6 (8 2 7 1 3 5))}]
        skolem:lemma894
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 7 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 2 7 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma802 a r:Inference;
    r:gives {
        ((2 6) (1 7 4 8 3 5)) :queens3 (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6) list:select (6 (2))}]
        [ a r:Fact; r:gives {({
            6 :attack (1 7 4 8 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1 7 4 8 3 5) list:firstRest (6 (1 7 4 8 3 5))}]
        skolem:lemma895
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 4 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1 7 4 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma282.

skolem:lemma803 a r:Inference;
    r:gives {
        ((2 4) (6 8 3 1 7 5)) :queens3 (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4) list:select (4 (2))}]
        [ a r:Fact; r:gives {({
            4 :attack (6 8 3 1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6 8 3 1 7 5) list:firstRest (4 (6 8 3 1 7 5))}]
        skolem:lemma896
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 3 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6 8 3 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma804 a r:Inference;
    r:gives {
        ((3 6) (8 2 4 1 7 5)) :queens3 (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (6 (3))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 2 4 1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 2 4 1 7 5) list:firstRest (6 (8 2 4 1 7 5))}]
        skolem:lemma897
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 4 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 2 4 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma805 a r:Inference;
    r:gives {
        ((3 6) (1 8 4 2 7 5)) :queens3 (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (3 (6))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 8 4 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 8 4 2 7 5) list:firstRest (3 (1 8 4 2 7 5))}]
        skolem:lemma898
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 4 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 8 4 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma806 a r:Inference;
    r:gives {
        ((4 8) (1 3 6 2 7 5)) :queens3 (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 8) list:select (4 (8))}]
        [ a r:Fact; r:gives {({
            4 :attack (1 3 6 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 3 6 2 7 5) list:firstRest (4 (1 3 6 2 7 5))}]
        skolem:lemma899
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma807 a r:Inference;
    r:gives {
        ((4 8) (1 3 6 2 7 5)) :queens3 (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 8) list:select (8 (4))}]
        [ a r:Fact; r:gives {({
            8 :attack (1 3 6 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 1 3 6 2 7 5) list:firstRest (8 (1 3 6 2 7 5))}]
        skolem:lemma900
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma808 a r:Inference;
    r:gives {
        ((2 6) (8 3 1 4 7 5)) :queens3 (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 6) list:select (6 (2))}]
        [ a r:Fact; r:gives {({
            6 :attack (8 3 1 4 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 3 1 4 7 5) list:firstRest (6 (8 3 1 4 7 5))}]
        skolem:lemma901
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 3 1 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 3 1 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma282.

skolem:lemma809 a r:Inference;
    r:gives {
        ((2 7) (6 3 1 4 8 5)) :queens3 (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 7) list:select (2 (7))}]
        [ a r:Fact; r:gives {({
            2 :attack (6 3 1 4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 3 1 4 8 5) list:firstRest (2 (6 3 1 4 8 5))}]
        skolem:lemma902
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 3 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 3 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma810 a r:Inference;
    r:gives {
        ((3 6) (2 7 1 4 8 5)) :queens3 (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (6 (3))}]
        [ a r:Fact; r:gives {({
            6 :attack (2 7 1 4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 7 1 4 8 5) list:firstRest (6 (2 7 1 4 8 5))}]
        skolem:lemma903
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 7 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma811 a r:Inference;
    r:gives {
        ((4 7) (3 8 2 5 1 6)) :queens3 (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 7) list:select (7 (4))}]
        [ a r:Fact; r:gives {({
            7 :attack (3 8 2 5 1 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 8 2 5 1 6) list:firstRest (7 (3 8 2 5 1 6))}]
        skolem:lemma904
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 8 2 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 8 2 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma282.

skolem:lemma812 a r:Inference;
    r:gives {
        ((4 8) (5 3 1 7 2 6)) :queens3 (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 8) list:select (8 (4))}]
        [ a r:Fact; r:gives {({
            8 :attack (5 3 1 7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 5 3 1 7 2 6) list:firstRest (8 (5 3 1 7 2 6))}]
        skolem:lemma905
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 5 3 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma813 a r:Inference;
    r:gives {
        ((3 5) (8 4 1 7 2 6)) :queens3 (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5) list:select (5 (3))}]
        [ a r:Fact; r:gives {({
            5 :attack (8 4 1 7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 4 1 7 2 6) list:firstRest (5 (8 4 1 7 2 6))}]
        skolem:lemma906
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 4 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma814 a r:Inference;
    r:gives {
        ((2 4) (8 5 7 1 3 6)) :queens3 (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4) list:select (2 (4))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 5 7 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 5 7 1 3 6) list:firstRest (2 (8 5 7 1 3 6))}]
        skolem:lemma907
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 7 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 5 7 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma815 a r:Inference;
    r:gives {
        ((5 7) (2 4 8 1 3 6)) :queens3 (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 7) list:select (7 (5))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 4 8 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 4 8 1 3 6) list:firstRest (7 (2 4 8 1 3 6))}]
        skolem:lemma908
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 4 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma816 a r:Inference;
    r:gives {
        ((4 7) (2 5 8 1 3 6)) :queens3 (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 7) list:select (4 (7))}]
        [ a r:Fact; r:gives {({
            4 :attack (2 5 8 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 5 8 1 3 6) list:firstRest (4 (2 5 8 1 3 6))}]
        skolem:lemma909
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 5 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma817 a r:Inference;
    r:gives {
        ((2 8) (4 1 7 5 3 6)) :queens3 (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 8) list:select (2 (8))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 1 7 5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 1 7 5 3 6) list:firstRest (2 (4 1 7 5 3 6))}]
        skolem:lemma910
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 7 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 1 7 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma818 a r:Inference;
    r:gives {
        ((2 7) (4 1 8 5 3 6)) :queens3 (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 7) list:select (2 (7))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 1 8 5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 1 8 5 3 6) list:firstRest (2 (4 1 8 5 3 6))}]
        skolem:lemma911
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 8 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 1 8 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma819 a r:Inference;
    r:gives {
        ((1 5) (8 4 2 7 3 6)) :queens3 (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 5) list:select (1 (5))}]
        [ a r:Fact; r:gives {({
            1 :attack (8 4 2 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 8 4 2 7 3 6) list:firstRest (1 (8 4 2 7 3 6))}]
        skolem:lemma912
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 8 4 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma820 a r:Inference;
    r:gives {
        ((1 4) (5 8 2 7 3 6)) :queens3 (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 4) list:select (1 (4))}]
        [ a r:Fact; r:gives {({
            1 :attack (5 8 2 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5 8 2 7 3 6) list:firstRest (1 (5 8 2 7 3 6))}]
        skolem:lemma913
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5 8 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma821 a r:Inference;
    r:gives {
        ((2 5) (8 1 4 7 3 6)) :queens3 (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5) list:select (2 (5))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 1 4 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 1 4 7 3 6) list:firstRest (2 (8 1 4 7 3 6))}]
        skolem:lemma914
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 4 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 1 4 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma822 a r:Inference;
    r:gives {
        ((3 7) (2 8 5 1 4 6)) :queens3 (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 7) list:select (7 (3))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 8 5 1 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 8 5 1 4 6) list:firstRest (7 (2 8 5 1 4 6))}]
        skolem:lemma915
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 5 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 8 5 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma282.

skolem:lemma823 a r:Inference;
    r:gives {
        ((1 3) (7 5 8 2 4 6)) :queens3 (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1 3) list:select (1 (3))}]
        [ a r:Fact; r:gives {({
            1 :attack (7 5 8 2 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 5 8 2 4 6) list:firstRest (1 (7 5 8 2 4 6))}]
        skolem:lemma916
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 8 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 5 8 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma282.

skolem:lemma824 a r:Inference;
    r:gives {
        ((2 8) (5 3 1 7 4 6)) :queens3 (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 8) list:select (2 (8))}]
        [ a r:Fact; r:gives {({
            2 :attack (5 3 1 7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 3 1 7 4 6) list:firstRest (2 (5 3 1 7 4 6))}]
        skolem:lemma917
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 3 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma825 a r:Inference;
    r:gives {
        ((3 5) (2 8 1 7 4 6)) :queens3 (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5) list:select (5 (3))}]
        [ a r:Fact; r:gives {({
            5 :attack (2 8 1 7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 8 1 7 4 6) list:firstRest (5 (2 8 1 7 4 6))}]
        skolem:lemma918
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 8 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma826 a r:Inference;
    r:gives {
        ((3 5) (7 1 4 2 8 6)) :queens3 (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5) list:select (5 (3))}]
        [ a r:Fact; r:gives {({
            5 :attack (7 1 4 2 8 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 1 4 2 8 6) list:firstRest (5 (7 1 4 2 8 6))}]
        skolem:lemma919
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 4 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 1 4 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma282.

skolem:lemma827 a r:Inference;
    r:gives {
        ((2 5) (4 6 8 3 1 7)) :queens3 (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 5) list:select (2 (5))}]
        [ a r:Fact; r:gives {({
            2 :attack (4 6 8 3 1 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 6 8 3 1 7) list:firstRest (2 (4 6 8 3 1 7))}]
        skolem:lemma920
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6 8 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 6 8 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma282.

skolem:lemma828 a r:Inference;
    r:gives {
        ((3 6) (5 8 1 4 2 7)) :queens3 (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (3 (6))}]
        [ a r:Fact; r:gives {({
            3 :attack (5 8 1 4 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 8 1 4 2 7) list:firstRest (3 (5 8 1 4 2 7))}]
        skolem:lemma921
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 1 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 8 1 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma282.

skolem:lemma829 a r:Inference;
    r:gives {
        ((5 8) (4 1 3 6 2 7)) :queens3 (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 8) list:select (8 (5))}]
        [ a r:Fact; r:gives {({
            8 :attack (4 1 3 6 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4 1 3 6 2 7) list:firstRest (8 (4 1 3 6 2 7))}]
        skolem:lemma922
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 3 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4 1 3 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma282.

skolem:lemma830 a r:Inference;
    r:gives {
        ((2 4) (5 8 6 1 3 7)) :queens3 (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4) list:select (2 (4))}]
        [ a r:Fact; r:gives {({
            2 :attack (5 8 6 1 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 8 6 1 3 7) list:firstRest (2 (5 8 6 1 3 7))}]
        skolem:lemma923
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 6 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 8 6 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma282.

skolem:lemma831 a r:Inference;
    r:gives {
        ((4 6) (1 5 2 8 3 7)) :queens3 (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6) list:select (6 (4))}]
        [ a r:Fact; r:gives {({
            6 :attack (1 5 2 8 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1 5 2 8 3 7) list:firstRest (6 (1 5 2 8 3 7))}]
        skolem:lemma924
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5 2 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1 5 2 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma282.

skolem:lemma832 a r:Inference;
    r:gives {
        ((3 6) (1 8 5 2 4 7)) :queens3 (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (3 (6))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 8 5 2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 8 5 2 4 7) list:firstRest (3 (1 8 5 2 4 7))}]
        skolem:lemma925
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 5 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 8 5 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma833 a r:Inference;
    r:gives {
        ((3 5) (1 6 8 2 4 7)) :queens3 (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 5) list:select (3 (5))}]
        [ a r:Fact; r:gives {({
            3 :attack (1 6 8 2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 6 8 2 4 7) list:firstRest (3 (1 6 8 2 4 7))}]
        skolem:lemma926
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 6 8 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 6 8 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma834 a r:Inference;
    r:gives {
        ((2 4) (8 6 1 3 5 7)) :queens3 (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2 4) list:select (2 (4))}]
        [ a r:Fact; r:gives {({
            2 :attack (8 6 1 3 5 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 6 1 3 5 7) list:firstRest (2 (8 6 1 3 5 7))}]
        skolem:lemma927
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 6 1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma282.

skolem:lemma835 a r:Inference;
    r:gives {
        ((3 6) (5 7 1 4 2 8)) :queens3 (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3 6) list:select (3 (6))}]
        [ a r:Fact; r:gives {({
            3 :attack (5 7 1 4 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 7 1 4 2 8) list:firstRest (3 (5 7 1 4 2 8))}]
        skolem:lemma928
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 1 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 7 1 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma282.

skolem:lemma836 a r:Inference;
    r:gives {
        ((4 6) (7 1 3 5 2 8)) :queens3 (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 6) list:select (4 (6))}]
        [ a r:Fact; r:gives {({
            4 :attack (7 1 3 5 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 1 3 5 2 8) list:firstRest (4 (7 1 3 5 2 8))}]
        skolem:lemma929
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 3 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 1 3 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma282.

skolem:lemma837 a r:Inference;
    r:gives {
        ((4 7) (5 2 6 1 3 8)) :queens3 (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4 7) list:select (7 (4))}]
        [ a r:Fact; r:gives {({
            7 :attack (5 2 6 1 3 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 2 6 1 3 8) list:firstRest (7 (5 2 6 1 3 8))}]
        skolem:lemma930
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 6 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 2 6 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma282.

skolem:lemma838 a r:Inference;
    r:gives {
        ((5 7) (2 6 3 1 4 8)) :queens3 (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5 7) list:select (7 (5))}]
        [ a r:Fact; r:gives {({
            7 :attack (2 6 3 1 4 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 6 3 1 4 8) list:firstRest (7 (2 6 3 1 4 8))}]
        skolem:lemma931
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6 3 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 6 3 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma282.

skolem:lemma839 a r:Inference;
    r:gives {
        (8 8) :range (8).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo 8];
    r:rule skolem:lemma932.

skolem:lemma840 a r:Inference;
    r:gives {
        ((4) (2 7 3 6 8 5 1)) :queens3 (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (2 7 3 6 8 5 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 7 3 6 8 5 1) list:firstRest (4 (2 7 3 6 8 5 1))}]
        skolem:lemma933
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 3 6 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma282.

skolem:lemma841 a r:Inference;
    r:gives {
        ((5) (2 4 7 3 8 6 1)) :queens3 (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (2 4 7 3 8 6 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 4 7 3 8 6 1) list:firstRest (5 (2 4 7 3 8 6 1))}]
        skolem:lemma934
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 7 3 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma282.

skolem:lemma842 a r:Inference;
    r:gives {
        ((3) (5 2 8 6 4 7 1)) :queens3 (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (5 2 8 6 4 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 2 8 6 4 7 1) list:firstRest (3 (5 2 8 6 4 7 1))}]
        skolem:lemma935
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 8 6 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma282.

skolem:lemma843 a r:Inference;
    r:gives {
        ((3) (6 4 2 8 5 7 1)) :queens3 (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (6 4 2 8 5 7 1).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 4 2 8 5 7 1) list:firstRest (3 (6 4 2 8 5 7 1))}]
        skolem:lemma936
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 2 8 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma282.

skolem:lemma844 a r:Inference;
    r:gives {
        ((5) (7 1 3 8 6 4 2)) :queens3 (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (7 1 3 8 6 4 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 1 3 8 6 4 2) list:firstRest (5 (7 1 3 8 6 4 2))}]
        skolem:lemma937
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 3 8 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma282.

skolem:lemma845 a r:Inference;
    r:gives {
        ((4) (6 8 3 1 7 5 2)) :queens3 (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (6 8 3 1 7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6 8 3 1 7 5 2) list:firstRest (4 (6 8 3 1 7 5 2))}]
        skolem:lemma938
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 3 1 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma846 a r:Inference;
    r:gives {
        ((3) (6 8 1 4 7 5 2)) :queens3 (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (6 8 1 4 7 5 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 8 1 4 7 5 2) list:firstRest (3 (6 8 1 4 7 5 2))}]
        skolem:lemma939
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 1 4 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma282.

skolem:lemma847 a r:Inference;
    r:gives {
        ((5) (3 8 4 7 1 6 2)) :queens3 (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (3 8 4 7 1 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3 8 4 7 1 6 2) list:firstRest (5 (3 8 4 7 1 6 2))}]
        skolem:lemma940
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 8 4 7 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma282.

skolem:lemma848 a r:Inference;
    r:gives {
        ((5) (7 4 1 3 8 6 2)) :queens3 (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (7 4 1 3 8 6 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 4 1 3 8 6 2) list:firstRest (5 (7 4 1 3 8 6 2))}]
        skolem:lemma941
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 1 3 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma282.

skolem:lemma849 a r:Inference;
    r:gives {
        ((4) (1 5 8 6 3 7 2)) :queens3 (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (1 5 8 6 3 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 5 8 6 3 7 2) list:firstRest (4 (1 5 8 6 3 7 2))}]
        skolem:lemma942
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5 8 6 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma282.

skolem:lemma850 a r:Inference;
    r:gives {
        ((3) (6 4 1 8 5 7 2)) :queens3 (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (6 4 1 8 5 7 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 4 1 8 5 7 2) list:firstRest (3 (6 4 1 8 5 7 2))}]
        skolem:lemma943
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 4 1 8 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma282.

skolem:lemma851 a r:Inference;
    r:gives {
        ((4) (7 5 3 1 6 8 2)) :queens3 (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (7 5 3 1 6 8 2).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 5 3 1 6 8 2) list:firstRest (4 (7 5 3 1 6 8 2))}]
        skolem:lemma944
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 3 1 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma282.

skolem:lemma852 a r:Inference;
    r:gives {
        ((6) (4 2 8 5 7 1 3)) :queens3 (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (4 2 8 5 7 1 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 2 8 5 7 1 3) list:firstRest (6 (4 2 8 5 7 1 3))}]
        skolem:lemma945
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 8 5 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma282.

skolem:lemma853 a r:Inference;
    r:gives {
        ((6) (4 7 1 8 2 5 3)) :queens3 (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (4 7 1 8 2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 7 1 8 2 5 3) list:firstRest (6 (4 7 1 8 2 5 3))}]
        skolem:lemma946
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7 1 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma854 a r:Inference;
    r:gives {
        ((1) (7 4 6 8 2 5 3)) :queens3 (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1) list:select (1 ())}]
        [ a r:Fact; r:gives {({
            1 :attack (7 4 6 8 2 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 4 6 8 2 5 3) list:firstRest (1 (7 4 6 8 2 5 3))}]
        skolem:lemma947
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 4 6 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma282.

skolem:lemma855 a r:Inference;
    r:gives {
        ((6) (8 2 4 1 7 5 3)) :queens3 (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (8 2 4 1 7 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 8 2 4 1 7 5 3) list:firstRest (6 (8 2 4 1 7 5 3))}]
        skolem:lemma948
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 2 4 1 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma282.

skolem:lemma856 a r:Inference;
    r:gives {
        ((6) (2 7 1 4 8 5 3)) :queens3 (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (2 7 1 4 8 5 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 7 1 4 8 5 3) list:firstRest (6 (2 7 1 4 8 5 3))}]
        skolem:lemma949
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 1 4 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma282.

skolem:lemma857 a r:Inference;
    r:gives {
        ((4) (7 1 8 5 2 6 3)) :queens3 (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (7 1 8 5 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 1 8 5 2 6 3) list:firstRest (4 (7 1 8 5 2 6 3))}]
        skolem:lemma950
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 8 5 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma858 a r:Inference;
    r:gives {
        ((5) (8 4 1 7 2 6 3)) :queens3 (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (8 4 1 7 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 4 1 7 2 6 3) list:firstRest (5 (8 4 1 7 2 6 3))}]
        skolem:lemma951
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 1 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma859 a r:Inference;
    r:gives {
        ((4) (8 1 5 7 2 6 3)) :queens3 (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (8 1 5 7 2 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 1 5 7 2 6 3) list:firstRest (4 (8 1 5 7 2 6 3))}]
        skolem:lemma952
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 5 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma282.

skolem:lemma860 a r:Inference;
    r:gives {
        ((2) (7 5 8 1 4 6 3)) :queens3 (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2) list:select (2 ())}]
        [ a r:Fact; r:gives {({
            2 :attack (7 5 8 1 4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 5 8 1 4 6 3) list:firstRest (2 (7 5 8 1 4 6 3))}]
        skolem:lemma953
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 8 1 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma861 a r:Inference;
    r:gives {
        ((1) (7 5 8 2 4 6 3)) :queens3 (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1) list:select (1 ())}]
        [ a r:Fact; r:gives {({
            1 :attack (7 5 8 2 4 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 7 5 8 2 4 6 3) list:firstRest (1 (7 5 8 2 4 6 3))}]
        skolem:lemma954
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 8 2 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma282.

skolem:lemma862 a r:Inference;
    r:gives {
        ((2) (5 7 4 1 8 6 3)) :queens3 (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2) list:select (2 ())}]
        [ a r:Fact; r:gives {({
            2 :attack (5 7 4 1 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 7 4 1 8 6 3) list:firstRest (2 (5 7 4 1 8 6 3))}]
        skolem:lemma955
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 4 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma863 a r:Inference;
    r:gives {
        ((4) (2 7 5 1 8 6 3)) :queens3 (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (2 7 5 1 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 7 5 1 8 6 3) list:firstRest (4 (2 7 5 1 8 6 3))}]
        skolem:lemma956
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 5 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma864 a r:Inference;
    r:gives {
        ((5) (7 1 4 2 8 6 3)) :queens3 (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (7 1 4 2 8 6 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 1 4 2 8 6 3) list:firstRest (5 (7 1 4 2 8 6 3))}]
        skolem:lemma957
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 1 4 2 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma282.

skolem:lemma865 a r:Inference;
    r:gives {
        ((6) (4 1 5 8 2 7 3)) :queens3 (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (4 1 5 8 2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 1 5 8 2 7 3) list:firstRest (6 (4 1 5 8 2 7 3))}]
        skolem:lemma958
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 5 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma866 a r:Inference;
    r:gives {
        ((5) (1 4 6 8 2 7 3)) :queens3 (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (1 4 6 8 2 7 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 4 6 8 2 7 3) list:firstRest (5 (1 4 6 8 2 7 3))}]
        skolem:lemma959
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 4 6 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma282.

skolem:lemma867 a r:Inference;
    r:gives {
        ((5) (2 6 1 7 4 8 3)) :queens3 (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (2 6 1 7 4 8 3).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 6 1 7 4 8 3) list:firstRest (5 (2 6 1 7 4 8 3))}]
        skolem:lemma960
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6 1 7 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma282.

skolem:lemma868 a r:Inference;
    r:gives {
        ((6) (3 7 2 8 5 1 4)) :queens3 (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (3 7 2 8 5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 7 2 8 5 1 4) list:firstRest (6 (3 7 2 8 5 1 4))}]
        skolem:lemma961
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7 2 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma869 a r:Inference;
    r:gives {
        ((2) (7 3 6 8 5 1 4)) :queens3 (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2) list:select (2 ())}]
        [ a r:Fact; r:gives {({
            2 :attack (7 3 6 8 5 1 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 7 3 6 8 5 1 4) list:firstRest (2 (7 3 6 8 5 1 4))}]
        skolem:lemma962
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 6 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma282.

skolem:lemma870 a r:Inference;
    r:gives {
        ((7) (3 1 6 8 5 2 4)) :queens3 (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7) list:select (7 ())}]
        [ a r:Fact; r:gives {({
            7 :attack (3 1 6 8 5 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 1 6 8 5 2 4) list:firstRest (7 (3 1 6 8 5 2 4))}]
        skolem:lemma963
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 6 8 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma282.

skolem:lemma871 a r:Inference;
    r:gives {
        ((5) (1 8 6 3 7 2 4)) :queens3 (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (1 8 6 3 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 8 6 3 7 2 4) list:firstRest (5 (1 8 6 3 7 2 4))}]
        skolem:lemma964
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma872 a r:Inference;
    r:gives {
        ((1) (5 8 6 3 7 2 4)) :queens3 (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1) list:select (1 ())}]
        [ a r:Fact; r:gives {({
            1 :attack (5 8 6 3 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 5 8 6 3 7 2 4) list:firstRest (1 (5 8 6 3 7 2 4))}]
        skolem:lemma965
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma873 a r:Inference;
    r:gives {
        ((3) (6 8 1 5 7 2 4)) :queens3 (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (6 8 1 5 7 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 8 1 5 7 2 4) list:firstRest (3 (6 8 1 5 7 2 4))}]
        skolem:lemma966
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 1 5 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma282.

skolem:lemma874 a r:Inference;
    r:gives {
        ((6) (3 1 7 5 8 2 4)) :queens3 (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (3 1 7 5 8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 1 7 5 8 2 4) list:firstRest (6 (3 1 7 5 8 2 4))}]
        skolem:lemma967
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 7 5 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma875 a r:Inference;
    r:gives {
        ((7) (5 3 1 6 8 2 4)) :queens3 (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7) list:select (7 ())}]
        [ a r:Fact; r:gives {({
            7 :attack (5 3 1 6 8 2 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 5 3 1 6 8 2 4) list:firstRest (7 (5 3 1 6 8 2 4))}]
        skolem:lemma968
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 3 1 6 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma282.

skolem:lemma876 a r:Inference;
    r:gives {
        ((7) (3 8 2 5 1 6 4)) :queens3 (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7) list:select (7 ())}]
        [ a r:Fact; r:gives {({
            7 :attack (3 8 2 5 1 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 3 8 2 5 1 6 4) list:firstRest (7 (3 8 2 5 1 6 4))}]
        skolem:lemma969
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 8 2 5 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma282.

skolem:lemma877 a r:Inference;
    r:gives {
        ((5) (3 1 7 2 8 6 4)) :queens3 (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (3 1 7 2 8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3 1 7 2 8 6 4) list:firstRest (5 (3 1 7 2 8 6 4))}]
        skolem:lemma970
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 7 2 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma878 a r:Inference;
    r:gives {
        ((2) (5 7 1 3 8 6 4)) :queens3 (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2) list:select (2 ())}]
        [ a r:Fact; r:gives {({
            2 :attack (5 7 1 3 8 6 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 5 7 1 3 8 6 4) list:firstRest (2 (5 7 1 3 8 6 4))}]
        skolem:lemma971
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 1 3 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma282.

skolem:lemma879 a r:Inference;
    r:gives {
        ((3) (6 2 5 8 1 7 4)) :queens3 (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (6 2 5 8 1 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 2 5 8 1 7 4) list:firstRest (3 (6 2 5 8 1 7 4))}]
        skolem:lemma972
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 5 8 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma282.

skolem:lemma880 a r:Inference;
    r:gives {
        ((6) (1 5 2 8 3 7 4)) :queens3 (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (1 5 2 8 3 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 1 5 2 8 3 7 4) list:firstRest (6 (1 5 2 8 3 7 4))}]
        skolem:lemma973
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5 2 8 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma282.

skolem:lemma881 a r:Inference;
    r:gives {
        ((8) (3 1 6 2 5 7 4)) :queens3 (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(8) list:select (8 ())}]
        [ a r:Fact; r:gives {({
            8 :attack (3 1 6 2 5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 3 1 6 2 5 7 4) list:firstRest (8 (3 1 6 2 5 7 4))}]
        skolem:lemma974
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 6 2 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma882 a r:Inference;
    r:gives {
        ((2) (8 6 1 3 5 7 4)) :queens3 (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2) list:select (2 ())}]
        [ a r:Fact; r:gives {({
            2 :attack (8 6 1 3 5 7 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 8 6 1 3 5 7 4) list:firstRest (2 (8 6 1 3 5 7 4))}]
        skolem:lemma975
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 6 1 3 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma282.

skolem:lemma883 a r:Inference;
    r:gives {
        ((5) (7 2 6 3 1 8 4)) :queens3 (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (7 2 6 3 1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 2 6 3 1 8 4) list:firstRest (5 (7 2 6 3 1 8 4))}]
        skolem:lemma976
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 6 3 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma884 a r:Inference;
    r:gives {
        ((3) (6 2 7 5 1 8 4)) :queens3 (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (6 2 7 5 1 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 2 7 5 1 8 4) list:firstRest (3 (6 2 7 5 1 8 4))}]
        skolem:lemma977
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 7 5 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma282.

skolem:lemma885 a r:Inference;
    r:gives {
        ((6) (2 7 1 3 5 8 4)) :queens3 (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (2 7 1 3 5 8 4).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 2 7 1 3 5 8 4) list:firstRest (6 (2 7 1 3 5 8 4))}]
        skolem:lemma978
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 1 3 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma282.

skolem:lemma886 a r:Inference;
    r:gives {
        ((3) (7 2 8 6 4 1 5)) :queens3 (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (7 2 8 6 4 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 2 8 6 4 1 5) list:firstRest (3 (7 2 8 6 4 1 5))}]
        skolem:lemma979
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 8 6 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma282.

skolem:lemma887 a r:Inference;
    r:gives {
        ((6) (3 7 2 4 8 1 5)) :queens3 (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (3 7 2 4 8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 7 2 4 8 1 5) list:firstRest (6 (3 7 2 4 8 1 5))}]
        skolem:lemma980
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7 2 4 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma888 a r:Inference;
    r:gives {
        ((4) (2 7 3 6 8 1 5)) :queens3 (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (2 7 3 6 8 1 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 7 3 6 8 1 5) list:firstRest (4 (2 7 3 6 8 1 5))}]
        skolem:lemma981
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 7 3 6 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma282.

skolem:lemma889 a r:Inference;
    r:gives {
        ((7) (1 3 8 6 4 2 5)) :queens3 (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7) list:select (7 ())}]
        [ a r:Fact; r:gives {({
            7 :attack (1 3 8 6 4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 1 3 8 6 4 2 5) list:firstRest (7 (1 3 8 6 4 2 5))}]
        skolem:lemma982
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 3 8 6 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma890 a r:Inference;
    r:gives {
        ((1) (6 8 3 7 4 2 5)) :queens3 (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(1) list:select (1 ())}]
        [ a r:Fact; r:gives {({
            1 :attack (6 8 3 7 4 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(1 6 8 3 7 4 2 5) list:firstRest (1 (6 8 3 7 4 2 5))}]
        skolem:lemma983
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 1];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 3 7 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma282.

skolem:lemma891 a r:Inference;
    r:gives {
        ((3) (8 4 7 1 6 2 5)) :queens3 (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (8 4 7 1 6 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 8 4 7 1 6 2 5) list:firstRest (3 (8 4 7 1 6 2 5))}]
        skolem:lemma984
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 7 1 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma282.

skolem:lemma892 a r:Inference;
    r:gives {
        ((6) (3 7 4 1 8 2 5)) :queens3 (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (3 7 4 1 8 2 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 7 4 1 8 2 5) list:firstRest (6 (3 7 4 1 8 2 5))}]
        skolem:lemma985
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 7 4 1 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma282.

skolem:lemma893 a r:Inference;
    r:gives {
        ((7) (4 2 8 6 1 3 5)) :queens3 (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7) list:select (7 ())}]
        [ a r:Fact; r:gives {({
            7 :attack (4 2 8 6 1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 2 8 6 1 3 5) list:firstRest (7 (4 2 8 6 1 3 5))}]
        skolem:lemma986
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 8 6 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma894 a r:Inference;
    r:gives {
        ((4) (6 8 2 7 1 3 5)) :queens3 (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (6 8 2 7 1 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6 8 2 7 1 3 5) list:firstRest (4 (6 8 2 7 1 3 5))}]
        skolem:lemma987
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 2 7 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma282.

skolem:lemma895 a r:Inference;
    r:gives {
        ((2) (6 1 7 4 8 3 5)) :queens3 (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2) list:select (2 ())}]
        [ a r:Fact; r:gives {({
            2 :attack (6 1 7 4 8 3 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 1 7 4 8 3 5) list:firstRest (2 (6 1 7 4 8 3 5))}]
        skolem:lemma988
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 7 4 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma282.

skolem:lemma896 a r:Inference;
    r:gives {
        ((2) (4 6 8 3 1 7 5)) :queens3 (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2) list:select (2 ())}]
        [ a r:Fact; r:gives {({
            2 :attack (4 6 8 3 1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 4 6 8 3 1 7 5) list:firstRest (2 (4 6 8 3 1 7 5))}]
        skolem:lemma989
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 6 8 3 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma897 a r:Inference;
    r:gives {
        ((3) (6 8 2 4 1 7 5)) :queens3 (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (6 8 2 4 1 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 8 2 4 1 7 5) list:firstRest (3 (6 8 2 4 1 7 5))}]
        skolem:lemma990
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 2 4 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma282.

skolem:lemma898 a r:Inference;
    r:gives {
        ((6) (3 1 8 4 2 7 5)) :queens3 (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (3 1 8 4 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 1 8 4 2 7 5) list:firstRest (6 (3 1 8 4 2 7 5))}]
        skolem:lemma991
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 8 4 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma899 a r:Inference;
    r:gives {
        ((8) (4 1 3 6 2 7 5)) :queens3 (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(8) list:select (8 ())}]
        [ a r:Fact; r:gives {({
            8 :attack (4 1 3 6 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 4 1 3 6 2 7 5) list:firstRest (8 (4 1 3 6 2 7 5))}]
        skolem:lemma992
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma900 a r:Inference;
    r:gives {
        ((4) (8 1 3 6 2 7 5)) :queens3 (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (8 1 3 6 2 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 1 3 6 2 7 5) list:firstRest (4 (8 1 3 6 2 7 5))}]
        skolem:lemma993
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma282.

skolem:lemma901 a r:Inference;
    r:gives {
        ((2) (6 8 3 1 4 7 5)) :queens3 (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(2) list:select (2 ())}]
        [ a r:Fact; r:gives {({
            2 :attack (6 8 3 1 4 7 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(2 6 8 3 1 4 7 5) list:firstRest (2 (6 8 3 1 4 7 5))}]
        skolem:lemma994
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 2];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 8 3 1 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma282.

skolem:lemma902 a r:Inference;
    r:gives {
        ((7) (2 6 3 1 4 8 5)) :queens3 (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7) list:select (7 ())}]
        [ a r:Fact; r:gives {({
            7 :attack (2 6 3 1 4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 6 3 1 4 8 5) list:firstRest (7 (2 6 3 1 4 8 5))}]
        skolem:lemma995
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 6 3 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma903 a r:Inference;
    r:gives {
        ((3) (6 2 7 1 4 8 5)) :queens3 (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (6 2 7 1 4 8 5).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 6 2 7 1 4 8 5) list:firstRest (3 (6 2 7 1 4 8 5))}]
        skolem:lemma996
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 2 7 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma282.

skolem:lemma904 a r:Inference;
    r:gives {
        ((4) (7 3 8 2 5 1 6)) :queens3 (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (7 3 8 2 5 1 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 3 8 2 5 1 6) list:firstRest (4 (7 3 8 2 5 1 6))}]
        skolem:lemma997
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 3 8 2 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma282.

skolem:lemma905 a r:Inference;
    r:gives {
        ((4) (8 5 3 1 7 2 6)) :queens3 (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (8 5 3 1 7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 8 5 3 1 7 2 6) list:firstRest (4 (8 5 3 1 7 2 6))}]
        skolem:lemma998
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 5 3 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma906 a r:Inference;
    r:gives {
        ((3) (5 8 4 1 7 2 6)) :queens3 (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (5 8 4 1 7 2 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 8 4 1 7 2 6) list:firstRest (3 (5 8 4 1 7 2 6))}]
        skolem:lemma999
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 8 4 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma282.

skolem:lemma907 a r:Inference;
    r:gives {
        ((4) (2 8 5 7 1 3 6)) :queens3 (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (2 8 5 7 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 8 5 7 1 3 6) list:firstRest (4 (2 8 5 7 1 3 6))}]
        skolem:lemma1000
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 5 7 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma908 a r:Inference;
    r:gives {
        ((5) (7 2 4 8 1 3 6)) :queens3 (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (7 2 4 8 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 2 4 8 1 3 6) list:firstRest (5 (7 2 4 8 1 3 6))}]
        skolem:lemma1001
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 4 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma909 a r:Inference;
    r:gives {
        ((7) (4 2 5 8 1 3 6)) :queens3 (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7) list:select (7 ())}]
        [ a r:Fact; r:gives {({
            7 :attack (4 2 5 8 1 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 4 2 5 8 1 3 6) list:firstRest (7 (4 2 5 8 1 3 6))}]
        skolem:lemma1002
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 2 5 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma282.

skolem:lemma910 a r:Inference;
    r:gives {
        ((8) (2 4 1 7 5 3 6)) :queens3 (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(8) list:select (8 ())}]
        [ a r:Fact; r:gives {({
            8 :attack (2 4 1 7 5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 4 1 7 5 3 6) list:firstRest (8 (2 4 1 7 5 3 6))}]
        skolem:lemma1003
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 1 7 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma911 a r:Inference;
    r:gives {
        ((7) (2 4 1 8 5 3 6)) :queens3 (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(7) list:select (7 ())}]
        [ a r:Fact; r:gives {({
            7 :attack (2 4 1 8 5 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(7 2 4 1 8 5 3 6) list:firstRest (7 (2 4 1 8 5 3 6))}]
        skolem:lemma1004
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 7];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 1 8 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma282.

skolem:lemma912 a r:Inference;
    r:gives {
        ((5) (1 8 4 2 7 3 6)) :queens3 (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (1 8 4 2 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 1 8 4 2 7 3 6) list:firstRest (5 (1 8 4 2 7 3 6))}]
        skolem:lemma1005
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 8 4 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma913 a r:Inference;
    r:gives {
        ((4) (1 5 8 2 7 3 6)) :queens3 (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (1 5 8 2 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 1 5 8 2 7 3 6) list:firstRest (4 (1 5 8 2 7 3 6))}]
        skolem:lemma1006
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 5 8 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma914 a r:Inference;
    r:gives {
        ((5) (2 8 1 4 7 3 6)) :queens3 (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (2 8 1 4 7 3 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 8 1 4 7 3 6) list:firstRest (5 (2 8 1 4 7 3 6))}]
        skolem:lemma1007
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 1 4 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma282.

skolem:lemma915 a r:Inference;
    r:gives {
        ((3) (7 2 8 5 1 4 6)) :queens3 (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (7 2 8 5 1 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 7 2 8 5 1 4 6) list:firstRest (3 (7 2 8 5 1 4 6))}]
        skolem:lemma1008
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 8 5 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma282.

skolem:lemma916 a r:Inference;
    r:gives {
        ((3) (1 7 5 8 2 4 6)) :queens3 (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (1 7 5 8 2 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 1 7 5 8 2 4 6) list:firstRest (3 (1 7 5 8 2 4 6))}]
        skolem:lemma1009
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (1 7 5 8 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma282.

skolem:lemma917 a r:Inference;
    r:gives {
        ((8) (2 5 3 1 7 4 6)) :queens3 (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(8) list:select (8 ())}]
        [ a r:Fact; r:gives {({
            8 :attack (2 5 3 1 7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(8 2 5 3 1 7 4 6) list:firstRest (8 (2 5 3 1 7 4 6))}]
        skolem:lemma1010
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 8];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5 3 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma918 a r:Inference;
    r:gives {
        ((3) (5 2 8 1 7 4 6)) :queens3 (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (5 2 8 1 7 4 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 2 8 1 7 4 6) list:firstRest (3 (5 2 8 1 7 4 6))}]
        skolem:lemma1011
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 2 8 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma282.

skolem:lemma919 a r:Inference;
    r:gives {
        ((3) (5 7 1 4 2 8 6)) :queens3 (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives {(3) list:select (3 ())}]
        [ a r:Fact; r:gives {({
            3 :attack (5 7 1 4 2 8 6).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(3 5 7 1 4 2 8 6) list:firstRest (3 (5 7 1 4 2 8 6))}]
        skolem:lemma1012
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 3];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (5 7 1 4 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma282.

skolem:lemma920 a r:Inference;
    r:gives {
        ((5) (2 4 6 8 3 1 7)) :queens3 (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (2 4 6 8 3 1 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 2 4 6 8 3 1 7) list:firstRest (5 (2 4 6 8 3 1 7))}]
        skolem:lemma1013
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 4 6 8 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma282.

skolem:lemma921 a r:Inference;
    r:gives {
        ((6) (3 5 8 1 4 2 7)) :queens3 (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (3 5 8 1 4 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 5 8 1 4 2 7) list:firstRest (6 (3 5 8 1 4 2 7))}]
        skolem:lemma1014
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 5 8 1 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma282.

skolem:lemma922 a r:Inference;
    r:gives {
        ((5) (8 4 1 3 6 2 7)) :queens3 (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (8 4 1 3 6 2 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 8 4 1 3 6 2 7) list:firstRest (5 (8 4 1 3 6 2 7))}]
        skolem:lemma1015
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (8 4 1 3 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma282.

skolem:lemma923 a r:Inference;
    r:gives {
        ((4) (2 5 8 6 1 3 7)) :queens3 (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (2 5 8 6 1 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 5 8 6 1 3 7) list:firstRest (4 (2 5 8 6 1 3 7))}]
        skolem:lemma1016
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 5 8 6 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma282.

skolem:lemma924 a r:Inference;
    r:gives {
        ((4) (6 1 5 2 8 3 7)) :queens3 (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (6 1 5 2 8 3 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 6 1 5 2 8 3 7) list:firstRest (4 (6 1 5 2 8 3 7))}]
        skolem:lemma1017
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (6 1 5 2 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma282.

skolem:lemma925 a r:Inference;
    r:gives {
        ((6) (3 1 8 5 2 4 7)) :queens3 (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (3 1 8 5 2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 1 8 5 2 4 7) list:firstRest (6 (3 1 8 5 2 4 7))}]
        skolem:lemma1018
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 8 5 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma926 a r:Inference;
    r:gives {
        ((5) (3 1 6 8 2 4 7)) :queens3 (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (3 1 6 8 2 4 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 3 1 6 8 2 4 7) list:firstRest (5 (3 1 6 8 2 4 7))}]
        skolem:lemma1019
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 1 6 8 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma282.

skolem:lemma927 a r:Inference;
    r:gives {
        ((4) (2 8 6 1 3 5 7)) :queens3 (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (2 8 6 1 3 5 7).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 2 8 6 1 3 5 7) list:firstRest (4 (2 8 6 1 3 5 7))}]
        skolem:lemma1020
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (2 8 6 1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma282.

skolem:lemma928 a r:Inference;
    r:gives {
        ((6) (3 5 7 1 4 2 8)) :queens3 (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (3 5 7 1 4 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 3 5 7 1 4 2 8) list:firstRest (6 (3 5 7 1 4 2 8))}]
        skolem:lemma1021
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (3 5 7 1 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma282.

skolem:lemma929 a r:Inference;
    r:gives {
        ((6) (4 7 1 3 5 2 8)) :queens3 (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(6) list:select (6 ())}]
        [ a r:Fact; r:gives {({
            6 :attack (4 7 1 3 5 2 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(6 4 7 1 3 5 2 8) list:firstRest (6 (4 7 1 3 5 2 8))}]
        skolem:lemma1022
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 6];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (4 7 1 3 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma282.

skolem:lemma930 a r:Inference;
    r:gives {
        ((4) (7 5 2 6 1 3 8)) :queens3 (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(4) list:select (4 ())}]
        [ a r:Fact; r:gives {({
            4 :attack (7 5 2 6 1 3 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(4 7 5 2 6 1 3 8) list:firstRest (4 (7 5 2 6 1 3 8))}]
        skolem:lemma1023
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 4];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 5 2 6 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma282.

skolem:lemma931 a r:Inference;
    r:gives {
        ((5) (7 2 6 3 1 4 8)) :queens3 (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives {(5) list:select (5 ())}]
        [ a r:Fact; r:gives {({
            5 :attack (7 2 6 3 1 4 8).
        } false true) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)}]
        [ a r:Fact; r:gives {(5 7 2 6 3 1 4 8) list:firstRest (5 (7 2 6 3 1 4 8))}]
        skolem:lemma1024
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo 5];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo ((<https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>) 1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo (7 2 6 3 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma282.

skolem:lemma932 a r:Extraction;
    r:gives {
        @forSome var:x_0. {
            (var:x_0 var:x_0) :range (var:x_0).
        } <= true.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>].

skolem:lemma933 a r:Inference;
    r:gives {
        (() (4 2 7 3 6 8 5 1)) :queens3 (4 2 7 3 6 8 5 1).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 7 3 6 8 5 1)];
    r:rule skolem:lemma1025.

skolem:lemma934 a r:Inference;
    r:gives {
        (() (5 2 4 7 3 8 6 1)) :queens3 (5 2 4 7 3 8 6 1).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 2 4 7 3 8 6 1)];
    r:rule skolem:lemma1025.

skolem:lemma935 a r:Inference;
    r:gives {
        (() (3 5 2 8 6 4 7 1)) :queens3 (3 5 2 8 6 4 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 2 8 6 4 7 1)];
    r:rule skolem:lemma1025.

skolem:lemma936 a r:Inference;
    r:gives {
        (() (3 6 4 2 8 5 7 1)) :queens3 (3 6 4 2 8 5 7 1).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 4 2 8 5 7 1)];
    r:rule skolem:lemma1025.

skolem:lemma937 a r:Inference;
    r:gives {
        (() (5 7 1 3 8 6 4 2)) :queens3 (5 7 1 3 8 6 4 2).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 1 3 8 6 4 2)];
    r:rule skolem:lemma1025.

skolem:lemma938 a r:Inference;
    r:gives {
        (() (4 6 8 3 1 7 5 2)) :queens3 (4 6 8 3 1 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 8 3 1 7 5 2)];
    r:rule skolem:lemma1025.

skolem:lemma939 a r:Inference;
    r:gives {
        (() (3 6 8 1 4 7 5 2)) :queens3 (3 6 8 1 4 7 5 2).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 8 1 4 7 5 2)];
    r:rule skolem:lemma1025.

skolem:lemma940 a r:Inference;
    r:gives {
        (() (5 3 8 4 7 1 6 2)) :queens3 (5 3 8 4 7 1 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 3 8 4 7 1 6 2)];
    r:rule skolem:lemma1025.

skolem:lemma941 a r:Inference;
    r:gives {
        (() (5 7 4 1 3 8 6 2)) :queens3 (5 7 4 1 3 8 6 2).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 4 1 3 8 6 2)];
    r:rule skolem:lemma1025.

skolem:lemma942 a r:Inference;
    r:gives {
        (() (4 1 5 8 6 3 7 2)) :queens3 (4 1 5 8 6 3 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 1 5 8 6 3 7 2)];
    r:rule skolem:lemma1025.

skolem:lemma943 a r:Inference;
    r:gives {
        (() (3 6 4 1 8 5 7 2)) :queens3 (3 6 4 1 8 5 7 2).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 4 1 8 5 7 2)];
    r:rule skolem:lemma1025.

skolem:lemma944 a r:Inference;
    r:gives {
        (() (4 7 5 3 1 6 8 2)) :queens3 (4 7 5 3 1 6 8 2).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7 5 3 1 6 8 2)];
    r:rule skolem:lemma1025.

skolem:lemma945 a r:Inference;
    r:gives {
        (() (6 4 2 8 5 7 1 3)) :queens3 (6 4 2 8 5 7 1 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 4 2 8 5 7 1 3)];
    r:rule skolem:lemma1025.

skolem:lemma946 a r:Inference;
    r:gives {
        (() (6 4 7 1 8 2 5 3)) :queens3 (6 4 7 1 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 4 7 1 8 2 5 3)];
    r:rule skolem:lemma1025.

skolem:lemma947 a r:Inference;
    r:gives {
        (() (1 7 4 6 8 2 5 3)) :queens3 (1 7 4 6 8 2 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 7 4 6 8 2 5 3)];
    r:rule skolem:lemma1025.

skolem:lemma948 a r:Inference;
    r:gives {
        (() (6 8 2 4 1 7 5 3)) :queens3 (6 8 2 4 1 7 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 8 2 4 1 7 5 3)];
    r:rule skolem:lemma1025.

skolem:lemma949 a r:Inference;
    r:gives {
        (() (6 2 7 1 4 8 5 3)) :queens3 (6 2 7 1 4 8 5 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 2 7 1 4 8 5 3)];
    r:rule skolem:lemma1025.

skolem:lemma950 a r:Inference;
    r:gives {
        (() (4 7 1 8 5 2 6 3)) :queens3 (4 7 1 8 5 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7 1 8 5 2 6 3)];
    r:rule skolem:lemma1025.

skolem:lemma951 a r:Inference;
    r:gives {
        (() (5 8 4 1 7 2 6 3)) :queens3 (5 8 4 1 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 8 4 1 7 2 6 3)];
    r:rule skolem:lemma1025.

skolem:lemma952 a r:Inference;
    r:gives {
        (() (4 8 1 5 7 2 6 3)) :queens3 (4 8 1 5 7 2 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8 1 5 7 2 6 3)];
    r:rule skolem:lemma1025.

skolem:lemma953 a r:Inference;
    r:gives {
        (() (2 7 5 8 1 4 6 3)) :queens3 (2 7 5 8 1 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 7 5 8 1 4 6 3)];
    r:rule skolem:lemma1025.

skolem:lemma954 a r:Inference;
    r:gives {
        (() (1 7 5 8 2 4 6 3)) :queens3 (1 7 5 8 2 4 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 7 5 8 2 4 6 3)];
    r:rule skolem:lemma1025.

skolem:lemma955 a r:Inference;
    r:gives {
        (() (2 5 7 4 1 8 6 3)) :queens3 (2 5 7 4 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7 4 1 8 6 3)];
    r:rule skolem:lemma1025.

skolem:lemma956 a r:Inference;
    r:gives {
        (() (4 2 7 5 1 8 6 3)) :queens3 (4 2 7 5 1 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 7 5 1 8 6 3)];
    r:rule skolem:lemma1025.

skolem:lemma957 a r:Inference;
    r:gives {
        (() (5 7 1 4 2 8 6 3)) :queens3 (5 7 1 4 2 8 6 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 1 4 2 8 6 3)];
    r:rule skolem:lemma1025.

skolem:lemma958 a r:Inference;
    r:gives {
        (() (6 4 1 5 8 2 7 3)) :queens3 (6 4 1 5 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 4 1 5 8 2 7 3)];
    r:rule skolem:lemma1025.

skolem:lemma959 a r:Inference;
    r:gives {
        (() (5 1 4 6 8 2 7 3)) :queens3 (5 1 4 6 8 2 7 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 1 4 6 8 2 7 3)];
    r:rule skolem:lemma1025.

skolem:lemma960 a r:Inference;
    r:gives {
        (() (5 2 6 1 7 4 8 3)) :queens3 (5 2 6 1 7 4 8 3).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 2 6 1 7 4 8 3)];
    r:rule skolem:lemma1025.

skolem:lemma961 a r:Inference;
    r:gives {
        (() (6 3 7 2 8 5 1 4)) :queens3 (6 3 7 2 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 7 2 8 5 1 4)];
    r:rule skolem:lemma1025.

skolem:lemma962 a r:Inference;
    r:gives {
        (() (2 7 3 6 8 5 1 4)) :queens3 (2 7 3 6 8 5 1 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 7 3 6 8 5 1 4)];
    r:rule skolem:lemma1025.

skolem:lemma963 a r:Inference;
    r:gives {
        (() (7 3 1 6 8 5 2 4)) :queens3 (7 3 1 6 8 5 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 3 1 6 8 5 2 4)];
    r:rule skolem:lemma1025.

skolem:lemma964 a r:Inference;
    r:gives {
        (() (5 1 8 6 3 7 2 4)) :queens3 (5 1 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 1 8 6 3 7 2 4)];
    r:rule skolem:lemma1025.

skolem:lemma965 a r:Inference;
    r:gives {
        (() (1 5 8 6 3 7 2 4)) :queens3 (1 5 8 6 3 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 5 8 6 3 7 2 4)];
    r:rule skolem:lemma1025.

skolem:lemma966 a r:Inference;
    r:gives {
        (() (3 6 8 1 5 7 2 4)) :queens3 (3 6 8 1 5 7 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 8 1 5 7 2 4)];
    r:rule skolem:lemma1025.

skolem:lemma967 a r:Inference;
    r:gives {
        (() (6 3 1 7 5 8 2 4)) :queens3 (6 3 1 7 5 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 1 7 5 8 2 4)];
    r:rule skolem:lemma1025.

skolem:lemma968 a r:Inference;
    r:gives {
        (() (7 5 3 1 6 8 2 4)) :queens3 (7 5 3 1 6 8 2 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 5 3 1 6 8 2 4)];
    r:rule skolem:lemma1025.

skolem:lemma969 a r:Inference;
    r:gives {
        (() (7 3 8 2 5 1 6 4)) :queens3 (7 3 8 2 5 1 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 3 8 2 5 1 6 4)];
    r:rule skolem:lemma1025.

skolem:lemma970 a r:Inference;
    r:gives {
        (() (5 3 1 7 2 8 6 4)) :queens3 (5 3 1 7 2 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 3 1 7 2 8 6 4)];
    r:rule skolem:lemma1025.

skolem:lemma971 a r:Inference;
    r:gives {
        (() (2 5 7 1 3 8 6 4)) :queens3 (2 5 7 1 3 8 6 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 5 7 1 3 8 6 4)];
    r:rule skolem:lemma1025.

skolem:lemma972 a r:Inference;
    r:gives {
        (() (3 6 2 5 8 1 7 4)) :queens3 (3 6 2 5 8 1 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 2 5 8 1 7 4)];
    r:rule skolem:lemma1025.

skolem:lemma973 a r:Inference;
    r:gives {
        (() (6 1 5 2 8 3 7 4)) :queens3 (6 1 5 2 8 3 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 1 5 2 8 3 7 4)];
    r:rule skolem:lemma1025.

skolem:lemma974 a r:Inference;
    r:gives {
        (() (8 3 1 6 2 5 7 4)) :queens3 (8 3 1 6 2 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8 3 1 6 2 5 7 4)];
    r:rule skolem:lemma1025.

skolem:lemma975 a r:Inference;
    r:gives {
        (() (2 8 6 1 3 5 7 4)) :queens3 (2 8 6 1 3 5 7 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 8 6 1 3 5 7 4)];
    r:rule skolem:lemma1025.

skolem:lemma976 a r:Inference;
    r:gives {
        (() (5 7 2 6 3 1 8 4)) :queens3 (5 7 2 6 3 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 2 6 3 1 8 4)];
    r:rule skolem:lemma1025.

skolem:lemma977 a r:Inference;
    r:gives {
        (() (3 6 2 7 5 1 8 4)) :queens3 (3 6 2 7 5 1 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 2 7 5 1 8 4)];
    r:rule skolem:lemma1025.

skolem:lemma978 a r:Inference;
    r:gives {
        (() (6 2 7 1 3 5 8 4)) :queens3 (6 2 7 1 3 5 8 4).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 2 7 1 3 5 8 4)];
    r:rule skolem:lemma1025.

skolem:lemma979 a r:Inference;
    r:gives {
        (() (3 7 2 8 6 4 1 5)) :queens3 (3 7 2 8 6 4 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 7 2 8 6 4 1 5)];
    r:rule skolem:lemma1025.

skolem:lemma980 a r:Inference;
    r:gives {
        (() (6 3 7 2 4 8 1 5)) :queens3 (6 3 7 2 4 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 7 2 4 8 1 5)];
    r:rule skolem:lemma1025.

skolem:lemma981 a r:Inference;
    r:gives {
        (() (4 2 7 3 6 8 1 5)) :queens3 (4 2 7 3 6 8 1 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 7 3 6 8 1 5)];
    r:rule skolem:lemma1025.

skolem:lemma982 a r:Inference;
    r:gives {
        (() (7 1 3 8 6 4 2 5)) :queens3 (7 1 3 8 6 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 1 3 8 6 4 2 5)];
    r:rule skolem:lemma1025.

skolem:lemma983 a r:Inference;
    r:gives {
        (() (1 6 8 3 7 4 2 5)) :queens3 (1 6 8 3 7 4 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (1 6 8 3 7 4 2 5)];
    r:rule skolem:lemma1025.

skolem:lemma984 a r:Inference;
    r:gives {
        (() (3 8 4 7 1 6 2 5)) :queens3 (3 8 4 7 1 6 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 8 4 7 1 6 2 5)];
    r:rule skolem:lemma1025.

skolem:lemma985 a r:Inference;
    r:gives {
        (() (6 3 7 4 1 8 2 5)) :queens3 (6 3 7 4 1 8 2 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 7 4 1 8 2 5)];
    r:rule skolem:lemma1025.

skolem:lemma986 a r:Inference;
    r:gives {
        (() (7 4 2 8 6 1 3 5)) :queens3 (7 4 2 8 6 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 4 2 8 6 1 3 5)];
    r:rule skolem:lemma1025.

skolem:lemma987 a r:Inference;
    r:gives {
        (() (4 6 8 2 7 1 3 5)) :queens3 (4 6 8 2 7 1 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 8 2 7 1 3 5)];
    r:rule skolem:lemma1025.

skolem:lemma988 a r:Inference;
    r:gives {
        (() (2 6 1 7 4 8 3 5)) :queens3 (2 6 1 7 4 8 3 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 1 7 4 8 3 5)];
    r:rule skolem:lemma1025.

skolem:lemma989 a r:Inference;
    r:gives {
        (() (2 4 6 8 3 1 7 5)) :queens3 (2 4 6 8 3 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 4 6 8 3 1 7 5)];
    r:rule skolem:lemma1025.

skolem:lemma990 a r:Inference;
    r:gives {
        (() (3 6 8 2 4 1 7 5)) :queens3 (3 6 8 2 4 1 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 8 2 4 1 7 5)];
    r:rule skolem:lemma1025.

skolem:lemma991 a r:Inference;
    r:gives {
        (() (6 3 1 8 4 2 7 5)) :queens3 (6 3 1 8 4 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 1 8 4 2 7 5)];
    r:rule skolem:lemma1025.

skolem:lemma992 a r:Inference;
    r:gives {
        (() (8 4 1 3 6 2 7 5)) :queens3 (8 4 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8 4 1 3 6 2 7 5)];
    r:rule skolem:lemma1025.

skolem:lemma993 a r:Inference;
    r:gives {
        (() (4 8 1 3 6 2 7 5)) :queens3 (4 8 1 3 6 2 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8 1 3 6 2 7 5)];
    r:rule skolem:lemma1025.

skolem:lemma994 a r:Inference;
    r:gives {
        (() (2 6 8 3 1 4 7 5)) :queens3 (2 6 8 3 1 4 7 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (2 6 8 3 1 4 7 5)];
    r:rule skolem:lemma1025.

skolem:lemma995 a r:Inference;
    r:gives {
        (() (7 2 6 3 1 4 8 5)) :queens3 (7 2 6 3 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 2 6 3 1 4 8 5)];
    r:rule skolem:lemma1025.

skolem:lemma996 a r:Inference;
    r:gives {
        (() (3 6 2 7 1 4 8 5)) :queens3 (3 6 2 7 1 4 8 5).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 6 2 7 1 4 8 5)];
    r:rule skolem:lemma1025.

skolem:lemma997 a r:Inference;
    r:gives {
        (() (4 7 3 8 2 5 1 6)) :queens3 (4 7 3 8 2 5 1 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7 3 8 2 5 1 6)];
    r:rule skolem:lemma1025.

skolem:lemma998 a r:Inference;
    r:gives {
        (() (4 8 5 3 1 7 2 6)) :queens3 (4 8 5 3 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 8 5 3 1 7 2 6)];
    r:rule skolem:lemma1025.

skolem:lemma999 a r:Inference;
    r:gives {
        (() (3 5 8 4 1 7 2 6)) :queens3 (3 5 8 4 1 7 2 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 8 4 1 7 2 6)];
    r:rule skolem:lemma1025.

skolem:lemma1000 a r:Inference;
    r:gives {
        (() (4 2 8 5 7 1 3 6)) :queens3 (4 2 8 5 7 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 8 5 7 1 3 6)];
    r:rule skolem:lemma1025.

skolem:lemma1001 a r:Inference;
    r:gives {
        (() (5 7 2 4 8 1 3 6)) :queens3 (5 7 2 4 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 2 4 8 1 3 6)];
    r:rule skolem:lemma1025.

skolem:lemma1002 a r:Inference;
    r:gives {
        (() (7 4 2 5 8 1 3 6)) :queens3 (7 4 2 5 8 1 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 4 2 5 8 1 3 6)];
    r:rule skolem:lemma1025.

skolem:lemma1003 a r:Inference;
    r:gives {
        (() (8 2 4 1 7 5 3 6)) :queens3 (8 2 4 1 7 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8 2 4 1 7 5 3 6)];
    r:rule skolem:lemma1025.

skolem:lemma1004 a r:Inference;
    r:gives {
        (() (7 2 4 1 8 5 3 6)) :queens3 (7 2 4 1 8 5 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (7 2 4 1 8 5 3 6)];
    r:rule skolem:lemma1025.

skolem:lemma1005 a r:Inference;
    r:gives {
        (() (5 1 8 4 2 7 3 6)) :queens3 (5 1 8 4 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 1 8 4 2 7 3 6)];
    r:rule skolem:lemma1025.

skolem:lemma1006 a r:Inference;
    r:gives {
        (() (4 1 5 8 2 7 3 6)) :queens3 (4 1 5 8 2 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 1 5 8 2 7 3 6)];
    r:rule skolem:lemma1025.

skolem:lemma1007 a r:Inference;
    r:gives {
        (() (5 2 8 1 4 7 3 6)) :queens3 (5 2 8 1 4 7 3 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 2 8 1 4 7 3 6)];
    r:rule skolem:lemma1025.

skolem:lemma1008 a r:Inference;
    r:gives {
        (() (3 7 2 8 5 1 4 6)) :queens3 (3 7 2 8 5 1 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 7 2 8 5 1 4 6)];
    r:rule skolem:lemma1025.

skolem:lemma1009 a r:Inference;
    r:gives {
        (() (3 1 7 5 8 2 4 6)) :queens3 (3 1 7 5 8 2 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 1 7 5 8 2 4 6)];
    r:rule skolem:lemma1025.

skolem:lemma1010 a r:Inference;
    r:gives {
        (() (8 2 5 3 1 7 4 6)) :queens3 (8 2 5 3 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (8 2 5 3 1 7 4 6)];
    r:rule skolem:lemma1025.

skolem:lemma1011 a r:Inference;
    r:gives {
        (() (3 5 2 8 1 7 4 6)) :queens3 (3 5 2 8 1 7 4 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 2 8 1 7 4 6)];
    r:rule skolem:lemma1025.

skolem:lemma1012 a r:Inference;
    r:gives {
        (() (3 5 7 1 4 2 8 6)) :queens3 (3 5 7 1 4 2 8 6).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (3 5 7 1 4 2 8 6)];
    r:rule skolem:lemma1025.

skolem:lemma1013 a r:Inference;
    r:gives {
        (() (5 2 4 6 8 3 1 7)) :queens3 (5 2 4 6 8 3 1 7).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 2 4 6 8 3 1 7)];
    r:rule skolem:lemma1025.

skolem:lemma1014 a r:Inference;
    r:gives {
        (() (6 3 5 8 1 4 2 7)) :queens3 (6 3 5 8 1 4 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 5 8 1 4 2 7)];
    r:rule skolem:lemma1025.

skolem:lemma1015 a r:Inference;
    r:gives {
        (() (5 8 4 1 3 6 2 7)) :queens3 (5 8 4 1 3 6 2 7).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 8 4 1 3 6 2 7)];
    r:rule skolem:lemma1025.

skolem:lemma1016 a r:Inference;
    r:gives {
        (() (4 2 5 8 6 1 3 7)) :queens3 (4 2 5 8 6 1 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 5 8 6 1 3 7)];
    r:rule skolem:lemma1025.

skolem:lemma1017 a r:Inference;
    r:gives {
        (() (4 6 1 5 2 8 3 7)) :queens3 (4 6 1 5 2 8 3 7).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 6 1 5 2 8 3 7)];
    r:rule skolem:lemma1025.

skolem:lemma1018 a r:Inference;
    r:gives {
        (() (6 3 1 8 5 2 4 7)) :queens3 (6 3 1 8 5 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 1 8 5 2 4 7)];
    r:rule skolem:lemma1025.

skolem:lemma1019 a r:Inference;
    r:gives {
        (() (5 3 1 6 8 2 4 7)) :queens3 (5 3 1 6 8 2 4 7).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 3 1 6 8 2 4 7)];
    r:rule skolem:lemma1025.

skolem:lemma1020 a r:Inference;
    r:gives {
        (() (4 2 8 6 1 3 5 7)) :queens3 (4 2 8 6 1 3 5 7).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 2 8 6 1 3 5 7)];
    r:rule skolem:lemma1025.

skolem:lemma1021 a r:Inference;
    r:gives {
        (() (6 3 5 7 1 4 2 8)) :queens3 (6 3 5 7 1 4 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 3 5 7 1 4 2 8)];
    r:rule skolem:lemma1025.

skolem:lemma1022 a r:Inference;
    r:gives {
        (() (6 4 7 1 3 5 2 8)) :queens3 (6 4 7 1 3 5 2 8).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (6 4 7 1 3 5 2 8)];
    r:rule skolem:lemma1025.

skolem:lemma1023 a r:Inference;
    r:gives {
        (() (4 7 5 2 6 1 3 8)) :queens3 (4 7 5 2 6 1 3 8).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (4 7 5 2 6 1 3 8)];
    r:rule skolem:lemma1025.

skolem:lemma1024 a r:Inference;
    r:gives {
        (() (5 7 2 6 3 1 4 8)) :queens3 (5 7 2 6 3 1 4 8).
    };
    r:evidence (
        [ a r:Fact; r:gives true]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (5 7 2 6 3 1 4 8)];
    r:rule skolem:lemma1025.

skolem:lemma1025 a r:Extraction;
    r:gives {
        @forSome var:x_0. {
            (() var:x_0) :queens3 var:x_0.
        } <= true.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/n-queens/n-queens.n3>].

