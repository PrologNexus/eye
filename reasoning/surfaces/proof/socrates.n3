@prefix skolem: <http://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix : <http://example.org/ns#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix graph: <http://www.w3.org/2000/10/swap/graph#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:gives {
        :Socrates a :Man.
        :Socrates a :Human.
        :Socrates a :Mortal.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        :Socrates a :Man.
    };
    r:evidence (
        skolem:lemma4
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Man"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 a var:x_1.
    } => {
        var:x_0 a var:x_1.
    }}].

skolem:lemma2 a r:Inference;
    r:gives {
        :Socrates a :Human.
    };
    r:evidence (
        skolem:lemma5
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Human"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 a var:x_1.
    } => {
        var:x_0 a var:x_1.
    }}].

skolem:lemma3 a r:Inference;
    r:gives {
        :Socrates a :Mortal.
    };
    r:evidence (
        skolem:lemma6
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Mortal"]];
    r:rule [ a r:Fact; r:gives {@forSome var:x_0, var:x_1. {
        var:x_0 a var:x_1.
    } => {
        var:x_0 a var:x_1.
    }}].

skolem:lemma4 a r:Extraction;
    r:gives {
        :Socrates a :Man.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/surfaces/socrates.n3>].

skolem:lemma5 a r:Inference;
    r:gives {
        :Socrates a :Human.
    };
    r:evidence (
        skolem:lemma7
        skolem:lemma4
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Man"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Human"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:rule skolem:lemma8.

skolem:lemma6 a r:Inference;
    r:gives {
        :Socrates a :Mortal.
    };
    r:evidence (
        skolem:lemma9
        skolem:lemma5
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "http://example.org/ns#Human"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo [ n3:uri "http://example.org/ns#Mortal"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo [ n3:uri "http://example.org/ns#Socrates"]];
    r:rule skolem:lemma8.

skolem:lemma7 a r:Extraction;
    r:gives {
        :Man rdfs:subClassOf :Human.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/surfaces/socrates.n3>].

skolem:lemma8 a r:Inference;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2. {
            var:x_0 rdfs:subClassOf var:x_1.
            var:x_2 a var:x_0.
        } => {
            var:x_2 a var:x_1.
        }.
    };
    r:evidence (
        skolem:lemma10
        [ a r:Fact; r:gives {{
            skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
            skolem:e_S_1 a skolem:e_A_1.
            () log:nand {
                skolem:e_S_1 a skolem:e_B_1.
            }.
        } graph:list ({
            skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
        } {
            skolem:e_S_1 a skolem:e_A_1.
        } {
            () log:nand {
                skolem:e_S_1 a skolem:e_B_1.
            }.
        })}]
        [ a r:Fact; r:gives {({
            () log:nand {
                skolem:e_S_1 a skolem:e_B_1.
            }.
        } ({
            skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
        } {
            skolem:e_S_1 a skolem:e_A_1.
        } {
            () log:nand {
                skolem:e_S_1 a skolem:e_B_1.
            }.
        })) list:select ({
            skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
        } {
            skolem:e_S_1 a skolem:e_A_1.
        })}]
        [ a r:Fact; r:gives {{
            skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
            skolem:e_S_1 a skolem:e_A_1.
        } graph:list ({
            skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
        } {
            skolem:e_S_1 a skolem:e_A_1.
        })}]
        [ a r:Fact; r:gives {@forSome var:x_0, var:x_1, var:x_2. (({
            skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
            skolem:e_S_1 a skolem:e_A_1.
        } {
            skolem:e_S_1 a skolem:e_B_1.
        }) (skolem:e_A_1 skolem:e_B_1 skolem:e_S_1)) log:rule {
            {
                var:x_0 rdfs:subClassOf var:x_1.
                var:x_2 a var:x_0.
            } => {
                var:x_2 a var:x_1.
            }.
        }}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo {
        {
            var:x_0 rdfs:subClassOf var:x_1.
            var:x_2 a var:x_0.
        } => {
            var:x_2 a var:x_1.
        }.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo (skolem:e_A_1 skolem:e_B_1 skolem:e_S_1)];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo {
        skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
        skolem:e_S_1 a skolem:e_A_1.
        () log:nand {
            skolem:e_S_1 a skolem:e_B_1.
        }.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo ({
        skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
    } {
        skolem:e_S_1 a skolem:e_A_1.
    } {
        () log:nand {
            skolem:e_S_1 a skolem:e_B_1.
        }.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo ({
        skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
    } {
        skolem:e_S_1 a skolem:e_A_1.
    })];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo {
        skolem:e_S_1 a skolem:e_B_1.
    }];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo {
        skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
        skolem:e_S_1 a skolem:e_A_1.
    }];
    r:rule skolem:lemma11.

skolem:lemma9 a r:Extraction;
    r:gives {
        :Human rdfs:subClassOf :Mortal.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/surfaces/socrates.n3>].

skolem:lemma10 a r:Extraction;
    r:gives {
        (skolem:e_A_1 skolem:e_B_1 skolem:e_S_1) log:nand {
            skolem:e_A_1 rdfs:subClassOf skolem:e_B_1.
            skolem:e_S_1 a skolem:e_A_1.
            () log:nand {
                skolem:e_S_1 a skolem:e_B_1.
            }.
        }.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/surfaces/socrates.n3>].

skolem:lemma11 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6, var:x_7. {
            var:x_0 log:nand var:x_1.
            var:x_1 graph:list var:x_2.
            ({
                var:x_3 log:nand var:x_4.
            } var:x_2) list:select var:x_5.
            var:x_6 graph:list var:x_5.
            ((var:x_6 var:x_4) var:x_0) log:rule var:x_7.
        } => var:x_7.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/surfaces/surfaces.n3>].

