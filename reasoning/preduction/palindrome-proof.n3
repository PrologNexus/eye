@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix : <http://josd.github.io/eye/reasoning#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix var: <http://josd.github.io/var#>.
@prefix skolem: <http://josd.github.io/.well-known/genid/9olqmF1PJqnII8vlJqP0YKzaavo#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

skolem:proof a r:Proof, r:Conjunction;
  r:component skolem:lemma1;
  r:gives {
    "ingirumimusnocteetconsumimurigni" a :Palindrome.
  }.

skolem:lemma1 a r:Inference;
  r:gives {
    "ingirumimusnocteetconsumimurigni" a :Palindrome.
  };
  r:evidence (
    [ a r:Fact; r:gives {("atom_codes" "ingirumimusnocteetconsumimurigni" (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) e:derive true}]
    skolem:lemma2
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule skolem:lemma3.

skolem:lemma2 a r:Inference;
  r:gives {
    ((105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
  };
  r:evidence (
    skolem:lemma4
    skolem:lemma5
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo [ n3:uri "http://josd.github.io/eye/reasoning#push"]];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule skolem:lemma6.

skolem:lemma3 a r:Extraction;
  r:gives {
    @forAll var:x_0. {("atom_codes" "ingirumimusnocteetconsumimurigni" var:x_0) e:derive true.
     (var:x_0) :accept true} => {"ingirumimusnocteetconsumimurigni" a :Palindrome}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/eye/reasoning/preduction/palindrome-query.n3>].

skolem:lemma4 a r:Extraction;
  r:gives {
    (:push) :initial true.
  };
  r:because [ a r:Parsing; r:source 