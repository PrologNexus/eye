@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix : <https://example.org/#>.
@prefix skolem: <https://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix string: <http://www.w3.org/2000/10/swap/string#>.
@prefix crypto: <http://www.w3.org/2000/10/swap/crypto#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:component skolem:lemma2;
    r:component skolem:lemma3;
    r:component skolem:lemma4;
    r:gives {
        :simulation1 :zeroKnowledgeProof (:Mary "proof failed: :Mary is less than 50 years and not entitled to work 80% per week" "4f1aa645fc353e36d9fbb3b78d34b97ab34cc1b515dc80276e66ea11acfe2c96").
        :simulation1 :zeroKnowledgeProof (:Pat "proof verified: :Pat is more than 50 years old and entitled to work 80% per week" "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b").
        :simulation1 :challengeProof (:Mary "challenge failed: the proof is invalid" "adf23913cd97b2d831b54cf9109c111d205d8dfd777413235bdb1c7c91cf4007").
        :simulation1 :challengeProof (:Pat "challenge successful: the proof is valid" "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b").
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        :simulation1 :zeroKnowledgeProof (:Mary "proof failed: :Mary is less than 50 years and not entitled to work 80% per week" "4f1aa645fc353e36d9fbb3b78d34b97ab34cc1b515dc80276e66ea11acfe2c96").
    };
    r:evidence (
        skolem:lemma5
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://example.org/#simulation1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo "proof failed: :Mary is less than 50 years and not entitled to work 80% per week"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo "4f1aa645fc353e36d9fbb3b78d34b97ab34cc1b515dc80276e66ea11acfe2c96"];
    r:rule skolem:lemma6.

skolem:lemma2 a r:Inference;
    r:gives {
        :simulation1 :zeroKnowledgeProof (:Pat "proof verified: :Pat is more than 50 years old and entitled to work 80% per week" "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b").
    };
    r:evidence (
        skolem:lemma7
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://example.org/#simulation1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo "proof verified: :Pat is more than 50 years old and entitled to work 80% per week"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b"];
    r:rule skolem:lemma8.

skolem:lemma3 a r:Inference;
    r:gives {
        :simulation1 :challengeProof (:Mary "challenge failed: the proof is invalid" "adf23913cd97b2d831b54cf9109c111d205d8dfd777413235bdb1c7c91cf4007").
    };
    r:evidence (
        skolem:lemma9
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://example.org/#simulation1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo "challenge failed: the proof is invalid"];
    r:rule skolem:lemma10.

skolem:lemma4 a r:Inference;
    r:gives {
        :simulation1 :challengeProof (:Pat "challenge successful: the proof is valid" "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b").
    };
    r:evidence (
        skolem:lemma11
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://example.org/#simulation1"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo "challenge successful: the proof is valid"];
    r:rule skolem:lemma12.

skolem:lemma5 a r:Inference;
    r:gives {
        :simulation1 :zeroKnowledgeProof (:Mary "proof failed: :Mary is less than 50 years and not entitled to work 80% per week" "4f1aa645fc353e36d9fbb3b78d34b97ab34cc1b515dc80276e66ea11acfe2c96").
    };
    r:evidence (
        skolem:lemma13
        skolem:lemma14
        skolem:lemma15
        [ a r:Fact; r:gives {("2025-01-11T00:00:00.0Z"^^xsd:dateTime "2000-01-01"^^xsd:date) math:difference 789868800.0}]
        [ a r:Fact; r:gives {({
            789868800.0 math:greaterThan "P50Y"^^xsd:duration.
        }) string:concatenation "{\n    789868800.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}"}]
        [ a r:Fact; r:gives {"{\n    789868800.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}" crypto:sha256 "4f1aa645fc353e36d9fbb3b78d34b97ab34cc1b515dc80276e66ea11acfe2c96"}]
        [ a r:Fact; r:gives {({
            789868800.0 math:greaterThan "P50Y"^^xsd:duration.
        } {
            "proof failed: :Mary is less than 50 years and not entitled to work 80% per week" log:equalTo _:sk_0.
            ("proof verified: " :Mary " is more than 50 years old and entitled to work 80% per week") string:concatenation _:sk_0.
        } {
            "proof failed: :Mary is less than 50 years and not entitled to work 80% per week" log:equalTo "proof failed: :Mary is less than 50 years and not entitled to work 80% per week".
            ("proof failed: " :Mary " is less than 50 years and not entitled to work 80% per week") string:concatenation "proof failed: :Mary is less than 50 years and not entitled to work 80% per week".
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>) -1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://example.org/#Mary"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo "2000-01-01"^^xsd:date];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo "2025-01-11T00:00:00.0Z"^^xsd:dateTime];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo "P50Y"^^xsd:duration];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 789868800.0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo "{\n    789868800.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo "4f1aa645fc353e36d9fbb3b78d34b97ab34cc1b515dc80276e66ea11acfe2c96"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo "proof failed: :Mary is less than 50 years and not entitled to work 80% per week"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo "proof failed: :Mary is less than 50 years and not entitled to work 80% per week"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo (<https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>)];
    r:rule skolem:lemma16.

skolem:lemma6 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2. {
            var:x_0 :zeroKnowledgeProof (:Mary var:x_1 var:x_2).
        } => {
            var:x_0 :zeroKnowledgeProof (:Mary var:x_1 var:x_2).
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

skolem:lemma7 a r:Inference;
    r:gives {
        :simulation1 :zeroKnowledgeProof (:Pat "proof verified: :Pat is more than 50 years old and entitled to work 80% per week" "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b").
    };
    r:evidence (
        skolem:lemma17
        skolem:lemma14
        skolem:lemma15
        [ a r:Fact; r:gives {("2025-01-11T00:00:00.0Z"^^xsd:dateTime "1970-01-01"^^xsd:date) math:difference 1736553600.0}]
        [ a r:Fact; r:gives {({
            1736553600.0 math:greaterThan "P50Y"^^xsd:duration.
        }) string:concatenation "{\n    1736553600.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}"}]
        [ a r:Fact; r:gives {"{\n    1736553600.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}" crypto:sha256 "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b"}]
        [ a r:Fact; r:gives {({
            1736553600.0 math:greaterThan "P50Y"^^xsd:duration.
        } {
            "proof verified: :Pat is more than 50 years old and entitled to work 80% per week" log:equalTo "proof verified: :Pat is more than 50 years old and entitled to work 80% per week".
            ("proof verified: " :Pat " is more than 50 years old and entitled to work 80% per week") string:concatenation "proof verified: :Pat is more than 50 years old and entitled to work 80% per week".
        } {
            "proof verified: :Pat is more than 50 years old and entitled to work 80% per week" log:equalTo _:sk_0.
            ("proof failed: " :Pat " is less than 50 years and not entitled to work 80% per week") string:concatenation _:sk_0.
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>) -1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://example.org/#Pat"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo "1970-01-01"^^xsd:date];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo "2025-01-11T00:00:00.0Z"^^xsd:dateTime];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo "P50Y"^^xsd:duration];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1736553600.0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo "{\n    1736553600.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo "proof verified: :Pat is more than 50 years old and entitled to work 80% per week"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo "proof verified: :Pat is more than 50 years old and entitled to work 80% per week"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo (<https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>)];
    r:rule skolem:lemma16.

skolem:lemma8 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2. {
            var:x_0 :zeroKnowledgeProof (:Pat var:x_1 var:x_2).
        } => {
            var:x_0 :zeroKnowledgeProof (:Pat var:x_1 var:x_2).
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

skolem:lemma9 a r:Inference;
    r:gives {
        :simulation1 :challengeProof (:Mary "challenge failed: the proof is invalid" "adf23913cd97b2d831b54cf9109c111d205d8dfd777413235bdb1c7c91cf4007").
    };
    r:evidence (
        skolem:lemma13
        skolem:lemma14
        skolem:lemma15
        [ a r:Fact; r:gives {("2025-01-11T00:00:00.0Z"^^xsd:dateTime "2000-01-01"^^xsd:date) math:difference 789868800.0}]
        [ a r:Fact; r:gives {({
            789868800.0 math:greaterThan "P50Y"^^xsd:duration.
        }) string:concatenation "{\n    789868800.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}"}]
        [ a r:Fact; r:gives {"{\n    789868800.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}" crypto:sha256 "4f1aa645fc353e36d9fbb3b78d34b97ab34cc1b515dc80276e66ea11acfe2c96"}]
        [ a r:Fact; r:gives {({
            "adf23913cd97b2d831b54cf9109c111d205d8dfd777413235bdb1c7c91cf4007" log:equalTo "4f1aa645fc353e36d9fbb3b78d34b97ab34cc1b515dc80276e66ea11acfe2c96".
        } {
            "challenge failed: the proof is invalid" log:equalTo _:sk_0.
            ("challenge successful: the proof is valid") string:concatenation _:sk_0.
        } {
            "challenge failed: the proof is invalid" log:equalTo "challenge failed: the proof is invalid".
            ("challenge failed: the proof is invalid") string:concatenation "challenge failed: the proof is invalid".
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>) -1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://example.org/#Mary"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo "2000-01-01"^^xsd:date];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo "2025-01-11T00:00:00.0Z"^^xsd:dateTime];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo "P50Y"^^xsd:duration];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 789868800.0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo "{\n    789868800.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo "4f1aa645fc353e36d9fbb3b78d34b97ab34cc1b515dc80276e66ea11acfe2c96"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo "adf23913cd97b2d831b54cf9109c111d205d8dfd777413235bdb1c7c91cf4007"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo "challenge failed: the proof is invalid"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo "challenge failed: the proof is invalid"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_11"]; r:boundTo (<https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>)];
    r:rule skolem:lemma18.

skolem:lemma10 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1. {
            var:x_0 :challengeProof (:Mary var:x_1 "adf23913cd97b2d831b54cf9109c111d205d8dfd777413235bdb1c7c91cf4007").
        } => {
            var:x_0 :challengeProof (:Mary var:x_1 "adf23913cd97b2d831b54cf9109c111d205d8dfd777413235bdb1c7c91cf4007").
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

skolem:lemma11 a r:Inference;
    r:gives {
        :simulation1 :challengeProof (:Pat "challenge successful: the proof is valid" "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b").
    };
    r:evidence (
        skolem:lemma17
        skolem:lemma14
        skolem:lemma15
        [ a r:Fact; r:gives {("2025-01-11T00:00:00.0Z"^^xsd:dateTime "1970-01-01"^^xsd:date) math:difference 1736553600.0}]
        [ a r:Fact; r:gives {({
            1736553600.0 math:greaterThan "P50Y"^^xsd:duration.
        }) string:concatenation "{\n    1736553600.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}"}]
        [ a r:Fact; r:gives {"{\n    1736553600.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}" crypto:sha256 "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b"}]
        [ a r:Fact; r:gives {({
            "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b" log:equalTo "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b".
        } {
            "challenge successful: the proof is valid" log:equalTo "challenge successful: the proof is valid".
            ("challenge successful: the proof is valid") string:concatenation "challenge successful: the proof is valid".
        } {
            "challenge successful: the proof is valid" log:equalTo _:sk_0.
            ("challenge failed: the proof is invalid") string:concatenation _:sk_0.
        }) log:ifThenElseIn ((<https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>) -1)}]
    );
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_0"]; r:boundTo [ n3:uri "https://example.org/#Pat"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_1"]; r:boundTo "1970-01-01"^^xsd:date];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_2"]; r:boundTo "2025-01-11T00:00:00.0Z"^^xsd:dateTime];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_3"]; r:boundTo "P50Y"^^xsd:duration];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_4"]; r:boundTo 1736553600.0];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_5"]; r:boundTo "{\n    1736553600.0 math:greaterThan \"P50Y\"^^xsd:duration.\n}"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_6"]; r:boundTo "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_7"]; r:boundTo "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_8"]; r:boundTo "challenge successful: the proof is valid"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_9"]; r:boundTo "challenge successful: the proof is valid"];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_10"]; r:boundTo [ a r:Existential; n3:nodeId "_:sk_0"]];
    r:binding [ r:variable [ n3:uri "http://www.w3.org/2000/10/swap/var#x_11"]; r:boundTo (<https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>)];
    r:rule skolem:lemma18.

skolem:lemma12 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1. {
            var:x_0 :challengeProof (:Pat var:x_1 "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b").
        } => {
            var:x_0 :challengeProof (:Pat var:x_1 "5611fb0dfa67e894917f81cf4b24577e4bc89c86c17423ba7fc28181eb368b3b").
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

skolem:lemma13 a r:Extraction;
    r:gives {
        :Mary :birthDay "2000-01-01"^^xsd:date.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

skolem:lemma14 a r:Extraction;
    r:gives {
        :simulation1 :date "2025-01-11T00:00:00.0Z"^^xsd:dateTime.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

skolem:lemma15 a r:Extraction;
    r:gives {
        :simulation1 :age "P50Y"^^xsd:duration.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

skolem:lemma16 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6, var:x_7, var:x_8, var:x_9, var:x_10. {
            :simulation1 :zeroKnowledgeProof (var:x_0 var:x_7 var:x_6).
        } <= {
            var:x_0 :birthDay var:x_1.
            :simulation1 :date var:x_2.
            :simulation1 :age var:x_3.
            (var:x_2 var:x_1) math:difference var:x_4.
            ({
                var:x_4 math:greaterThan var:x_3.
            }) string:concatenation var:x_5.
            var:x_5 crypto:sha256 var:x_6.
            ({
                var:x_4 math:greaterThan var:x_3.
            } {
                var:x_7 log:equalTo var:x_8.
                ("proof verified: " var:x_0 " is more than 50 years old and entitled to work 80% per week") string:concatenation var:x_8.
            } {
                var:x_7 log:equalTo var:x_9.
                ("proof failed: " var:x_0 " is less than 50 years and not entitled to work 80% per week") string:concatenation var:x_9.
            }) log:ifThenElseIn (var:x_10 -1).
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

skolem:lemma17 a r:Extraction;
    r:gives {
        :Pat :birthDay "1970-01-01"^^xsd:date.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

skolem:lemma18 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6, var:x_7, var:x_8, var:x_9, var:x_10, var:x_11. {
            :simulation1 :challengeProof (var:x_0 var:x_8 var:x_7).
        } <= {
            var:x_0 :birthDay var:x_1.
            :simulation1 :date var:x_2.
            :simulation1 :age var:x_3.
            (var:x_2 var:x_1) math:difference var:x_4.
            ({
                var:x_4 math:greaterThan var:x_3.
            }) string:concatenation var:x_5.
            var:x_5 crypto:sha256 var:x_6.
            ({
                var:x_7 log:equalTo var:x_6.
            } {
                var:x_8 log:equalTo var:x_9.
                ("challenge successful: the proof is valid") string:concatenation var:x_9.
            } {
                var:x_8 log:equalTo var:x_10.
                ("challenge failed: the proof is invalid") string:concatenation var:x_10.
            }) log:ifThenElseIn (var:x_11 -1).
        }.
    };
    r:because [ a r:Parsing; r:source <https://eyereasoner.github.io/eye/reasoning/age-zkp/age-zkp.n3>].

