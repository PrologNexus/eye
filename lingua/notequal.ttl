# ---------------
# Inequality test
# ---------------

@prefix graph: <http://www.w3.org/2000/10/swap/graph#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix lingua: <http://www.w3.org/2000/10/swap/lingua#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix : <#>.

:Let :param1 (lingua:graphTerm
    :A :B :C
).

:Let :param2 (lingua:graphTerm
    :D :E :F
).

:Let :param3 (lingua:graphTerm
    :A :B :C
    :D :E :F
).

#query
:union_query a lingua:QueryRule;
    lingua:premise (lingua:graphTerm
        :Let :param1 var:X1
        :Let :param2 var:X2
        :Let :param3 var:X3
        (var:X1 var:X2) graph:union var:Y
        var:Y graph:equalTo var:X3
        var:Y log:rawType var:Y_RT
        var:X3 log:rawType var:X3_RT
        var:Y log:notEqualTo var:X3
    );
    lingua:conclusion (lingua:graphTerm
        :test :is true
    ).
