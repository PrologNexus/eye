@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix lingua: <http://www.w3.org/2000/10/swap/lingua#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix : <http://example.org/ns#>.

# interpreter for Turing machine
:turing_rule1 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        () :compute var:OutTape
    );
    lingua:premise (lingua:conjunction
        var:Machine :start var:I
        (var:I () "#" ()) :find var:OutTape
    ).

:turing_rule2 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        var:List :compute var:OutTape
    );
    lingua:premise (lingua:conjunction
        var:List list:firstRest (var:Head var:Tail)
        var:Machine :start var:I
        (var:I () var:Head var:Tail) :find var:OutTape
    ).

:turing_rule3 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (var:State var:Left var:Cell var:Right) :find var:OutTape
    );
    lingua:premise (lingua:conjunction
        (var:State var:Cell var:Write var:Move) :tape var:Next
        (var:Move var:Left var:Write var:Right var:A var:B var:C) :move true
        (var:Next var:A var:B var:C) :continue var:OutTape
    ).

:turing_rule4 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (:halt var:Left var:Cell var:Right) :continue var:OutTape
    );
    lingua:premise (lingua:conjunction
        var:Left :reverse var:R
        var:List list:firstRest (var:Cell var:Right)
        (var:R var:List) list:append var:OutTape
    ).

:turing_rule5 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (var:State var:Left var:Cell var:Right) :continue var:OutTape
    );
    lingua:premise (lingua:conjunction
        (var:State var:Left var:Cell var:Right) :find var:OutTape
    ).

:turing_rule6 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (:left () var:Cell var:Right () "#" var:L) :move true
    );
    lingua:premise (lingua:conjunction
        var:L list:firstRest (var:Cell var:Right)
    ).

:turing_rule7 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (:left var:List var:Cell var:Right var:Tail var:Head var:L) :move true
    );
    lingua:premise (lingua:conjunction
        var:List list:firstRest (var:Head var:Tail)
        var:L list:firstRest (var:Cell var:Right)
    ).

:turing_rule8 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (:stop var:Left var:Cell var:Right var:Left var:Cell var:Right) :move true
    );
    lingua:premise (lingua:conjunction).

:turing_rule9 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (:right var:Left var:Cell () var:L "#" ()) :move true
    );
    lingua:premise (lingua:conjunction
        var:L list:firstRest (var:Cell var:Left)
    ).

:turing_rule10 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (:right var:Left var:Cell var:List var:L var:Head var:Tail) :move true
    );
    lingua:premise (lingua:conjunction
        var:List list:firstRest (var:Head var:Tail)
        var:L list:firstRest (var:Cell var:Left)
    ).

:turing_rule11 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        () :reverse ()
    );
    lingua:premise (lingua:conjunction).

:turing_rule12 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        var:List :reverse var:Reverse
    );
    lingua:premise (lingua:conjunction
        var:List list:firstRest (var:Head var:Tail)
        var:Tail :reverse var:R
        (var:R (var:Head)) list:append var:Reverse
    ).

# a Turing machine to add 1 to a binary number
:add1 :start 0.

(0 0 0 :right) :tape 0.
(0 1 1 :right) :tape 0.
(0 "#" "#" :left) :tape 1.
(1 0 1 :stop) :tape :halt.
(1 1 0 :left) :tape 1.
(1 "#" 1 :stop) :tape :halt.

# query
:turing_query a lingua:QueryRule;
    lingua:premise (lingua:conjunction
        (1 0 1 0 0 1) :compute var:A1
        (1 0 1 1 1 1) :compute var:A2
        (1 1 1 1 1 1) :compute var:A3
        () :compute var:A4
    );
    lingua:conclusion (lingua:conjunction
        (1 0 1 0 0 1) :compute var:A1
        (1 0 1 1 1 1) :compute var:A2
        (1 1 1 1 1 1) :compute var:A3
        () :compute var:A4
    ).
