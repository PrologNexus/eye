# ---------
# Packaging
# ---------
#
# An example of packaging in RDF.

@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix lingua: <http://www.w3.org/2000/10/swap/lingua#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix : <http://example.org/ns#>.

# sample data from RubenD
_:b1 :data (
    _:b2 :package (
        _:b3 :content (
            :a :b _:c
            _:b4 :package (
                _:b5 :content (
                    :u :v _:w
                    _:b6 :package (
                        _:b7 :content (
                            :x :y _:z
                        )
                        _:b7 :usable_until :yesterday
                    )
                    _:b6 :tag :invalid
                )
                _:b5 :usable_until :tomorrow
                _:b5 :p :o
            )
            _:b4 :tag :valid
        )
        _:b3 :usable_until :next_week
    )
    _:b2 :tag :valid
).

# the logic for unpack using backward rules
:unpack_rule1 a lingua:BackwardRule;
    lingua:conclusion [ lingua:conjunction (
        () :unpackl ()
    ) ];
    lingua:premise true.

:unpack_rule2 a lingua:BackwardRule;
    lingua:conclusion [ lingua:conjunction (
        var:g :unpackl var:h
    ) ];
    lingua:premise [ lingua:conjunction (
        var:g list:firstRest (var:f var:r)
        var:f :unpack var:a
        var:r :unpackl var:b
        (var:a var:b) list:append var:h
    ) ].

:unpack_rule3 a lingua:BackwardRule;
    lingua:conclusion [ lingua:conjunction (
        (var:b :package var:p) :unpack var:f
    ) ];
    lingua:premise [ lingua:conjunction (
        var:p list:lott var:l
        var:l list:member (var:a :content var:c)
        var:l list:member (var:a :usable_until var:t)
        (:tomorrow :next_week) list:member var:t
        var:c list:lott var:d
        var:d :unpackl var:f
    ) ].

:unpack_rule4 a lingua:BackwardRule;
    lingua:conclusion [ lingua:conjunction (
        (var:b :package var:p) :unpack ()
    ) ];
    lingua:premise [ lingua:conjunction (
        var:p list:lott var:l
        var:l list:member (var:a :content var:c)
        var:l list:member (var:a :usable_until var:t)
        (:yesterday :last_week) list:member var:t
    ) ].

:unpack_rule5 a lingua:BackwardRule;
    lingua:conclusion [ lingua:conjunction (
        (var:b :tag var:p) :unpack ()
    ) ];
    lingua:premise true.

:unpack_rule6 a lingua:BackwardRule;
    lingua:conclusion [ lingua:conjunction (
        var:g :unpack (var:g)
    ) ];
    lingua:premise [ lingua:conjunction (
        (var:g) list:notMember (var:a :package var:p)
        (var:g) list:notMember (var:b :tag var:q)
    ) ].

# unpack the triples that are usable in the future
:unpack_query a lingua:QueryRule;
    lingua:premise [ lingua:conjunction (
        var:b :data var:g
        var:g list:lott var:l
        var:l :unpackl var:m
        var:u list:lott var:m
    ) ];
    lingua:conclusion var:u.
