@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix lingua: <http://www.w3.org/2000/10/swap/lingua#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.
@prefix : <http://example.org/ns#>.

# ackermann(x, y)
:ackermann_rule_main a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (var:X var:Y) :ackermann var:A
    );
    lingua:premise (lingua:conjunction
        (var:Y 3) math:sum var:B
        (var:X var:B 2) :ackermann var:C
        (var:C 3) math:difference var:A
    ).

# ackermann(x, y, z)
# succ (x=0)
:ackermann_rule0 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (0 var:Y var:Z) :ackermann var:A
    );
    lingua:premise (lingua:conjunction
        true log:callWithCut true
        (var:Y 1) math:sum var:A
    ).

# sum (x=1)
:ackermann_rule1 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (1 var:Y var:Z) :ackermann var:A
    );
    lingua:premise (lingua:conjunction
        true log:callWithCut true
        (var:Y var:Z) math:sum var:A
    ).

# product (x=2)
:ackermann_rule2 a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (2 var:Y var:Z) :ackermann var:A
    );
    lingua:premise (lingua:conjunction
        true log:callWithCut true
        (var:Y var:Z) math:product var:A
    ).

# exponentiation (x=3), tetration (x=4), pentation (x=5), hexation (x=6), etc
:ackermann_rule3plus a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (var:X 0 var:Z) :ackermann 1
    );
    lingua:premise (lingua:conjunction
        true log:callWithCut true
    ).

:ackermann_rule_final a lingua:BackwardRule;
    lingua:conclusion (lingua:conjunction
        (var:X var:Y var:Z) :ackermann var:A
    );
    lingua:premise (lingua:conjunction
        (var:Y 1) math:difference var:B
        (var:X var:B var:Z) :ackermann var:C
        (var:X 1) math:difference var:D
        (var:D var:C var:Z) :ackermann var:A
    ).

# query
:ackermann_query a lingua:QueryRule;
    lingua:premise (lingua:conjunction
        (0 0) :ackermann var:A0
        (0 6) :ackermann var:A1
        (1 2) :ackermann var:A2
        (1 7) :ackermann var:A3
        (2 2) :ackermann var:A4
        (2 9) :ackermann var:A5
        (3 4) :ackermann var:A6
        (3 14) :ackermann var:A7
        (4 0) :ackermann var:A8
        (4 1) :ackermann var:A9
        #(4 2) :ackermann var:A10   # leaving out because the proof is 2.5 GB
        (5 0) :ackermann var:A11
    );
    lingua:conclusion (lingua:conjunction
        (0 0) :ackermann var:A0
        (0 6) :ackermann var:A1
        (1 2) :ackermann var:A2
        (1 7) :ackermann var:A3
        (2 2) :ackermann var:A4
        (2 9) :ackermann var:A5
        (3 4) :ackermann var:A6
        (3 14) :ackermann var:A7
        (4 0) :ackermann var:A8
        (4 1) :ackermann var:A9
        (4 2) :ackermann var:A10
        (5 0) :ackermann var:A11
    ).
