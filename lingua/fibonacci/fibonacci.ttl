@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix lingua: <http://www.w3.org/2000/10/swap/lingua#>.
@prefix : <http://example.org/ns#>.

# backward rules
:fibonacci_rule1 a lingua:BackwardRule;
    lingua:vars (
        _:X
        _:Y
    );
    lingua:conclusion (lingua:graph
        (_:X :fibonacci _:Y)
    );
    lingua:premise (lingua:graph
        ((_:X 0 1) :fib _:Y)
    ).

:fibonacci_rule2 a lingua:BackwardRule;
    lingua:vars (
        _:A
        _:B
    );
    lingua:conclusion (lingua:graph
        ((0 _:A _:B) :fib _:A)
    );
    lingua:premise (lingua:graph).

:fibonacci_rule3 a lingua:BackwardRule;
    lingua:vars (
        _:A
        _:B
    );
    lingua:conclusion (lingua:graph
        ((1 _:A _:B) :fib _:B)
    );
    lingua:premise (lingua:graph).

:fibonacci_rule4 a lingua:BackwardRule;
    lingua:vars (
        _:X
        _:A
        _:B
        _:Y
        _:C
        _:D
    );
    lingua:conclusion (lingua:graph
        ((_:X _:A _:B) :fib _:Y)
    );
    lingua:premise (lingua:graph
        (_:X math:greaterThan 1)
        ((_:X 1) math:difference _:C)
        ((_:A _:B) math:sum _:D)
        ((_:C _:B _:D) :fib _:Y)
    ).

# query
:fibonacci_query a lingua:QueryRule;
    lingua:vars (
        _:F1
        _:F2
        _:F3
        _:F4
        _:F5
    );
    lingua:premise (lingua:graph
        (0 :fibonacci _:F1)
        (1 :fibonacci _:F2)
        (6 :fibonacci _:F3)
        (91 :fibonacci _:F4)
        (283 :fibonacci _:F5)
    );
    lingua:conclusion (lingua:graph
        (() :fibonacci (0 _:F1))
        (() :fibonacci (1 _:F2))
        (() :fibonacci (6 _:F3))
        (() :fibonacci (91 _:F4))
        (() :fibonacci (283 _:F5))
    ).
