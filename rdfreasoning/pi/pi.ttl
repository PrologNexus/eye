@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix rule: <http://eyereasoner.github.io/rule#>.
@prefix : <http://example.org/ns#>.

[] a rule:BackwardRule;
    rule:conclusion (
        ((_:N _:Pi) :pi true)
    );
    rule:premise (
        ((1 _:N 0 _:P 1) :pi true)
        ((4 _:P) math:product _:A)
        ((3 _:A) math:sum _:Pi)
    ).

[] a rule:BackwardRule;
    rule:conclusion (
        ((_:N _:N _:P _:P _:S) :pi true)
    );
    rule:premise ().

[] a rule:BackwardRule;
    rule:conclusion (
        ((_:K _:N _:P0 _:P _:S) :pi true)
    );
    rule:premise (
        (_:K math:notEqualTo _:N)
        ((_:K 1) math:sum _:K1)
        ((2 _:K) math:product _:K2)
        ((_:K2 1) math:sum _:A)
        ((_:K2 2) math:sum _:B)
        ((_:K2 _:A _:B) math:product _:C)
        ((_:S _:C) math:quotient _:D)
        ((_:P0 _:D) math:sum _:P1)
        (_:S math:negation _:S1)
        ((_:K1 _:N _:P1 _:P _:S1) :pi true)
    ).

# query
[] a rule:QueryRule;
    rule:premise (
        ((50000 _:Pi) :pi true)
    );
    rule:conclusion (
        ((50000 _:Pi) :pi true)
    ).
